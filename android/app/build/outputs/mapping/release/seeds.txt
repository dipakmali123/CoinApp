com.facebook.react.bridge.ReactContext$2
com.facebook.react.modules.storage.AsyncStorageModule
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.fbreact.specs.NativeVibrationSpec
androidx.fragment.app.Fragment$2
com.facebook.react.bridge.CatalystInstanceImpl$5
com.facebook.react.fabric.events.EventBeatManager
com.coinapp.MainApplication
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.bridge.ModuleHolder
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.react.bridge.JavaScriptModule
com.google.android.material.chip.ChipGroup
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.facebook.react.bridge.JSIModuleProvider
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.react.turbomodule.core.TurboModuleManager$1
com.facebook.react.bridge.ContextBaseJavaModule
com.facebook.react.fabric.CoreComponentsRegistry
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.views.picker.ReactPickerManager
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.bridge.queue.NativeRunnable
com.horcrux.svg.SvgViewModule
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.soloader.Api18TraceUtils
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
androidx.appcompat.widget.ButtonBarLayout
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.react.bridge.JSBundleLoaderDelegate
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.bridge.ReactBridge
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.facebook.react.bridge.UiThreadUtil
androidx.core.widget.NestedScrollView
com.facebook.react.bridge.CatalystInstanceImpl$3
com.horcrux.svg.RenderableViewManager$UseViewManager
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.react.bridge.ReactSoftException
com.facebook.imagepipeline.platform.PreverificationHelper
com.google.android.material.snackbar.SnackbarContentLayout
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.fabric.Binding
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.bridge.ReadableType
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.recyclerview.widget.GridLayoutManager
com.facebook.yoga.YogaLogLevel
com.google.android.material.textfield.TextInputLayout
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.bridge.Arguments$1
androidx.appcompat.widget.ContentFrameLayout
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.react.turbomodule.core.TurboModuleManager
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.common.LifecycleState
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.react.modules.intent.IntentModule
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.react.bridge.LifecycleEventListener
com.zoontek.rnbootsplash.RNBootSplashModule
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
androidx.annotation.Keep
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.facebook.soloader.SoLoader$Api14Utils
com.zoontek.rnbootsplash.RNBootSplashActivity
com.facebook.react.bridge.GuardedRunnable
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.UIManager
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler
com.facebook.react.bridge.DynamicFromMap
androidx.appcompat.widget.SearchView
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
androidx.appcompat.widget.ActionBarContextView
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
androidx.appcompat.app.AppCompatDialogFragment
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.systrace.TraceListener
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.animated.NativeAnimatedModule
com.google.android.material.datepicker.MaterialTextInputPicker
com.horcrux.svg.RenderableViewManager$SymbolManager
com.facebook.react.devsupport.HMRClient
com.facebook.react.bridge.Promise
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec
com.facebook.react.views.image.ReactImageManager
com.facebook.jni.UnknownCppException
androidx.savedstate.Recreator
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.proguard.annotations.DoNotStrip
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.modules.datepicker.DatePickerDialogFragment
androidx.appcompat.widget.Toolbar
androidx.appcompat.widget.AlertDialogLayout
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.bridge.CatalystInstanceImpl
androidx.appcompat.view.menu.ActionMenuItemView
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.yoga.YogaNative
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.common.time.RealtimeSinceBootClock
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.ReactFragment
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.jni.IteratorHelper
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.google.android.material.internal.NavigationMenuView
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.react.modules.fabric.ReactFabric
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.module.model.ReactModuleInfo
com.google.android.material.bottomsheet.BottomSheetDialogFragment
com.facebook.react.bridge.JSIModuleType
com.facebook.react.modules.toast.ToastModule
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.facebook.react.jscexecutor.JSCExecutor
com.google.android.material.textfield.TextInputEditText
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.devsupport.JSCHeapCapture
com.google.android.material.chip.Chip
com.facebook.jni.HybridData
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.horcrux.svg.RenderableViewManager$MarkerManager
com.facebook.react.bridge.JSBundleLoader
com.horcrux.svg.VirtualViewManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.bridge.Arguments$2
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.bridge.JavaMethodWrapper$4
com.facebook.react.bridge.JavaMethodWrapper$1
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.RetryableMountingLayerException
com.horcrux.svg.RenderableViewManager$TextViewManager
com.facebook.react.modules.clipboard.ClipboardModule
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
com.facebook.react.bridge.JSInstance
androidx.activity.ComponentActivity$3
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.bridge.ReactIgnorableMountingException
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.swmansion.rnscreens.ScreenViewManager
com.facebook.jni.DestructorThread
com.facebook.react.bridge.NativeModuleCallExceptionHandler
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
androidx.appcompat.view.menu.ListMenuItemView
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.horcrux.svg.RenderableViewManager$LineViewManager
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.uimanager.UIManagerModule
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.bridge.ReadableNativeMap$2
com.google.android.material.button.MaterialButton
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.imagepipeline.nativecode.NativeBlurFilter
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.react.modules.blob.FileReaderModule
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.bridge.InvalidIteratorException
com.facebook.react.bridge.NativeMap
com.facebook.react.bridge.ReadableNativeMap
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.uimanager.ViewManager
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.modules.dialog.DialogModule
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.bridge.MemoryPressureListener
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.bridge.JavaMethodWrapper$10
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.jni.DestructorThread$1
androidx.appcompat.widget.ActionBarContainer
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.fabric.ComponentFactory
androidx.activity.ImmLeaksCleaner
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.react.bridge.ReadableNativeMap$1$1
com.google.android.material.bottomsheet.BottomSheetBehavior
com.facebook.soloader.DoNotOptimize
com.google.android.material.datepicker.MaterialCalendar
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.react.bridge.MemoryPressure
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.JavaOnlyArray
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.bridge.JavaModuleWrapper
com.coinapp.MainActivity
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.views.picker.ReactDialogPickerManager
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.ReactMarker$MarkerListener
com.horcrux.svg.RenderableViewManager$PatternManager
com.facebook.react.modules.datepicker.DatePickerDialogModule
com.facebook.react.views.picker.ReactDropdownPickerManager
com.facebook.react.bridge.Systrace
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.google.android.material.transformation.ExpandableBehavior
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder
com.facebook.react.bridge.BackgroundExecutor
com.facebook.react.bridge.CallbackImpl
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.bridge.CatalystInstanceImpl$2
androidx.activity.ComponentActivity$2
com.facebook.react.bridge.PromiseImpl
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
javax.inject.Provider
androidx.fragment.app.ListFragment
com.facebook.react.bridge.NativeArrayInterface
com.google.android.material.internal.CheckableImageButton
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.bridge.WritableNativeMap
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.google.android.material.internal.NavigationMenuItemView
androidx.core.app.CoreComponentFactory
com.facebook.react.bridge.ReactApplicationContext
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec
androidx.fragment.app.DialogFragment
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.bridge.JavaJSExecutor
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.facebook.react.bridge.NativeModule
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.turbomodule.core.TurboModuleManager$2
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract
com.facebook.fbreact.specs.NativeTimingSpec
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.JavaOnlyMap$1
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.jni.HybridData$Destructor
com.facebook.react.modules.appstate.AppStateModule
androidx.core.util.Pools$SimplePool
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.fbreact.specs.NativeLinkingManagerSpec
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.appcompat.widget.ViewStubCompat
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.bridge.Dynamic
com.horcrux.svg.RenderableViewManager$MaskManager
com.facebook.react.bridge.queue.MessageQueueThreadHandler
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.bridge.CatalystInstanceImpl$1$1
com.horcrux.svg.SvgViewManager
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.bridge.ReactMarker
androidx.lifecycle.Lifecycling$1
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.uimanager.BaseViewManager
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
androidx.core.app.RemoteActionCompat
com.facebook.react.modules.systeminfo.AndroidInfoModule
androidx.savedstate.SavedStateRegistry$1
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.common.internal.DoNotStrip
com.facebook.react.modules.core.TimingModule
com.facebook.fbreact.specs.NativeImageEditorSpec
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.google.android.material.textview.MaterialTextView
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.react.bridge.ReadableNativeArray$1
com.swmansion.rnscreens.ScreenStackFragment
com.facebook.react.bridge.WritableMap
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.facebook.react.modules.core.JSTimers
com.facebook.react.bridge.Arguments
com.facebook.react.uimanager.SimpleViewManager
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.jni.NativeRunnable
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.horcrux.svg.RenderableViewManager$TextPathViewManager
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.react.bridge.ReactContext$1
com.facebook.react.modules.camera.ImageStoreManager
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.bridge.ReadableMap
com.facebook.jni.ThreadScopeSupport
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.modules.statusbar.StatusBarModule
com.google.android.material.internal.BaselineLayout
com.facebook.react.bridge.UIManagerListener
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.bridge.CxxModuleWrapper
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.bridge.WritableArray
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.horcrux.svg.RenderableViewManager$GroupViewManager
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.horcrux.svg.RenderableViewManager$PathViewManager
com.facebook.soloader.SoLoader
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.horcrux.svg.RenderableViewManager$ImageViewManager
com.facebook.react.bridge.WritableNativeArray
com.facebook.jni.MapIteratorHelper
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.util.RCTLog
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.bridge.JsonWriterHelper
com.facebook.react.views.slider.ReactSliderManager
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.facebook.react.views.text.ReactRawTextManager
androidx.recyclerview.widget.RecyclerView
com.facebook.react.bridge.ReadableMapKeySetIterator
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.devsupport.JSDevSupport
com.facebook.react.bridge.ReadableNativeArray
com.horcrux.svg.RenderableViewManager$RectViewManager
com.facebook.jni.CppSystemErrorException
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.animated.EventAnimationDriver
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.core.graphics.drawable.IconCompat
androidx.lifecycle.SavedStateHandleController$1
com.facebook.jni.annotations.DoNotStrip
com.google.android.material.appbar.MaterialToolbar
com.facebook.react.bridge.Inspector$Page
com.horcrux.svg.RNSVGRenderableManager
com.facebook.react.bridge.ReadableArray
com.facebook.react.bridge.JSBundleLoader$3
com.swmansion.rnscreens.ScreenFragment
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.bridge.ModuleSpec
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.bridge.NoSuchKeyException
com.horcrux.svg.RenderableViewManager$DefsViewManager
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.horcrux.svg.RenderableViewManager
com.horcrux.svg.RenderableViewManager$CircleViewManager
androidx.lifecycle.SavedStateHandleController
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.bridge.JSIModule
com.facebook.react.devsupport.JSException
androidx.appcompat.widget.ActionMenuView
com.facebook.jni.HybridClassBase
com.facebook.react.bridge.ReactCallback
com.facebook.react.bridge.NativeArray
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.jni.CppException
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.fabric.events.FabricEventEmitter
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.appcompat.widget.DialogTitle
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.proguard.annotations.KeepGettersAndSetters
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.react.bridge.SoftAssertions
com.facebook.fbreact.specs.NativeJSDevSupportSpec
androidx.recyclerview.widget.LinearLayoutManager
com.facebook.react.bridge.AssertionException
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.bridge.JSBundleLoader$2
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.react.bridge.Inspector
com.facebook.react.views.view.ReactViewManager
com.facebook.react.bridge.JSIModuleHolder
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.react.bridge.ReactMethod
com.facebook.react.modules.share.ShareModule
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.react.bridge.Callback
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.react.bridge.CatalystInstance
com.facebook.yoga.YogaLogger
com.facebook.react.bridge.JavaMethodWrapper$6
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.views.progressbar.ReactProgressBarViewManager
androidx.versionedparcelable.ParcelImpl
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.react.uimanager.RootViewManager
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
com.facebook.react.uimanager.events.TouchEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.ProducerListener2 mProducerListener
com.facebook.react.LazyReactPackage$2$1: int position
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: int $streamId$inlined
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: java.util.Deque mRunnableList
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.Task writerTask
com.google.android.material.R$styleable: int[] CompoundButton
com.facebook.react.modules.datepicker.DatePickerDialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec: com.google.android.material.animation.Positioning positioning
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment topLeftCorner
kotlin.collections.ArrayAsCollection: java.lang.Object[] values
com.google.android.material.R$styleable: int MaterialButton_elevation
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.core.view.ActionProvider itemActionProvider
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig
com.facebook.react.views.scroll.ReactScrollView: boolean mDragging
com.facebook.react.ReactNativeHost: android.app.Application mApplication
com.facebook.drawee.view.SimpleDraweeView: com.facebook.common.internal.Supplier sDraweecontrollerbuildersupplier
com.google.android.material.datepicker.CalendarConstraints$Builder: long end
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Comparator EVENT_COMPARATOR
androidx.appcompat.R$attr: int alertDialogTheme
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean mFinishing
androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll
com.facebook.common.webp.WebpSupportStatus: boolean sIsExtendedWebpSupported
com.google.android.material.textfield.TextInputLayout: android.graphics.RectF tmpRectF
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.RedBoxHandler mRedBoxHandler
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.Object mCallerContext
androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
com.facebook.imagepipeline.core.ImagePipelineExperiments: long mMemoryType
com.facebook.react.jstasks.HeadlessJsTaskContext$3: com.facebook.react.jstasks.HeadlessJsTaskContext this$0
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap sActionIdMap
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Path mOuterClipPathForBorderRadius
com.facebook.react.modules.systeminfo.ReactNativeVersion: java.util.Map VERSION
com.google.android.material.internal.CollapsingTextHelper: android.text.TextPaint tmpPaint
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
com.google.android.material.R$styleable: int TextAppearance_textAllCaps
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
okio.SegmentPool: int HASH_BUCKET_COUNT
androidx.appcompat.widget.ActionMenuView: boolean mFormatItems
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
androidx.appcompat.widget.SwitchCompat: float mTouchX
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_ENCODE
androidx.appcompat.widget.ScrollingTabContainerView: int mStackedTabMaxWidth
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight
kotlin.collections.AbstractCollection$toString$1: kotlin.collections.AbstractCollection this$0
androidx.appcompat.R$attr: int alertDialogCenterButtons
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory
com.facebook.react.views.view.ReactViewGroup: java.lang.String mBackfaceVisibility
com.horcrux.svg.PatternView: float mVbWidth
androidx.appcompat.widget.ForwardingListener: int mActivePointerId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.google.android.material.R$styleable: int[] AnimatedStateListDrawableItem
androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] $VALUES
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.google.android.material.R$styleable: int MaterialCalendarItem_itemFillColor
androidx.appcompat.R$id: int alertTitle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaNodeJNIBase mOwner
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: boolean mAnimated
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
androidx.appcompat.app.AlertController$1: androidx.appcompat.app.AlertController this$0
okhttp3.Cookie: java.lang.String path
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mOriginColor
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
androidx.fragment.app.Fragment: boolean mFromLayout
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mSnapInterval
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag NATIVE_MODULE
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.concurrent.CopyOnWriteArraySet mConsumerContextPairs
androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mNestedScrollingV2ConsumedCompat
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener mViewHierarchyUpdateDebugListener
androidx.fragment.app.FragmentTransition$3: androidx.core.os.CancellationSignal val$signal
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
com.facebook.drawee.drawable.RoundedDrawable: boolean mScaleDownInsideBorders
com.facebook.imagepipeline.memory.BufferMemoryChunk: java.nio.ByteBuffer mBuffer
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.imagepipeline.core.PriorityThreadFactory: java.lang.String mPrefix
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.android.material.appbar.HeaderBehavior: int lastMotionY
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: java.lang.String[] THUMBNAIL_PROJECTION
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.util.Set mRequestListeners
okhttp3.internal.connection.Exchange$RequestBodySink: boolean completed
okhttp3.internal.connection.RealConnection: int allocationLimit
com.google.android.material.card.MaterialCardView: int[] CHECKED_STATE_SET
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMinor
com.horcrux.svg.PatternView: android.graphics.Matrix mMatrix
androidx.transition.TransitionValues: java.util.Map values
com.facebook.imagepipeline.request.ImageRequestBuilder: int mDelayMs
com.facebook.imagepipeline.cache.CountingLruMap: java.util.LinkedHashMap mMap
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
com.facebook.react.modules.statusbar.StatusBarModule$1: int val$color
com.google.android.material.behavior.SwipeDismissBehavior$1: int activePointerId
androidx.appcompat.view.menu.MenuBuilder: boolean mOptionalIconsVisible
com.facebook.drawee.drawable.ScaleTypeDrawable: android.graphics.Matrix mTempMatrix
androidx.transition.Transition: java.util.ArrayList mTargetTypes
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: boolean mUseDownSamplingRatio
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: boolean val$isMemoryCacheEnabled
androidx.fragment.app.FragmentState: java.lang.String mWho
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder this$1
androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mBehaviorConsumed
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
okhttp3.Cookie: java.lang.String value
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCount
com.swmansion.rnscreens.ScreenStack: java.util.List drawingOps
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
com.facebook.imageformat.DefaultImageFormatChecker: int MAX_HEADER_LENGTH
androidx.appcompat.widget.FitWindowsFrameLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
com.google.android.material.internal.CollapsingTextHelper: android.text.TextPaint textPaint
okhttp3.MultipartBody: okhttp3.MediaType FORM
androidx.core.R$id: int accessibility_custom_action_24
androidx.recyclerview.widget.FastScroller: int mVerticalTrackWidth
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
okhttp3.internal.connection.RealCall: boolean requestBodyOpen
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.core.ImagePipelineConfigInterface mImagePipelineConfig
androidx.recyclerview.widget.DefaultItemAnimator$6: int val$deltaX
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup mPopup
okhttp3.internal.http2.Http2Connection: boolean isShutdown
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
com.facebook.react.views.text.ReactBaseTextShadowNode: int mHyphenationFrequency
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm
okhttp3.internal.http2.Http2Writer: boolean closed
androidx.recyclerview.R$dimen: int fastscroll_margin
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean mIsResizingEnabled
com.facebook.react.views.scroll.ReactScrollView$4: com.facebook.react.views.scroll.ReactScrollView this$0
com.google.android.material.R$styleable: int TextAppearance_android_shadowColor
androidx.appcompat.R$styleable: int AppCompatImageView_tint
com.horcrux.svg.VirtualView: android.graphics.Path mMarkerPath
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean autoHideEnabled
com.facebook.react.modules.fresco.SystraceRequestListener: java.util.Map mRequestsID
com.facebook.common.logging.FLogDefaultLoggingDelegate: int mMinimumLoggingLevel
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2
com.facebook.common.memory.PooledByteBufferInputStream: int mMark
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.Typeface mFontTypeface
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle
androidx.fragment.app.FragmentManager: int mCurState
com.facebook.react.shell.MainReactPackage$1: com.facebook.react.shell.MainReactPackage this$0
com.facebook.react.bridge.queue.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mDecodeCancellationEnabled
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] $VALUES
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner taskRunner
androidx.fragment.app.FragmentState: boolean mRemoving
com.swmansion.rnscreens.Screen: java.lang.Boolean isStatusBarAnimated
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.GlyphContext: com.horcrux.svg.SVGLength[] mDYs
com.facebook.react.views.scroll.ReactScrollViewHelper: int SMOOTH_SCROLL_DURATION
androidx.core.R$id: int tag_transition_group
com.google.android.material.chip.ChipDrawable: java.lang.CharSequence closeIconContentDescription
com.facebook.soloader.MinElf$ISA: java.lang.String value
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: android.graphics.Rect mVisibleViewArea
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString EMPTY_DEFLATE_BLOCK
com.facebook.imageutils.TiffUtil$TiffHeader: int firstIfdOffset
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.ImageView mIconView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object mFetchedImage
com.facebook.react.modules.debug.FpsDebugFrameCallback: int mExpectedNumFramesPrev
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole mAccessibilityRole
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
androidx.fragment.app.FragmentState: int mFragmentId
com.facebook.react.views.view.ReactViewBackgroundDrawable: float mBorderRadius
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
androidx.appcompat.widget.SearchView: android.view.View mSearchPlate
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
com.facebook.react.CoreModulesPackage: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mHardwareBackBtnHandler
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment bottomEdge
com.google.android.material.R$styleable: int Chip_chipBackgroundColor
com.facebook.react.uimanager.events.EventDispatcherImpl$2: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
androidx.cursoradapter.widget.CursorFilter: androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: java.util.concurrent.Executor mUiThreadExecutor
com.google.android.material.R$attr: int colorPrimaryVariant
androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header$Companion Companion
androidx.core.R$styleable: int ColorStateListItem_alpha
androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
com.google.android.material.appbar.AppBarLayout: boolean haveChildWithInterpolator
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] $VALUES
com.google.android.material.snackbar.SnackbarManager: java.lang.Object lock
com.facebook.react.uimanager.ViewProps: int[] POSITION_SPACING_TYPES
androidx.recyclerview.R$styleable: int[] RecyclerView
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalExpectedFrames
androidx.recyclerview.widget.RecyclerView: int mScrollState
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline middle
com.th3rdwave.safeareacontext.Rect: float width
com.facebook.imagepipeline.producers.InternalProducerListener: com.facebook.imagepipeline.producers.ProducerListener2 mProducerListener2
androidx.appcompat.view.menu.MenuPopupHelper: int mDropDownGravity
androidx.core.graphics.drawable.IconCompat: byte[] mData
com.facebook.react.views.scroll.ScrollEvent: int mScrollY
com.facebook.react.views.textinput.ReactTextInputShadowNode: int mMostRecentEventCount
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode
androidx.transition.Visibility$1: androidx.transition.Visibility this$0
androidx.appcompat.R$layout: int abc_screen_simple
com.google.android.material.textfield.TextInputLayout: boolean counterEnabled
com.facebook.react.modules.core.JavaTimerManager: boolean mSendIdleEvents
com.facebook.imagepipeline.memory.BucketMap: android.util.SparseArray mMap
com.facebook.react.animated.AnimatedNode: int mTag
com.facebook.soloader.SoLoader$1: boolean val$hasNativeLoadMethod
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.String mResizeMode
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
okhttp3.internal.connection.RealConnection: long idleAtNs
okhttp3.internal.http.RequestLine: okhttp3.internal.http.RequestLine INSTANCE
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
com.google.android.material.R$styleable: int MaterialButton_android_insetLeft
com.facebook.react.module.model.ReactModuleInfo: java.lang.String mName
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mFailureImage
com.horcrux.svg.GroupView: com.facebook.react.bridge.ReadableMap mFont
androidx.appcompat.R$id: int submenuarrow
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
com.facebook.common.util.SecureHashUtil: byte[] HEX_CHAR_TABLE
okhttp3.MultipartBody$Builder: okio.ByteString boundary
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.CoreModulesPackage$1: com.facebook.react.CoreModulesPackage this$0
androidx.core.R$id: int accessibility_custom_action_25
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader headersReader
com.facebook.react.modules.storage.ReactDatabaseSupplier: long mMaximumDatabaseSize
com.facebook.imagepipeline.cache.BufferedDiskCache$6: java.lang.Object val$token
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.google.android.material.R$styleable: int Chip_chipEndPadding
com.facebook.imageformat.DefaultImageFormatChecker: int PNG_HEADER_LENGTH
com.google.android.material.datepicker.MonthsPagerAdapter$1: com.google.android.material.datepicker.MonthsPagerAdapter this$0
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mParent
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder
com.google.android.material.R$styleable: int TextInputLayout_errorTextAppearance
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mSurfaceId
com.facebook.drawee.drawable.FadeDrawable: android.graphics.drawable.Drawable[] mLayers
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener: androidx.coordinatorlayout.widget.CoordinatorLayout this$0
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mControllerFinalImageSetTimeMs
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
com.facebook.soloader.ExtractFromZipSoSource: java.io.File mZipFileName
kotlin.ranges.IntProgression: int last
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: int mRecreatingHashCode
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType CM
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Dns defaultDns
androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE
com.google.android.material.R$styleable: int[] Snackbar
com.facebook.common.webp.WebpSupportStatus: byte[] WEBP_VP8X_BYTES
com.google.android.material.appbar.AppBarLayout: int totalScrollRange
com.horcrux.svg.GlyphContext: com.horcrux.svg.SVGLength[] mXs
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations
androidx.appcompat.R$attr: int editTextStyle
androidx.transition.ChangeBounds$8: android.graphics.Rect val$finalClip
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.horcrux.svg.GlyphContext: java.util.ArrayList mDXsIndices
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec showMotionSpec
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mBackground
com.facebook.common.references.CloseableReference: java.lang.Throwable mStacktrace
com.facebook.imagepipeline.core.ProducerFactory: boolean mDownsampleEnabled
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: int mMinDecodeIntervalMs
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA ARM
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY
androidx.fragment.app.DialogFragment$1: androidx.fragment.app.DialogFragment this$0
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType IDLE_EVENT
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar
com.facebook.imagepipeline.memory.NativeMemoryChunk: int mSize
com.facebook.react.uimanager.UIViewOperationQueue: long mUpdatePropertiesOperationCount
com.google.android.material.chip.Chip: android.graphics.Rect rect
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
okhttp3.internal.concurrent.TaskRunner: int nextQueueName
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitle
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
com.facebook.react.modules.blob.BlobModule$1: com.facebook.react.modules.blob.BlobModule this$0
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer this$0
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.google.android.material.R$styleable: int MaterialButton_android_insetRight
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
androidx.fragment.R$id: int visible_removing_fragment_view_tag
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager sInstance
com.horcrux.svg.GlyphContext: java.util.ArrayList mXsIndices
androidx.collection.ArraySet: int sTwiceBaseCacheSize
com.facebook.cache.disk.DiskStorageCache$CacheStats: boolean mInitialized
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearancePathProvider pathProvider
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView mReactRootView
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.facebook.imagepipeline.producers.DelayProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.react.config.ReactFeatureFlags: boolean enableReactContextCleanupFix
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.common.ImageDecodeOptions DEFAULTS
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.horcrux.svg.TextView: java.util.ArrayList mRotate
kotlin.ranges.IntProgressionIterator: boolean hasNext
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mNativeChildren
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.lang.String mUserAgent
com.google.android.material.datepicker.MonthAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.UnpackingSoSource this$0
com.google.android.material.shape.RelativeCornerSize: float percent
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutNumericModifiers
com.facebook.drawee.drawable.FadeDrawable: boolean mMutateDrawables
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.horcrux.svg.SvgView: java.lang.Runnable toDataUrlTask
bolts.Task: java.lang.Exception error
com.facebook.react.ReactInstanceManagerBuilder: java.lang.String mJSMainModulePath
androidx.appcompat.widget.SuggestionsAdapter: int mIconName1Col
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.AnimatorSet iconInAnim
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop
com.facebook.react.modules.toast.ToastModule$1: int val$duration
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.core.view.ActionProvider$VisibilityListener mListener
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: boolean sWebpTranscoderPresent
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutAlphabeticChar
com.google.android.material.internal.TextDrawableHelper: boolean textWidthDirty
okhttp3.internal.http2.Http2Connection: boolean client
com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener sKeyListener
com.facebook.react.animated.FrameBasedAnimationDriver: long mStartFrameTimeNanos
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int[] mThemeAttrs
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.ViewGroup mParent
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int mVisibilityState
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
com.facebook.react.uimanager.YogaNodePool: java.lang.Object sInitLock
androidx.transition.ChangeBounds$10: androidx.transition.ChangeBounds this$0
com.google.android.material.internal.CollapsingTextHelper: float expandedShadowDx
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.util.Set mBoundControllerListeners
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTintMode
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean mDiskCacheEnabled
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGImage
okio.Timeout: long deadlineNanoTime
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource this$0
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
com.google.android.material.R$styleable: int[] ListPopupWindow
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0
com.facebook.datasource.IncreasingQualityDataSourceSupplier: java.util.List mDataSourceSuppliers
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.Runnable mPostTouchRunnable
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mControllerIntermediateImageSetTimeMs
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints
com.google.android.material.resources.TextAppearance$2: com.google.android.material.resources.TextAppearance this$0
com.facebook.react.views.picker.ReactPickerItem: java.lang.Integer color
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: boolean insideBaseDirectory
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutNumericModifiers
com.google.android.material.resources.CancelableFontCallback: com.google.android.material.resources.CancelableFontCallback$ApplyFont applyFont
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Stream stream
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL
androidx.cardview.widget.RoundRectDrawableWithShadow: float mShadowSize
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_Y
com.horcrux.svg.GlyphContext: double mY
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
okio.GzipSource: byte section
androidx.customview.widget.ViewDragHelper: int mActivePointerId
androidx.core.provider.FontRequest: java.util.List mCertificates
com.swmansion.rnscreens.ScreenStack: boolean reverseLastTwoChildren
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
com.google.android.material.bottomsheet.BottomSheetBehavior: float maximumVelocity
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
com.google.android.material.R$attr: int state_collapsed
androidx.recyclerview.widget.FastScroller$AnimatorListener: androidx.recyclerview.widget.FastScroller this$0
androidx.appcompat.R$id: int titleDividerNoCustom
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig
com.facebook.drawee.backends.pipeline.PipelineDraweeController: boolean mDrawDebugOverlay
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
com.google.android.material.datepicker.Month: int daysInWeek
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1
com.google.android.material.internal.StateListAnimator$Tuple: int[] specs
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored
androidx.appcompat.R$styleable: int SwitchCompat_thumbTintMode
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: kotlin.sequences.Sequence $this_asIterable$inlined
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
com.horcrux.svg.VirtualView: android.graphics.Path mCachedClipPath
com.facebook.drawee.drawable.FadeDrawable: int mAlpha
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.content.Context mActionModeContext
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion
com.facebook.react.animated.SpringAnimation: double mSpringStiffness
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
com.facebook.drawee.drawable.RoundedDrawable: float[] mBorderRadii
com.zoontek.rnbootsplash.RNBootSplashTask: com.zoontek.rnbootsplash.RNBootSplashTask$Type mType
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
com.facebook.imagepipeline.cache.BufferedDiskCache$5: java.lang.Object val$token
com.google.android.material.R$styleable: int[] LinearLayoutCompat
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int[] mData
androidx.appcompat.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DRAWABLE_HIDE
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.google.android.material.R$dimen: int design_bottom_sheet_peek_height_min
okhttp3.internal.platform.ConscryptPlatform: boolean isSupported
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownAlwaysVisible
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion Companion
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.String mRequestId
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
com.google.android.material.R$styleable: int MaterialButton_rippleColor
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
androidx.transition.ViewUtilsApi22: boolean sTryHiddenSetLeftTopRightBottom
okhttp3.internal.http2.Http2Connection$Builder: boolean client
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
com.facebook.react.animated.InterpolationAnimatedNode: boolean mHasStringOutput
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
com.google.android.material.chip.ChipDrawable: int currentCompatRippleColor
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
androidx.appcompat.R$styleable: int View_theme
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.graphics.drawable.StateListDrawable filledPopupBackground
com.google.android.material.chip.ChipGroup: int chipSpacingHorizontal
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer mTrackColorForTrue
androidx.appcompat.R$styleable: int TextAppearance_textLocale
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.RectF mDrawableBounds
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment fragment
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier mBitmapMemoryCacheParamsSupplier
com.google.android.material.R$styleable: int MaterialCalendar_daySelectedStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath
okhttp3.internal.Util$threadFactory$1: java.lang.String $name
com.facebook.react.views.text.ReactFontManager: java.util.Map mFontCache
com.facebook.imagepipeline.core.ProducerFactory: boolean mBitmapPrepareToDrawForPrefetch
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.widget.ListAdapter mAdapter
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.String mSourceString
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
androidx.cardview.widget.RoundRectDrawableWithShadow: float mCornerRadius
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod OVERLAY_COLOR
androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity
com.google.android.material.R$styleable: int[] MenuGroup
okhttp3.MultipartBody$Builder: java.util.List parts
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier mTextClassifier
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
androidx.appcompat.widget.ViewStubCompat: androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper
com.google.android.material.animation.MotionTiming: int repeatMode
androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout
androidx.fragment.app.Fragment: java.lang.String mWho
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
androidx.appcompat.R$styleable: int MenuItem_iconTint
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int mDrawerState
com.th3rdwave.safeareacontext.SafeAreaView$1: com.th3rdwave.safeareacontext.SafeAreaView this$0
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.NativeViewHierarchyOptimizer mNativeViewHierarchyOptimizer
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short mCount
com.facebook.imagepipeline.listener.ForwardingRequestListener2: java.util.List mRequestListeners
com.horcrux.svg.TextView: com.horcrux.svg.SVGLength mInlineSize
com.facebook.drawee.drawable.RoundedColorDrawable: android.graphics.Path mBorderPath
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mPreviousHoriz
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator mTextWatcherDelegator
com.facebook.react.modules.network.ForwardingCookieHandler$1: com.facebook.react.bridge.Callback val$callback
androidx.customview.widget.ViewDragHelper: float[] mLastMotionY
androidx.recyclerview.widget.LinearSmoothScroller: float mMillisPerPixel
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: androidx.appcompat.widget.ActionMenuView this$0
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mBlockNativeResponder
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView this$0
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType END
com.facebook.react.views.textinput.ReactTextChangedEvent: int mEventCount
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
androidx.transition.Visibility$DisappearListener: int mFinalVisibility
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment bottomRightCorner
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType BEGIN_DRAG
com.google.android.material.shape.ShapePath$PathArcOperation: float bottom
com.google.android.material.card.MaterialCardView: boolean checked
androidx.appcompat.R$id: int action_mode_close_button
com.facebook.imageutils.TiffUtil: java.lang.Class TAG
com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming collapseTiming
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST
androidx.appcompat.widget.TooltipPopup: android.view.WindowManager$LayoutParams mLayoutParams
androidx.fragment.app.Fragment: boolean mPerformedCreateView
androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs
com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean[] mPaddingIsPercent
com.facebook.imagepipeline.core.CloseableReferenceFactory$1: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker val$closeableReferenceLeakTracker
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
androidx.fragment.app.FragmentManager: boolean DEBUG
com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.ConcurrentLinkedQueue mPendingRequests
androidx.appcompat.widget.SearchView: java.lang.CharSequence mOldQueryText
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState val$fetchState
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mSurfaceId
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalVideoFileFetchSequence
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
com.google.android.material.appbar.AppBarLayout$LayoutParams: int scrollFlags
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mDestroyed
com.facebook.soloader.DirectorySoSource: java.io.File soDirectory
com.facebook.react.modules.core.JavaTimerManager$1: com.facebook.react.modules.core.JavaTimerManager this$0
com.google.android.material.R$styleable: int MaterialButton_backgroundTintMode
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_ACTIVITY_STOP
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener
androidx.recyclerview.widget.OrientationHelper: int mLastTotalSpace
com.facebook.react.views.scroll.OnScrollDispatchHelper: float mXFlingVelocity
com.facebook.react.ReactRootView: com.facebook.react.ReactAndroidHWInputDeviceHelper mAndroidHWInputDeviceHelper
androidx.appcompat.widget.ActionMenuPresenter: int mMaxItems
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.util.concurrent.ExecutorService mExecutorService
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mImageRequestEndTimeMs
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.PointF mInnerTopRightCorner
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Path pathInsetByStroke
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
com.facebook.imageformat.ImageFormat: java.lang.String mName
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean DEBUG_MODE
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: com.facebook.react.views.view.ReactViewGroup mParent
okhttp3.internal.ws.WebSocketReader: boolean readingCompressedMessage
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.ActionMode$Callback mCallback
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mControllerFinalImageSetTimeMs
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View mView
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
com.horcrux.svg.PathParser: float mPivotX
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground
okhttp3.internal.ws.RealWebSocket: int sentPingCount
androidx.appcompat.view.menu.ListMenuItemView: boolean mForceShowIcon
androidx.appcompat.view.menu.MenuPopupHelper: boolean mForceShowIcon
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView mRecyclerView
androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod
com.facebook.soloader.ApkSoSource$ApkUnpacker: com.facebook.soloader.ApkSoSource this$0
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
com.facebook.yoga.YogaEdge: int mIntValue
com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR
com.google.android.material.bottomsheet.BottomSheetBehavior$4: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView
androidx.transition.ChangeBounds$10: float val$transitionAlpha
com.facebook.fresco.ui.common.ControllerListener2$Extras: android.net.Uri mainUri
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag FABRIC_RECONCILER
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: boolean hasMoreChunks
bolts.Task$4: java.util.concurrent.Callable val$callable
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.String mContentDescription
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: int mTag
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration
okhttp3.internal.concurrent.TaskQueue: boolean shutdown
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.core.CloseableReferenceFactory mCloseableReferenceFactory
com.google.android.material.appbar.AppBarLayout: boolean liftableOverride
com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object[] VIEW_MGR_GROUP_ARGS
com.google.android.material.R$styleable: int TextInputLayout_passwordToggleDrawable
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.Callback mAnimationComplete
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.google.android.material.R$string: int mtrl_picker_toggle_to_year_selection
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
androidx.appcompat.widget.SearchView: android.app.SearchableInfo mSearchable
androidx.fragment.app.FragmentAnim$2$1: androidx.fragment.app.FragmentAnim$2 this$0
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mSystemWindowInsets
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Bitmap expandedTitleTexture
androidx.appcompat.widget.ListPopupWindow$2: androidx.appcompat.widget.ListPopupWindow this$0
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.facebook.react.views.text.TextAttributes: float mMaxFontSizeMultiplier
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Settings $settings$inlined
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.internal.Supplier mLazyDataSource
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
androidx.collection.SimpleArrayMap: int mSize
com.facebook.imagepipeline.producers.StatefulProducerRunnable: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
androidx.fragment.app.FragmentAnim$2: androidx.core.os.CancellationSignal val$signal
com.facebook.drawee.debug.DebugControllerOverlayDrawable: android.graphics.Paint mPaint
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1: com.facebook.react.modules.network.ForwardingCookieHandler val$this$0
com.google.android.material.R$styleable: int TextAppearance_android_shadowDy
com.facebook.react.views.scroll.ReactScrollView: int mLastStateUpdateScrollY
com.facebook.react.views.text.ReactTextView: int mTextAlign
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGCircle
androidx.core.view.OneShotPreDrawListener: android.view.View mView
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List mUnmodifiableAttachedScrap
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: java.util.Map mPropSetters
okhttp3.internal.ws.WebSocketProtocol: okhttp3.internal.ws.WebSocketProtocol INSTANCE
com.facebook.react.modules.debug.FpsDebugFrameCallback: java.util.TreeMap mTimeToFps
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView
com.facebook.react.animated.NativeAnimatedModule$16: int val$childNodeTag
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri mUri
com.facebook.react.modules.core.JavaTimerManager$Timer: int mInterval
com.facebook.drawee.drawable.FadeDrawable: boolean mDefaultLayerIsOn
com.google.android.material.R$styleable: int TextAppearance_android_textColorHint
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
com.facebook.react.animated.NativeAnimatedModule$6: int val$tag
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
androidx.core.R$styleable: int GradientColor_android_endY
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: java.lang.Object value
okhttp3.Cookie$Builder: boolean hostOnly
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener
kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion
com.facebook.react.views.textinput.ReactEditText: boolean mDidAttachToWindow
com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List PREVAILING_RULE
okio.DeflaterSink: okio.BufferedSink sink
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
com.google.android.material.ripple.RippleUtils: int[] FOCUSED_STATE_SET
com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.customview.widget.ViewDragHelper viewDragHelper
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger mWebpErrorLogger
androidx.appcompat.widget.SearchView: boolean mIconifiedByDefault
okhttp3.CacheControl: int maxStaleSeconds
androidx.fragment.app.FragmentLayoutInflaterFactory: androidx.fragment.app.FragmentManager mFragmentManager
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean mIsBatchEdit
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline bottom
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGSymbol
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig mDynamicValueConfig
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle year
androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect
androidx.customview.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator
androidx.fragment.R$anim: int fragment_open_enter
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.google.android.material.internal.BaselineLayout: int baseline
com.google.android.material.R$id: int mtrl_internal_children_alpha_tag
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: java.util.Set mBoundControllerListeners2
androidx.core.widget.NestedScrollView: int[] mScrollOffset
androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.facebook.drawee.backends.pipeline.Fresco: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier sDraweeControllerBuilderSupplier
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShowTitle
androidx.fragment.R$id: int fragment_container_view_tag
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider provider
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.info.ImageOriginListener mImageOriginListener
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$RecycleListView val$listView
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle day
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Companion Companion
com.google.android.material.appbar.AppBarLayout: java.util.List listeners
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int shadowCompatOffset
com.swmansion.rnscreens.ScreenWindowTraits: boolean mDidSetOrientation
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: android.graphics.RadialGradient mRadialGradient
com.facebook.common.internal.Suppliers: com.facebook.common.internal.Supplier BOOLEAN_TRUE
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.widget.TextView mTextView
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory mWebpBitmapFactory
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] $VALUES
okio.SegmentPool: okio.SegmentPool INSTANCE
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: boolean mDefaultValue
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: okhttp3.Call$Factory mCallFactory
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.util.Set mRequestListener2s
com.swmansion.rnscreens.Screen: java.lang.Boolean mStatusBarTranslucent
androidx.recyclerview.widget.GapWorker$Task: int viewVelocity
com.google.android.material.R$string: int character_counter_overflowed_content_description
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: com.facebook.react.modules.storage.AsyncStorageModule this$0
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason CACHE_FULL
com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher
androidx.appcompat.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: okhttp3.OkHttpClient mOkHttpClient
com.th3rdwave.safeareacontext.InsetsChangeEvent: com.th3rdwave.safeareacontext.Rect mFrame
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
androidx.appcompat.widget.ActivityChooserView$InnerLayout: int[] TINT_ATTRS
com.google.android.material.textfield.TextInputLayout: int boxLabelCutoutPaddingPx
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.appcompat.R$styleable: int[] FontFamily
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
com.facebook.react.views.view.ReactViewBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderAlpha
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float actionTextColorAlpha
okhttp3.internal.platform.android.Android10SocketAdapter: okhttp3.internal.platform.android.Android10SocketAdapter$Companion Companion
androidx.transition.PathProperty: android.graphics.PointF mPointF
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
kotlin.text.DelimitedRangesSequence: int startIndex
com.facebook.react.modules.dialog.DialogModule$1: com.facebook.react.modules.dialog.DialogModule this$0
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: java.util.Map mResourceDrawableIdMap
androidx.viewpager2.adapter.FragmentStateAdapter$5: android.os.Handler val$handler
com.facebook.cache.disk.DiskCacheConfig$Builder: boolean mIndexPopulateAtStartupEnabled
com.facebook.react.animated.PropsAnimatedNode: int mConnectedViewTag
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.google.android.material.internal.CollapsingTextHelper$1: com.google.android.material.internal.CollapsingTextHelper this$0
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] $VALUES
androidx.core.provider.FontRequest: int mCertificatesArray
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
okhttp3.OkHttpClient: long minWebSocketMessageToCompress
androidx.core.util.Pair: java.lang.Object first
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: androidx.appcompat.widget.ListPopupWindow this$0
com.facebook.drawee.controller.AbstractDraweeController: boolean mRetainImageOnFailure
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] $VALUES
okhttp3.OkHttpClient: int pingIntervalMillis
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: int mCurrentDso
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.google.android.material.bottomsheet.BottomSheetDialog: boolean canceledOnTouchOutsideSet
com.facebook.imagepipeline.producers.BitmapPrepareProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.react.views.modal.ReactModalHostView$1: com.facebook.react.views.modal.ReactModalHostView this$0
com.facebook.react.animated.NativeAnimatedModule$13: int val$animationId
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.Postprocessor mPostprocessor
com.facebook.react.R$string: int menubar_description
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase routeDatabase
com.zoontek.rnbootsplash.RNBootSplashModule: int mDrawableResId
com.facebook.drawee.drawable.FadeDrawable: boolean mOnFadeListenerShowImmediately
com.horcrux.svg.RenderableView: java.util.ArrayList mOriginProperties
okhttp3.Address: java.util.List connectionSpecs
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float interpolation
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize
com.google.android.material.R$layout: int mtrl_picker_dialog
com.google.android.material.R$styleable: int MaterialCalendar_dayInvalidStyle
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify CENTER
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher this$0
androidx.fragment.app.ListFragment: android.widget.ListAdapter mAdapter
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float horizontalOffset
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: long mBatchNumber
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
com.facebook.react.views.text.ReactTextShadowNode: boolean mShouldNotifyOnTextLayout
com.facebook.react.ReactRootView: int mWidthMeasureSpec
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean mWasIdleAtEndOfLastFrame
kotlin.jvm.internal.ArrayIterator: int index
okhttp3.internal.Util: java.util.TimeZone UTC
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent mNextRecycledEvent
com.facebook.imagepipeline.decoder.DefaultImageDecoder: java.util.Map mCustomDecoders
com.facebook.react.views.text.TextLayoutManager: java.lang.String TAG
com.google.android.material.textfield.TextInputLayout$SavedState: boolean isEndIconChecked
com.google.android.material.transformation.FabTransformationBehavior$3: android.graphics.drawable.Drawable val$icon
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeEnd
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.google.android.material.R$styleable: int[] ScrimInsetsFrameLayout
com.google.android.material.transformation.FabTransformationBehavior$2: com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.coordinatorlayout.widget.CoordinatorLayout$1: androidx.coordinatorlayout.widget.CoordinatorLayout this$0
androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover
okio.RealBufferedSink: boolean closed
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PC
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shadow.ShadowRenderer shadowRenderer
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.imagepipeline.producers.InternalProducerListener: com.facebook.imagepipeline.producers.ProducerListener mProducerListener
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: boolean mIsClosed
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPath
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable mTickMark
com.facebook.imagepipeline.image.EncodedImage: int mRotationAngle
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetEpicenterBoundsMethod
com.facebook.react.common.LongArray: long[] mArray
com.facebook.cache.disk.DefaultDiskStorage: java.lang.Class TAG
com.facebook.drawee.components.RetryManager: int mMaxTapToRetryAttempts
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior behavior
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
androidx.appcompat.widget.SearchView: java.lang.CharSequence mDefaultQueryHint
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.swmansion.rnscreens.R$anim: int rns_no_animation_medium
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings DEFAULT_SETTINGS
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] $VALUES
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1: com.facebook.imagepipeline.producers.PostprocessorProducer val$this$0
androidx.appcompat.widget.DropDownListView: boolean mDrawsInPressedState
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $inFinished$inlined
com.facebook.datasource.AbstractDataSource$1: com.facebook.datasource.AbstractDataSource this$0
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mIsDiskCacheProbingEnabled
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray mHeight
androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
com.google.android.material.R$styleable: int Chip_chipIconTint
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin NETWORK
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList
com.google.android.material.shadow.ShadowRenderer: int shadowEndColor
com.google.android.material.chip.ChipDrawable: boolean chipIconVisible
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mTextGravity
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec showMotionSpec
com.horcrux.svg.LinearGradientView: com.horcrux.svg.SVGLength mY2
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2: com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE
com.google.android.material.resources.TextAppearance$1: com.google.android.material.resources.TextAppearance this$0
com.google.android.material.R$styleable: int[] SwitchCompat
androidx.recyclerview.widget.FastScroller: int mDragState
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSink $cacheBody
com.facebook.react.animated.NativeAnimatedModule$13: com.facebook.react.bridge.Callback val$endCallback
com.google.android.material.R$styleable: int Chip_checkedIconVisible
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_FILE_NOT_FOUND
com.horcrux.svg.PatternView: float mVbHeight
com.facebook.react.views.text.ReactTextUpdate: float mPaddingBottom
androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE
com.facebook.drawee.view.AspectRatioMeasure$Spec: int height
okhttp3.Authenticator: okhttp3.Authenticator JAVA_NET_AUTHENTICATOR
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$finalSharedElementTransition
com.google.android.material.bottomsheet.BottomSheetBehavior$4: int val$state
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
com.facebook.react.TurboReactPackage$1: com.facebook.react.TurboReactPackage this$0
com.horcrux.svg.FontData: java.lang.String fontFeatureSettings
com.facebook.react.modules.toast.ToastModule$3: int val$gravity
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation FADE_FROM_BOTTOM
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener mImagePerfDataListener
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int toX
com.facebook.react.modules.permissions.PermissionsModule$1: java.lang.String val$permission
com.facebook.common.statfs.StatFsHelper: com.facebook.common.statfs.StatFsHelper sStatsFsHelper
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] $VALUES
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: java.util.zip.ZipEntry backingEntry
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets
com.google.android.material.internal.CollapsingTextHelper: boolean isRtl
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap
com.facebook.react.uimanager.TransformHelper: java.lang.ThreadLocal sHelperMatrix
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
okio.Okio__JvmOkioKt: java.util.logging.Logger logger
okhttp3.internal.connection.Exchange$ResponseBodySource: long contentLength
com.facebook.imagepipeline.memory.MemoryChunkPool: int[] mBucketSizes
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker mCloseableReferenceLeakTracker
okhttp3.internal.http2.Http2Stream: long writeBytesMaximum
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
okhttp3.CacheControl: java.lang.String headerValue
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.internal.Supplier mSuppressBitmapPrefetchingSupplier
androidx.appcompat.R$attr: int actionBarTabTextStyle
androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext
okhttp3.internal.ws.MessageInflater: boolean noContextTakeover
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.ForwardingTimeout timeout
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth
com.facebook.debug.holder.NoopPrinter: com.facebook.debug.holder.NoopPrinter INSTANCE
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int mBitmapCloseableRefType
okhttp3.internal.http2.Http2Stream: java.io.IOException errorException
androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToStart
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int flags
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.util.Map imageExtras
com.facebook.imagepipeline.memory.BasePool: com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry
androidx.appcompat.widget.SearchView: boolean mQueryRefinement
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams: int DEFAULT_MAX_NUM_THREADS
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.widget.TextView mTextView
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MAXDATE
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection LTR
androidx.appcompat.widget.SearchView: int mMaxWidth
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner$Companion Companion
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenStack$Companion Companion
com.facebook.drawee.drawable.RoundedCornersDrawable: int mBorderColor
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
com.google.android.material.datepicker.MaterialCalendar$6: com.google.android.material.datepicker.MonthsPagerAdapter val$monthsPagerAdapter
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
okhttp3.internal.http2.Http2Stream: java.util.ArrayDeque headersQueue
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
androidx.recyclerview.widget.FastScroller: int mRecyclerViewWidth
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: androidx.coordinatorlayout.widget.CoordinatorLayout val$coordinatorLayout
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.facebook.react.modules.core.JavaTimerManager: android.util.SparseArray mTimerIdsToTimers
androidx.appcompat.R$styleable: int Toolbar_android_gravity
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap
com.facebook.imagepipeline.common.RotationOptions: int mRotation
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure
androidx.collection.SimpleArrayMap: int mBaseCacheSize
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
com.facebook.react.views.scroll.OnScrollDispatchHelper: long mLastScrollEventTimeMs
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.disk.EntryEvictionComparatorSupplier mEntryEvictionComparatorSupplier
com.facebook.common.executors.UiThreadImmediateExecutorService: com.facebook.common.executors.UiThreadImmediateExecutorService sInstance
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
androidx.fragment.R$anim: int fragment_fade_exit
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: com.facebook.react.uimanager.ReactShadowNode node
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: com.google.android.material.bottomsheet.BottomSheetDialogFragment this$0
androidx.collection.ArraySet: int[] mHashes
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchNonBatchedExecutionTime
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mRx
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableProperties mDrawableProperties
com.horcrux.svg.TextProperties$TextDecoration: java.lang.String decoration
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.facebook.react.views.view.ReactViewBackgroundManager: android.view.View mView
com.google.android.material.datepicker.MonthAdapter: com.google.android.material.datepicker.DateSelector dateSelector
com.facebook.react.animated.SubtractionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
okhttp3.Cache$CacheResponseBody$1: okio.Source $source
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
com.facebook.react.modules.network.NetworkingModule$1: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter val$eventEmitter
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
okhttp3.internal.connection.RouteSelector: java.util.List proxies
androidx.appcompat.widget.AppCompatTextHelper: boolean mAsyncFontPending
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion Companion
androidx.collection.LongSparseArray: java.lang.Object[] mValues
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4: boolean $ignoreCase
com.swmansion.rnscreens.ScreenContainer: java.util.ArrayList mScreenFragments
androidx.core.text.BidiFormatter$Builder: int mFlags
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: com.facebook.drawee.interfaces.DraweeController val$controller
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Settings $settings$inlined
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.imagepipeline.image.ImageInfo mImageInfo
com.facebook.react.animated.SpringAnimation: com.facebook.react.animated.SpringAnimation$PhysicsState mCurrentState
kotlin.comparisons.ReverseOrderComparator: kotlin.comparisons.ReverseOrderComparator INSTANCE
androidx.appcompat.R$attr: int colorButtonNormal
androidx.transition.ChangeBounds$ViewBounds: int mLeft
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.android.material.R$styleable: int[] AppCompatTextView
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder$Callback mCallback
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: boolean $animated
androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: com.facebook.imagepipeline.producers.ResizeAndRotateProducer val$this$0
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: boolean mResizingEnabled
com.google.android.material.datepicker.MaterialDatePicker$1: com.google.android.material.datepicker.MaterialDatePicker this$0
androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList collapsedShadowColor
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.common.util.TriState$1: int[] $SwitchMap$com$facebook$common$util$TriState
com.google.android.material.R$styleable: int[] ActionBarLayout
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
androidx.appcompat.widget.AppCompatSpinner$SavedState: boolean mShowDropdown
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY
androidx.fragment.app.ListFragment: java.lang.CharSequence mEmptyText
com.facebook.imageformat.DefaultImageFormatChecker: int ICO_HEADER_LENGTH
androidx.appcompat.app.AlertController: int mButtonPanelSideLayout
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuAdapter mAdapter
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String mOverflow
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog mLogBoxDialog
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ThemedReactContext mThemedContext
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures normal
com.facebook.react.uimanager.FabricViewStateManager: com.facebook.react.uimanager.StateWrapper mStateWrapper
androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch
androidx.fragment.app.Fragment: boolean mRemoving
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver observer
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean closed
androidx.core.R$id: int tag_screen_reader_focusable
com.google.android.material.R$styleable: int Chip_chipSurfaceColor
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger mWebpErrorLogger
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
com.google.android.material.datepicker.Month: long timeInMillis
com.google.android.material.textfield.PasswordToggleEndIconDelegate: com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener onEndIconChangedListener
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType $contentType
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] edgeShadowOperation
androidx.recyclerview.widget.DefaultItemAnimator$7: android.view.ViewPropertyAnimator val$oldViewAnim
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.lang.Object mKey
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.RotationOptions mRotationOptions
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign BASELINE
okhttp3.internal.ws.WebSocketReader: boolean perMessageDeflate
androidx.core.R$id: int accessibility_custom_action_23
androidx.appcompat.R$string: int abc_action_bar_up_description
androidx.fragment.app.FragmentStateManager: int mFragmentManagerState
com.facebook.react.views.text.ReactTextUpdate: int mJsEventCounter
com.facebook.drawee.drawable.ArrayDrawable: boolean mIsStateful
androidx.core.app.ActivityCompat$2: android.app.Activity val$activity
com.facebook.drawee.drawable.RoundedCornersDrawable: float[] mBorderRadii
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager mNativeViewHierarchyManager
androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0
com.facebook.common.internal.Closeables: java.util.logging.Logger logger
com.google.android.material.datepicker.MaterialCalendar$6: com.google.android.material.datepicker.MaterialCalendar this$0
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration Underline
androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter strokeTintFilter
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunStartTime
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat mInsets
com.facebook.react.views.text.TextAttributeProps: int mNumberOfLines
com.google.android.material.R$styleable: int Chip_chipIconEnabled
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon2
com.facebook.react.shell.MainReactPackage: com.facebook.react.shell.MainPackageConfig mConfig
com.facebook.cache.disk.DynamicDefaultDiskStorage: java.lang.String mBaseDirectoryName
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: androidx.appcompat.app.ToolbarActionBar this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
androidx.appcompat.R$drawable: int abc_text_cursor_material
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction
androidx.appcompat.R$color: int abc_tint_btn_checkable
com.google.android.material.appbar.HeaderBehavior: android.widget.OverScroller scroller
com.facebook.react.views.view.ReactViewManager$1: com.facebook.react.views.view.ReactViewGroup val$view
androidx.appcompat.view.menu.ActionMenuItem: android.content.Context mContext
com.google.android.material.R$styleable: int ChipGroup_chipSpacing
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.bridge.Callback mCallback
androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_BREAK_STRATEGY
com.google.android.material.R$attr: int checkboxStyle
com.google.android.material.R$styleable: int MaterialTextView_android_lineHeight
androidx.appcompat.R$styleable: int SwitchCompat_track
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
com.google.android.material.datepicker.DaysOfWeekAdapter: java.util.Calendar calendar
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.react.views.image.ReactImageView this$0
androidx.appcompat.view.menu.MenuItemImpl: int mOrdering
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
com.google.android.material.R$styleable: int[] Spinner
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.graphics.Insets[] mInsetsTypeMask
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.common.time.Clock mClock
bolts.Task$14: bolts.TaskCompletionSource val$tcs
com.google.android.material.R$styleable: int MaterialButton_strokeColor
com.zoontek.rnbootsplash.RNBootSplashModule$3: com.zoontek.rnbootsplash.RNBootSplashTask val$task
com.horcrux.svg.VirtualView: com.facebook.react.bridge.ReactContext mContext
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen
com.facebook.cache.disk.DiskCacheConfig: long mLowDiskSpaceSizeLimit
com.google.android.material.R$styleable: int[] RecyclerView
okhttp3.internal.connection.Exchange$RequestBodySink: okhttp3.internal.connection.Exchange this$0
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.graphics.RectF TEMP_RECTF
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: int targetState
okhttp3.internal.http2.Header: okio.ByteString value
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset
com.facebook.cache.disk.DiskStorageCache: long FILECACHE_SIZE_UPDATE_PERIOD_MS
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingMoves
androidx.fragment.app.ListFragment: android.widget.AdapterView$OnItemClickListener mOnClickListener
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation MODAL
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
com.horcrux.svg.GlyphContext: java.util.ArrayList mXIndices
androidx.transition.Fade$1: android.view.View val$view
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType SPRING
okhttp3.internal.cache.DiskLruCache$Snapshot: java.util.List sources
androidx.core.provider.FontRequest: java.lang.String mIdentifier
androidx.recyclerview.widget.FastScroller: int[] EMPTY_STATE_SET
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager
androidx.coordinatorlayout.widget.ViewGroupUtils: java.lang.ThreadLocal sMatrix
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalUnconsumed
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
androidx.coordinatorlayout.R$styleable: int[] GradientColorItem
com.horcrux.svg.TSpanView: android.content.res.AssetManager assets
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA AARCH64
androidx.fragment.app.BackStackState: int mTransition
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mAllowDelay
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
androidx.core.widget.NestedScrollView: int mMaximumVelocity
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.swmansion.rnscreens.Screen: java.lang.Boolean mStatusBarHidden
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbHeight
com.facebook.react.views.drawer.ReactDrawerLayout: int mDrawerWidth
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver mBitmapMemoryCacheEntryStateObserver
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.horcrux.svg.ImageView: java.util.concurrent.atomic.AtomicBoolean mLoading
okhttp3.internal.ws.WebSocketReader: boolean isClient
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
androidx.coordinatorlayout.R$style: int Widget_Support_CoordinatorLayout
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.google.android.material.internal.CollapsingTextHelper: float textureAscent
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth
com.horcrux.svg.SVGLength: com.horcrux.svg.SVGLength$UnitType unit
com.google.android.material.R$attr: int theme
com.facebook.soloader.UnpackingSoSource$DsoManifest: com.facebook.soloader.UnpackingSoSource$Dso[] dsos
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w900
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mCurrentTextXPx
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.collection.ArraySet: java.lang.Object[] OBJECT
androidx.appcompat.widget.SuggestionsAdapter: boolean mClosed
com.google.android.material.bottomsheet.BottomSheetBehavior$1: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.facebook.common.logging.FLog: com.facebook.common.logging.LoggingDelegate sHandler
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean forceStaticImage
com.google.android.material.shape.ShapePath$ArcShadowOperation: com.google.android.material.shape.ShapePath$PathArcOperation operation
androidx.appcompat.view.menu.ListMenuItemView: android.widget.LinearLayout mContent
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mX
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String mAppName
com.horcrux.svg.MarkerView: float mVbHeight
com.facebook.datasource.AbstractDataSource: boolean mIsClosed
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] $VALUES
androidx.appcompat.R$styleable: int[] View
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.animation.Animator animator
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.StagingArea mStagingArea
com.google.android.material.snackbar.SnackbarContentLayout: int maxWidth
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mParentTag
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] $VALUES
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mRetryImage
androidx.core.text.ICUCompat: java.lang.reflect.Method sAddLikelySubtagsMethod
com.google.android.material.R$styleable: int[] AnimatedStateListDrawableTransition
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mGapDir
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: boolean mUseDownSamplingRatio
okhttp3.MultipartBody: long contentLength
androidx.fragment.app.FragmentTransition$6: boolean val$inIsPop
com.facebook.react.animated.ValueAnimatedNode: double mValue
com.facebook.react.views.text.TextAttributeProps: float mHeightOfTallestInlineImage
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mHasPresetAutoSizeValues
androidx.transition.Transition: int[] mMatchOrder
okhttp3.internal.connection.RealCall: okhttp3.Request originalRequest
androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair
androidx.transition.Transition: android.animation.TimeInterpolator mInterpolator
okhttp3.CacheControl$Builder: boolean noCache
com.facebook.react.uimanager.UIManagerModule$2: int val$tag
com.swmansion.rnscreens.R$anim: int rns_slide_in_from_right
okhttp3.Response$Builder: okhttp3.Response cacheResponse
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean mIsDirty
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollTouch
com.facebook.react.uimanager.UIViewOperationQueue$2: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.appcompat.R$styleable: int[] MenuGroup
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation TOP_START
androidx.appcompat.widget.Toolbar$3: androidx.appcompat.widget.Toolbar this$0
com.horcrux.svg.PathElement: com.horcrux.svg.ElementType type
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection COLUMN_REVERSE
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker mCloseableReferenceLeakTracker
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mLastStateUpdateScrollX
com.facebook.imagepipeline.producers.PostprocessorProducer: java.util.concurrent.Executor mExecutor
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform LOWERCASE
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge HORIZONTAL
com.facebook.drawee.components.DeferredReleaserConcurrentImpl$1: com.facebook.drawee.components.DeferredReleaserConcurrentImpl this$0
com.facebook.react.modules.storage.AsyncStorageModule$1: com.facebook.react.modules.storage.AsyncStorageModule this$0
com.google.android.material.R$styleable: int TextAppearance_android_textStyle
com.google.android.material.R$styleable: int[] ThemeEnforcement
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets
androidx.core.content.res.ResourcesCompat$FontCallback$2: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] $VALUES
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean completed
com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean mClosed
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String mKey
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
androidx.appcompat.view.menu.ListMenuPresenter: android.content.Context mContext
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$LongRef $delta$inlined
androidx.recyclerview.widget.SnapHelper$1: androidx.recyclerview.widget.SnapHelper this$0
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
com.google.android.material.floatingactionbutton.FloatingActionButton: int imagePadding
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: int position
com.facebook.react.common.MapBuilder$Builder: boolean mUnderConstruction
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper mHorizontalHelper
com.facebook.react.R$string: int link_description
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod align
com.facebook.drawee.drawable.AutoRotateDrawable: float mRotationAngle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem$OnMenuItemClickListener mClickListener
com.horcrux.svg.LineView: com.horcrux.svg.SVGLength mY2
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] translation
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor
com.swmansion.rnscreens.R$attr: int colorPrimary
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams mSmallByteArrayPoolParams
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long bytesRemaining
okhttp3.Address: okhttp3.HttpUrl url
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: com.facebook.imagepipeline.producers.ProducerListener2 val$listener
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
com.google.android.material.R$styleable: int[] FontFamilyFont
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.RoundingParams mRoundingParams
com.google.android.material.chip.ChipGroup: boolean singleSelection
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer mTrackColorForFalse
com.facebook.imagepipeline.producers.BaseProducerContext: boolean mIsPrefetch
androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.Object payload
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.google.android.material.R$attr: int colorPrimary
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
androidx.cardview.widget.RoundRectDrawableWithShadow: android.content.res.ColorStateList mBackground
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.google.android.material.transformation.FabTransformationBehavior: int[] tmpArray
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.fragment.app.FragmentTransaction: int mEnterAnim
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
com.facebook.react.LazyReactPackage$2: java.util.List val$nativeModules
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.horcrux.svg.ForeignObjectView: com.horcrux.svg.SVGLength mX
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp
com.horcrux.svg.PathParser: java.util.ArrayList elements
com.google.android.material.R$styleable: int MaterialButton_iconTint
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method doBeforeTextChanged
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.components.RetryManager mRetryManager
okhttp3.CacheControl: boolean onlyIfCached
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
okhttp3.CertificatePinner: java.util.Set pins
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable foreground
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid
com.facebook.yoga.YogaValue: com.facebook.yoga.YogaValue ZERO
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource mCachedImageSource
androidx.collection.LruCache: int maxSize
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate delegate
androidx.fragment.app.FragmentActivity: boolean mCreated
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope PROCESS
androidx.appcompat.R$id: int textSpacerNoTitle
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean mHasReversibleFlag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.request.ImageRequest mLowResImageRequest
androidx.transition.FragmentTransitionSupport$3: java.util.ArrayList val$exitingViews
com.facebook.react.animated.StyleAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: okhttp3.CacheControl mCacheControl
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor
androidx.appcompat.view.menu.MenuItemImpl: int mFlags
com.facebook.react.views.modal.ReactModalHostManager$2: com.facebook.react.uimanager.events.EventDispatcher val$dispatcher
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
androidx.appcompat.widget.Toolbar: int mTitleTextAppearance
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule$1: com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule this$0
com.facebook.imagepipeline.producers.JobScheduler: int mMinimumJobIntervalMs
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: com.facebook.imagepipeline.drawable.DrawableFactory mAnimatedDrawableFactory
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace
okio.OutputStreamSink: okio.Timeout timeout
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: com.facebook.drawee.controller.AbstractDraweeControllerBuilder this$0
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation replaceAnimation
com.facebook.react.animated.StyleAnimatedNode: java.util.Map mPropMapping
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition
com.facebook.react.animated.NativeAnimatedNodesManager: java.util.Map mEventDrivers
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener
androidx.transition.ChangeBounds$ViewBounds: int mTop
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.views.text.ReactTextView: boolean mContainsImages
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform$Companion Companion
com.horcrux.svg.RenderableView: float strokeOpacity
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions
com.google.android.material.datepicker.MaterialTextInputPicker$1: com.google.android.material.datepicker.MaterialTextInputPicker this$0
com.facebook.react.views.imagehelper.ImageSource: boolean isResource
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
okhttp3.internal.cache.DiskLruCache: boolean closed
com.swmansion.rnscreens.Screen: android.view.View$OnAttachStateChangeListener sShowSoftKeyboardOnAttach
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathSpacing mSpacing
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int[] mSpanReferenceLines
androidx.appcompat.widget.SwitchCompat: int mSwitchLeft
androidx.core.view.ActionProvider: android.content.Context mContext
com.facebook.react.views.textinput.ReactEditText: boolean mIsSettingTextFromCacheUpdate
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.facebook.imagepipeline.memory.LruBitmapPool: int mCurrentSize
androidx.appcompat.widget.LinearLayoutCompat: boolean mUseLargestChild
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.view.menu.MenuPopupHelper$1: androidx.appcompat.view.menu.MenuPopupHelper this$0
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.android.material.R$styleable: int Chip_ensureMinTouchTargetSize
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
androidx.transition.ChangeBounds: java.lang.String[] sTransitionProperties
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: byte[] EMPTY_JPEG_PREFIX
com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.horcrux.svg.PatternView: com.horcrux.svg.SVGLength mX
com.facebook.react.modules.network.ForwardingCookieHandler: com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver mCookieSaver
com.facebook.react.views.scroll.ScrollEvent: double mXVelocity
okhttp3.internal.concurrent.TaskRunner$RealBackend: java.util.concurrent.ThreadPoolExecutor executor
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom
com.horcrux.svg.ImageView: java.lang.String uriString
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF mInnerClipTempRectForBorderRadius
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
androidx.recyclerview.widget.GapWorker: java.util.Comparator sTaskComparator
androidx.appcompat.widget.ActionMenuPresenter: boolean mWidthLimitSet
com.facebook.imagepipeline.producers.DecodeProducer: java.lang.Runnable mReclaimMemoryRunnable
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: boolean closed
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
com.facebook.imagepipeline.producers.BitmapPrepareProducer: boolean mPreparePrefetch
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean mResizeAndRotateEnabledForNetwork
androidx.appcompat.R$attr: int colorControlNormal
com.google.android.material.R$attr: int elevationOverlayColor
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point MAX_POINT
com.facebook.react.views.scroll.ScrollEventType$1: int[] $SwitchMap$com$facebook$react$views$scroll$ScrollEventType
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
com.facebook.react.views.textinput.ReactTextInputLocalData: java.lang.CharSequence mPlaceholder
com.facebook.react.uimanager.ReactClippingViewGroupHelper: android.graphics.Rect sHelperRect
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: com.facebook.imagepipeline.image.EncodedImage val$encodedImageCopy
com.google.android.material.R$styleable: int Chip_chipMinHeight
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object mResult
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation
com.facebook.common.internal.Objects$ToStringHelper: java.lang.String className
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] $VALUES
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: com.facebook.imagepipeline.producers.Consumer val$consumer
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET
androidx.cardview.widget.RoundRectDrawableWithShadow: double COS_45
com.facebook.imagepipeline.memory.PoolParams: int minBucketSize
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge VERTICAL
com.google.android.material.R$dimen: int mtrl_textinput_box_label_cutout_padding
androidx.collection.LruCache: int hitCount
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.Consumer mConsumer
androidx.appcompat.widget.SearchView: android.widget.ImageView mGoButton
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.ForwardingDrawable mActualImageWrapper
com.google.android.material.behavior.SwipeDismissBehavior$1: int originalCapturedViewLeft
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
com.google.android.material.chip.ChipDrawable: android.graphics.PorterDuffColorFilter tintFilter
androidx.transition.ChangeBounds$ViewBounds: int mBottom
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
okhttp3.HttpUrl: java.lang.String host
com.facebook.react.animated.InterpolationAnimatedNode: double[] mOutputRange
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
com.facebook.react.modules.image.ImageLoaderModule$1: com.facebook.react.modules.image.ImageLoaderModule this$0
com.horcrux.svg.RenderableView$1: int[] $SwitchMap$com$horcrux$svg$RNSVGMarkerType
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
com.google.android.material.R$styleable: int[] Toolbar
com.google.android.material.internal.CollapsingTextHelper: android.animation.TimeInterpolator textSizeInterpolator
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentFactory mFragmentFactory
com.facebook.react.views.textinput.ReactTextInputLocalData: int mBreakStrategy
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: com.facebook.imagepipeline.memory.NoOpPoolStatsTracker sInstance
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.PickerFragment pickerFragment
kotlin.text.Charsets: java.nio.charset.Charset UTF_16
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
androidx.core.R$styleable: int FontFamily_fontProviderCerts
androidx.core.R$styleable: int GradientColor_android_gradientRadius
com.facebook.imagepipeline.memory.PoolConfig: java.lang.String mBitmapPoolType
com.facebook.react.views.image.ImageLoadEvent: int mHeight
androidx.appcompat.widget.FitWindowsLinearLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mBackground
com.facebook.common.statfs.StatFsHelper: java.io.File mExternalPath
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.drawee.components.DeferredReleaser mDeferredReleaser
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists
androidx.appcompat.R$id: int content
com.facebook.react.views.text.TextAttributeProps: float mLetterSpacingInput
com.facebook.imagepipeline.cache.StagingArea: java.lang.Class TAG
com.google.android.material.R$styleable: int Chip_android_text
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.swmansion.rnscreens.Screen$onLayout$1: com.swmansion.rnscreens.Screen this$0
androidx.core.text.BidiFormatter$DirectionalityEstimator: int length
com.google.android.material.chip.ChipDrawable: java.lang.CharSequence text
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing auto
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: androidx.appcompat.widget.ListPopupWindow this$0
com.facebook.react.TurboReactPackage$1: java.util.Iterator val$entrySetIterator
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
androidx.fragment.app.FragmentTransition$1: androidx.core.os.CancellationSignal val$signal
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.disk.DiskTrimmableRegistry mDiskTrimmableRegistry
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2: com.facebook.imagepipeline.producers.StatefulProducerRunnable val$statefulRunnable
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
androidx.appcompat.widget.ActionBarOverlayLayout$1: androidx.appcompat.widget.ActionBarOverlayLayout this$0
com.google.android.material.internal.CollapsingTextHelper: float currentDrawX
com.google.android.material.R$styleable: int Chip_closeIcon
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
okhttp3.CacheControl: boolean isPublic
com.google.android.material.R$styleable: int TextInputLayout_counterTextAppearance
com.th3rdwave.safeareacontext.SafeAreaProvider: com.th3rdwave.safeareacontext.SafeAreaProvider$OnInsetsChangeListener mInsetsChangeListener
com.facebook.react.ReactInstanceManager$5: com.facebook.react.ReactInstanceManager this$0
androidx.transition.ChangeBounds$8: int val$endBottom
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.facebook.drawee.drawable.FadeDrawable: int[] mAlphas
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mPressedStateOverlay
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
com.google.android.material.shadow.ShadowRenderer: float[] cornerPositions
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: android.util.Property HEIGHT
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
okio.Timeout: okio.Timeout NONE
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.producers.ProducerListener2 val$listener
okhttp3.internal.platform.OpenJSSEPlatform: okhttp3.internal.platform.OpenJSSEPlatform$Companion Companion
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: float[] mMargins
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.cache.common.CacheKey mPartialImageCacheKey
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultHideMotionSpec
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.horcrux.svg.VirtualView: android.graphics.Region mClipRegion
com.horcrux.svg.SvgView: boolean mResponsible
com.google.android.material.resources.TextAppearance: android.content.res.ColorStateList textColor
com.facebook.react.ReactRootView: boolean mIsAttachedToInstance
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener onAttachStateChangeListener
androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation
com.google.android.material.R$styleable: int[] TabLayout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.content.Context mContext
com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.google.android.material.elevation.ElevationOverlayProvider: boolean elevationOverlayEnabled
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_OUT
com.google.android.material.behavior.SwipeDismissBehavior: float sensitivity
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.google.android.material.resources.TextAppearanceConfig: boolean shouldLoadFontSynchronously
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDrawStatusBarBackground
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMinTextSizeInPx
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String mId
com.facebook.imagepipeline.producers.BitmapPrepareProducer: int mMaxBitmapSizeBytes
com.facebook.react.views.scroll.ReactHorizontalScrollView$3: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
androidx.appcompat.view.menu.CascadingMenuPopup: int mMenuMaxWidth
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType $contentType
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
androidx.transition.ViewGroupUtilsApi14: java.lang.reflect.Method sCancelMethod
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitX: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: int mStyle
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.google.android.material.button.MaterialButtonHelper: int insetTop
com.facebook.react.ReactPackageHelper$1$1: com.facebook.react.ReactPackageHelper$1 this$0
androidx.recyclerview.widget.DefaultItemAnimator$4: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int mCommand
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
androidx.transition.Transition: androidx.transition.PathMotion STRAIGHT_PATH_MOTION
androidx.appcompat.view.menu.MenuBuilder: boolean mStructureChangedWhileDispatchPrevented
com.facebook.systrace.SystraceMessage: com.facebook.systrace.SystraceMessage$Builder NOOP_BUILDER
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.views.textinput.ReactEditText mEditText
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbWidth
com.google.android.material.R$attr: int editTextStyle
androidx.appcompat.R$id: int search_src_text
androidx.appcompat.text.AllCapsTransformationMethod: java.util.Locale mLocale
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.HttpUrl $url
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: android.view.View view
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxDescent
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] $VALUES
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1
com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean mDecodePrefetches
okhttp3.internal.ws.WebSocketReader: long frameLength
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: long timestamp
com.facebook.react.jstasks.HeadlessJsTaskContext$3: int val$taskId
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
com.facebook.imagepipeline.cache.BufferedDiskCache$4: com.facebook.cache.common.CacheKey val$key
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
com.horcrux.svg.RNSVGMarkerPosition$1: int[] $SwitchMap$com$horcrux$svg$ElementType
androidx.appcompat.widget.ActionMenuPresenter: int mActionItemWidthLimit
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
androidx.appcompat.widget.ActionMenuView: int mPopupTheme
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
com.google.android.material.R$attr: int colorSurface
com.horcrux.svg.FontData: com.horcrux.svg.TextProperties$TextDecoration textDecoration
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
com.facebook.react.animated.SpringAnimation: double mTimeAccumulator
com.facebook.imagepipeline.producers.JobScheduler: java.util.concurrent.Executor mExecutor
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
okhttp3.internal.platform.android.CloseGuard: okhttp3.internal.platform.android.CloseGuard$Companion Companion
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
com.facebook.drawee.components.DraweeEventTracker: boolean sEnabled
com.google.android.material.chip.ChipDrawable: android.graphics.Path shapePath
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.JSTouchDispatcher mJSTouchDispatcher
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
com.google.android.material.internal.VisibilityAwareImageButton: int userSetVisibility
com.google.android.material.radiobutton.MaterialRadioButton: int[][] ENABLED_CHECKED_STATES
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mTurboModuleCleanupStarted
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
com.facebook.react.views.picker.events.PickerItemSelectEvent: int mPosition
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig mMainDiskCacheConfig
androidx.core.R$id: int accessibility_custom_action_26
com.facebook.soloader.SoLoader$1: java.lang.reflect.Method val$nativeLoadRuntimeMethod
com.facebook.react.R$string: int state_collapsed_description
com.facebook.react.ReactRootView: int mHeightMeasureSpec
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.DateSelector dateSelector
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock INSTANCE
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvStart
androidx.appcompat.R$styleable: int[] Toolbar
com.google.android.material.resources.TextAppearance: android.content.res.ColorStateList textColorLink
androidx.appcompat.widget.ListPopupWindow: android.widget.ListAdapter mAdapter
androidx.appcompat.R$styleable: int ActionBar_background
androidx.appcompat.app.TwilightCalculator: long sunrise
com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList errorViewTextColor
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsShadowHidden
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildEnd
com.facebook.react.uimanager.ReactShadowNodeImpl: int mRootTag
androidx.collection.SparseArrayCompat: int mSize
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.Postprocessor mPostprocessor
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit PERCENT
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.RectF mPrevRootBounds
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.appcompat.R$styleable: int SwitchCompat_android_textOff
com.facebook.react.R$string: int rn_tab_description
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.Fragment val$outFragment
com.swmansion.rnscreens.ScreenWindowTraits: boolean mDidSetStatusBarAppearance
com.google.android.material.bottomappbar.BottomAppBar$5: int val$targetMode
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGClipPath
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
androidx.appcompat.widget.Toolbar: int mButtonGravity
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.StateListDrawable mVerticalThumbDrawable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.google.android.material.R$styleable: int TextAppearance_android_shadowDx
okio.ForwardingSink: okio.Sink delegate
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.ReactInstanceManagerBuilder: android.app.Activity mCurrentActivity
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$AlertParams this$0
com.google.android.material.R$styleable: int MaterialCheckBox_useMaterialThemeColors
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTint
androidx.core.provider.FontRequestWorker$4: java.lang.String val$id
com.facebook.react.views.modal.ReactModalHostManager$1: com.facebook.react.views.modal.ReactModalHostManager this$0
com.facebook.datasource.AbstractDataSource$2: com.facebook.datasource.AbstractDataSource this$0
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.widget.ListAdapter mListAdapter
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSpanCount
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EMS
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.image.ImageLoadEvent: int mTotal
androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
com.google.android.material.behavior.SwipeDismissBehavior: float alphaEndSwipeDistance
com.google.android.material.datepicker.CalendarItemStyle: android.content.res.ColorStateList backgroundColor
com.facebook.react.R$string: int state_mixed_description
com.google.android.material.R$styleable: int TextInputLayout_boxStrokeWidthFocused
com.swmansion.rnscreens.ScreenFragment: java.util.List mChildScreenContainers
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: long PARAMS_CHECK_INTERVAL_MS
com.google.android.material.internal.StateListAnimator: java.util.ArrayList tuples
com.facebook.react.animated.NativeAnimatedModule$14: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.modules.core.ReactChoreographer$CallbackType: int mOrder
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearanceFontCallback fontCallback
com.horcrux.svg.RadialGradientView: com.horcrux.svg.Brush$BrushUnits mGradientUnits
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
com.facebook.react.modules.permissions.PermissionsModule$2: com.facebook.react.bridge.WritableMap val$grantedPermissions
com.google.android.material.stateful.ExtendableSavedState: androidx.collection.SimpleArrayMap extendableStates
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mCxxModuleProvider
androidx.appcompat.widget.SearchView: android.text.TextWatcher mTextWatcher
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: android.util.Property CIRCULAR_REVEAL_SCRIM_COLOR
androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET
com.facebook.imagepipeline.cache.LruCountingMemoryCache$2: com.facebook.imagepipeline.cache.LruCountingMemoryCache this$0
com.horcrux.svg.CircleView: com.horcrux.svg.SVGLength mCx
com.google.android.material.internal.StateListAnimator$1: com.google.android.material.internal.StateListAnimator this$0
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren
androidx.transition.TransitionManager$MultiListener: android.view.ViewGroup mSceneRoot
androidx.transition.Visibility$VisibilityInfo: int mStartVisibility
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mWidth
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.listener.RequestListener mRequestListener
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
bolts.Task: bolts.Task TASK_FALSE
com.swmansion.rnscreens.R$anim: int rns_slide_out_to_left
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRtl
com.facebook.imagepipeline.producers.JobScheduler: java.lang.Runnable mDoJobRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
androidx.appcompat.R$styleable: int MenuItem_android_icon
com.facebook.drawee.backends.pipeline.info.ImagePerfState: boolean mIsPrefetch
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon
com.google.android.material.animation.Positioning: int gravity
androidx.appcompat.R$attr: int dialogTheme
com.facebook.drawee.components.RetryManager: boolean mTapToRetryEnabled
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: int mHeight
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR
com.facebook.react.views.view.ReactViewBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderWidth
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: androidx.appcompat.graphics.drawable.DrawableContainer mOwner
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.view.View mCustomView
com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mDispatchUIRunnables
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.google.android.material.datepicker.YearGridAdapter: com.google.android.material.datepicker.MaterialCalendar materialCalendar
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: long mRequestSubmitTimeMs
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.Request $request
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.core.R$styleable: int[] FontFamily
androidx.appcompat.widget.Toolbar: boolean mCollapsible
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Paint clearPaint
com.th3rdwave.safeareacontext.SafeAreaView$1: java.util.concurrent.atomic.AtomicBoolean val$done
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF mTempRectForBorderRadiusOutline
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mRemoveAnimations
com.google.android.material.bottomappbar.BottomAppBar$7: com.google.android.material.bottomappbar.BottomAppBar this$0
androidx.fragment.app.FragmentActivity: boolean mStopped
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference$LeakHandler DEFAULT_LEAK_HANDLER
com.facebook.imagepipeline.core.ImagePipelineConfig: java.util.Set mRequestListener2s
com.horcrux.svg.PatternView: float mMinY
com.horcrux.svg.GlyphContext: int mYIndex
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_JUSTIFICATION_MODE
androidx.lifecycle.SavedStateHandleController$1: androidx.savedstate.SavedStateRegistry val$registry
androidx.transition.ChangeBounds: android.util.Property TOP_LEFT_ONLY_PROPERTY
com.facebook.react.ReactRootView: int mUIManagerType
com.swmansion.rnscreens.ScreenFragment: boolean shouldUpdateOnResume
com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode endIconTintMode
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
com.facebook.react.R$string: int tablist_description
okhttp3.CacheControl: boolean isPrivate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.ReactInstanceManager$3: com.facebook.react.modules.debug.interfaces.DeveloperSettings val$devSettings
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.graphics.Rect mVisibleRect
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
okio.GzipSource: java.util.zip.CRC32 crc
androidx.appcompat.widget.ActionMenuPresenter: int mMinCellSize
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: java.util.zip.ZipFile mZipFile
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_HOLDER_DETACH
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
com.google.android.material.R$styleable: int TextInputLayout_hintAnimationEnabled
com.zoontek.rnbootsplash.RNBootSplashModule: boolean mIsAppInBackground
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.ReactStylesDiffMap mProps
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
com.google.android.material.textfield.IndicatorViewController: int helperTextTextAppearance
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring
com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusBottomStart
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteStreams mPooledByteStreams
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutNumericChar
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: android.content.Context mContext
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog mDialog
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCategoryOrder
com.facebook.imagepipeline.common.ResizeOptions: float maxBitmapSize
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav
androidx.appcompat.R$id: int customPanel
com.facebook.react.R$string: int summary_description
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver$Companion Companion
com.google.android.material.R$attr: int colorControlHighlight
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeStart
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$Companion Companion
okio.Segment: boolean shared
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool mNativeMemoryChunkPool
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: java.lang.String $name
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
androidx.appcompat.widget.AppCompatProgressBarHelper: int[] TINT_ATTRS
androidx.appcompat.view.menu.MenuAdapter: int mExpandedIndex
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
androidx.recyclerview.widget.GapWorker$Task: int position
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes
com.facebook.react.animated.InterpolationAnimatedNode: java.util.regex.Matcher mSOutputMatcher
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: com.facebook.imagepipeline.instrumentation.FrescoInstrumenter$Instrumenter sInstance
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int DEF_STYLE_RES
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize
androidx.appcompat.R$string: int abc_prepend_shortcut_label
okhttp3.internal.http2.Http2Stream: int id
com.facebook.react.modules.network.NetworkingModule$2: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter val$eventEmitter
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.Animator$AnimatorListener mAnimatorListener
androidx.appcompat.view.menu.ActionMenuItem: int mOrdering
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w400
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitStartTime
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.facebook.imagepipeline.cache.BufferedDiskCache$3: com.facebook.cache.common.CacheKey val$key
com.facebook.react.views.image.ImageLoadEvent: int mEventType
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation SLIDE_FROM_BOTTOM
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: android.view.MenuItem val$item
com.facebook.react.views.view.ReactViewBackgroundDrawable: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle mBorderStyle
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText
okio.Buffer: okio.Segment head
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
com.facebook.react.uimanager.NativeViewHierarchyManager$1: int val$tag
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel BITMAP_MEMORY_CACHE
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: boolean $cancelable
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaConfig sYogaConfig
com.facebook.react.views.scroll.OnScrollDispatchHelper: float mYFlingVelocity
com.facebook.react.modules.network.ProgressRequestBody: okhttp3.RequestBody mRequestBody
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen
androidx.appcompat.R$styleable: int SwitchCompat_switchPadding
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher
com.google.android.material.R$string: int mtrl_picker_toggle_to_calendar_input_mode
androidx.transition.Visibility: int mMode
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize topLeftCornerSize
com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_STATE_SET
com.facebook.react.ReactInstanceManager: com.facebook.react.common.LifecycleState mLifecycleState
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.appcompat.widget.AppCompatImageHelper imageHelper
com.google.android.material.resources.TextAppearance: android.graphics.Typeface font
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float mDeltaOpacity
com.facebook.drawee.drawable.FadeDrawable: boolean[] mIsLayerOn
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint
okhttp3.internal.platform.android.AndroidLog: java.util.concurrent.CopyOnWriteArraySet configuredLoggers
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat WEBP_SIMPLE
androidx.appcompat.R$attr: int actionModePopupWindowStyle
com.google.android.material.R$string: int mtrl_picker_announce_current_selection
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState: long responseTime
androidx.lifecycle.SavedStateHandleController: boolean mIsAttached
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2: java.util.concurrent.atomic.AtomicBoolean val$isCancelled
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Method sGetViewRootImplMethod
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController$AlertParams this$0
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mTempRect
androidx.cardview.widget.RoundRectDrawable: android.content.res.ColorStateList mBackground
com.facebook.common.webp.WebpSupportStatus: boolean sWebpLibraryChecked
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength strokeWidth
com.facebook.react.views.text.CustomStyleSpan: int mWeight
com.facebook.react.animated.TransformAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_ONLY
androidx.appcompat.resources.R$styleable: int[] FontFamily
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mObjBufferLen
com.facebook.react.bridge.ModuleSpec: java.lang.Class mType
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mActivePointerId
androidx.appcompat.app.TwilightManager: android.content.Context mContext
com.facebook.react.animated.NativeAnimatedModule$12: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider mActionProvider
okhttp3.CacheControl: boolean noCache
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.horcrux.svg.VirtualView: java.lang.String mMarkerEnd
okhttp3.MediaType: java.lang.String subtype
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy mCacheTrimStrategy
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.fresco.ui.common.ControllerListener2$Extras mExtraData
com.facebook.imagepipeline.decoder.DecodeException: com.facebook.imagepipeline.image.EncodedImage mEncodedImage
com.google.android.material.appbar.AppBarLayout$2: com.google.android.material.shape.MaterialShapeDrawable val$background
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
okhttp3.internal.ws.WebSocketWriter: boolean noContextTakeover
androidx.core.R$id: int accessibility_custom_action_27
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
com.facebook.cache.disk.DiskCacheConfig$Builder: long mMaxCacheSize
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
com.google.android.material.R$style: int Widget_MaterialComponents_CardView
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.SelectionWatcher mSelectionWatcher
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.horcrux.svg.VirtualView: android.graphics.RectF mMarkerBounds
androidx.core.graphics.Insets: int top
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar
com.facebook.react.animated.SpringAnimation: double mStartValue
androidx.appcompat.R$styleable: int MenuItem_android_checked
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation BOTTOM_END
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.Path mBorderPath
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: com.facebook.imagepipeline.producers.PostprocessorProducer this$0
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory mBitmapMemoryCacheFactory
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.th3rdwave.safeareacontext.SafeAreaProviderManager$1: com.facebook.react.uimanager.events.EventDispatcher val$dispatcher
com.facebook.drawee.drawable.FadeDrawable: int mDefaultLayerAlpha
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.FileLocker val$lock
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
androidx.transition.TransitionUtils: boolean HAS_OVERLAY
okio.RealBufferedSource: boolean closed
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map VIEW_MANAGER_SETTER_MAP
com.facebook.react.ReactFragment: com.facebook.react.modules.core.PermissionListener mPermissionListener
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
com.horcrux.svg.VirtualView: android.graphics.Region mMarkerRegion
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w800
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleY
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.lang.String resourceId
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mWidth
androidx.appcompat.R$styleable: int Spinner_android_prompt
androidx.transition.Visibility$DisappearListener: android.view.ViewGroup mParent
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextTransform mTextTransform
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor end
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight Normal
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign AUTO
com.facebook.react.views.text.ReactTextView: boolean mNotifyOnInlineViewLayout
androidx.cardview.widget.RoundRectDrawable: float mPadding
com.google.android.material.textfield.TextInputLayout$3: com.google.android.material.textfield.TextInputLayout this$0
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIconRefine
com.facebook.react.views.text.ShadowStyleSpan: float mDx
com.facebook.cache.disk.DiskStorageCache: java.util.concurrent.CountDownLatch mCountDownLatch
com.google.android.material.bottomappbar.BottomAppBar: int DEF_STYLE_RES
com.horcrux.svg.MarkerView: java.lang.String mAlign
com.swmansion.rnscreens.ScreenStack$DrawingOp: long drawingTime
com.horcrux.svg.MarkerView: com.horcrux.svg.SVGLength mRefY
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean fitToContents
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set mActiveTasks
androidx.appcompat.R$styleable: int MenuGroup_android_id
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.util.Map mRequestHeaders
com.facebook.drawee.drawable.RoundedDrawable: float[] mInsideBorderRadii
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon1
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionViewConstructorArguments
com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean mResizingAllowedOverride
okhttp3.internal.http1.Http1ExchangeCodec: int state
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
com.facebook.react.animated.NativeAnimatedModule$4: com.facebook.react.bridge.ReadableMap val$config
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float roundedCornerRadius
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
androidx.appcompat.widget.SearchView: boolean mSubmitButtonEnabled
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3: androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
com.facebook.react.modules.network.OkHttpClientProvider: com.facebook.react.modules.network.OkHttpClientFactory sFactory
com.horcrux.svg.PatternView: float[] sRawMatrix
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
androidx.appcompat.R$layout: int abc_list_menu_item_icon
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.components.DraweeEventTracker mEventTracker
com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth
okhttp3.internal.ws.MessageInflater: okio.InflaterSource inflaterSource
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.TaskQueue taskQueue
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mDecodeCancellationEnabled
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds this$0
androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow HIDDEN
okhttp3.OkHttpClient: java.net.Proxy proxy
com.google.android.material.appbar.HeaderScrollingViewBehavior: android.graphics.Rect tempRect1
com.facebook.react.animated.NativeAnimatedModule$16: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mTabView
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.UseView: com.horcrux.svg.SVGLength mY
androidx.core.util.Pools$SimplePool: int mPoolSize
com.facebook.react.views.scroll.ReactScrollView: boolean mRemoveClippedSubviews
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType TIMERS_EVENTS
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: int mTouchSlop
com.facebook.soloader.UnpackingSoSource: java.lang.String[] mAbis
com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
okio.DeflaterSink: java.util.zip.Deflater deflater
com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.R$string: int alert_description
com.horcrux.svg.LinearGradientView: com.facebook.react.bridge.ReadableArray mGradient
okhttp3.Dns: okhttp3.Dns$Companion Companion
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
com.facebook.react.uimanager.UIManagerModule$2: java.lang.Object val$data
com.google.android.material.datepicker.MaterialCalendar: java.lang.Object NAVIGATION_NEXT_TAG
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity
com.facebook.datasource.AbstractDataSource: java.util.concurrent.ConcurrentLinkedQueue mSubscribers
okhttp3.internal.connection.RealConnectionPool: long keepAliveDurationNs
okhttp3.Dispatcher: int maxRequests
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.facebook.react.R$string: int timer_description
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence helperText
androidx.appcompat.R$styleable: int[] FontFamilyFont
com.swmansion.rnscreens.ScreenContainer: boolean mLayoutEnqueued
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: java.util.concurrent.Future val$future
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemAdded
okhttp3.MultipartBody: byte[] CRLF
androidx.appcompat.widget.SearchView: android.os.Bundle mAppSearchData
com.google.android.material.chip.ChipGroup: boolean protectFromCheckedChange
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: com.facebook.cache.common.CacheKey mPostprocessorCacheKey
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.facebook.react.views.drawer.events.DrawerSlideEvent: float mOffset
androidx.appcompat.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
okhttp3.internal.connection.RealConnection$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map EMPTY_PROPS_MAP
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mAdjustsFontSizeToFit
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String TAG
androidx.core.R$id: int accessibility_custom_action_21
com.facebook.react.R$id: int view_tag_native_id
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int fromX
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
okhttp3.HttpUrl: java.lang.String username
com.horcrux.svg.RNSVGMarkerPosition$1: int[] $SwitchMap$com$horcrux$svg$RNSVGMarkerType
androidx.transition.TransitionSet$1: androidx.transition.Transition val$nextTransition
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
com.facebook.react.views.textinput.ReactTextInputEvent: int mRangeEnd
com.facebook.drawee.backends.pipeline.Fresco: boolean sIsInitialized
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2$LogHandler: com.facebook.drawee.backends.pipeline.info.ImagePerfNotifier mNotifier
com.horcrux.svg.GlyphContext: java.util.ArrayList mYIndices
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxAscent
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.String mPostprocessorName
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
com.google.android.material.R$styleable: int SnackbarLayout_animationMode
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.google.android.material.resources.TextAppearance: android.content.res.ColorStateList textColorHint
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
androidx.appcompat.widget.AppCompatTextHelper: android.widget.TextView mView
com.facebook.imagepipeline.cache.LruCountingMemoryCache$1: com.facebook.imagepipeline.cache.LruCountingMemoryCache this$0
kotlin.SynchronizedLazyImpl: java.lang.Object _value
com.facebook.react.views.text.TextAttributeProps: int mLayoutDirection
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX
okhttp3.Response: okhttp3.internal.connection.Exchange exchange
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp
com.google.android.material.textfield.ClearTextEndIconDelegate$6: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.content.Context mResolvedContext
androidx.appcompat.view.StandaloneActionMode: java.lang.ref.WeakReference mCustomView
okhttp3.internal.cache.DiskLruCache: kotlin.text.Regex LEGAL_KEY_PATTERN
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
com.facebook.react.modules.storage.AsyncStorageModule$6: com.facebook.react.modules.storage.AsyncStorageModule this$0
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: int mWidth
okhttp3.OkHttpClient$Builder: int callTimeout
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: java.lang.String mClassName
androidx.recyclerview.widget.DefaultItemAnimator$8: androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo
com.facebook.imagepipeline.core.PriorityThreadFactory$1: com.facebook.imagepipeline.core.PriorityThreadFactory this$0
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float mProgressViewOffset
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager sReactFontManagerInstance
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: int mLastScheduledScanNumber
com.facebook.common.disk.NoOpDiskTrimmableRegistry: com.facebook.common.disk.NoOpDiskTrimmableRegistry sInstance
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int[] COLORS
androidx.fragment.app.ListFragment: android.view.View mProgressContainer
com.facebook.drawee.backends.pipeline.info.ImagePerfData: boolean mIsPrefetch
androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft
androidx.appcompat.widget.LinearLayoutCompat: boolean mBaselineAligned
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
com.google.android.material.datepicker.MaterialCalendar$10: int val$position
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchor
com.facebook.drawee.drawable.RoundedColorDrawable: android.graphics.Path mPath
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType mFailureImageScaleType
bolts.Task: bolts.Task$UnobservedExceptionHandler unobservedExceptionHandler
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int[] mFrameTimes
com.google.android.material.button.MaterialButton: int[] CHECKED_STATE_SET
androidx.transition.Transition: androidx.transition.TransitionPropagation mPropagation
androidx.collection.ArraySet: java.lang.Object[] mArray
androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR
com.facebook.yoga.YogaConfigJNIBase: long mNativePointer
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseBooleanArray mRootTags
androidx.cardview.widget.CardView: boolean mPreventCornerOverlap
com.horcrux.svg.VirtualView: float canvasHeight
androidx.recyclerview.widget.GapWorker$Task: androidx.recyclerview.widget.RecyclerView view
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TOOLBAR
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode
com.google.android.material.R$styleable: int MaterialRadioButton_useMaterialThemeColors
com.facebook.imagepipeline.producers.MultiplexProducer: java.lang.String mDedupedRequestsCountKey
com.facebook.react.bridge.Inspector$Page: int mId
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: com.google.android.material.snackbar.SnackbarManager$Callback managerCallback
androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: android.widget.TextView monthTitle
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.datasource.DataSource mCurrentDataSource
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mTransitionEnded
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean mEndMarkerRead
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$Companion Companion
com.google.android.material.R$attr: int elevationOverlayEnabled
com.facebook.react.modules.storage.AsyncStorageModule$4: com.facebook.react.bridge.Callback val$callback
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mIsLayoutOnly
com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.DateSelector dateSelector
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.PointF mTempPoint
androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupMaxWidth
com.horcrux.svg.LinearGradientView: com.horcrux.svg.Brush$BrushUnits mGradientUnits
androidx.lifecycle.LiveData: java.lang.Object mDataLock
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags
com.facebook.drawee.drawable.RoundedDrawable: com.facebook.drawee.drawable.TransformCallback mTransformCallback
androidx.appcompat.widget.LinearLayoutCompat: int mDividerHeight
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
androidx.appcompat.widget.ActionMenuPresenter: int mWidthLimit
androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener: com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor mImagePerfMonitor
com.facebook.imagepipeline.memory.PoolParams: int maxSizeHardCap
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment bottomLeftCorner
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList rippleColor
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
com.google.android.material.R$dimen: int design_snackbar_padding_vertical
androidx.appcompat.widget.LinearLayoutCompat: int mTotalLength
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mLastLayoutRTL
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
com.facebook.imagepipeline.common.ResizeOptions: int width
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mIndex
okhttp3.Cache: int networkCount
com.facebook.react.views.slider.ReactSlider: double mMinValue
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue mThreadHandoffProducerQueue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
androidx.core.graphics.drawable.IconCompat: int mInt2
okhttp3.internal.http2.Http2Stream: long readBytesTotal
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTint
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] skew
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.imagepipeline.request.ImageRequest: int mHashcode
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType kCGPathElementAddQuadCurveToPoint
com.google.android.material.chip.ChipDrawable: boolean checkedIconVisible
com.google.android.material.R$styleable: int Chip_hideMotionSpec
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.controller.ControllerListener mControllerListener
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
okhttp3.EventListener: okhttp3.EventListener$Companion Companion
com.google.android.material.R$attr: int state_collapsible
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.facebook.react.views.text.TextAttributeProps: int mTextAlign
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener
com.facebook.react.views.textinput.ReactEditText: boolean mDisableFullscreen
com.swmansion.rnscreens.ScreenWindowTraits: com.swmansion.rnscreens.ScreenWindowTraits INSTANCE
com.facebook.imageformat.DefaultImageFormatChecker: byte[] HEIF_HEADER_PREFIX
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0
androidx.appcompat.widget.ActionBarContainer: android.view.View mActionBarView
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.facebook.react.views.text.TextAttributes: float mLineHeight
com.google.android.material.snackbar.SnackbarManager: android.os.Handler handler
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
com.facebook.drawee.controller.AbstractDraweeController: boolean mIsAttached
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGEllipse
com.google.android.material.internal.CheckableImageButton: boolean pressable
okhttp3.internal.ws.WebSocketWriter: long minimumDeflateSize
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.google.android.material.R$styleable: int ShapeAppearance_cornerFamily
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: java.lang.Throwable mDelayedError
androidx.fragment.app.Fragment: boolean mInLayout
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: com.facebook.cache.common.CacheKey val$cacheKey
androidx.appcompat.R$attr: int textColorSearchUrl
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean mDoRefresh
com.google.android.material.chip.Chip: android.graphics.drawable.RippleDrawable ripple
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
androidx.core.content.res.ResourcesCompat$FontCallback$2: int val$reason
androidx.appcompat.widget.AppCompatSpinner: int mDropDownWidth
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean mResizeAndRotateEnabledForNetwork
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGDefs
com.facebook.react.views.textinput.ReactEditText: int mNativeEventCount
com.horcrux.svg.GlyphContext: float mScale
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
com.google.android.material.transformation.FabTransformationBehavior$3: com.google.android.material.circularreveal.CircularRevealWidget val$circularRevealChild
com.horcrux.svg.SVGLength$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.textinput.ReactTextInputLocalData: int mMinLines
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
androidx.fragment.R$styleable: int[] FontFamily
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
com.facebook.imagepipeline.memory.BitmapCounterProvider: int sMaxBitmapCount
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.request.ImageRequest mImageRequest
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: okhttp3.internal.cache.DiskLruCache$Editor this$0
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: int firstVisibleChildIndex
com.facebook.yoga.YogaOverflow: int mIntValue
com.horcrux.svg.SegmentData: com.horcrux.svg.Point start_tangent
com.google.android.material.bottomappbar.BottomAppBar: int fabAlignmentMode
androidx.recyclerview.widget.DefaultItemAnimator$7: android.view.View val$view
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: int mPriority
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] $VALUES
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: boolean firstVisibleChildAtMinimumHeight
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion Companion
com.facebook.react.uimanager.JSTouchDispatcher: com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper mTouchEventCoalescingKeyHelper
com.swmansion.rnscreens.ScreenStackHeaderConfig: androidx.appcompat.widget.Toolbar toolbar
com.facebook.react.modules.dialog.DialogModule$1: android.os.Bundle val$args
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
com.google.android.material.bottomappbar.BottomAppBar$SavedState: int fabAlignmentMode
okhttp3.Headers: java.lang.String[] namesAndValues
androidx.fragment.R$styleable: int[] FontFamilyFont
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageDownloadListener mDownloadListener
com.facebook.react.views.switchview.ReactSwitch: boolean mAllowChange
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
com.facebook.imagepipeline.core.ImagePipelineConfig$1: com.facebook.imagepipeline.core.ImagePipelineConfig this$0
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
androidx.appcompat.R$styleable: int SearchView_android_focusable
com.facebook.react.views.text.ReactTextUpdate: int mSelectionEnd
androidx.appcompat.R$styleable: int[] RecycleListView
com.horcrux.svg.RenderableView: float strokeMiterlimit
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Field sConsumedField
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean touchingScrollingChild
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: okhttp3.internal.http2.Http2Connection this$0
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mCustomView
okio.InputStreamSource: okio.Timeout timeout
com.facebook.react.animated.SpringAnimation: double mRestSpeedThreshold
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.th3rdwave.safeareacontext.SafeAreaView: com.th3rdwave.safeareacontext.SafeAreaViewMode mMode
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.horcrux.svg.SymbolView: float mMinX
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SPINBUTTON
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFeatureSettings
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign SPACE_BETWEEN
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel WARN
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
com.google.android.material.textfield.TextInputLayout: int disabledColor
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToNotify$inlined
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean mDecodePreviewFrame
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener val$listener
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
com.google.android.material.R$styleable: int Chip_textStartPadding
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl
com.facebook.react.R$string: int menuitem_description
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$producerContext
com.facebook.react.CoreModulesPackage: com.facebook.react.ReactInstanceManager mReactInstanceManager
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
androidx.appcompat.R$styleable: int SearchView_android_inputType
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController
com.facebook.imagepipeline.producers.DecodeProducer: java.util.concurrent.Executor mExecutor
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mControllerFailureTimeMs
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment bottomEdge
com.facebook.common.memory.PooledByteArrayBufferedInputStream: com.facebook.common.references.ResourceReleaser mResourceReleaser
androidx.core.provider.FontRequestWorker$3: java.lang.String val$id
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status TRANSITIONING_TO_HIDDEN
androidx.fragment.app.FragmentTransition$5: android.graphics.Rect val$epicenter
androidx.appcompat.widget.TooltipPopup: int[] mTmpAppPos
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: android.view.View$OnTouchListener consumeAllTouchListener
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.google.android.material.datepicker.MaterialCalendarGridView: java.util.Calendar dayCompute
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.google.android.material.textfield.IndicatorViewController$1: int val$captionToHide
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
androidx.appcompat.R$styleable: int SwitchCompat_trackTintMode
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
androidx.appcompat.R$id: int search_close_btn
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
androidx.appcompat.widget.SearchView$8: androidx.appcompat.widget.SearchView this$0
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mClearResponder
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.core.ImagePipelineConfigInterface mConfig
androidx.appcompat.widget.ScrollingTabContainerView: android.view.animation.Interpolator sAlphaInterpolator
com.facebook.react.views.progressbar.ProgressBarContainerView: double mProgress
com.facebook.react.views.scroll.ReactScrollView: boolean mScrollEnabled
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
com.google.android.material.button.MaterialButtonHelper: int insetBottom
com.facebook.common.executors.StatefulRunnable: java.util.concurrent.atomic.AtomicInteger mState
com.horcrux.svg.GlyphContext: int mYsIndex
androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz
com.facebook.common.webp.WebpSupportStatus: boolean sIsWebpSupportRequired
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTopTint
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
androidx.core.os.CancellationSignal: java.lang.Object mCancellationSignalObj
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDx
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList
com.th3rdwave.safeareacontext.SafeAreaView: android.view.View mProviderView
androidx.cardview.widget.CardView: int mUserSetMinWidth
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: java.lang.ref.WeakReference mParent
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule$2: com.facebook.react.modules.network.NetworkingModule this$0
com.facebook.react.TurboReactPackage$ModuleHolderProvider: java.lang.String mName
com.facebook.react.views.view.ReactViewBackgroundDrawable: int mLayoutDirection
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] $VALUES
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.ControllerListener mControllerForTesting
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: com.facebook.react.modules.datepicker.DatePickerDialogModule this$0
com.google.android.material.R$styleable: int ShapeAppearance_cornerSize
com.facebook.react.views.text.ReactTextView: android.view.ViewGroup$LayoutParams EMPTY_LAYOUT_PARAMS
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.facebook.datasource.IncreasingQualityDataSourceSupplier: boolean mDataSourceLazy
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: boolean inputExhausted
androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mScrollEnabled
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTextPath
androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mTappableElementInsets
com.facebook.imagepipeline.producers.JobScheduler$3: int[] $SwitchMap$com$facebook$imagepipeline$producers$JobScheduler$JobState
com.facebook.react.modules.storage.AsyncStorageModule$2: com.facebook.react.bridge.ReadableArray val$keyValueArray
com.facebook.react.shell.MainReactPackage$1: java.util.Map val$reactModuleInfoMap
bolts.Task: bolts.Task TASK_TRUE
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits OBJECT_BOUNDING_BOX
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mBoundFlags
androidx.appcompat.R$attr: int searchViewStyle
com.google.android.material.bottomappbar.BottomAppBar: java.util.ArrayList animationListeners
com.google.android.material.chip.Chip: int minTouchTargetSize
androidx.transition.Visibility$VisibilityInfo: android.view.ViewGroup mStartParent
com.google.android.material.R$color: int mtrl_filled_background_color
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mViewCommandOperations
com.facebook.react.uimanager.events.EventDispatcherImpl: android.util.LongSparseArray mEventCookieToLastEventIdx
com.facebook.react.views.text.TextLayoutManagerMapBuffer: java.lang.String TAG
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel FULL_FETCH
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] mPrefetchDistances
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.horcrux.svg.VirtualView: android.graphics.RectF mFillBounds
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge START
com.horcrux.svg.SvgViewModule$1$1$1: com.horcrux.svg.SvgViewModule$1$1 this$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX
com.google.android.material.resources.TextAppearance: int textStyle
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTint
okhttp3.internal.http.DatesKt: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.ResponseBody mResponseBody
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation
okio.AsyncTimeout$source$1: okio.AsyncTimeout this$0
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.view.WindowInsetsCompat CONSUMED
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: com.facebook.common.references.CloseableReference mBufRef
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mBestScanEndOffset
com.facebook.react.uimanager.ReactShadowNodeImpl: int mTotalNativeChildren
com.google.android.material.R$styleable: int[] MenuItem
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalFrames
com.facebook.react.modules.toast.ToastModule$2: java.lang.String val$message
com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener dropdownMenuOnEditTextAttachedListener
androidx.appcompat.widget.RtlSpacingHelper: int mLeft
androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName
com.google.android.material.chip.Chip: int lastLayoutDirection
kotlin.SynchronizedLazyImpl: java.lang.Object lock
androidx.fragment.app.ListFragment: boolean mListShown
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PX
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean mDefaultIsRtl
androidx.recyclerview.widget.SnapHelper$1: boolean mScrolled
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils: com.facebook.imagepipeline.producers.LocalExifThumbnailProducer this$0
com.google.android.material.datepicker.MaterialCalendar$4: java.util.Calendar startItem
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mUseCombinedNetworkAndCacheProducer
androidx.appcompat.widget.ListPopupWindow: android.database.DataSetObserver mObserver
com.facebook.react.uimanager.ReactShadowNodeImpl: int mReactTag
com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CANCEL_BUTTON_TAG
com.facebook.common.references.CloseableReference: com.facebook.common.references.SharedReference mSharedReference
okhttp3.internal.ws.MessageDeflater: java.util.zip.Deflater deflater
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] $VALUES
com.horcrux.svg.PathParser: float mPenDownY
com.facebook.react.views.modal.ReactModalHostView: boolean mTransparent
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToClose$inlined
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel FULL_FETCH
com.horcrux.svg.VirtualView: float mScale
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableLeftTint
com.zoontek.rnbootsplash.RNBootSplashTask: com.facebook.react.bridge.Promise mPromise
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mPrevBoundsTransform
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole CHECKBOX
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $writerToClose$inlined
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGText
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_XY
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket$Streams $streams$inlined
okhttp3.CacheControl$Builder: int minFreshSeconds
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: androidx.appcompat.app.ToolbarActionBar this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.facebook.imagepipeline.cache.BufferedDiskCache$3: com.facebook.imagepipeline.cache.BufferedDiskCache this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: java.lang.String $name
androidx.fragment.R$styleable: int[] Fragment
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager this$0
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor middle
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.view.ReactViewBackgroundManager mReactBackgroundManager
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Rect tmpRect
androidx.recyclerview.widget.LayoutState: int mCurrentPosition
okhttp3.Cache$Entry: long receivedResponseMillis
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: androidx.appcompat.widget.DropDownListView this$0
com.facebook.jni.CppSystemErrorException: int errorCode
com.facebook.react.R$id: int accessibility_label
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: com.facebook.imagepipeline.decoder.ProgressiveJpegParser mProgressiveJpegParser
com.facebook.imagepipeline.core.ImagePipelineExperiments: int mBitmapPrepareToDrawMaxSizeBytes
androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
com.google.android.material.behavior.SwipeDismissBehavior: boolean sensitivitySet
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
androidx.transition.FragmentTransitionSupport$1: android.graphics.Rect val$epicenter
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: com.facebook.imagepipeline.producers.PostprocessorProducer this$0
androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: boolean mIsResizingEnabled
androidx.recyclerview.widget.OpReorderer: androidx.recyclerview.widget.OpReorderer$Callback mCallback
com.google.android.material.bottomappbar.BottomAppBar$5: com.google.android.material.bottomappbar.BottomAppBar this$0
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2 mImagePerfControllerListener2
androidx.transition.ViewGroupUtilsApi14: android.animation.LayoutTransition sEmptyLayoutTransition
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable
com.horcrux.svg.FontData: com.horcrux.svg.TextProperties$FontVariantLigatures fontVariantLigatures
com.swmansion.rnscreens.R$anim: int rns_no_animation_350
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
com.facebook.react.animated.ModulusAnimatedNode: double mModulus
androidx.appcompat.R$id: int search_voice_btn
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: boolean $cancelable
com.horcrux.svg.VirtualView: java.lang.String mClipPath
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener: androidx.coordinatorlayout.widget.CoordinatorLayout this$0
androidx.appcompat.app.WindowDecorActionBar: android.app.Dialog mDialog
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] $VALUES
com.facebook.react.animated.NativeAnimatedNodesManager: java.util.List mRunUpdateNodeList
androidx.appcompat.widget.DropDownListView: int mSelectionBottomPadding
com.facebook.react.views.modal.ReactModalHostView: java.lang.String mAnimationType
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor start
com.facebook.react.views.text.ReactTextUpdate: int mSelectionStart
com.facebook.drawee.controller.AbstractDraweeController$2: java.lang.String val$id
com.horcrux.svg.ForeignObjectView: com.horcrux.svg.SVGLength mH
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType DISPATCH_UI
androidx.core.os.TraceCompat: java.lang.reflect.Method sIsTagEnabledMethod
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
androidx.transition.TransitionManager$MultiListener$1: androidx.transition.TransitionManager$MultiListener this$0
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: java.lang.Object mBehaviorTag
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.util.Set mMeasured
com.google.android.material.R$id: int mtrl_calendar_main_pane
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag PERFORMANCE
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealHelper helper
com.facebook.react.views.text.TextAttributeProps: int mFontWeight
androidx.savedstate.SavedStateRegistry: androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets
androidx.appcompat.view.menu.ListMenuItemView: boolean mPreserveIconSpacing
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: boolean mCallbackConsumed
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams mMemoryChunkPoolParams
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$CacheChoice mCacheChoice
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
androidx.appcompat.widget.ToolbarWidgetWrapper$2: int val$visibility
com.facebook.react.R$id: int accessibility_value
com.facebook.react.views.text.TextAttributes: boolean mAllowFontScaling
com.horcrux.svg.EllipseView: com.horcrux.svg.SVGLength mRy
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.FragmentTransition$Callback val$callback
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType kCGPathElementAddLineToPoint
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.lang.String mImageId
androidx.recyclerview.widget.LinearSmoothScroller: android.util.DisplayMetrics mDisplayMetrics
okhttp3.Handshake: kotlin.Lazy peerCertificates$delegate
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method getAlpnSelectedProtocol
com.facebook.react.modules.debug.FpsDebugFrameCallback: int mNumFrameCallbacks
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
okhttp3.internal.platform.Jdk9Platform: boolean isAvailable
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mTurboModuleHolders
com.facebook.react.touch.JSResponderHandler: int mCurrentJSResponder
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo
okio.AsyncTimeout: boolean inQueue
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map SHADOW_NODE_SETTER_MAP
com.facebook.imagepipeline.cache.BufferedDiskCache$7: com.facebook.imagepipeline.cache.BufferedDiskCache this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mContainsImages
androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler
androidx.collection.ArraySet: int[] INT
com.google.android.material.R$styleable: int Chip_chipStrokeColor
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.fresco.ui.common.ForwardingControllerListener2 mControllerListener2
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.MemoryCache mBitmapCache
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestX
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
androidx.transition.Transition: java.util.ArrayList mCurrentAnimators
com.google.android.material.R$styleable: int[] FontFamily
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams mBitmapPoolParams
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int mAlpha
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_ATTACH_CONTROLLER
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object mCallerContext
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener
com.facebook.cache.disk.SettableCacheEvent: java.lang.Object RECYCLER_LOCK
com.horcrux.svg.SvgView: java.util.Map mDefinedClipPaths
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitle
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed
androidx.appcompat.R$id: int spacer
com.google.android.material.R$id: int mtrl_calendar_year_selector_frame
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextAlign
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int toY
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: int mMaxBitmapSize
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: java.lang.Object mInfo
androidx.fragment.app.ListFragment$1: androidx.fragment.app.ListFragment this$0
com.google.android.material.chip.ChipDrawable: int currentChipSurfaceColor
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int mWidth
com.facebook.react.views.text.TextLayoutManagerMapBuffer: android.text.TextPaint sTextPaintInstance
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
androidx.core.util.LogWriter: java.lang.String mTag
com.facebook.yoga.YogaUnit: int mIntValue
okhttp3.internal.ws.RealWebSocket: long queueSize
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
androidx.appcompat.R$styleable: int MenuItem_android_enabled
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String mContentDescription
com.google.android.material.R$styleable: int[] MaterialTextView
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_BOTTOM_START
com.facebook.imagepipeline.request.ImageRequest: boolean mProgressiveRenderingEnabled
com.facebook.react.animated.NativeAnimatedModule$19: int val$animatedNodeTag
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String TAG
com.facebook.react.ReactAndroidHWInputDeviceHelper: int mLastFocusedViewId
com.facebook.drawee.view.DraweeView: float mAspectRatio
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor mDecodeExecutor
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache mMainBufferedDiskCache
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.ReactEventEmitter mReactEventEmitter
androidx.appcompat.R$styleable: int MenuItem_tooltipText
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback mFrameCallback
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
com.google.android.material.shape.ShapePath$1: android.graphics.Matrix val$transform
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mRy
com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor
androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle
com.facebook.drawee.backends.pipeline.info.ImagePerfData: int mOnScreenWidthPx
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean mNeedUpdatePathForBorderRadius
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeController mController
okhttp3.Response: okhttp3.Handshake handshake
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.google.android.material.R$styleable: int TextInputLayout_endIconMode
com.facebook.react.views.text.TextAttributeProps: int mBackgroundColor
com.google.android.material.R$styleable: int TextInputLayout_startIconTint
com.facebook.react.views.scroll.ScrollEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.google.android.material.datepicker.DaysOfWeekAdapter: int daysInWeek
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall call
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag UI_MANAGER
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.fragment.app.FragmentTransaction: int mExitAnim
com.google.android.material.R$layout: int mtrl_calendar_vertical
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
com.facebook.react.ReactDelegate: android.app.Activity mActivity
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.Toolbar mToolbar
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
com.google.android.material.R$styleable: int Chip_chipCornerRadius
com.facebook.react.jstasks.HeadlessJsTaskConfig: java.lang.String mTaskKey
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultHardwareBackBtnHandler
okhttp3.internal.http.RealInterceptorChain: int index
com.facebook.drawee.controller.AbstractDraweeController$2: boolean val$wasImmediate
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.imagepipeline.request.ImageRequest mControllerImageRequest
com.google.android.material.R$styleable: int[] MaterialCardView
com.swmansion.rnscreens.Screen: java.lang.String mStatusBarStyle
com.facebook.react.views.picker.ReactPicker: java.lang.Integer mStagedSelection
androidx.appcompat.widget.SearchView: boolean mVoiceButtonEnabled
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.soloader.ExtractFromZipSoSource: java.lang.String mZipSearchPattern
com.google.android.material.resources.TextAppearance$1: com.google.android.material.resources.TextAppearanceFontCallback val$callback
okio.OutputStreamSink: java.io.OutputStream out
androidx.appcompat.R$attr: int actionModeStyle
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinWidthField
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mRx
okhttp3.internal.connection.RealCall: java.lang.Object callStackTrace
com.google.android.material.R$attr: int bottomSheetDialogTheme
com.google.android.material.R$styleable: int SnackbarLayout_elevation
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mLayoutDirection
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mSmoothScrollbarEnabled
com.google.android.material.datepicker.YearGridAdapter$ViewHolder: android.widget.TextView textView
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.facebook.react.modules.image.ImageLoaderModule$2: com.facebook.react.modules.image.ImageLoaderModule this$0
com.facebook.react.views.text.ShadowStyleSpan: int mColor
com.facebook.react.uimanager.OnLayoutEvent: int mHeight
com.facebook.cache.disk.DiskStorageCache: long mCacheSizeLimit
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.drawee.backends.pipeline.info.ImagePerfNotifier mImagePerfNotifier
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$batchedOperations
com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintMode
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState IDLE
androidx.transition.TransitionSet$1: androidx.transition.TransitionSet this$0
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String mText
com.facebook.react.animated.DecayAnimation: double mLastValue
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable
bolts.Task: java.util.concurrent.Executor IMMEDIATE_EXECUTOR
com.facebook.soloader.ExoSoSource$FileDso: java.io.File backingFile
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mLineIncrementPx
com.facebook.react.animated.ValueAnimatedNode: double mOffset
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
androidx.appcompat.widget.SwitchCompat: float mTouchY
androidx.appcompat.widget.TooltipPopup: android.content.Context mContext
com.facebook.imagepipeline.producers.DecodeProducer: boolean mDownsampleEnabledForNetwork
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mPreviousContentWidth
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.animated.NativeAnimatedModule$12: int val$tag
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: java.lang.String name
androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
com.google.android.material.R$styleable: int Chip_closeIconStartPadding
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: androidx.appcompat.widget.ActionMenuPresenter this$0
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag FABRIC_UI_MANAGER
androidx.collection.MapCollections$ArrayIterator: int mIndex
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType SCROLL
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mActionItems
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] $VALUES
com.facebook.react.uimanager.UIManagerModule$1: com.facebook.react.uimanager.UIManagerModule this$0
com.th3rdwave.safeareacontext.EdgeInsets: float right
com.horcrux.svg.VirtualView: android.graphics.Path mFillPath
com.facebook.imagepipeline.common.BytesRange: int to
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: java.util.concurrent.Executor mExecutor
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int mModuleId
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
okhttp3.Response$Builder: long sentRequestAtMillis
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.BufferedDiskCache mMainBufferedDiskCache
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: android.app.ActivityManager mActivityManager
com.facebook.react.views.scroll.ReactHorizontalScrollView: float mDecelerationRate
com.swmansion.rnscreens.ScreenStack$DrawingOp: com.swmansion.rnscreens.ScreenStack this$0
com.google.android.material.resources.TextAppearance: float textSize
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.facebook.imagepipeline.image.EncodedImage: android.graphics.ColorSpace mColorSpace
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor mImagePerfMonitor
com.facebook.common.statfs.StatFsHelper: android.os.StatFs mExternalStatFs
com.facebook.soloader.SoLoader: com.facebook.soloader.SoSource[] sSoSources
com.google.android.material.shadow.ShadowRenderer: int[] cornerColors
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset
com.facebook.imageformat.DefaultImageFormatChecker: byte[] ICO_HEADER
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.Priority mRequestPriority
androidx.appcompat.app.TwilightCalculator: long sunset
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache
okio.ByteString: java.lang.String utf8
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
com.facebook.drawee.drawable.RoundedColorDrawable: boolean mScaleDownInsideBorders
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: android.animation.ObjectAnimator mAnim
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager x509TrustManagerOrNull
okhttp3.internal.connection.RealConnection: boolean noCoalescedConnections
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.FileCacheFactory mFileCacheFactory
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Class[] PARAM_TYPES
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNotify
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: com.facebook.imagepipeline.producers.DecodeProducer val$this$0
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat$Impl mImpl
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode mIconTintMode
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: com.facebook.cache.common.CacheKey mCacheKey
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: java.lang.String TAG
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits STYLE
com.facebook.soloader.FileLocker: java.nio.channels.FileLock mLock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.material.R$styleable: int ShapeAppearance_cornerFamilyTopLeft
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay NONE
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer mMemoryChunkType
com.facebook.debug.debugoverlay.model.DebugOverlayTag: java.lang.String description
com.facebook.react.views.text.CustomLetterSpacingSpan: float mLetterSpacing
bolts.BoltsExecutors: java.util.concurrent.ExecutorService background
com.facebook.react.animated.NativeAnimatedModule$18: int val$animatedNodeTag
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
androidx.appcompat.app.ResourcesFlusher: java.lang.Class sThemedResourceCacheClazz
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
androidx.appcompat.widget.SwitchCompat: int mSwitchBottom
com.facebook.react.views.text.ReactFontManager$FontFamily: android.util.SparseArray mTypefaceSparseArray
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: com.th3rdwave.safeareacontext.SafeAreaViewMode mMode
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean mDiskCacheEnabled
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean mTapToRetryEnabled
com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitRight
androidx.recyclerview.R$dimen: int fastscroll_default_thickness
androidx.fragment.app.FragmentTransaction: java.lang.ClassLoader mClassLoader
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
com.google.android.material.bottomappbar.BottomAppBar$7: boolean cancelled
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.customview.widget.ViewDragHelper$Callback dragCallback
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
com.google.android.material.internal.CheckableImageButton$1: com.google.android.material.internal.CheckableImageButton this$0
androidx.appcompat.R$styleable: int MenuGroup_android_visible
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect
okhttp3.internal.platform.BouncyCastlePlatform: java.security.Provider provider
com.facebook.soloader.ApplicationSoSource: com.facebook.soloader.DirectorySoSource soSource
com.facebook.react.views.scroll.VelocityHelper: android.view.VelocityTracker mVelocityTracker
androidx.fragment.app.DialogFragment: boolean mDismissed
com.facebook.react.animated.SpringAnimation: int mIterations
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsInIllegalUIState
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMinor
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener
com.facebook.react.jstasks.HeadlessJsTaskContext: android.os.Handler mHandler
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout
com.facebook.react.modules.network.ForwardingCookieHandler$2: java.lang.Runnable val$runnable
androidx.appcompat.view.ActionMode: java.lang.Object mTag
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
com.facebook.react.modules.statusbar.StatusBarModule$1: android.app.Activity val$activity
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mDownscaleFrameToDrawableDimensions
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: double mDefaultValue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetClipToWindowEnabledMethod
com.google.android.material.appbar.ViewOffsetHelper: boolean verticalOffsetEnabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver
androidx.appcompat.app.ToolbarActionBar$1: androidx.appcompat.app.ToolbarActionBar this$0
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mOverflowOnly
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved
okhttp3.OkHttpClient$Builder: java.util.List protocols
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1: com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer this$1
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
androidx.transition.ChangeBounds: androidx.transition.RectEvaluator sRectEvaluator
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: com.facebook.react.modules.core.ReactChoreographer this$0
androidx.core.view.WindowInsetsCompat$Impl20: boolean sVisibleRectReflectionFetched
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
kotlin.ranges.IntProgression: int step
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: android.util.SparseBooleanArray mTagsWithLayoutVisited
androidx.core.os.CancellationSignal: androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter
okhttp3.Response$Builder: okhttp3.Response priorResponse
com.facebook.react.views.textinput.ReactTextInputShadowNode: int mSelectionEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentScrollConsumed
androidx.recyclerview.widget.FastScroller: int mScrollbarMinimumRange
com.horcrux.svg.VirtualView: android.graphics.RectF mBox
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.Rect selfBounds
androidx.appcompat.widget.SearchView: boolean mIconified
com.facebook.imagepipeline.request.BasePostprocessor: android.graphics.Bitmap$Config FALLBACK_BITMAP_CONFIGURATION
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Path mPath
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment bottomLeftCorner
com.facebook.react.animated.FrameBasedAnimationDriver: int mIterations
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.DecodeProducer this$0
com.swmansion.rnscreens.ScreenStack$DrawingOp: android.graphics.Canvas canvas
com.facebook.react.devsupport.DisabledDevSupportManager: com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler mDefaultNativeModuleCallExceptionHandler
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer clientMaxWindowBits
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix
androidx.appcompat.widget.ForwardingListener: boolean mForwarding
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mPartialImageCachingEnabled
androidx.appcompat.widget.ButtonBarLayout: int mLastWidthSize
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.drawable.Drawable mDelegate
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnActionExpandListener mOnActionExpandListener
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: java.lang.String $name
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView mDropDownList
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: long PARAMS_CHECK_INTERVAL_MS
com.google.android.material.shape.MaterialShapeDrawable$2: float val$strokeInsetLength
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment topEdge
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming expandTiming
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray mWidth
com.facebook.hermes.reactexecutor.RuntimeConfig: long heapSizeMB
androidx.transition.ChangeBounds$10: android.view.View val$view
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name$inlined
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.Map mPackageModuleInfos
com.facebook.react.animated.NativeAnimatedModule$15: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory$1: com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory this$0
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner taskRunner
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean mTryCacheOnlyFirst
com.facebook.react.views.textinput.ReactEditText: int mFontWeight
androidx.core.R$id: int accessibility_custom_action_16
com.google.android.material.R$styleable: int AppBarLayout_Layout_layout_scrollFlags
com.facebook.react.modules.datepicker.DatePickerDialogFragment$1: int[] $SwitchMap$com$facebook$react$modules$datepicker$DatePickerMode
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: int mProxyEndCount
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap mHeaders
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http.RealInterceptorChain chain
androidx.appcompat.app.AlertController$2: android.view.View val$bottom
com.facebook.drawee.controller.ForwardingControllerListener: java.util.List mListeners
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
com.horcrux.svg.TextView: com.horcrux.svg.TextProperties$AlignmentBaseline mAlignmentBaseline
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
com.google.android.material.R$styleable: int[] ExtendedFloatingActionButton_Behavior_Layout
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mWebpSupportEnabled
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress
com.horcrux.svg.TextView: com.horcrux.svg.TextProperties$TextLengthAdjust mLengthAdjust
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: int mInitialTag
okhttp3.internal.connection.Exchange: boolean isDuplex
androidx.appcompat.view.menu.CascadingMenuPopup: int ITEM_LAYOUT
com.facebook.react.ReactInstanceManager$5$2: com.facebook.react.bridge.ReactApplicationContext val$reactApplicationContext
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: com.facebook.imagepipeline.producers.NetworkFetcher$Callback val$callback
com.horcrux.svg.TextProperties$AlignmentBaseline: java.util.Map alignmentToEnum
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: java.util.LinkedList value
androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations
com.google.android.material.datepicker.YearGridAdapter$1: int val$year
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $inFinished$inlined
com.google.android.material.appbar.ViewOffsetBehavior: com.google.android.material.appbar.ViewOffsetHelper viewOffsetHelper
okhttp3.internal.ws.WebSocketWriter: okio.Buffer messageBuffer
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext mThemedContext
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.PoolConfig mConfig
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineExperiments mImagePipelineExperiments
com.google.android.material.R$drawable: int mtrl_ic_arrow_drop_down
okhttp3.Request$Builder: okhttp3.RequestBody body
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int toX
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCustomSlingshotDistance
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewHeight
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.facebook.react.views.textinput.ReactTextInputEvent: java.lang.String mPreviousText
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.CollapsibleActionView mWrappedView
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.facebook.systrace.Systrace$EventScope: char mCode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModulesRAIICallbackManager
androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml
com.facebook.imagepipeline.memory.BasePool: boolean mIgnoreHardCap
com.facebook.imagepipeline.request.ImageRequestBuilder: android.net.Uri mSourceUri
com.google.android.material.shadow.ShadowRenderer: int[] edgeColors
androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit
com.facebook.imagepipeline.image.EncodedImage: com.facebook.common.internal.Supplier mInputStreamSupplier
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits ORIENTATION
com.facebook.react.views.text.ReactBaseTextShadowNode: java.util.Map mInlineViews
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMarker
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled
com.google.android.material.button.MaterialButtonHelper: int insetLeft
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
androidx.appcompat.R$id: int action_bar_title
com.facebook.react.ReactInstanceManager$2: com.facebook.react.ReactInstanceManager this$0
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel VERBOSE
androidx.recyclerview.widget.LinearSmoothScroller: boolean mHasCalculatedMillisPerPixel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
okhttp3.internal.platform.AndroidPlatform: boolean isSupported
okhttp3.internal.connection.ExchangeFinder: int connectionShutdownCount
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent Appear
com.facebook.drawee.backends.pipeline.info.ImagePerfData: int mImageOrigin
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier: java.util.concurrent.ScheduledExecutorService sJobStarterExecutor
androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.horcrux.svg.SegmentData: com.horcrux.svg.Point end_tangent
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.appcompat.app.WindowDecorActionBar$3: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
com.horcrux.svg.Brush: com.horcrux.svg.SVGLength[] mPoints
com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightMin
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemAlphabeticShortcut
com.google.android.material.internal.CollapsingTextHelper: com.google.android.material.resources.CancelableFontCallback collapsedFontCallback
com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.Executor mExecutor
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: long mFrameStartTime
androidx.appcompat.widget.SwitchCompat: float mThumbPosition
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState drawableState
okhttp3.internal.connection.RealConnectionPool: java.util.concurrent.ConcurrentLinkedQueue connections
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.google.android.material.bottomsheet.BottomSheetDialog$1: com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.google.android.material.R$styleable: int FlowLayout_lineSpacing
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemActionViewLayout
com.facebook.soloader.UnpackingSoSource$Dso: java.lang.String hash
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
bolts.AndroidExecutors: int CPU_COUNT
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator currentAnimator
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners
androidx.transition.Transition: boolean mCanRemoveViews
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.Fragment val$fragment
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole LINK
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline textBottom
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mTasks
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.platform.OpenJSSEPlatform: boolean isSupported
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.swmansion.rnscreens.ScreenContainer: androidx.fragment.app.FragmentTransaction mProcessingTransaction
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int mDurationMs
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1: com.facebook.imagepipeline.producers.ResizeAndRotateProducer val$this$0
com.google.android.material.R$dimen: int design_navigation_icon_size
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.facebook.drawee.drawable.FadeDrawable: int mTransitionState
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: boolean mAnimated
com.google.android.material.datepicker.CalendarConstraints: int yearSpan
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleAttr
com.google.android.material.R$styleable: int ShapeAppearance_cornerFamilyBottomRight
com.google.android.material.R$styleable: int[] Badge
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.ReactInstanceManager mReactInstanceManager
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.disk.EntryEvictionComparatorSupplier mEntryEvictionComparatorSupplier
com.google.android.material.appbar.HeaderBehavior$FlingRunnable: android.view.View layout
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: java.lang.String $name
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenStackFragment mTopScreen
androidx.appcompat.R$id: int search_plate
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheEventListener mCacheEventListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
androidx.appcompat.widget.ListPopupWindow: boolean mModal
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.OkHttpClient$Builder: int writeTimeout
okhttp3.internal.concurrent.TaskRunner: java.util.List readyQueues
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
androidx.appcompat.view.menu.CascadingMenuPopup$3: androidx.appcompat.view.menu.CascadingMenuPopup this$0
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue pushQueue
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object[] VIEW_MGR_ARGS
com.facebook.react.views.text.TextLayoutManager: android.text.TextPaint sTextPaintInstance
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat HEIF
androidx.transition.ViewUtilsApi23: boolean sTryHiddenSetTransitionVisibility
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker mSmallByteArrayPoolStatsTracker
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryChunkPool mPool
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator mScrollAnimator
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: boolean validValues
com.facebook.react.modules.core.JavaTimerManager$Timer: int mCallbackID
com.facebook.react.R$id: int accessibility_role
com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable[] mLayers
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources mResources
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding
com.facebook.react.MemoryPressureRouter: java.util.Set mListeners
com.google.android.material.R$layout: int mtrl_calendar_day_of_week
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate mDelegate
com.facebook.common.util.TriState: com.facebook.common.util.TriState YES
okhttp3.internal.http2.Http2Connection: long readBytesAcknowledged
androidx.appcompat.R$id: int search_button
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.common.internal.Supplier mDataSourceSupplier
com.facebook.react.animated.NativeAnimatedModule$15: int val$childNodeTag
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager mFabricViewStateManager
com.facebook.imagepipeline.cache.MemoryCacheParams: int maxCacheEntries
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int mOnScreenHeightPx
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition
okhttp3.internal.platform.android.AndroidLog: java.util.Map knownLoggers
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_SUBMIT_CACHE_HIT
androidx.core.R$styleable: int ColorStateListItem_android_color
com.google.android.material.resources.TextAppearance: android.content.res.ColorStateList shadowColor
com.google.android.material.internal.CollapsingTextHelper: float collapsedShadowRadius
com.facebook.imagepipeline.cache.BufferedDiskCache$7: com.facebook.imagepipeline.image.EncodedImage val$encodedImage
com.zoontek.rnbootsplash.RNBootSplashModule$4: com.zoontek.rnbootsplash.RNBootSplashTask val$task
com.facebook.react.views.scroll.VelocityHelper: float mYVelocity
com.facebook.react.modules.debug.FpsDebugFrameCallback: long mLastFrameTime
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder mTMMDelegateBuilder
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean mPrintedShadowClipWarning
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.common.LifecycleState mInitialLifecycleState
com.facebook.react.modules.network.NetworkingModule$2: boolean val$useIncrementalUpdates
androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews
com.google.android.material.ripple.RippleUtils: int[] SELECTED_PRESSED_STATE_SET
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: com.facebook.drawee.debug.listener.ImageLoadingTimeListener mImageLoadingTimeListener
com.facebook.react.views.textinput.ReactTextInputShadowNode: int mSelectionStart
okio.Buffer$UnsafeCursor: okio.Segment segment
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.uimanager.UIImplementationProvider mUIImplementationProvider
androidx.appcompat.widget.SearchView$10: androidx.appcompat.widget.SearchView this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: int $streamId$inlined
androidx.appcompat.R$styleable: int[] AppCompatTextView
com.google.android.material.R$styleable: int MaterialCalendar_yearTodayStyle
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mPartialImageCachingEnabled
bolts.Task: bolts.UnobservedErrorNotifier unobservedErrorNotifier
com.facebook.react.modules.core.TimingModule$BridgeTimerManager: com.facebook.react.modules.core.TimingModule this$0
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mAnchorView
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_DATE
com.facebook.react.modules.debug.FpsDebugFrameCallback$1: com.facebook.react.modules.debug.FpsDebugFrameCallback this$0
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.TextPaint mTempTextPaint
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.view.animation.Interpolator MATERIAL_INTERPOLATOR
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.SparseArrayCompat mStateIds
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify SPACE_EVENLY
com.zoontek.rnbootsplash.RNBootSplashModule: int ANIMATION_DURATION
com.facebook.react.LazyReactPackage$2: java.util.Map val$reactModuleInfoMap
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.imagepipeline.request.ImageRequest mImageRequest
androidx.core.graphics.PathParser$PathDataNode: char mType
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mEncodedMemoryCacheHistory
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner this$0
com.google.android.material.R$id: int snackbar_action
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.imagepipeline.producers.PostprocessorProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
okhttp3.Cookie$Builder: boolean secure
com.facebook.imageutils.BitmapUtil: androidx.core.util.Pools$SynchronizedPool DECODE_BUFFERS
com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor
com.google.android.material.bottomsheet.BottomSheetDialog$2: com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mEncodedMemoryCacheHistory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.swmansion.rnscreens.R$anim: int rns_fade_to_bottom
androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
com.facebook.react.devsupport.LogBoxModule$2: com.facebook.react.devsupport.LogBoxModule this$0
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.facebook.react.views.unimplementedview.ReactUnimplementedView: androidx.appcompat.widget.AppCompatTextView mTextView
androidx.appcompat.view.menu.MenuBuilder: android.view.View mHeaderView
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConsumedFieldFetched
com.swmansion.rnscreens.R$anim: int rns_slide_out_to_right
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.transition.Visibility$DisappearListener: boolean mSuppressLayout
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.MultipartBody: byte[] DASHDASH
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA X86
com.facebook.react.animated.NativeAnimatedModule$9: int val$tag
androidx.appcompat.widget.Toolbar: int mTitleMarginStart
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mInvisibilityEventTimeMs
com.google.android.material.shape.MaterialShapeDrawable$1: com.google.android.material.shape.MaterialShapeDrawable this$0
com.facebook.imagepipeline.image.EncodedImage: com.facebook.common.references.CloseableReference mPooledByteBufferRef
okio.GzipSource: okio.InflaterSource inflaterSource
com.horcrux.svg.TextPathView: java.lang.String mHref
com.google.android.material.dialog.InsetDialogOnTouchListener: android.app.Dialog dialog
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: int mReactTag
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearanceModel strokeShapeAppearance
com.google.android.material.R$styleable: int[] MaterialButton
com.facebook.soloader.SoLoader: boolean isSystemApp
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_RESULT_INT
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize bottomLeftCornerSize
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner mTabSpinner
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsets
com.swmansion.rnscreens.ScreenFragment: com.swmansion.rnscreens.ScreenFragment$Companion Companion
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations
androidx.core.provider.CallbackWithHandler$1: android.graphics.Typeface val$typeface
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteStreams mPooledByteStreams
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DISMISSED
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mNeedsAutoSizeText
com.google.android.material.transformation.ExpandableBehavior$1: com.google.android.material.expandable.ExpandableWidget val$dep
com.facebook.drawee.drawable.RoundedDrawable: boolean mPaintFilterBitmap
androidx.transition.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList mDrawables
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.google.android.material.R$styleable: int[] StateListDrawable
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
com.google.android.material.datepicker.Month: int daysInMonth
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
androidx.fragment.R$anim: int fragment_close_exit
com.facebook.imagepipeline.cache.BufferedDiskCache: java.lang.Class TAG
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode
com.google.android.material.R$styleable: int TextInputLayout_startIconContentDescription
com.facebook.imagepipeline.producers.DelegatingConsumer: com.facebook.imagepipeline.producers.Consumer mConsumer
androidx.swiperefreshlayout.widget.CircleImageView: int mShadowRadius
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: com.facebook.imagepipeline.producers.Consumer val$consumer
androidx.transition.Visibility$VisibilityInfo: android.view.ViewGroup mEndParent
com.facebook.react.animated.NativeAnimatedModule$13: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: boolean closed
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.CacheControl$Builder: int maxAgeSeconds
androidx.transition.Transition: int mNumInstances
com.horcrux.svg.GlyphContext: int mRIndex
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
com.google.android.material.behavior.SwipeDismissBehavior: androidx.customview.widget.ViewDragHelper viewDragHelper
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar
com.facebook.imagepipeline.memory.LruBitmapPool: com.facebook.imagepipeline.memory.PoolStatsTracker mPoolStatsTracker
com.facebook.react.animated.TrackingAnimatedNode: int mAnimationId
androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 onException
okhttp3.Cookie: boolean secure
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool
com.facebook.drawee.generic.RootDrawable: android.graphics.drawable.Drawable mControllerOverlay
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mStartingScale
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mStartX
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig
com.google.android.material.bottomappbar.BottomAppBar: int fabOffsetEndMode
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft
okio.InflaterSource: int bufferBytesHeldByInflater
com.facebook.react.modules.blob.BlobModule$3: com.facebook.react.modules.blob.BlobModule this$0
androidx.transition.R$id: int transition_current_scene
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] $VALUES
com.facebook.react.views.text.ReactTextUpdate: boolean mContainsMultipleFragments
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: androidx.customview.widget.ViewDragHelper mDragger
androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable
okhttp3.internal.connection.RealConnection: java.util.List calls
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: com.facebook.drawee.backends.pipeline.info.ImageOriginListener mImageOriginLister
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2: com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer this$0
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mInternalBackgroundTint
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean mResizingAllowedOverride
okhttp3.internal.http2.ErrorCode: int httpCode
com.facebook.react.ReactRootView: int mRootViewTag
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept
com.facebook.react.views.view.ReactViewBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderRGB
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type LEFT
kotlin.text.Charsets: kotlin.text.Charsets INSTANCE
okhttp3.internal.Util: okio.Options UNICODE_BOMS
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: androidx.recyclerview.widget.FastScroller this$0
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTintMode
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mY
com.google.android.material.R$style: int Widget_MaterialComponents_BottomAppBar
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsLineThroughTextDecorationSet
com.facebook.imagepipeline.core.ProducerFactory: int mBitmapPrepareToDrawMinSizeBytes
androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
com.google.android.material.R$styleable: int TextInputLayout_boxStrokeWidth
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] $VALUES
com.horcrux.svg.PathParser: int l
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.facebook.imageformat.DefaultImageFormatChecker: boolean mUseNewOrder
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: android.util.Pair val$nextRequestPair
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer this$1
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.RectF mTempRectangle
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset
okhttp3.Headers: okhttp3.Headers$Companion Companion
com.google.android.material.R$styleable: int FlowLayout_itemSpacing
androidx.appcompat.content.res.AppCompatResources: java.lang.ThreadLocal TL_TYPED_VALUE
okhttp3.Cache$Entry: java.lang.String url
com.google.android.material.appbar.AppBarLayout$LayoutParams: android.view.animation.Interpolator scrollInterpolator
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
androidx.transition.FragmentTransitionSupport$2: androidx.transition.FragmentTransitionSupport this$0
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: android.graphics.Path mArrow
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents AUTO
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.common.internal.Suppliers: com.facebook.common.internal.Supplier BOOLEAN_FALSE
com.google.android.material.transformation.FabTransformationScrimBehavior$1: boolean val$expanded
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList expandedTextColor
com.facebook.react.animated.SpringAnimation: boolean mOvershootClampingEnabled
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.core.ProducerSequenceFactory mProducerSequenceFactory
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
okio.Segment: int pos
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator mJpegGenerator
com.facebook.cache.disk.DiskStorageCache: java.util.Set mResourceIndex
com.facebook.common.streams.TailAppendingInputStream: int mMarkedTailOffset
com.facebook.imagepipeline.producers.JobScheduler: com.facebook.imagepipeline.producers.JobScheduler$JobRunnable mJobRunnable
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider
com.google.android.material.appbar.AppBarLayout$BaseBehavior: float offsetToChildIndexOnLayoutPerc
com.google.android.material.R$animator: int mtrl_fab_transformation_sheet_collapse_spec
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.imagepipeline.request.Postprocessor mPostprocessor
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform NONE
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1
androidx.fragment.app.FragmentManagerState: int mBackStackIndex
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
androidx.fragment.app.Fragment: float mPostponedAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter mColorFilter
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.Matrix mInsideBorderTransform
com.horcrux.svg.VirtualView: boolean mInvertible
com.facebook.react.uimanager.ViewAtIndex: int mIndex
androidx.cardview.widget.RoundRectDrawable: android.graphics.RectF mBoundsF
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress
androidx.appcompat.app.AlertController$4: androidx.appcompat.app.AlertController this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.google.android.material.R$attr: int materialThemeOverlay
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$1: int[] $SwitchMap$com$facebook$react$uimanager$layoutanimation$AnimatedPropertyType
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful
okio.Buffer$UnsafeCursor: long offset
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.memory.PoolFactory mPoolFactory
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.Rect overlayBounds
com.google.android.material.shape.ShapePath$PathArcOperation: android.graphics.RectF rectF
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.BytesRange mBytesRange
androidx.fragment.app.FragmentContainerView: boolean mDrawDisappearingViewsFirst
com.facebook.react.uimanager.ReactAccessibilityDelegate: int sCounter
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult
androidx.fragment.app.FragmentTransaction$Op: int mCmd
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mDownsampleIfLargeBitmap
com.google.android.material.R$styleable: int[] ViewPager2
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
com.facebook.drawee.gestures.GestureDetector: boolean mIsClickCandidate
androidx.appcompat.widget.ActionBarContainer: boolean mIsSplit
com.facebook.react.views.textinput.ReactTextInputManager$2: com.facebook.react.uimanager.ThemedReactContext val$reactContext
com.facebook.imagepipeline.core.ImagePipelineConfig: int mMemoryChunkType
com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
okhttp3.Request: okhttp3.RequestBody body
kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: float centerY
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mShownAnchorView
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
com.google.android.material.R$id: int design_menu_item_text
com.horcrux.svg.TextProperties$TextDecoration: java.util.Map decorationToEnum
com.facebook.drawee.drawable.RoundedBitmapDrawable: android.graphics.Paint mBorderPaint
androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable
com.google.android.material.chip.ChipDrawable: int currentTint
com.google.android.material.R$styleable: int MaterialButton_android_insetBottom
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType kEndMarker
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec hideMotionSpec
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.google.android.material.appbar.AppBarLayout: int pendingAction
com.facebook.react.common.SingleThreadAsserter: java.lang.Thread mThread
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource $this_asResponseBody
com.facebook.react.modules.storage.AsyncStorageModule$2: com.facebook.react.modules.storage.AsyncStorageModule this$0
androidx.drawerlayout.widget.DrawerLayout: int mScrimColor
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.common.time.MonotonicClock mClock
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder mParentMenu
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String mKey
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
androidx.appcompat.widget.AppCompatCheckedTextView: int[] TINT_ATTRS
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mTransform
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean autoHideEnabled
okhttp3.OkHttpClient: okhttp3.Dns dns
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mDeletedSize
androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Hpack INSTANCE
com.horcrux.svg.FontData$AbsoluteFontWeight: int[] absoluteFontWeights
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.facebook.react.views.text.TextLayoutManagerMapBuffer$SetSpanOperation: com.facebook.react.views.text.ReactSpan what
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener mDevBundleDownloadListener
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.imagepipeline.request.ImageRequest mImageRequest
com.google.android.material.R$styleable: int[] ViewBackgroundHelper
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemListenerMethodName
com.facebook.imagepipeline.cache.BoundedLinkedHashSet: int mMaxSize
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon
com.facebook.react.module.model.ReactModuleInfo: boolean mIsCxxModule
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mSubMenuArrowView
com.facebook.imagepipeline.cache.MemoryCacheParams: int maxCacheEntrySize
com.facebook.react.modules.storage.AsyncStorageModule$1: com.facebook.react.bridge.Callback val$callback
com.facebook.yoga.YogaValue$1: int[] $SwitchMap$com$facebook$yoga$YogaUnit
com.horcrux.svg.SymbolView: float mVbWidth
com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpRect
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: android.content.res.Resources mResources
androidx.appcompat.R$drawable: int abc_seekbar_track_material
com.horcrux.svg.FontData: com.facebook.react.bridge.ReadableMap fontData
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerSequenceFactory mProducerSequenceFactory
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.common.memory.ByteArrayPool mByteArrayPool
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor mIoBoundExecutor
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: boolean closed
com.google.android.material.R$styleable: int TextInputLayout_helperTextTextAppearance
androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabDiameter
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int minTouchTargetSize
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemClickListener mOnItemClickListener
androidx.fragment.app.FragmentTransitionCompat21$5: androidx.fragment.app.FragmentTransitionCompat21 this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $newPeerSettings$inlined
com.facebook.react.animated.NativeAnimatedModule$7: int val$tag
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.ControllerViewportVisibilityListener mControllerViewportVisibilityListener
androidx.fragment.app.FragmentManager$5: androidx.fragment.app.Fragment val$fragment
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMajor
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState: long fetchCompleteTime
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean mEnabled
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
com.google.android.material.chip.ChipDrawable: float closeIconEndPadding
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToStart
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
androidx.appcompat.R$styleable: int MenuItem_android_id
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
com.facebook.imagepipeline.decoder.DefaultImageDecoder$1: com.facebook.imagepipeline.decoder.DefaultImageDecoder this$0
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
com.google.android.material.internal.NavigationMenuItemView$1: com.google.android.material.internal.NavigationMenuItemView this$0
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1: com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer this$1
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate
okhttp3.internal.concurrent.TaskRunner: java.util.List busyQueues
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mEncodedMemoryCacheHistory
com.google.android.material.R$styleable: int TextAppearance_android_typeface
androidx.collection.LruCache: int putCount
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions$Companion Companion
androidx.appcompat.app.AlertController: int mButtonIconDimen
com.google.android.material.internal.CollapsingTextHelper: boolean useTexture
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer
okhttp3.MultipartBody: okhttp3.MediaType contentType
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: java.lang.String $packageName
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemVisible
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
androidx.recyclerview.widget.FastScroller: java.lang.Runnable mHideRunnable
androidx.core.R$id: int tag_accessibility_actions
com.facebook.react.modules.debug.FpsDebugFrameCallback: boolean mIsRecordingFpsInfoAtEachFrame
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
com.facebook.drawee.drawable.ScaleTypeDrawable: int mUnderlyingWidth
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.appcompat.widget.ActionBarContainer: boolean mIsTransitioning
com.facebook.react.views.picker.ReactPicker: java.lang.Integer mStagedBackgroundColor
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
com.facebook.react.animated.NativeAnimatedModule$2: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition
androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd
androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig
com.google.android.material.resources.TextAppearance: float shadowDx
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray mWrapped
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
com.horcrux.svg.MarkerView: java.lang.String mOrient
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.android.CloseGuard closeGuard
com.facebook.react.animated.NativeAnimatedModule$5: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.TurboReactPackage$ModuleHolderProvider: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.google.android.material.R$style: int Widget_Design_TextInputLayout
com.google.android.material.shape.AbsoluteCornerSize: float size
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point origin
com.facebook.react.uimanager.Spacing: boolean mHasAliasesSet
androidx.recyclerview.widget.DefaultItemAnimator$6: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean sTriedToGetScrollerField
com.google.android.material.R$style: int Widget_MaterialComponents_ChipGroup
com.swmansion.rnscreens.ScreenStackHeaderConfig: float mTitleFontSize
androidx.fragment.app.FragmentTransition$6: android.view.View val$nonExistentView
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer container
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionViewClassName
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.common.Priority mPriority
androidx.fragment.app.FragmentStateManager$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier
androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView
com.google.android.material.R$styleable: int[] FloatingActionButton_Behavior_Layout
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
okhttp3.Cookie: java.lang.String name
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTintMode
androidx.appcompat.widget.ListPopupWindow: java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.app.TwilightManager$TwilightState: boolean isNight
com.google.android.material.R$styleable: int SnackbarLayout_android_maxWidth
com.facebook.cache.disk.DiskCacheConfig$1: com.facebook.cache.disk.DiskCacheConfig this$0
com.facebook.react.animated.ValueAnimatedNode: com.facebook.react.animated.AnimatedNodeValueListener mValueListener
androidx.appcompat.widget.TintContextWrapper: java.util.ArrayList sCache
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: java.util.Set mInUseValues
com.facebook.imagepipeline.producers.InternalRequestListener: com.facebook.imagepipeline.listener.RequestListener mRequestListener
com.facebook.drawee.generic.RoundingParams: boolean mPaintFilterBitmap
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: long size
androidx.core.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers trailers
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater mInflater
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
androidx.fragment.app.Fragment: int mTargetRequestCode
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: boolean val$fromUser
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object mTimerGuard
com.google.android.material.R$id: int textinput_counter
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState
okio.internal.ByteStringKt: char[] HEX_DIGIT_CHARS
androidx.appcompat.app.AlertController$3: android.view.View val$top
okhttp3.OkHttpClient: okhttp3.Cache cache
com.google.android.material.R$styleable: int MaterialCalendarItem_android_insetLeft
androidx.core.R$styleable: int GradientColor_android_startColor
androidx.fragment.app.FragmentTransaction: int mTransition
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.google.android.material.bottomappbar.BottomAppBar$7: int val$targetMode
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mGroupDivider
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.image.EncodedImageOrigin mEncodedImageOrigin
com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
com.google.android.material.datepicker.MaterialCalendar$8: com.google.android.material.datepicker.MonthsPagerAdapter val$monthsPagerAdapter
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList materialThemeColorsTintList
androidx.appcompat.R$styleable: int Toolbar_title
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mNodeUpdated
androidx.appcompat.view.menu.BaseMenuPresenter: int mItemLayoutRes
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
androidx.cardview.widget.RoundRectDrawableWithShadow: int mShadowEndColor
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.app.AlertDialog mPopup
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
com.facebook.imageformat.DefaultImageFormatChecker: byte[] PNG_HEADER
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
androidx.appcompat.view.menu.StandardMenuPopup: boolean mHasContentWidth
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mAnimating
androidx.appcompat.widget.ActionMenuPresenter: boolean mStrictWidthLimit
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineChildTop
com.facebook.imagepipeline.producers.MultiplexProducer: java.lang.String mProducerName
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_HOLDER_ATTACH
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UNSET
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
androidx.appcompat.R$styleable: int MenuItem_android_onClick
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int fromY
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
androidx.appcompat.widget.SuggestionsAdapter: int mQueryRefinement
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView
com.google.android.material.R$styleable: int Chip_rippleColor
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
androidx.savedstate.SavedStateRegistry: boolean mRestored
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCacheClazzFetched
com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator
androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow
com.google.android.material.textfield.TextInputLayout: int endIconMode
com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.FadeDrawable mFadeDrawable
com.google.android.material.bottomsheet.BottomSheetBehavior$1: android.view.View val$child
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable checkedIcon
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: com.facebook.common.time.MonotonicClock mMonotonicClock
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
com.facebook.common.memory.PooledByteBufferInputStream: int mOffset
com.swmansion.rnscreens.ScreenStackHeaderConfig$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutAlphabeticModifiers
com.google.android.material.circularreveal.CircularRevealHelper: int STRATEGY
com.google.android.material.R$styleable: int MaterialCalendarItem_itemShapeAppearance
com.facebook.react.bridge.ReactBridge: boolean sDidInit
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mRecyclerViews
com.facebook.react.animated.NativeAnimatedModule$10: double val$value
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
com.google.android.material.chip.ChipDrawable: float chipStrokeWidth
androidx.collection.LruCache: java.util.LinkedHashMap map
com.horcrux.svg.VirtualView: android.graphics.Matrix mMatrix
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver mTreeObserver
com.facebook.react.animated.NativeAnimatedNodesManager$1: com.facebook.react.animated.NativeAnimatedNodesManager val$self
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.graphics.Rect padding
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
com.facebook.react.R$string: int search_description
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mPartialImageCachingEnabled
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.common.CacheKey mCacheKey
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: com.facebook.binaryresource.FileBinaryResource resource
com.facebook.imagepipeline.image.EncodedImage: boolean mHasParsedMetadata
androidx.transition.ChangeBounds$9: boolean mCanceled
com.google.android.material.internal.CheckableImageButton$SavedState: boolean checked
okhttp3.internal.ws.WebSocketExtensions: boolean perMessageDeflate
com.facebook.imageformat.ImageFormat: java.lang.String mFileExtension
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Map mEventNameToEventId
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.Menu menu
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
com.google.android.material.R$styleable: int TextInputLayout_boxBackgroundMode
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: android.widget.LinearLayout val$layout
com.google.android.material.internal.TextDrawableHelper: float textWidth
com.google.android.material.internal.NavigationMenuItemView: boolean hasIconTintList
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.google.android.material.R$styleable: int Chip_android_checkable
okhttp3.internal.http2.Http2Connection: java.lang.String connectionName
com.google.android.material.shape.ShapePath: float currentShadowAngle
com.facebook.imagepipeline.image.EncodedImage: int mHeight
androidx.appcompat.widget.SearchView: android.widget.ImageView mCloseButton
com.swmansion.rnscreens.ScreenStackHeaderConfig: int mTitleColor
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.Configuration mConfiguration
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
com.horcrux.svg.VirtualView: java.lang.String mDisplay
androidx.fragment.app.FragmentTransition$5: androidx.collection.ArrayMap val$inSharedElements
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionProviderConstructorArguments
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.MenuBuilder val$menu
androidx.appcompat.app.AlertController$4: android.view.View val$top
com.horcrux.svg.LineView: com.horcrux.svg.SVGLength mY1
com.google.android.material.R$styleable: int[] ViewStubCompat
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize bottomRightCornerSize
com.facebook.react.ReactDelegate: com.facebook.react.devsupport.DoubleTapReloadRecognizer mDoubleTapReloadRecognizer
okhttp3.internal.ws.RealWebSocket: java.lang.String key
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset
androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0
androidx.appcompat.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Companion Companion
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean ensureMinTouchTargetSize
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mMediumAnimationDuration
androidx.cardview.widget.CardView: android.graphics.Rect mContentPadding
com.facebook.imagepipeline.memory.PoolConfig$Builder: java.lang.String mBitmapPoolType
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mControllerCancelTimeMs
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Drawable mDrawable
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.widget.ActionBarContextView mContextView
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
androidx.core.R$id: int accessibility_custom_action_18
androidx.fragment.app.BackStackState: java.lang.String mName
com.google.android.material.behavior.SwipeDismissBehavior: float alphaStartSwipeDistance
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.ControllerListener mControllerListener
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
okhttp3.EventListener: okhttp3.EventListener NONE
okio.Buffer$UnsafeCursor: int end
androidx.appcompat.R$id: int scrollIndicatorDown
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: android.view.View view
okio.Options: int[] trie
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.Throwable mErrorThrowable
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: int duration
androidx.recyclerview.widget.AdapterHelper: int mExistingUpdateTypes
com.facebook.react.ReactInstanceManager: android.app.Activity mCurrentActivity
com.google.android.material.resources.TextAppearance: int typeface
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
kotlin.Pair: java.lang.Object second
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.net.Proxy $proxy
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvCTM
com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String mApplicationTag
androidx.recyclerview.widget.FastScroller: boolean mNeedHorizontalScrollbar
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.google.android.material.button.MaterialButtonHelper: boolean cornerRadiusSet
com.facebook.react.modules.toast.ToastModule$3: int val$duration
com.facebook.react.modules.network.ForwardingCookieHandler$2: com.facebook.react.modules.network.ForwardingCookieHandler this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mLayoutFromEnd
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableRightTint
androidx.core.R$id: int accessibility_custom_action_10
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean paused
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int total4PlusFrameStutters
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
androidx.recyclerview.widget.FastScroller: int mVerticalThumbHeight
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher
com.facebook.common.statfs.StatFsHelper: android.os.StatFs mInternalStatFs
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mForceShowIcon
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: float mLastProgress
androidx.transition.FragmentTransitionSupport$2: java.util.ArrayList val$exitingViews
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Path mBorderPath
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCategory
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mDownsampleEnabled
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mDispatchRunnablesLock
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mShouldStop
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
okhttp3.internal.ws.WebSocketWriter: boolean perMessageDeflate
com.horcrux.svg.VirtualView: android.graphics.RectF mClientRect
androidx.core.text.BidiFormatter: java.lang.String LRM_STRING
com.facebook.react.views.textinput.ReactTextInputManager$3: com.facebook.react.uimanager.ThemedReactContext val$reactContext
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.ArgbEvaluator mArgbEvaluator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion Companion
com.google.android.material.internal.ThemeEnforcement: int[] MATERIAL_THEME_OVERLAY_ATTR
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: java.lang.ref.WeakReference mParent
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.horcrux.svg.Point: double y
com.facebook.react.config.ReactFeatureFlags: boolean enableJSResponder
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoHideCallback
com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate accessibilityDelegate
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropType
okhttp3.internal.http2.Http2ExchangeCodec: boolean canceled
com.google.android.material.shape.ShapePath: float endShadowAngle
com.facebook.react.animated.SpringAnimation: double mInitialVelocity
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int mReactTag
com.facebook.react.modules.network.NetworkingModule$3: int val$requestId
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes
com.facebook.imagepipeline.core.CloseableReferenceFactory: com.facebook.common.references.CloseableReference$LeakHandler mLeakHandler
androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ResizeOptions mResizeOptions
androidx.appcompat.app.TwilightManager$TwilightState: long tomorrowSunrise
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: com.facebook.react.bridge.Promise mPromise
androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled
androidx.transition.Visibility$1: android.view.ViewGroup val$overlayHost
com.google.android.material.R$styleable: int MaterialButton_icon
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
okhttp3.internal.Util: boolean assertionsEnabled
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.core.util.Pools$Pool sPool
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.common.internal.Supplier mSuppressBitmapPrefetchingSupplier
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mY
com.th3rdwave.safeareacontext.InsetsChangeEvent: com.th3rdwave.safeareacontext.EdgeInsets mInsets
com.facebook.react.views.textinput.ReactTextInputLocalData: float mTextSize
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
com.facebook.imagepipeline.cache.BufferedDiskCache$4: com.facebook.imagepipeline.cache.BufferedDiskCache this$0
com.facebook.react.modules.storage.ReactDatabaseSupplier: android.content.Context mContext
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF rectF
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer this$1
com.google.android.material.appbar.HeaderBehavior: java.lang.Runnable flingRunnable
androidx.appcompat.widget.ListPopupWindow: android.view.View mDropDownAnchorView
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.facebook.react.common.StandardCharsets: java.nio.charset.Charset UTF_16LE
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
androidx.appcompat.widget.ListPopupWindow: int mDropDownGravity
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
androidx.appcompat.R$id: int decor_content_parent
com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$OnCheckedChangeListener onCheckedChangeListener
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int mHeight
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactDelegate mReactDelegate
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
com.facebook.react.ReactRootView: int mLastHeight
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mIntBufferLen
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFamily
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior behavior
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode mButtonTintMode
com.facebook.cache.disk.DiskCacheConfig$Builder: long mMaxCacheSizeOnLowDiskSpace
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: boolean $cancelable
androidx.transition.Transition$2: androidx.collection.ArrayMap val$runningAnimators
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mTmpInfo
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_FILE
okhttp3.internal.ws.RealWebSocket: java.util.Random random
com.google.android.material.datepicker.PickerFragment: java.util.LinkedHashSet onSelectionChangedListeners
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableEndTint
com.facebook.react.animated.NativeAnimatedModule$8: int val$tag
com.facebook.imagepipeline.systrace.FrescoSystrace: com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace sInstance
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchManager mSearchManager
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
androidx.appcompat.view.menu.ActionMenuItem: int mCategoryOrder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.ByteArrayPool mSmallByteArrayPool
com.google.android.material.chip.Chip: boolean closeIconHovered
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Protocol protocol
com.google.android.material.internal.CollapsingTextHelper: float expandedShadowRadius
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mImageSizeBytes
com.facebook.drawee.drawable.DrawableProperties: boolean mIsSetColorFilter
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: boolean sReflectionSucceeded
androidx.transition.Visibility$VisibilityInfo: boolean mFadeIn
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
androidx.core.widget.NestedScrollView: int mTouchSlop
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int peekHeight
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsBackButtonHidden
androidx.appcompat.R$styleable: int[] ActionMenuView
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JavaScriptExecutorFactory mJavaScriptExecutorFactory
androidx.appcompat.app.AlertController: int mCheckedItem
com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance
okhttp3.ConnectionSpec$Builder: boolean tls
com.google.android.material.R$styleable: int TextInputLayout_counterEnabled
androidx.recyclerview.R$styleable: int[] GradientColor
androidx.fragment.app.DialogFragment: int mStyle
com.google.android.material.bottomsheet.BottomSheetBehavior: int parentWidth
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mImageRequestStartTimeMs
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoderConfig mImageDecoderConfig
androidx.appcompat.view.menu.MenuBuilder: boolean mGroupDividerEnabled
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: androidx.drawerlayout.widget.DrawerLayout this$0
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] $VALUES
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor
com.google.android.material.R$id: int coordinator
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$SVGClass svgClass
com.horcrux.svg.RenderableViewManager$PatternManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
com.facebook.drawee.drawable.AutoRotateDrawable: boolean mClockwise
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
androidx.transition.ViewGroupUtils: boolean sTryHiddenSuppressLayout
androidx.coordinatorlayout.widget.ViewGroupUtils: java.lang.ThreadLocal sRectF
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled
com.horcrux.svg.GlyphContext: int mXsIndex
com.swmansion.rnscreens.ScreenStack: boolean mRemovalTransitionStarted
com.google.android.material.bottomappbar.BottomAppBar: int fabAnimationMode
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: android.view.MenuItem$OnActionExpandListener mObject
com.facebook.imagepipeline.memory.PoolParams: int maxBucketSize
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Paint DEBUG_DRAW_PAINT
com.horcrux.svg.RenderableView: int vectorEffect
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sContentInsets
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mPreviousContentHeight
com.swmansion.rnscreens.ScreenStackHeaderConfig: int mDefaultStartInsetWithNavigation
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
okio.RealBufferedSink: okio.Buffer bufferField
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall call
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: boolean mIsMemoryCachedEnabled
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mMovesList
androidx.recyclerview.widget.LinearLayoutManager: int mOrientation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.facebook.react.modules.network.NetworkingModule$3: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter val$eventEmitter
com.horcrux.svg.FontData: com.horcrux.svg.TextProperties$FontStyle fontStyle
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState: long submitTime
com.facebook.react.views.picker.ReactPickerItem: java.lang.String label
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map CLASS_PROPS_CACHE
com.horcrux.svg.ImageView: int mMeetOrSlice
com.facebook.common.streams.TailAppendingInputStream: byte[] mTail
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.view.animation.Interpolator LINEAR_INTERPOLATOR
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner val$this$0
com.google.android.material.R$dimen: int mtrl_bottomappbar_fab_bottom_margin
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean offsetToChildIndexOnLayoutIsMinHeight
okhttp3.internal.cache.DiskLruCache: long maxSize
androidx.transition.Transition$AnimationInfo: androidx.transition.WindowIdImpl mWindowId
com.facebook.react.modules.image.ImageLoaderModule$2: com.facebook.react.bridge.Promise val$promise
com.facebook.imagepipeline.cache.MemoryCacheParams: int maxEvictionQueueEntries
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: com.facebook.react.bridge.Callback mError
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerFactory mProducerFactory
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: int start
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates
androidx.transition.TransitionValuesMaps: androidx.collection.ArrayMap mViewValues
okio.RealBufferedSource: okio.Buffer bufferField
androidx.core.provider.FontRequestWorker$1: java.lang.String val$id
com.facebook.react.views.modal.ReactModalHostView: android.content.DialogInterface$OnShowListener mOnShowListener
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator currentAnimator
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point SIZE_POINT
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean mDelegateTargeted
androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode
androidx.appcompat.view.menu.MenuItemImpl: android.view.View mActionView
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: com.facebook.imagepipeline.producers.Producer mInputProducer1
androidx.appcompat.R$id: int group_divider
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
androidx.core.text.ICUCompat: java.lang.reflect.Method sGetScriptMethod
com.facebook.imagepipeline.producers.SwallowResultProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator: com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator mJpegGenerator
com.facebook.drawee.drawable.RoundedBitmapDrawable: java.lang.ref.WeakReference mLastBitmap
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean decodePreviewFrame
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.ForwardingTimeout timeout
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sVisibleInsetsField
com.facebook.imagepipeline.cache.LruCountingMemoryCache$1: com.facebook.imagepipeline.cache.ValueDescriptor val$evictableValueDescriptor
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation BOTTOM_RIGHT
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mTintColor
com.facebook.react.R$id: int accessibility_hint
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnSearchClickListener
androidx.appcompat.app.AlertController$3: androidx.appcompat.app.AlertController this$0
okhttp3.Cache$RealCacheRequest$1: okhttp3.Cache$RealCacheRequest this$0
androidx.core.os.TraceCompat: java.lang.reflect.Method sTraceCounterMethod
com.facebook.react.modules.core.DeviceEventManagerModule$1: com.facebook.react.modules.core.DeviceEventManagerModule this$0
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: boolean mProgressiveRenderingEnabled
androidx.appcompat.widget.AppCompatTextHelper: int mFontWeight
okhttp3.Address: okhttp3.Dns dns
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.imagepipeline.cache.CountingLruMap: com.facebook.imagepipeline.cache.ValueDescriptor mValueDescriptor
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
com.facebook.drawee.drawable.RoundedDrawable: boolean mIsCircle
com.google.android.material.transformation.FabTransformationBehavior$3: com.google.android.material.transformation.FabTransformationBehavior this$0
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection$Companion Companion
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.lang.String $name
com.facebook.drawee.generic.RoundingParams: float mBorderWidth
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController val$dialog
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: long mMemoryType
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mDiskCacheHistory
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Integer mIndex
com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.imagepipeline.core.DiskStorageFactory mDiskStorageFactory
com.facebook.common.util.TriState: com.facebook.common.util.TriState NO
com.google.android.material.button.MaterialButton: int iconPadding
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList chipIconTint
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1: android.widget.AutoCompleteTextView val$editText
com.horcrux.svg.VirtualView: double fontSize
com.google.android.material.button.MaterialButton: int iconGravity
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.concurrent.TaskQueue cleanupQueue
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable mCurrentIdleCallbackRunnable
com.horcrux.svg.PatternView: java.lang.String mAlign
com.facebook.react.views.text.CustomStyleSpan: java.lang.String mFontFamily
com.horcrux.svg.VirtualView: int mClipRule
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.lang.String type
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$outFragment
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
com.facebook.imagepipeline.core.ImagePipelineExperiments: int mTrackedKeysSize
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabMargin
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: android.graphics.RectF mTempBounds
androidx.fragment.app.FragmentTransition$5: android.view.View val$epicenterView
androidx.recyclerview.widget.RecyclerView: long NO_ID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int shadowCompatRadius
okio.RealBufferedSink: okio.Sink sink
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.common.BytesRange mResponseBytesRange
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.ListMenuPresenter this$0
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
kotlin.text.Charsets: java.nio.charset.Charset US_ASCII
com.facebook.common.streams.LimitedInputStream: int mBytesToRead
com.facebook.soloader.UnpackingSoSource$1: com.facebook.soloader.UnpackingSoSource$DsoManifest val$manifest
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: java.lang.String $name
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.google.android.material.R$styleable: int MaterialButton_backgroundTint
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.RectF mInsideBorderBounds
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
androidx.core.view.ViewCompat$Api21Impl$1: android.view.View val$v
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] $VALUES
com.facebook.react.modules.image.ImageLoaderModule$4: com.facebook.react.modules.image.ImageLoaderModule this$0
androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean mDecodeAllFrames
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable
com.facebook.react.modules.permissions.PermissionsModule$1: com.facebook.react.modules.permissions.PermissionsModule this$0
com.facebook.react.views.textinput.ReactEditText: java.lang.String mReturnKeyType
androidx.appcompat.R$attr: int actionOverflowButtonStyle
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: javax.net.ssl.X509TrustManager trustManager
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.Util: java.lang.String okHttpName
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1: androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
androidx.recyclerview.widget.LayoutState: boolean mStopInFocusable
androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat
androidx.appcompat.widget.ForwardingListener: android.view.View mSrc
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: boolean mEnabled
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] $VALUES
okhttp3.internal.http2.Header: int hpackSize
com.facebook.react.uimanager.events.TouchEventType$1: int[] $SwitchMap$com$facebook$react$uimanager$events$TouchEventType
com.facebook.react.animated.NativeAnimatedNodesManager$1: com.facebook.react.animated.NativeAnimatedNodesManager this$0
com.facebook.drawee.generic.GenericDraweeHierarchy: android.content.res.Resources mResources
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.os.Handler sCompletionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.swmansion.rnscreens.events.ScreenWillAppearEvent: com.swmansion.rnscreens.events.ScreenWillAppearEvent$Companion Companion
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: int mIterations
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
com.th3rdwave.safeareacontext.SafeAreaView: java.util.EnumSet mEdges
androidx.transition.FragmentTransitionSupport$3: java.lang.Object val$sharedElementTransition
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mNetworkFetchToEncodedMemoryPrefetchSequence
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
androidx.appcompat.R$styleable: int[] ViewStubCompat
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect mEpicenterBounds
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long $unacknowledgedBytesRead$inlined
androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal
androidx.appcompat.R$drawable: int abc_btn_colored_material
androidx.recyclerview.widget.ViewInfoStore: androidx.collection.LongSparseArray mOldChangedHolders
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mCurrentDelegate
okhttp3.internal.concurrent.TaskRunner: java.lang.Runnable runnable
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketExtensions $extensions$inlined
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.appcompat.view.menu.CascadingMenuPopup: int mYOffset
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: com.facebook.react.views.textinput.ReactEditText mReactEditText
com.horcrux.svg.GlyphContext: java.util.ArrayList mDYsContext
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mNonBatchedOperationsLock
okhttp3.MediaType: java.lang.String type
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_NONE
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.Matrix mActualImageMatrix
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.callercontext.CallerContextVerifier mCallerContextVerifier
androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList mPendingReleasables
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: int mSurfaceId
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableStartTint
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved
com.horcrux.svg.LinearGradientView: com.horcrux.svg.SVGLength mY1
com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList expandedShadowColor
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int animationMode
com.facebook.cache.common.SimpleCacheKey: boolean mIsResourceIdForDebugging
com.facebook.imageformat.ImageFormatChecker: int mMaxHeaderLength
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
androidx.appcompat.widget.SearchView: android.widget.TextView$OnEditorActionListener mOnEditorActionListener
com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame
com.facebook.react.common.StandardCharsets: java.nio.charset.Charset UTF_8
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenY
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType kCGPathElementAddCurveToPoint
com.horcrux.svg.VirtualView: android.graphics.RectF mStrokeBounds
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix sMatrix
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning
com.horcrux.svg.VirtualView: float canvasWidth
androidx.appcompat.R$attr: int actionBarTabStyle
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType START
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] $VALUES
com.facebook.imageformat.DefaultImageFormatChecker: int BMP_HEADER_LENGTH
com.facebook.react.animated.NativeAnimatedModule$3: long val$frameNo
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager$TwilightState mTwilightState
com.google.android.material.button.MaterialButtonHelper: boolean checkable
androidx.appcompat.widget.ListPopupWindow: int mDropDownWindowLayoutType
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float strokeWidth
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.google.android.material.R$string: int mtrl_picker_toggle_to_text_input_mode
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
androidx.viewpager2.adapter.FragmentStateAdapter$5: java.lang.Runnable val$runnable
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.Bitmap$Config mBitmapConfig
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupVisible
androidx.recyclerview.widget.FastScroller$1: androidx.recyclerview.widget.FastScroller this$0
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier INSTANCE
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JavaScriptExecutorFactory mJavaScriptExecutorFactory
com.th3rdwave.safeareacontext.SafeAreaView: com.th3rdwave.safeareacontext.EdgeInsets mInsets
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ExpandedMenuView mMenuView
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$context
com.google.android.material.bottomappbar.BottomAppBar: int animatingModeChangeCounter
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: int mMinTimeLeftInFrameForNonBatchedOperationMs
androidx.appcompat.view.menu.MenuItemImpl: boolean mNeedToApplyIconTint
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UPPERCASE
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
com.facebook.react.modules.toast.ToastModule$1: java.lang.String val$message
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache mBitmapCountingMemoryCache
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier
androidx.transition.TransitionManager$MultiListener$1: androidx.collection.ArrayMap val$runningTransitions
com.facebook.react.views.text.TextAttributeProps: int mFontStyle
androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
com.facebook.react.animated.InterpolationAnimatedNode: boolean mShouldRound
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.view.DraweeHolder mDraweeHolder
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mNativeParent
com.google.android.material.internal.CollapsingTextHelper: float scale
com.facebook.react.animated.NativeAnimatedModule$16: int val$parentNodeTag
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] $VALUES
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultShowMotionSpec
com.facebook.imagepipeline.memory.Bucket: boolean mFixBucketsReinitialization
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
com.google.android.material.shape.ShapeAppearancePathProvider: float[] scratch
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint
com.horcrux.svg.VirtualView: java.util.ArrayList elements
com.facebook.drawee.drawable.RoundedColorDrawable: float mBorderWidth
androidx.appcompat.R$drawable: int abc_ratingbar_material
com.facebook.react.views.scroll.ReactScrollView: int mEndFillColor
com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView
com.facebook.drawee.drawable.OrientedDrawable: android.graphics.Matrix mTempMatrix
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sGetMaxAvailableHeightMethod
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
androidx.appcompat.view.SupportMenuInflater$MenuState: android.content.res.ColorStateList itemIconTintList
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener mImageOriginRequestListener
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean isRunningTasks
androidx.appcompat.view.menu.MenuBuilder: boolean mShortcutsVisible
com.google.android.material.R$id: int mtrl_picker_header_toggle
com.google.android.material.R$styleable: int AppBarLayout_Layout_layout_scrollInterpolator
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
com.facebook.react.views.text.ReactFontManager: java.util.Map mCustomTypefaceCache
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransition$Callback val$callback
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight
androidx.appcompat.R$styleable: int ActionBar_displayOptions
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JSIModulePackage mJSIModulesPackage
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mPreviousSelectionStart
androidx.collection.MapCollections$ArrayIterator: int mOffset
com.horcrux.svg.GlyphContext: int mTop
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
androidx.appcompat.view.menu.StandardMenuPopup: int mDropDownGravity
androidx.appcompat.widget.SearchView: int mSuggestionRowLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w300
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.Set INITIAL_KEYS
com.facebook.imagepipeline.common.ImageDecodeOptions: android.graphics.ColorSpace colorSpace
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility
com.facebook.imagepipeline.producers.BitmapPrepareProducer: int mMinBitmapSizeBytes
androidx.appcompat.widget.SuggestionsAdapter: android.content.Context mProviderContext
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline mathematical
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule mModule
androidx.appcompat.app.AlertController$AlertParams: int mIconId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule
androidx.appcompat.widget.Toolbar: boolean mEatingTouch
com.facebook.react.views.modal.ReactModalHostManager$2: com.facebook.react.views.modal.ReactModalHostView val$view
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: int mMaxBitmapSize
androidx.appcompat.R$styleable: int AlertDialog_listLayout
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.decoder.ImageDecoder mAnimatedWebPDecoder
androidx.appcompat.R$id: int submit_area
androidx.customview.widget.ViewDragHelper: int mPointersDown
com.facebook.react.modules.network.NetworkingModule$1$1: com.facebook.react.modules.network.NetworkingModule$1 this$1
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: int[] TINT_ATTRS
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mUseCombinedNetworkAndCacheProducer
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback
kotlin.sequences.DropSequence: kotlin.sequences.Sequence sequence
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class sslSocketFactoryClass
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int numRetries
com.google.android.material.shape.ShapePath$ShadowCompatOperation: android.graphics.Matrix IDENTITY_MATRIX
androidx.appcompat.app.AlertController$5: android.view.View val$top
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mStartY
com.google.android.material.R$styleable: int TextInputLayout_android_textColorHint
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanLookup
androidx.appcompat.app.AlertDialog: androidx.appcompat.app.AlertController mAlert
com.facebook.yoga.YogaWrap: int mIntValue
com.google.android.material.R$id: int month_navigation_previous
com.facebook.drawee.drawable.RoundedColorDrawable: float[] mBorderRadii
androidx.appcompat.widget.SearchView: boolean mClearingFocus
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
okio.Segment: okio.Segment$Companion Companion
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleRes
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] $VALUES
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean mIsBack
com.zoontek.rnbootsplash.RNBootSplashModule$5: int[] $SwitchMap$com$zoontek$rnbootsplash$RNBootSplashModule$Status
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertController$AlertParams P
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mSurfaceId
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.material.R$string: int error_icon_content_description
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType kCGPathElementMoveToPoint
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS
com.facebook.react.R$string: int image_description
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int mTrackedKeysSize
com.swmansion.rnscreens.R$anim: int rns_fade_from_bottom
com.google.android.material.R$styleable: int MaterialCalendarItem_android_insetBottom
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] rotationDegrees
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList mTempList
com.facebook.react.modules.blob.BlobModule$4: com.facebook.react.modules.blob.BlobModule this$0
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap mAccessibilityActionsMap
androidx.appcompat.R$styleable: int MenuItem_android_checkable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
androidx.core.content.ContextCompat: java.lang.Object sLock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
com.google.android.material.internal.CollapsingTextHelper: float expandedFraction
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable chipIcon
com.google.android.material.textfield.IndicatorViewController$1: int val$captionToShow
androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Matrix mTmpMatrix
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
com.facebook.react.views.textinput.ReactTextInputManager$2: com.facebook.react.views.textinput.ReactEditText val$editText
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout val$view
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: java.lang.Integer $color
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
com.facebook.react.ReactInstanceManager: java.lang.String TAG
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCheckable
com.facebook.react.modules.core.DeviceEventManagerModule$1: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler val$backBtnHandler
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandlerWrapper
androidx.recyclerview.R$styleable: int RecyclerView_layoutManager
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] $VALUES
com.google.android.material.shadow.ShadowRenderer: int shadowStartColor
com.google.android.material.R$style: int TextAppearance_AppCompat_Caption
com.facebook.react.modules.network.ReactCookieJarContainer: okhttp3.CookieJar cookieJar
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.core.view.ViewPropertyAnimatorCompat: int mOldLayerType
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
com.google.android.material.resources.TextAppearance: float shadowDy
com.facebook.datasource.AbstractDataSource: java.lang.Object mResult
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup
com.th3rdwave.safeareacontext.EdgeInsets: float bottom
com.facebook.react.views.text.TextAttributeProps: boolean mIsAccessibilityRoleSet
com.google.android.material.R$dimen: int mtrl_calendar_content_padding
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint
com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled
com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.google.android.material.datepicker.MaterialCalendar: android.view.View yearFrame
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int mSelectionEnd
com.facebook.yoga.YogaNodeJNIBase: java.util.List mChildren
androidx.appcompat.view.StandaloneActionMode: boolean mFocusable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.content.Context mContext
com.facebook.react.modules.dialog.DialogModule$1: com.facebook.react.bridge.Callback val$actionCallback
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connectionToCancel
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity
com.facebook.imageformat.DefaultImageFormatChecker: byte[][] HEIF_HEADER_SUFFIXES
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintMode
kotlin.jvm.internal.Ref$LongRef: long element
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] $VALUES
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToEnd
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.lang.Object callerContext
com.zoontek.rnbootsplash.RNBootSplashActivity: boolean $assertionsDisabled
androidx.collection.SimpleArrayMap: int[] mHashes
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.material.R$styleable: int Chip_android_maxWidth
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.String mThreadName
androidx.transition.Transition: boolean mEnded
androidx.transition.Visibility$VisibilityInfo: boolean mVisibilityChange
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1: com.facebook.react.modules.core.ChoreographerCompat$FrameCallback this$0
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$dispatchViewUpdatesTime
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mDeltaY
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment rightEdge
androidx.appcompat.view.StandaloneActionMode: boolean mFinished
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.R$styleable: int SwitchCompat_switchMinWidth
okhttp3.HttpUrl$Builder: java.lang.String scheme
androidx.appcompat.widget.ThemeUtils: int[] ACTIVATED_STATE_SET
com.facebook.imagepipeline.memory.PoolParams: android.util.SparseIntArray bucketSizes
androidx.appcompat.R$drawable: int abc_switch_thumb_material
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mVisibilityEventTimeMs
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mControllerFailureTimeMs
com.facebook.imagepipeline.core.ImagePipeline$5: com.facebook.imagepipeline.core.ImagePipeline this$0
kotlin.text.Charsets: java.nio.charset.Charset utf_32be
com.facebook.react.views.slider.ReactSlidingCompleteEvent: double mValue
com.facebook.drawee.components.DraweeEventTracker: com.facebook.drawee.components.DraweeEventTracker sInstance
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
com.facebook.react.modules.storage.ReactDatabaseSupplier: com.facebook.react.modules.storage.ReactDatabaseSupplier sReactDatabaseSupplierInstance
com.facebook.imageutils.BitmapUtil$1: int[] $SwitchMap$android$graphics$Bitmap$Config
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String mText
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mArrowScale
com.google.android.material.R$styleable: int Chip_android_ellipsize
com.facebook.react.animated.NativeAnimatedModule$9: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mOverlayColor
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView recyclerView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
com.swmansion.rnscreens.ScreenFragment: com.swmansion.rnscreens.Screen screen
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
androidx.appcompat.widget.SearchView$9: androidx.appcompat.widget.SearchView this$0
com.facebook.react.modules.storage.AsyncStorageModule$1: com.facebook.react.bridge.ReadableArray val$keys
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGE
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
androidx.transition.ViewOverlayApi18: android.view.ViewOverlay mViewOverlay
androidx.appcompat.widget.DropDownListView: androidx.core.widget.ListViewAutoScrollHelper mScrollHelper
com.facebook.react.views.modal.ReactModalHostView: boolean mStatusBarTranslucent
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.ReactInstanceManager: java.lang.Boolean mHasStartedDestroying
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked
com.facebook.react.animated.FrameBasedAnimationDriver: int mCurrentLoop
com.facebook.soloader.SoLoader: com.facebook.soloader.UnpackingSoSource[] sBackupSoSources
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$AlertParams this$0
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTintMode
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUBAR
com.facebook.drawee.generic.RoundingParams: int mOverlayColor
androidx.recyclerview.widget.DefaultItemAnimator$5: android.view.View val$view
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.producers.ProducerListener2 mProducerListener
com.facebook.react.modules.toast.ToastModule$3: int val$xOffset
okhttp3.Handshake: java.util.List localCertificates
androidx.appcompat.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
com.facebook.react.uimanager.UIManagerModule$3: com.facebook.react.uimanager.UIManagerModule this$0
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.R$styleable: int SwitchCompat_switchTextAppearance
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.facebook.imagepipeline.cache.MemoryCacheParams: int maxCacheSize
androidx.customview.widget.ViewDragHelper: float mMinVelocity
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty
okhttp3.Response$Builder: okhttp3.Request request
com.horcrux.svg.GlyphContext: int mDYsIndex
okhttp3.Response$Builder: long receivedResponseAtMillis
com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView
androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle mHandle
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: com.google.android.material.floatingactionbutton.FloatingActionButton this$0
androidx.appcompat.widget.DropDownListView: int mSelectionLeftPadding
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: com.facebook.react.modules.dialog.DialogModule this$0
com.facebook.react.views.imagehelper.ImageSource: double mSize
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TAB
androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
androidx.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheInterceptor$Companion Companion
com.swmansion.rnscreens.ScreenStack: int previousChildrenCount
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mH
androidx.recyclerview.widget.FastScroller: int mVerticalThumbWidth
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EXS
com.google.android.material.appbar.AppBarLayout$BaseBehavior: com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
com.facebook.react.views.textinput.ReactEditText: java.util.ArrayList mListeners
com.facebook.drawee.drawable.DrawableProperties: int mDither
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus IN_PROGRESS
androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Companion Companion
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets[] mOverriddenInsets
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1: com.facebook.imagepipeline.producers.PostprocessorProducer val$this$0
com.th3rdwave.safeareacontext.Rect: float x
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType MM
com.facebook.react.modules.storage.AsyncStorageModule$2: com.facebook.react.bridge.Callback val$callback
com.google.android.material.R$styleable: int MaterialCalendarItem_itemShapeAppearanceOverlay
com.facebook.react.views.image.ReactImageView: int mBorderColor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: androidx.cursoradapter.widget.CursorAdapter this$0
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int alpha
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.DateSelector dateSelector
androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS
androidx.core.R$id: int accessibility_custom_action_11
com.facebook.react.uimanager.UIManagerModule$3: int val$rootViewTag
com.facebook.react.views.text.ReactFontManager: java.lang.String[] FILE_EXTENSIONS
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources mResources
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.facebook.react.animated.TrackingAnimatedNode: com.facebook.react.bridge.JavaOnlyMap mAnimationConfig
com.facebook.react.devsupport.JSException: java.lang.String mStack
com.facebook.react.views.view.ReactViewGroup: int mLayoutDirection
bolts.AndroidExecutors: bolts.AndroidExecutors INSTANCE
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads
com.facebook.imagepipeline.memory.PoolConfig: int mBitmapPoolMaxPoolSize
com.google.android.material.R$layout: int design_bottom_sheet_dialog
com.google.android.material.bottomsheet.BottomSheetBehavior$1: int val$finalState
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: com.th3rdwave.safeareacontext.EdgeInsets mInsets
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration
androidx.fragment.app.FragmentStore: java.util.ArrayList mAdded
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier mEncodedMemoryCacheParamsSupplier
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
androidx.appcompat.view.menu.MenuItemImpl: int mCategoryOrder
com.facebook.drawee.controller.AbstractDraweeController$2: com.facebook.drawee.controller.AbstractDraweeController this$0
com.facebook.react.views.image.ImageLoadEvent: int mWidth
com.facebook.common.executors.HandlerExecutorServiceImpl: android.os.Handler mHandler
androidx.recyclerview.widget.AdapterHelper: java.util.ArrayList mPendingUpdates
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDisableIntervalMomentum
okhttp3.CipherSuite: okhttp3.CipherSuite$Companion Companion
androidx.transition.TransitionSet: java.util.ArrayList mTransitions
com.google.android.material.shape.ShapeAppearancePathProvider: android.graphics.Matrix[] cornerTransforms
androidx.appcompat.view.menu.MenuPopupHelper: android.content.Context mContext
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.concurrent.Executor mCancellationExecutor
com.google.android.material.chip.ChipDrawable: boolean isShapeThemingEnabled
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mPrevParentTransform
androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd
com.facebook.imagepipeline.core.ProducerSequenceFactory: java.util.Map mPostprocessorSequences
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners
androidx.recyclerview.widget.RecyclerView$State: int mItemCount
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
okio.Options: okio.Options$Companion Companion
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.content.res.ColorStateList strokeTintList
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: com.facebook.react.bridge.Callback mCallback
androidx.transition.TransitionValues: android.view.View view
com.google.android.material.chip.Chip$1: com.google.android.material.chip.Chip this$0
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper
okhttp3.internal.http1.HeadersReader: okio.BufferedSource source
androidx.transition.Fade$FadeAnimatorListener: android.view.View mView
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
androidx.appcompat.widget.ScrollingTabContainerView: int mContentHeight
okhttp3.Response: okhttp3.Response networkResponse
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ERROR_NO_ACTIVITY
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceAppSearchIntent
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: float firstVisibleChildPercentageShown
com.facebook.imagepipeline.producers.LocalFetchProducer: java.util.concurrent.Executor mExecutor
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mFinalAnimatedPositionScrollY
com.google.android.material.R$styleable: int Chip_chipMinTouchTargetSize
com.facebook.imagepipeline.producers.MultiplexProducer: boolean mKeepCancelledFetchAsLowPriority
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
com.google.android.material.R$dimen: int mtrl_calendar_dialog_background_inset
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Typeface expandedTypeface
com.google.android.material.button.MaterialButton: boolean broadcasting
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.bridge.ReadableMap mHeaders
okio.ByteString: int hashCode
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: android.content.ContentResolver mContentResolver
com.google.android.material.R$styleable: int Chip_closeIconEndPadding
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: boolean mHasUnwantedGapAfter
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.imageformat.DefaultImageFormatChecker: int DNG_HEADER_LENGTH
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.MediaType: java.lang.String[] parameterNamesAndValues
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
com.th3rdwave.safeareacontext.EdgeInsets: float top
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates
com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okio.InflaterSource: java.util.zip.Inflater inflater
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection connection
com.google.android.material.R$styleable: int[] TextAppearance
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus FAILURE
androidx.appcompat.app.AlertController: android.view.Window mWindow
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures none
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] $VALUES
com.facebook.cache.disk.DiskCacheConfig: int mVersion
com.facebook.react.views.text.TextLayoutManagerMapBuffer$SetSpanOperation: int start
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.util.List $headerBlock$inlined
androidx.appcompat.widget.SearchView: int mCollapsedImeOptions
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
com.google.android.material.R$styleable: int MaterialCalendarItem_itemTextColor
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity
androidx.appcompat.view.menu.MenuBuilder: int mDefaultShowAsAction
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGEBUTTON
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: int mMaxDimensionPx
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: com.facebook.imagepipeline.producers.NetworkFetcher$Callback val$callback
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable
com.google.android.material.R$styleable: int[] AppBarLayout_Layout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int mAutoSizeTextType
androidx.recyclerview.widget.GapWorker$Task: int distanceToItem
com.google.android.material.textfield.PasswordToggleEndIconDelegate: com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener onEditTextAttachedListener
androidx.appcompat.widget.SwitchCompat: int mThumbWidth
androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
com.horcrux.svg.PatternView: com.horcrux.svg.SVGLength mW
com.google.android.material.textfield.EndIconDelegate: com.google.android.material.textfield.TextInputLayout textInputLayout
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mLastStateUpdateScrollY
com.horcrux.svg.VirtualView: android.graphics.Path mClipRegionPath
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: int key
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Companion Companion
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline
com.facebook.imageformat.DefaultImageFormatChecker: int JPEG_HEADER_LENGTH
com.google.android.material.R$styleable: int[] MenuView
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0
com.facebook.react.views.image.ReactImageView: boolean mIsDirty
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean isEndIconChecked
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$enteringViews
androidx.cardview.widget.CardView: androidx.cardview.widget.CardViewDelegate mCardViewDelegate
androidx.activity.OnBackPressedCallback: boolean mEnabled
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.core.ProducerFactory mProducerFactory
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.DraweeHolder mDraweeHolder
okhttp3.internal.platform.Android10Platform: boolean isSupported
com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_START
com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor
okhttp3.HttpUrl: java.lang.String fragment
androidx.fragment.app.FragmentState: boolean mHidden
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap
okhttp3.internal.http2.Http2Connection: java.util.Map streams
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController val$dialog
okhttp3.internal.ws.RealWebSocket$WriterTask: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.Request: okhttp3.Headers headers
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
com.facebook.react.ReactInstanceManager: com.facebook.react.MemoryPressureRouter mMemoryPressureRouter
com.facebook.drawee.drawable.ArrayDrawable$1: com.facebook.drawee.drawable.ArrayDrawable this$0
androidx.appcompat.R$styleable: int MenuItem_contentDescription
com.google.android.material.R$drawable: int ic_calendar_black_24dp
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.facebook.binaryresource.FileBinaryResource: java.io.File mFile
androidx.appcompat.widget.Toolbar$1: androidx.appcompat.widget.Toolbar this$0
com.google.android.material.chip.ChipDrawable: float textEndPadding
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $clearPrevious$inlined
com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener passThroughListener
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingAdditions
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: int mMinBitmapSizeBytes
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.ReactInstanceManager$5$1: com.facebook.react.ReactInstanceManager$5 this$1
com.horcrux.svg.SvgView: java.util.Map mDefinedTemplates
com.google.android.material.ripple.RippleUtils: int[] SELECTED_STATE_SET
com.google.android.material.R$styleable: int MaterialCalendar_dayStyle
com.google.android.material.R$styleable: int TextInputLayout_endIconContentDescription
com.horcrux.svg.RenderableViewManager$MaskManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: java.lang.String TAG
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean invokeStartEvent
com.google.android.material.R$dimen: int mtrl_calendar_month_horizontal_padding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.coordinatorlayout.R$styleable: int[] ColorStateListItem
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer sInstance
com.facebook.react.bridge.ReactSoftException: java.util.List sListeners
com.google.android.material.chip.Chip: com.google.android.material.chip.ChipDrawable chipDrawable
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
okhttp3.internal.concurrent.TaskQueue$execute$1: boolean $cancelable
com.google.android.material.R$dimen: int mtrl_calendar_day_width
kotlin.text.DelimitedRangesSequence: int limit
com.facebook.react.modules.storage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase mDb
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.scroll.OnScrollDispatchHelper: int mPrevY
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag NAVIGATION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint
com.horcrux.svg.MarkerView: com.horcrux.svg.SVGLength mRefX
androidx.appcompat.view.menu.ActionMenuItem: int mId
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.core.widget.AutoScrollHelper: int mEdgeType
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.facebook.imagepipeline.image.CloseableStaticBitmap: com.facebook.imagepipeline.image.QualityInfo mQualityInfo
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec$Companion Companion
com.google.android.material.R$string: int mtrl_picker_day_of_week_column_header
com.facebook.react.modules.storage.AsyncStorageModule$6: com.facebook.react.bridge.Callback val$callback
com.facebook.imagepipeline.producers.BaseConsumer: boolean mIsFinished
androidx.appcompat.widget.SuggestionsAdapter: int mCommitIconResId
androidx.appcompat.widget.ToolbarWidgetWrapper$2: boolean mCanceled
com.google.android.material.shape.RoundedCornerTreatment: float radius
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.R$styleable: int RecyclerView_spanCount
com.facebook.react.views.text.ReactTextUpdate: float mPaddingTop
com.horcrux.svg.UseView: com.horcrux.svg.SVGLength mH
com.facebook.react.views.slider.ReactSlider: double mStep
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDragging
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mShowingMenus
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array
com.facebook.react.views.scroll.ReactScrollView: int mFinalAnimatedPositionScrollX
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: com.facebook.imagepipeline.producers.FetchState val$fetchState
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
com.google.android.material.R$styleable: int Chip_chipIconSize
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.google.android.material.R$styleable: int[] TextInputLayout
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background
okhttp3.Response$Builder: java.lang.String message
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemClickListener mItemClickListener
com.google.android.material.R$styleable: int[] ActionMenuView
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds val$viewBounds
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState activityState
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $cancelable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGGroup
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
com.facebook.react.animated.SpringAnimation: double mEndValue
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: com.google.android.material.textfield.TextInputLayout layout
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: android.util.Property CIRCULAR_REVEAL
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
okhttp3.Dispatcher: java.lang.Runnable idleCallback
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
com.facebook.react.views.modal.ReactModalHostView: boolean mPropertyRequiresNewDialog
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.TransformCallback mTransformCallback
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mExperimentalThreadHandoffQueueEnabled
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs
com.facebook.cache.disk.DiskStorageCache$CacheStats: long mCount
androidx.cardview.widget.CardViewBaseImpl: android.graphics.RectF mCornerRect
androidx.cardview.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
androidx.appcompat.app.AppCompatDelegateImpl: java.util.Map sLocalNightModes
com.facebook.imagepipeline.core.ProducerFactory: boolean mKeepCancelledFetchAsLowPriority
kotlin.jvm.internal.Ref$IntRef: int element
okhttp3.Response: okhttp3.Headers headers
com.facebook.drawee.generic.RoundingParams: float mPadding
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int[] mPrefetchArray
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach
com.facebook.drawee.drawable.RoundedDrawable: float[] mCornerRadii
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type RIGHT
com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mStartingEndTrim
androidx.appcompat.widget.AppCompatBackgroundHelper: int mBackgroundResId
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.google.android.material.internal.TextDrawableHelper$1: com.google.android.material.internal.TextDrawableHelper this$0
androidx.core.util.LogWriter: java.lang.StringBuilder mBuilder
com.facebook.cache.disk.DiskCacheConfig$Builder: int mVersion
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.ViewGroupManager val$viewManager
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.google.android.material.textfield.ClearTextEndIconDelegate$4: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
com.google.android.material.R$drawable: int ic_edit_black_24dp
androidx.core.R$styleable: int[] FontFamilyFont
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $cancelable
bolts.BoltsExecutors$ImmediateExecutor: java.lang.ThreadLocal executionDepth
androidx.recyclerview.widget.DefaultItemAnimator$3: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager mReactInstanceManager
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.common.internal.Supplier mDebugOverlayEnabledSupplier
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: com.facebook.imagepipeline.producers.PartialDiskCacheProducer this$0
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags
com.facebook.react.views.view.ReactViewBackgroundDrawable$1: int[] $SwitchMap$com$facebook$react$views$view$ReactViewBackgroundDrawable$BorderStyle
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListener mListener
com.google.android.material.R$styleable: int MaterialTextAppearance_android_lineHeight
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1: androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring
com.google.android.material.internal.NavigationMenuItemView: androidx.core.view.AccessibilityDelegateCompat accessibilityDelegate
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
com.facebook.react.ReactRootView: int mLastOffsetY
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.google.android.material.chip.ChipDrawable: float chipMinHeight
androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged
com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation TRANSPARENT_MODAL
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method getMethod
com.facebook.imagepipeline.producers.JobScheduler: long mJobStartTime
com.google.android.material.datepicker.MaterialCalendar: java.lang.Object NAVIGATION_PREV_TAG
androidx.core.R$styleable: int FontFamilyFont_fontStyle
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable sEmptyDrawable
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mShownAnchorView
okhttp3.internal.proxy.NullProxySelector: okhttp3.internal.proxy.NullProxySelector INSTANCE
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
com.facebook.react.modules.statusbar.StatusBarModule$2: com.facebook.react.modules.statusbar.StatusBarModule this$0
androidx.appcompat.app.AlertController: int mViewLayoutResId
okhttp3.Cookie$Builder: java.lang.String domain
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1: com.google.android.material.behavior.HideBottomViewOnScrollBehavior this$0
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object[] mMultiImageRequests
androidx.appcompat.R$styleable: int SearchView_queryHint
com.zoontek.rnbootsplash.RNBootSplashModule: com.zoontek.rnbootsplash.RNBootSplashModule$Status mStatus
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] $VALUES
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader: boolean sInitialized
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: boolean mEncodedCacheEnabled
com.facebook.react.ReactInstanceManager$3$1: boolean val$packagerIsRunning
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_OTHER
com.google.android.material.internal.DescendantOffsetUtils: java.lang.ThreadLocal matrix
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.concurrent.atomic.AtomicInteger mLastTaskId
androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean mLocalThumbnailPreviewsEnabled
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
com.facebook.common.references.CloseableReference: boolean mIsClosed
com.facebook.react.modules.core.JavaTimerManager$2: com.facebook.react.modules.core.JavaTimerManager this$0
com.zoontek.rnbootsplash.RNBootSplashModule$4: com.zoontek.rnbootsplash.RNBootSplashModule this$0
bolts.Task: java.lang.Object lock
com.facebook.soloader.ApkSoSource: int mFlags
com.facebook.react.views.picker.ReactPicker: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
com.facebook.drawee.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint
okhttp3.OkHttpClient: boolean followRedirects
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayDeque mNonBatchedOperations
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: com.facebook.react.bridge.Callback mSuccess
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
com.facebook.drawee.drawable.RoundedColorDrawable: float[] mInsideBorderRadii
androidx.appcompat.widget.SearchView: java.lang.Runnable mReleaseCursorRunnable
androidx.appcompat.view.menu.MenuItemImpl: boolean mIsActionViewExpanded
com.google.android.material.chip.ChipDrawable: float iconEndPadding
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.modules.image.ImageLoaderModule$1: com.facebook.react.bridge.Promise val$promise
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
androidx.core.text.BidiFormatter: int mFlags
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.common.internal.ImmutableList mDrawableFactories
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
com.facebook.react.views.text.TextAttributeProps: boolean mIsColorSet
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ImageResizeMethod mResizeMethod
com.google.android.material.R$styleable: int MaterialButton_iconPadding
com.google.android.material.textfield.TextInputLayout: boolean inDrawableStateChanged
okhttp3.Response: okhttp3.Request request
com.horcrux.svg.MaskView: com.horcrux.svg.SVGLength mX
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitleCondensed
androidx.transition.Transition: androidx.transition.TransitionValuesMaps mEndValues
androidx.fragment.R$styleable: int[] FragmentContainerView
com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintList
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd
com.facebook.imagepipeline.memory.GenericByteArrayPool: int[] mBucketSizes
androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode UNDEFINED
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsBackgroundColorSet
androidx.appcompat.widget.TooltipPopup: int[] mTmpAnchorPos
com.facebook.react.perflogger.NativeModulePerfLogger: boolean sIsSoLibraryLoaded
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarStyle calendarStyle
androidx.fragment.app.FragmentState: boolean mFromLayout
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MINDATE
com.horcrux.svg.FontData: java.lang.String fontVariationSettings
com.facebook.react.animated.DivisionAnimatedNode: int[] mInputNodes
androidx.appcompat.widget.DropDownListView: android.graphics.Rect mSelectorRect
androidx.appcompat.view.menu.ActionMenuItem: int mIconResId
com.facebook.imagepipeline.memory.BufferMemoryChunk: int mSize
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
androidx.appcompat.R$layout: int abc_search_view
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.facebook.drawee.drawable.RoundedDrawable: float mPadding
com.google.android.material.shape.ShapePath$PathArcOperation: float left
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.graphics.ColorFilter colorFilter
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mVisibleAnchorPosition
com.google.android.material.shadow.ShadowRenderer: float[] edgePositions
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator iterator
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable closeIcon
androidx.recyclerview.R$attr: int recyclerViewStyle
com.google.android.material.R$style: int Widget_MaterialComponents_Button
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
com.google.android.material.R$drawable: int design_password_eye
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.views.text.ReactBaseTextShadowNode: float mMinimumFontScale
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: int mMaxBitmapSize
com.facebook.react.views.switchview.ReactSwitchEvent: boolean mIsChecked
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray mActiveAnimations
androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type type
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: com.facebook.soloader.ExoSoSource$ExoUnpacker this$1
com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener mPermissionListener
androidx.appcompat.R$styleable: int MenuItem_android_title
com.google.android.material.R$styleable: int Chip_shapeAppearance
com.facebook.yoga.YogaMeasureMode: int mIntValue
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_halfExpandedRatio
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice DEFAULT
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
kotlin.Unit: kotlin.Unit INSTANCE
okhttp3.Cache$RealCacheRequest: okio.Sink cacheOut
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.NativeViewHierarchyManager this$0
androidx.core.provider.FontRequestWorker$1: int val$style
okhttp3.Protocol: okhttp3.Protocol SPDY_3
androidx.appcompat.R$attr: int ratingBarStyle
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.Priority mRequestPriority
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager$SnackbarRecord currentSnackbar
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: com.facebook.react.bridge.Callback mSuccess
com.facebook.react.views.text.ReactTextView: int mNumberOfLines
com.google.android.material.shape.ShapeAppearancePathProvider: float[] scratch2
com.google.android.material.R$attr: int appBarLayoutStyle
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector YEAR
androidx.lifecycle.SavedStateHandleController: java.lang.String mKey
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
com.facebook.react.modules.image.ImageLoaderModule$3: int val$requestId
androidx.appcompat.view.menu.CascadingMenuPopup$2: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.appcompat.widget.AppCompatSpinner$2: androidx.appcompat.widget.AppCompatSpinner this$0
com.facebook.drawee.drawable.RoundedColorDrawable: int mBorderColor
com.facebook.drawee.controller.BaseControllerListener: com.facebook.drawee.controller.ControllerListener NO_OP_LISTENER
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
com.google.android.material.R$styleable: int TextInputLayout_passwordToggleContentDescription
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView
androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.material.shape.AdjustedCornerSize: com.google.android.material.shape.CornerSize other
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: boolean $cancelable
com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint textPaint
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated
com.horcrux.svg.PathParser: float mScale
com.facebook.react.animated.NativeAnimatedModule$17: int val$viewTag
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator fadeOutAnim
androidx.recyclerview.widget.DefaultItemAnimator$8: android.view.ViewPropertyAnimator val$newViewAnimation
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: android.os.Handler mUiHandler
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method removeMethod
androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
okhttp3.internal.http.HttpMethod: okhttp3.internal.http.HttpMethod INSTANCE
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle invalidDay
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
com.facebook.react.modules.statusbar.StatusBarModule$1: boolean val$animated
androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.imagepipeline.request.ImageRequest val$imageRequest
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
okhttp3.internal.concurrent.Task: boolean cancelable
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUITEM
com.google.android.material.internal.CollapsingTextHelper: android.graphics.RectF currentBounds
androidx.recyclerview.widget.SnapHelper: android.widget.Scroller mGravityScroller
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter: com.facebook.react.views.picker.ReactPicker mReactPicker
com.th3rdwave.safeareacontext.SafeAreaProviderManager$1: com.th3rdwave.safeareacontext.SafeAreaProviderManager this$0
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
androidx.appcompat.R$styleable: int Toolbar_menu
androidx.appcompat.R$styleable: int Spinner_android_entries
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer: android.content.ContentResolver mContentResolver
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$CheckedStateTracker checkedStateTracker
com.google.android.material.R$styleable: int[] View
okhttp3.CacheControl: boolean immutable
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginColor: android.util.SparseIntArray IMAGE_ORIGIN_COLOR_MAP
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object TOGGLE_BUTTON_TAG
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: boolean isOrphan
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mStartAction
com.swmansion.rnscreens.Screen: boolean isGestureEnabled
com.facebook.imagepipeline.producers.BaseProducerContext: boolean mIsIntermediateResultExpected
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ActionMenuItemView this$0
com.facebook.react.views.textinput.ReactEditText: java.lang.Boolean mBlurOnSubmit
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload1$inlined
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
com.facebook.yoga.YogaDisplay: int mIntValue
com.facebook.react.modules.datepicker.DatePickerDialogFragment: android.app.DatePickerDialog$OnDateSetListener mOnDateSetListener
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: com.facebook.imagepipeline.cache.MemoryCache mDelegate
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$2: float val$realHeight
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: com.facebook.imagepipeline.producers.SettableProducerContext mSettableProducerContext
androidx.appcompat.R$styleable: int MenuItem_android_visible
androidx.recyclerview.widget.GapWorker: long mFrameIntervalNs
androidx.customview.widget.ViewDragHelper: int mDragState
com.facebook.react.views.image.MultiPostprocessor: java.util.List mPostprocessors
androidx.core.os.CancellationSignal: boolean mCancelInProgress
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
com.facebook.react.animated.NativeAnimatedModule$10: int val$tag
androidx.appcompat.app.AlertController: android.content.Context mContext
com.horcrux.svg.VirtualView$1: int[] $SwitchMap$com$horcrux$svg$SVGLength$UnitType
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
com.facebook.react.uimanager.Spacing: float mDefaultValue
com.google.android.material.R$styleable: int[] PopupWindow
com.facebook.react.modules.toast.ToastModule$2: int val$duration
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
okhttp3.Response$Builder: okhttp3.Response networkResponse
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mRemoveClippedSubviews
com.facebook.react.animated.NativeAnimatedModule$21: java.lang.String val$eventName
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.android.material.card.MaterialCardView: int[] CHECKABLE_STATE_SET
kotlin.sequences.DropSequence: int count
com.google.android.material.chip.Chip: android.widget.CompoundButton$OnCheckedChangeListener onCheckedChangeListenerInternal
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalJsFrames
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
com.google.android.material.chip.ChipDrawable: float chipCornerRadius
com.facebook.react.views.scroll.ReactScrollView: boolean mActivelyScrolling
com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator menuAnimator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
androidx.appcompat.widget.ScrollingTabContainerView: int mMaxTabWidth
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY
com.google.android.material.R$styleable: int TextInputLayout_android_hint
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
com.horcrux.svg.Brush: boolean mUseObjectBoundingBox
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
androidx.appcompat.R$attr: int alertDialogStyle
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.google.android.material.R$styleable: int[] LinearLayoutCompat_Layout
com.google.android.material.R$styleable: int TextAppearance_fontFamily
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.uimanager.UIManagerModule mUIManagerModule
com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.reflect.Method mSetExclusiveCheckableMethod
kotlin.text.Regex: kotlin.text.Regex$Companion Companion
com.facebook.imageformat.DefaultImageFormatChecker: byte[] BMP_HEADER
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
com.google.android.material.chip.ChipGroup$CheckedStateTracker: com.google.android.material.chip.ChipGroup this$0
androidx.core.widget.NestedScrollView: boolean mFillViewport
com.google.android.material.chip.ChipDrawable: android.text.TextUtils$TruncateAt truncateAt
com.google.android.material.transformation.FabTransformationBehavior$4: com.google.android.material.transformation.FabTransformationBehavior this$0
com.facebook.drawee.drawable.ScaleTypeDrawable: int mUnderlyingHeight
androidx.transition.ChangeBounds$ViewBounds: int mTopLeftCalls
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback
com.horcrux.svg.SymbolView: java.lang.String mAlign
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
com.facebook.react.views.textinput.ReactEditText: boolean mDetectScrollMovement
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.horcrux.svg.MaskView: com.horcrux.svg.SVGLength mY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix
com.google.android.material.appbar.ViewOffsetHelper: android.view.View view
androidx.core.R$id: int tag_accessibility_heading
androidx.transition.ChangeBounds$ViewBounds: android.view.View mView
okhttp3.RequestBody$Companion$toRequestBody$2: int $byteCount
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: androidx.appcompat.app.ToolbarActionBar this$0
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
androidx.appcompat.widget.SuggestionsAdapter: int mIconName2Col
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod mProducerFactoryMethod
androidx.appcompat.widget.TooltipCompatHandler$2: androidx.appcompat.widget.TooltipCompatHandler this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
okio.Options: okio.ByteString[] byteStrings
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: com.facebook.react.common.LongArray mViewHierarchyUpdateFinishedEvents
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
com.facebook.react.modules.fresco.SystraceRequestListener: java.util.Map mProducerID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode SPINNER
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET
com.facebook.react.animated.NativeAnimatedNodesManager$1: int val$uiManagerType
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle
androidx.appcompat.R$id: int action_bar_container
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Path mInnerClipPathForBorderRadius
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources$Theme mTheme
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList chipBackgroundColor
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority MEDIUM
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode DEFAULT
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int[] mColors
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String mStyle
com.google.android.material.R$styleable: int[] AppCompatImageView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: java.lang.Object mInfo
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.animation.Animator mAnimator
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.String mId
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.ArrayMap mDelegates
com.facebook.soloader.SoLoader: java.util.Set sLoadedAndMergedLibraries
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: int mCount
androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch
com.google.android.material.R$id: int mtrl_child_content_container
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task activeTask
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] $VALUES
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: com.facebook.react.bridge.Callback mError
com.facebook.react.animated.PropsAnimatedNode: java.util.Map mPropNodeMapping
okhttp3.HttpUrl: okhttp3.HttpUrl$Companion Companion
com.facebook.cache.disk.DynamicDefaultDiskStorage: java.lang.Class TAG
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: com.facebook.imagepipeline.producers.NetworkFetcher$Callback val$callback
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
androidx.appcompat.app.AlertController: int mViewSpacingRight
com.horcrux.svg.GlyphContext: int mDXsIndex
com.google.android.material.R$animator: int mtrl_fab_transformation_sheet_expand_spec
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mParentTransform
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
okio.RealBufferedSource: okio.Source source
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mUseDownsamplingRatioForResizing
com.horcrux.svg.TSpanView: java.util.ArrayList emoji
androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout
com.facebook.react.ReactActivityDelegate$2: java.lang.String[] val$permissions
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.RectF mBounds
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mHeight
androidx.transition.ViewUtilsApi19: boolean sTryHiddenTransitionAlpha
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: float[] mTempPts
com.facebook.drawee.debug.DebugControllerOverlayDrawable: com.facebook.drawee.drawable.ScalingUtils$ScaleType mScaleType
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
androidx.fragment.app.FragmentTransition$5: boolean val$inIsPop
com.facebook.react.animated.DecayAnimation: double mDeceleration
com.facebook.react.ReactActivityDelegate$1: com.facebook.react.ReactActivityDelegate this$0
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
com.facebook.react.DebugCorePackage$1: com.facebook.react.DebugCorePackage this$0
com.facebook.react.views.text.ReactTextUpdate: int mTextBreakStrategy
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JavaScriptExecutorFactory mJsExecutorFactory
androidx.appcompat.R$styleable: int SwitchCompat_thumbTint
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: com.facebook.imagepipeline.producers.ThumbnailProducer[] mThumbnailProducers
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
com.google.android.material.R$styleable: int MaterialCalendar_yearSelectedStyle
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] $VALUES
androidx.core.graphics.Insets: int left
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTintMode
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
com.facebook.react.uimanager.ViewProps: java.util.HashSet LAYOUT_ONLY_PROPS
com.google.android.material.R$styleable: int TextInputLayout_endIconTintMode
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType NATIVE_ANIMATED_MODULE
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap val$event
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.android.material.R$styleable: int ChipGroup_singleLine
com.google.android.material.R$layout: int mtrl_calendar_horizontal
com.facebook.imagepipeline.producers.FetchState: int mOnNewResultStatusFlags
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.widget.MenuPopupWindow window
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: com.facebook.react.ReactRootView this$0
okhttp3.internal.connection.RealConnection: boolean noNewExchanges
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: int $streamId$inlined
com.facebook.soloader.SoLoader: com.facebook.soloader.SoFileLoader sSoFileLoader
com.facebook.react.modules.network.ProgressRequestBody$1: com.facebook.react.modules.network.ProgressRequestBody this$0
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mTagsToDelete
com.google.android.material.R$styleable: int MaterialCalendarItem_itemStrokeColor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.cache.disk.SettableCacheEvent: int sRecycledCount
okhttp3.OkHttpClient: int callTimeoutMillis
com.horcrux.svg.SvgViewModule$1: int val$tag
com.google.android.material.R$styleable: int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.listener.RequestListener2 mRequestListener2
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.ViewAtIndex[] mViewsToAdd
com.facebook.hermes.reactexecutor.HermesExecutor: java.lang.String mode_
com.horcrux.svg.GlyphContext: double[] mRs
com.google.android.material.R$styleable: int[] ActionMode
androidx.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_PROPERTY
androidx.appcompat.resources.R$styleable: int[] GradientColor
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.Configuration configuration
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupOrder
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mLayoutParent
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.react.bridge.ReadableMap mHeaders
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.facebook.react.views.text.ReactTextView: boolean mAdjustsFontSizeToFit
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mKeylines
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.util.Map shortcutExtras
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean isPosted
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDx
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle todayYear
androidx.core.R$id: int accessibility_custom_action_1
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix sTileMatrix
com.facebook.react.views.image.ReactImageView: float mBorderRadius
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: com.facebook.imagepipeline.producers.LocalExifThumbnailProducer this$0
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: boolean mIsFinished
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: int $streamId$inlined
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
androidx.appcompat.R$attr: int actionBarStyle
com.google.android.material.R$styleable: int Chip_android_textColor
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.views.text.CustomStyleSpan: int mStyle
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean mExcludeBitmapConfigFromComparison
com.facebook.react.animated.DecayAnimation: int mCurrentLoop
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFamily
com.google.android.material.R$styleable: int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mDrawable
com.facebook.imagepipeline.memory.BufferMemoryChunk: long mId
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: android.content.res.AssetManager mAssetManager
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView
com.google.android.material.R$id: int mtrl_calendar_frame
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTint
com.google.android.material.internal.StateListAnimator$Tuple: android.animation.ValueAnimator animator
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener mImagePerfRequestListener
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.info.ImageOriginListener mImageOriginListener
com.facebook.react.ReactInstanceManagerBuilder: java.util.List mPackages
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger mState
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod mProducerFactoryMethod
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] perspective
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.PointF mActualImageFocusPoint
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: android.graphics.Rect tmpRect
com.facebook.react.uimanager.ViewProps: int[] PADDING_MARGIN_SPACING_TYPES
okhttp3.RequestBody$Companion$toRequestBody$1: okio.ByteString $this_toRequestBody
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.interfaces.DraweeController mOldController
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingTopNoTitle
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback
androidx.appcompat.R$styleable: int[] ListPopupWindow
androidx.appcompat.widget.SwitchCompat: int mTouchSlop
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int mScrollAnimationDuration
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mHeightMeasureSpec
com.google.android.material.R$styleable: int[] SnackbarLayout
com.google.android.material.R$id: int month_grid
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType END_DRAG
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$Companion Companion
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String mGroupName
androidx.transition.TransitionManager: java.util.ArrayList sPendingTransitions
com.horcrux.svg.VirtualView: boolean mCTMInvertible
androidx.transition.PathProperty: android.graphics.PathMeasure mPathMeasure
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
androidx.recyclerview.widget.DefaultItemAnimator$4: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollNonTouch
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath
androidx.recyclerview.R$dimen: int fastscroll_minimum_range
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.ColorSpace mColorSpace
com.horcrux.svg.GroupView: com.horcrux.svg.GlyphContext mGlyphContext
androidx.fragment.app.Fragment$AnimationInfo: int mNextAnim
kotlin.text.Charsets: java.nio.charset.Charset UTF_8
com.facebook.react.views.text.TextAttributeProps: float mLineHeight
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean mRetainImageOnFailure
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: com.facebook.react.modules.datepicker.DatePickerDialogModule this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mGingerbreadDecoderEnabled
androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl
okhttp3.Address: java.net.ProxySelector proxySelector
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mLoopCount
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point subpath_start_
com.facebook.drawee.backends.pipeline.info.ImagePerfData: int mOnScreenHeightPx
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle SOLID
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean compatPadding
com.facebook.common.util.UriUtil: android.net.Uri LOCAL_CONTACT_IMAGE_URI
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
com.facebook.react.animated.NativeAnimatedModule$18: int val$viewTag
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
com.google.android.material.internal.CollapsingTextHelper: java.lang.CharSequence textToDraw
androidx.appcompat.widget.LinearLayoutCompat: int mDividerPadding
androidx.cardview.widget.RoundRectDrawable: boolean mInsetForPadding
com.horcrux.svg.RenderableView: android.graphics.Paint$Cap strokeLinecap
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
com.horcrux.svg.FontData: com.horcrux.svg.FontData Defaults
androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
com.facebook.imagepipeline.core.PriorityThreadFactory: java.util.concurrent.atomic.AtomicInteger mThreadNumber
com.facebook.common.memory.PooledByteStreams: com.facebook.common.memory.ByteArrayPool mByteArrayPool
com.google.android.material.datepicker.MaterialDatePicker: java.lang.CharSequence titleText
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView
com.google.android.material.datepicker.MaterialCalendar$2: int val$orientation
kotlin.ranges.IntProgressionIterator: int finalElement
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.facebook.react.animated.NativeAnimatedNodesManager$2: com.facebook.react.animated.NativeAnimatedNodesManager this$0
androidx.cursoradapter.widget.ResourceCursorAdapter: int mLayout
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mEncodedCacheEnabled
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
androidx.transition.Transition: java.util.ArrayList mTargetIdChildExcludes
com.google.android.material.internal.ForegroundLinearLayout: int foregroundGravity
okhttp3.internal.cache.CacheStrategy: okhttp3.internal.cache.CacheStrategy$Companion Companion
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: java.lang.String LOG_TAG
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String mText
com.facebook.react.animated.NativeAnimatedModule$7: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.facebook.react.R$string: int spinbutton_description
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView
androidx.appcompat.app.ToolbarActionBar: boolean mMenuCallbackSet
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.google.android.material.animation.MotionTiming: android.animation.TimeInterpolator interpolator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect val$epicenter
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN
com.facebook.react.modules.core.ReactChoreographer$2: com.facebook.react.modules.core.ReactChoreographer this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mUsingCustomStart
com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager mCookieManager
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
androidx.appcompat.widget.ListPopupWindow: int mDropDownHeight
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsTranslucent
com.facebook.react.ReactInstanceManager$3: com.facebook.react.ReactInstanceManager this$0
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.react.modules.network.ForwardingCookieHandler$1: com.facebook.react.modules.network.ForwardingCookieHandler this$0
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
com.facebook.react.animated.NativeAnimatedModule$6: com.facebook.react.animated.NativeAnimatedModule this$0
com.google.android.material.appbar.HeaderBehavior: int touchSlop
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mKeepCancelledFetchAsLowPriority
com.facebook.react.views.image.ImageLoadEvent: java.lang.String mSourceUri
androidx.appcompat.view.menu.BaseMenuPresenter: int mId
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
com.horcrux.svg.GlyphContext: double mDX
com.facebook.imagepipeline.request.ImageRequest: com.facebook.common.internal.Fn REQUEST_TO_URI_FN
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float cradleVerticalOffset
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: com.facebook.common.references.CloseableReference valueRef
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions ROTATION_OPTIONS_AUTO_ROTATE
com.facebook.imagepipeline.memory.BucketMap: com.facebook.imagepipeline.memory.BucketMap$LinkedEntry mHead
com.google.android.material.bottomappbar.BottomAppBar$6: com.google.android.material.bottomappbar.BottomAppBar this$0
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight Bolder
com.google.android.material.card.MaterialCardView: boolean isParentCardViewDoneInitializing
androidx.transition.WindowIdApi14: android.os.IBinder mToken
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
androidx.transition.Transition: long mDuration
androidx.appcompat.widget.Toolbar: boolean mEatingHover
com.facebook.react.uimanager.events.EventDispatcherImpl: int mEventsToDispatchSize
com.facebook.react.views.scroll.ReactScrollView: int mFinalAnimatedPositionScrollY
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount
com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemShowAsAction
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2: com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanOffsetsSize
com.google.android.material.transformation.FabTransformationBehavior$2: android.view.View val$child
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor mLightWeightBackgroundExecutor
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsDispatchUIFrameCallbackEnqueued
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.views.scroll.ReactScrollView: int mLastStateUpdateScrollX
okhttp3.Cache: int writeAbortCount
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: char[] $delimiters
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable
com.facebook.drawee.drawable.ArrayDrawable: boolean mIsMutated
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference$LeakHandler mLeakHandler
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int mSelectionStart
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.content.res.ColorStateList fillColor
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRect
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownVerticalOffsetSet
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mOrientation
com.zoontek.rnbootsplash.RNBootSplashModule$2: com.zoontek.rnbootsplash.RNBootSplashModule this$0
com.facebook.react.modules.permissions.PermissionsModule$2: com.facebook.react.bridge.Promise val$promise
com.google.android.material.R$attr: int chipStyle
com.google.android.material.R$styleable: int[] AppBarLayout
androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout
okhttp3.internal.Util: okhttp3.Headers EMPTY_HEADERS
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
com.facebook.imageutils.TiffUtil$TiffHeader: int byteOrder
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean mDidLayout
androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline textBeforeEdge
com.horcrux.svg.SvgView: boolean mRemovedFromReactViewHierarchy
com.facebook.react.ReactInstanceManagerBuilder: java.util.Map mCustomPackagerCommandHandlers
androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.RNSVGMarkerType type
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.reflect.Method mSetter
com.facebook.soloader.UnpackingSoSource: java.lang.String mCorruptedLib
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mListener
com.horcrux.svg.UseView: com.horcrux.svg.SVGLength mX
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.RectF mBitmapBounds
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap
com.facebook.cache.disk.DiskStorageCache$Params: long mDefaultCacheSizeLimit
androidx.core.R$styleable: int GradientColor_android_centerY
okhttp3.internal.connection.Exchange$ResponseBodySource: okhttp3.internal.connection.Exchange this$0
com.facebook.drawee.controller.AbstractDraweeController: boolean mIsVisibleInViewportHint
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.common.internal.ImmutableList mCustomDrawableFactories
androidx.appcompat.widget.SearchView: android.view.View mDropDownAnchor
com.google.android.material.shadow.ShadowRenderer: int shadowMiddleColor
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
androidx.appcompat.R$styleable: int[] GradientColorItem
com.google.android.material.R$string: int password_toggle_content_description
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean decodeAllFrames
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequest val$request
com.facebook.imagepipeline.producers.PostprocessorProducer: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mBitmapFactory
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: int mIndexOfDataSourceWithResult
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] $VALUES
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.internal.connection.RouteSelector this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: int mColor
com.facebook.react.animated.SpringAnimation: double mOriginalValue
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.fresco.ui.common.DimensionsInfo mDimensionsInfo
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4: int val$endingAlpha
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater
com.facebook.react.views.text.CustomStyleSpan: java.lang.String mFeatureSettings
com.swmansion.rnscreens.events.ScreenWillDisappearEvent: com.swmansion.rnscreens.events.ScreenWillDisappearEvent$Companion Companion
androidx.appcompat.R$string: int abc_searchview_description_search
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactTextInputManager this$0
com.google.android.material.internal.CollapsingTextHelper: int expandedTextGravity
com.facebook.react.uimanager.events.Event: int mUniqueID
com.horcrux.svg.GlyphPathBag: int[][] data
com.facebook.imagepipeline.request.ImageRequest: int mDelayMs
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType DEFAULT_ACTUAL_IMAGE_SCALE_TYPE
com.facebook.react.animated.NativeAnimatedModule$21: int val$animatedValueTag
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory mCloseableReferenceFactory
androidx.appcompat.widget.ActionMenuPresenter: int mOpenSubMenuId
com.facebook.react.animated.NativeAnimatedModule$22: com.facebook.react.bridge.Callback val$callback
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLine
com.facebook.react.config.ReactFeatureFlags: boolean useViewManagerDelegatesForCommands
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
androidx.fragment.app.FragmentAnim$3: android.view.View val$viewToAnimate
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType DELETE
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: com.facebook.common.references.CloseableReference mSourceImageRef
com.facebook.react.ReactInstanceManagerBuilder: boolean mUseDeveloperSupport
androidx.core.widget.NestedScrollView: int mLastMotionY
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER_CROP
com.google.android.material.R$styleable: int[] GradientColor
androidx.core.widget.NestedScrollView: int mLastScrollerY
com.horcrux.svg.PropHelper$1: int[] $SwitchMap$com$horcrux$svg$SVGLength$UnitType
com.facebook.react.animated.DecayAnimation: int mIterations
com.facebook.react.views.textinput.ReactEditText: boolean mContainsImages
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
androidx.transition.FragmentTransitionSupport$3: java.lang.Object val$enterTransition
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge ALL
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
com.google.android.material.bottomappbar.BottomAppBar$Behavior: android.graphics.Rect fabContentRect
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener
com.google.android.material.R$styleable: int MaterialTextAppearance_lineHeight
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mPreOperations
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mInverseParentTransform
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
androidx.appcompat.widget.ScrollingTabContainerView$TabView: int[] BG_ATTRS
androidx.cardview.widget.RoundRectDrawableWithShadow: float mRawShadowSize
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory GENERIC_IO
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList mIconTintList
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] $VALUES
com.facebook.imagepipeline.producers.SwallowResultProducer$1: com.facebook.imagepipeline.producers.SwallowResultProducer this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: java.util.ArrayList mAnimators
com.facebook.react.views.text.ReactTextView: com.facebook.react.views.view.ReactViewBackgroundManager mReactBackgroundManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.horcrux.svg.VirtualView: java.lang.String mMask
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_FAILURE_INT
com.swmansion.rnscreens.ScreenWindowTraits: java.lang.Integer mDefaultStatusBarColor
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType $contentType
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.drawee.controller.AbstractDraweeController: java.util.Map COMPONENT_EXTRAS
com.facebook.cache.disk.SettableCacheEvent: long mItemSize
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitleCondensed
androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet
androidx.transition.ChangeBounds$10: android.view.ViewGroup val$sceneRoot
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean mIndeterminate
androidx.transition.ViewOverlayApi14$OverlayViewGroup: java.lang.reflect.Method sInvalidateChildInParentFastMethod
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend backend
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: boolean dismiss
com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy
com.google.android.material.R$styleable: int ThemeEnforcement_enforceMaterialTheme
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
bolts.Task$14: bolts.CancellationToken val$ct
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: int $index$inlined
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole HEADER
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation NONE
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.facebook.react.ReactInstanceManager$9: com.facebook.react.ReactInstanceManager this$0
androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder this$1
kotlin.text.Charsets: java.nio.charset.Charset utf_32le
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
com.horcrux.svg.VirtualView: java.lang.String mMarkerMid
com.facebook.cache.disk.DiskStorageCache: boolean mIndexPopulateAtStartupEnabled
com.google.android.material.bottomsheet.BottomSheetBehavior: int state
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.facebook.react.views.text.TextAttributeProps: int mColor
com.google.android.material.appbar.AppBarLayout$BaseBehavior: java.lang.ref.WeakReference lastNestedScrollingChildRef
com.facebook.react.views.scroll.ScrollEvent: int mScrollX
com.facebook.react.views.image.ReactImageView: com.facebook.react.bridge.ReadableMap mHeaders
okhttp3.internal.http2.Settings: int set
com.google.android.material.appbar.ViewUtilsLollipop: int[] STATE_LIST_ANIM_ATTRS
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
androidx.appcompat.R$id: int custom
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: java.lang.String $name
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod BITMAP_ONLY
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: boolean mImmutableBitmapFallback
com.facebook.react.views.scroll.ReactScrollView: boolean mSendMomentumEvents
com.facebook.cache.disk.DiskStorageCache$CacheStats: long mSize
com.google.android.material.R$styleable: int Chip_closeIconSize
androidx.appcompat.app.AlertController: int mViewSpacingLeft
androidx.appcompat.widget.Toolbar: int mTitleMarginTop
com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.common.CacheEventListener$EvictionReason mEvictionReason
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
androidx.appcompat.app.AlertController: android.widget.TextView mMessageView
com.facebook.react.ReactInstanceManager$9: com.facebook.react.uimanager.ReactRoot val$reactRoot
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF insetRectF
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams mSmallByteArrayPoolParams
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry
com.facebook.react.jstasks.HeadlessJsTaskContext$1: com.facebook.react.jstasks.HeadlessJsTaskConfig val$taskConfig
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator mInterpolator
androidx.appcompat.widget.SearchView: boolean mExpandedInActionView
com.google.android.material.chip.Chip: android.graphics.Rect EMPTY_BOUNDS
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvEnd
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mKeyboardHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
okhttp3.HttpUrl: java.util.List pathSegments
okhttp3.Cache$RealCacheRequest: okio.Sink body
com.facebook.react.PackageList: com.facebook.react.shell.MainPackageConfig mConfig
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay FLEX
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.Event[] mEventsToDispatch
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnectionPool connectionPool
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: com.facebook.imagepipeline.memory.BucketMap$LinkedEntry next
com.google.android.material.internal.FlowLayout: boolean singleLine
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.platform.OpenJSSEPlatform: java.security.Provider provider
okhttp3.internal.http.ExchangeCodec$Companion: okhttp3.internal.http.ExchangeCodec$Companion $$INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView
com.horcrux.svg.MarkerView: android.graphics.Matrix markerTransform
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag BRIDGE_CALLS
com.facebook.react.uimanager.UIImplementation: int[] mMeasureBuffer
androidx.appcompat.view.menu.MenuBuilder: boolean mIsClosing
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
okhttp3.RequestBody$Companion$toRequestBody$2: byte[] $this_toRequestBody
com.facebook.react.views.view.ReactViewBackgroundManager: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.horcrux.svg.VirtualView: android.graphics.RectF mClipBounds
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType UPDATE
bolts.Task: java.util.concurrent.Executor UI_THREAD_EXECUTOR
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView
com.facebook.react.animated.TrackingAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.horcrux.svg.GlyphContext: com.horcrux.svg.SVGLength[] mDXs
com.facebook.react.modules.debug.FpsDebugFrameCallback: int mNumFrameCallbacksWithBatchDispatches
com.facebook.react.module.model.ReactModuleInfo: boolean mHasConstants
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams mMemoryChunkPoolParams
okhttp3.ResponseBody$Companion$asResponseBody$1: long $contentLength
com.facebook.imagepipeline.core.ImagePipelineFactory: boolean sForceSinglePipelineInstance
androidx.cardview.widget.CardView: boolean mCompatPadding
com.google.android.material.R$styleable: int[] AppCompatSeekBar
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec hideMotionSpec
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.facebook.react.modules.debug.FpsDebugFrameCallback: long mFirstFrameTime
com.facebook.imagepipeline.core.ImagePipeline$8: com.facebook.imagepipeline.core.ImagePipeline this$0
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_fitToContents
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
com.facebook.drawee.drawable.AutoRotateDrawable: int mInterval
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper$ValueHolder holderTail
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache
com.horcrux.svg.GlyphContext: int mRsIndex
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange exchange
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
androidx.cardview.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds
androidx.collection.LongSparseArray: long[] mKeys
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.facebook.react.fabric.FabricSoLoader: boolean sDidInit
androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: com.facebook.react.uimanager.UIManagerModule this$0
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
okhttp3.internal.Util: kotlin.text.Regex VERIFY_AS_IP_ADDRESS
androidx.fragment.R$styleable: int FragmentContainerView_android_name
com.google.android.material.internal.NavigationMenuItemView: android.widget.CheckedTextView textView
androidx.transition.Transition: androidx.transition.TransitionSet mParent
androidx.appcompat.R$styleable: int[] ActionMenuItemView
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
com.facebook.drawee.drawable.MatrixDrawable: android.graphics.Matrix mMatrix
com.facebook.common.webp.WebpSupportStatus: com.facebook.common.webp.WebpBitmapFactory sWebpBitmapFactory
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitY: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$1: int[] $SwitchMap$com$facebook$react$uimanager$layoutanimation$LayoutAnimationType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaNode mYogaNode
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
com.facebook.react.animated.NativeAnimatedModule$10: com.facebook.react.animated.NativeAnimatedModule this$0
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
com.facebook.react.modules.debug.DevSettingsModule$2: java.lang.String val$title
androidx.appcompat.R$styleable: int AlertDialog_showTitle
okhttp3.HttpUrl$Builder: int port
com.google.android.material.internal.NavigationMenuItemView: int[] CHECKED_STATE_SET
androidx.recyclerview.widget.DefaultItemAnimator$8: androidx.recyclerview.widget.DefaultItemAnimator this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
com.horcrux.svg.GlyphContext: int mDXIndex
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType kStartMarker
okhttp3.internal.cache.DiskLruCache: boolean civilizedFileSystem
com.facebook.yoga.YogaLogLevel: int mIntValue
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
com.google.android.material.R$styleable: int Chip_android_textAppearance
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher$1: com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher this$1
com.facebook.drawee.drawable.MatrixDrawable: int mUnderlyingWidth
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams mBitmapPoolParams
com.facebook.imagepipeline.producers.JobScheduler$2: com.facebook.imagepipeline.producers.JobScheduler this$0
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsTopInsetEnabled
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
androidx.fragment.app.FragmentState: int mContainerId
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation BOTTOM_START
com.facebook.datasource.AbstractDataSource: com.facebook.datasource.AbstractDataSource$DataSourceStatus mDataSourceStatus
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float elevation
androidx.appcompat.app.WindowDecorActionBar$1: androidx.appcompat.app.WindowDecorActionBar this$0
com.google.android.material.chip.ChipDrawable: float iconStartPadding
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleAttr
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.CountingLruMap mCachedEntries
androidx.appcompat.widget.RtlSpacingHelper: int mRight
androidx.appcompat.view.menu.ListMenuPresenter: android.view.LayoutInflater mInflater
com.facebook.imagepipeline.producers.JobScheduler: com.facebook.imagepipeline.producers.JobScheduler$JobState mJobState
com.horcrux.svg.VirtualViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
com.facebook.imageformat.DefaultImageFormatChecker: byte[] DNG_HEADER_II
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
com.facebook.react.views.modal.ReactModalHostView: boolean mHardwareAccelerated
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mRect
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit AUTO
com.horcrux.svg.GlyphContext: com.horcrux.svg.FontData topFont
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList closeIconTint
com.facebook.react.views.text.TextAttributeProps: boolean mIsBackgroundColorSet
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.common.internal.Supplier mAsyncLogging
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.Matrix mInverseMatrix
com.google.android.material.internal.CheckableImageButton: boolean checkable
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: android.view.ViewGroup mViewGroup
okhttp3.internal.ws.WebSocketReader: boolean closed
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink sink
com.google.android.material.R$styleable: int Chip_checkedIcon
okhttp3.OkHttpClient: java.util.List protocols
com.facebook.react.animated.FrameBasedAnimationDriver: double mToValue
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.platform.PlatformDecoder mPlatformDecoder
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
com.facebook.react.modules.permissions.PermissionsModule$2: com.facebook.react.modules.permissions.PermissionsModule this$0
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource this$1
androidx.transition.ViewOverlayApi14: androidx.transition.ViewOverlayApi14$OverlayViewGroup mOverlayViewGroup
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMajor
com.facebook.react.uimanager.NativeViewHierarchyManager: android.widget.PopupMenu mPopupMenu
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase routeDatabase
androidx.appcompat.app.AlertController$ButtonHandler: java.lang.ref.WeakReference mDialog
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat WEBP_EXTENDED_WITH_ALPHA
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH
com.th3rdwave.safeareacontext.Rect: float height
androidx.appcompat.view.menu.BaseMenuWrapper: java.util.Map mSubMenus
androidx.fragment.app.FragmentState: boolean mDetached
com.facebook.imagepipeline.image.CloseableImage: java.util.Set mImageExtrasList
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mDiskCacheHistory
com.facebook.react.R$string: int menu_description
androidx.savedstate.Recreator$SavedStateProvider: java.util.Set mClasses
androidx.appcompat.widget.ViewStubCompat: int mInflatedId
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.widget.AppCompatSpinner this$0
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign CENTER
com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener startIconOnLongClickListener
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.http.ExchangeCodec$Companion Companion
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView
androidx.customview.widget.ViewDragHelper: int mTrackingEdges
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
com.google.android.material.chip.ChipGroup: int checkedId
androidx.appcompat.view.menu.ListMenuPresenter: int mThemeRes
androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: com.facebook.imagepipeline.common.ResizeOptions mResizeOptions
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1: com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver this$1
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestY
com.facebook.imagepipeline.cache.BufferedDiskCache$5: com.facebook.cache.common.CacheKey val$key
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat DNG
com.google.android.material.ripple.RippleUtils: int[] ENABLED_PRESSED_STATE_SET
okhttp3.Request$Builder: java.lang.String method
com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: int mImageOrigin
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
okio.Timeout: okio.Timeout$Companion Companion
com.facebook.react.ReactActivityDelegate: android.app.Activity mActivity
androidx.swiperefreshlayout.widget.CircularProgressDrawable: androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring mRing
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
com.google.android.material.animation.ImageMatrixProperty: android.graphics.Matrix matrix
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: boolean mUseDownsamplingRatio
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
com.google.android.material.shape.ShapePath: float startX
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] $VALUES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
com.horcrux.svg.FontData: double fontSize
com.google.android.material.R$id: int touch_outside
okhttp3.internal.http2.Http2Connection: long writeBytesTotal
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder$1: int[] $SwitchMap$com$facebook$drawee$controller$AbstractDraweeControllerBuilder$CacheLevel
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
bolts.Task$4: bolts.CancellationToken val$ct
com.facebook.debug.debugoverlay.model.DebugOverlayTag: java.lang.String name
com.google.android.material.R$animator: int design_fab_hide_motion_spec
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_Y
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme mTheme
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition
com.facebook.react.jstasks.HeadlessJsTaskContext$2: com.facebook.react.jstasks.HeadlessJsTaskContext this$0
androidx.customview.widget.ViewDragHelper: float mMaxVelocity
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalContentUriFetchSequence
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType RELATIVE
com.facebook.debug.debugoverlay.model.DebugOverlayTag: int color
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: java.lang.String mControllerId
com.google.android.material.behavior.SwipeDismissBehavior: boolean interceptingEvents
com.facebook.cache.disk.DynamicDefaultDiskStorage$State: com.facebook.cache.disk.DiskStorage delegate
androidx.transition.RectEvaluator: android.graphics.Rect mRect
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit POINT
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: byte[] EOI
com.facebook.drawee.gestures.GestureDetector: float mActionDownY
androidx.transition.Transition: java.util.ArrayList mTargetTypeChildExcludes
com.facebook.common.statfs.StatFsHelper: long RESTAT_INTERVAL_MS
com.facebook.react.modules.statusbar.StatusBarModule$1$1: com.facebook.react.modules.statusbar.StatusBarModule$1 this$1
okhttp3.internal.cache.DiskLruCache: int appVersion
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$producerContext
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer mForwardingConsumer
com.facebook.soloader.SoLoader: java.util.Map sLoadingLibraries
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
com.facebook.react.animated.NativeAnimatedModule$13: com.facebook.react.bridge.ReadableMap val$animationConfig
com.zoontek.rnbootsplash.RNBootSplashModule$3$1: com.zoontek.rnbootsplash.RNBootSplashModule$3 this$1
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
com.facebook.imagepipeline.producers.ThrottlingProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.appcompat.R$id: int split_action_bar
com.facebook.yoga.YogaNodeJNIBase$1: int[] $SwitchMap$com$facebook$yoga$YogaEdge
androidx.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
androidx.appcompat.view.menu.StandardMenuPopup: int ITEM_LAYOUT
androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth
com.facebook.common.media.MediaUtils: java.util.Map ADDITIONAL_ALLOWED_MIME_TYPES
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_UPDATE_FILE_NOT_FOUND
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.imagepipeline.request.ImageRequest mControllerImageRequest
com.facebook.hermes.reactexecutor.HermesExecutorFactory: com.facebook.hermes.reactexecutor.RuntimeConfig mConfig
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background
androidx.appcompat.widget.ViewStubCompat: int mLayoutResource
androidx.appcompat.app.TwilightManager$TwilightState: long nextUpdate
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemNumericModifiers
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.memory.PoolFactory mPoolFactory
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] $VALUES
androidx.appcompat.widget.Toolbar: int mGravity
com.facebook.react.modules.blob.BlobCollector$1: com.facebook.react.modules.blob.BlobModule val$blobModule
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mRingCenterRadius
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: int mMaxBitmapSize
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind NONE
okio.SegmentedByteString: int[] directory
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
com.google.android.material.elevation.ElevationOverlayProvider: float displayDensity
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText mInternalEditText
androidx.appcompat.widget.ThemeUtils: int[] SELECTED_STATE_SET
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
androidx.fragment.app.ListFragment: android.widget.TextView mStandardEmptyView
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.google.android.material.internal.DescendantOffsetUtils: java.lang.ThreadLocal rectF
okhttp3.Dispatcher: java.util.ArrayDeque runningSyncCalls
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: com.facebook.react.bridge.Callback val$completionCallback
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.Object mCallerContext
com.facebook.drawee.drawable.AutoRotateDrawable: boolean mIsScheduled
com.google.android.material.R$id: int textinput_error
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2: com.facebook.imagepipeline.producers.DiskCacheReadProducer this$0
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
okhttp3.OkHttpClient: java.util.List connectionSpecs
com.zoontek.rnbootsplash.RNBootSplashModule$1: android.app.Activity val$activity
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: int $streamId$inlined
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mPosition
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout
com.zoontek.rnbootsplash.RNBootSplashModule$3$1: com.facebook.react.bridge.Promise val$promise
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.callercontext.CallerContextVerifier mCallerContextVerifier
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType DEFAULT_SCALE_TYPE
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: com.facebook.react.common.LongArray mTransitionToBusyEvents
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int mArrowHeight
com.google.android.material.R$styleable: int Chip_closeIconEnabled
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: com.facebook.imagepipeline.cache.ImageCacheStatsTracker val$imageCacheStatsTracker
com.facebook.datasource.AbstractDataSource$1: com.facebook.datasource.DataSubscriber val$dataSubscriber
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent WillAppear
com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusBottomEnd
com.google.android.material.transformation.ExpandableTransformationBehavior$1: com.google.android.material.transformation.ExpandableTransformationBehavior this$0
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle DASHED
com.facebook.cache.disk.DefaultDiskStorage: boolean mIsExternal
com.swmansion.rnscreens.events.StackFinishTransitioningEvent: com.swmansion.rnscreens.events.StackFinishTransitioningEvent$Companion Companion
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mStrokeWidth
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsToDispatchLock
androidx.transition.Transition: java.util.ArrayList mEndValuesList
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.ReactActivityDelegate$2: int val$requestCode
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
com.google.android.material.internal.CollapsingTextHelper: float currentTextSize
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams mPendingReactContextInitParams
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mLastByteRead
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.imagepipeline.request.ImageRequest[] mControllerFirstAvailableImageRequests
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
androidx.drawerlayout.widget.DrawerLayout$1: androidx.drawerlayout.widget.DrawerLayout this$0
com.facebook.drawee.drawable.RoundedColorDrawable: boolean mIsCircle
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
com.horcrux.svg.MarkerView: int mMeetOrSlice
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: androidx.appcompat.widget.ListPopupWindow this$0
com.google.android.material.R$styleable: int SnackbarLayout_backgroundOverlayColorAlpha
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat BMP
com.google.android.material.chip.ChipDrawable: android.graphics.PorterDuff$Mode tintMode
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor
androidx.appcompat.widget.SearchView$1: androidx.appcompat.widget.SearchView this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mReverseLayout
com.facebook.react.animated.NativeAnimatedModule$14: int val$animationId
com.facebook.react.uimanager.Spacing: int mValueFlags
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
okio.ForwardingTimeout: okio.Timeout delegate
com.facebook.react.views.image.ReactImageView: java.lang.Object mCallerContext
com.horcrux.svg.MaskView: com.horcrux.svg.SVGLength mH
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.ListAdapter mListAdapter
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanOffsets
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources mResources
com.swmansion.rnscreens.ScreenStack$mLifecycleCallbacks$1: com.swmansion.rnscreens.ScreenStack this$0
com.google.android.material.textfield.TextInputLayout: int counterMaxLength
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory OTHER
com.horcrux.svg.GlyphContext: java.util.ArrayList mFontContext
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CREATE_DIR
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.internal.Supplier mSuppressBitmapPrefetchingSupplier
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingRemovals
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double fps
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
androidx.appcompat.R$styleable: int ActionBar_elevation
com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker mMemoryChunkPoolStatsTracker
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList helperTextViewTextColor
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mMandatorySystemGestureInsets
com.facebook.react.views.scroll.ReactScrollView: boolean mDisableIntervalMomentum
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mShouldReverseLayout
com.facebook.react.animated.NativeAnimatedNodesManager: boolean mWarnedAboutGraphTraversal
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: com.facebook.react.bridge.Callback mSuccess
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight Lighter
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method openMethod
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
bolts.Task: bolts.Task TASK_NULL
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTint
androidx.appcompat.R$attr: int colorControlActivated
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.FileCacheFactory mFileCacheFactory
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mMinKeyboardHeightDetected
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String metroHostPropValue
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.listener.RequestListener mRequestListener
androidx.appcompat.R$id: int parentPanel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.Object mInfo
com.facebook.soloader.ApkSoSource$ApkUnpacker: java.io.File mLibDir
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitLeft
okhttp3.MultipartBody: java.util.List parts
com.facebook.cache.disk.DynamicDefaultDiskStorage: int mVersion
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable mItemCallback
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okhttp3.internal.connection.Exchange $exchange
com.facebook.react.uimanager.ReactRootViewTagGenerator: int sNextRootViewTag
com.facebook.imagepipeline.platform.DefaultDecoder: java.lang.Class TAG
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Paint fillPaint
com.facebook.react.TurboReactPackage$1$1: com.facebook.react.TurboReactPackage$1 this$1
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.ShapeDrawable closeIconRippleMask
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels
androidx.appcompat.R$id: int action_bar
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager mReactInstanceManager
okhttp3.internal.connection.RealConnection: int routeFailureCount
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
androidx.core.app.ActivityCompat$1: int val$requestCode
androidx.transition.Transition: java.util.ArrayList mTargetIds
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: com.facebook.react.modules.camera.ImageStoreManager this$0
com.facebook.react.modules.blob.BlobCollector$1: com.facebook.react.bridge.ReactContext val$reactContext
com.facebook.imagepipeline.producers.JobScheduler: java.lang.Runnable mSubmitJobRunnable
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage
com.zoontek.rnbootsplash.RNBootSplashModule: java.util.ArrayList mTaskQueue
com.facebook.react.uimanager.UIViewOperationQueue: long mNonBatchedExecutionTotalTime
com.google.android.material.bottomsheet.BottomSheetDialog$4: com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $VALUES
androidx.fragment.app.Fragment: java.lang.String mTargetWho
androidx.core.widget.AutoScrollHelper: int mActivationDelay
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: java.util.EnumSet mEdges
com.facebook.imagepipeline.core.ProducerFactory: boolean mResizeAndRotateEnabledForNetwork
com.horcrux.svg.TextView: java.util.ArrayList mDeltaX
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.util.ArrayList mAnimationCallbacks
com.facebook.imageformat.DefaultImageFormatChecker: byte[] JPEG_HEADER
com.facebook.datasource.DataSources$1: java.lang.Throwable val$failure
androidx.core.R$styleable: int GradientColorItem_android_color
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.lang.Iterable $this_asSequence$inlined
com.facebook.imagepipeline.common.RotationOptions: boolean mDeferUntilRendered
androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.facebook.cache.disk.DefaultDiskStorage: java.io.File mRootDirectory
com.google.android.material.datepicker.MaterialDatePicker$4: com.google.android.material.datepicker.MaterialDatePicker this$0
com.facebook.drawee.drawable.RoundedColorDrawable: android.graphics.RectF mTempRect
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
com.google.android.material.R$styleable: int Chip_chipIcon
com.google.android.material.chip.ChipDrawable: boolean closeIconVisible
androidx.transition.TransitionSet: int mCurrentListeners
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: android.util.SparseIntArray mDownTimeToCoalescingKey
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener mBridgeIdleDebugListener
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
androidx.transition.ChangeBounds$9: androidx.transition.ChangeBounds this$0
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
androidx.core.R$attr: int nestedScrollViewStyle
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.String mComponentTag
com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintList
okhttp3.internal.http2.Hpack$Writer: int headerCount
okio.AsyncTimeout$sink$1: okio.Sink $sink
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver mTreeObserver
com.google.android.material.transformation.FabTransformationBehavior: android.graphics.RectF tmpRectF1
androidx.recyclerview.widget.DefaultItemAnimator$8: android.view.View val$newView
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarConstraints calendarConstraints
okhttp3.OkHttpClient$Builder: java.util.List interceptors
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] $VALUES
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter
com.facebook.react.uimanager.JSTouchDispatcher: android.view.ViewGroup mRootViewGroup
okhttp3.ConnectionSpec: java.lang.String[] cipherSuitesAsString
androidx.cardview.widget.RoundRectDrawableWithShadow: int mShadowStartColor
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] ENABLED_STATE_SET
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector routeSelector
com.facebook.react.views.scroll.OnScrollDispatchHelper: int mPrevX
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle
androidx.core.R$attr: int alpha
androidx.core.widget.AutoScrollHelper: boolean mEnabled
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: boolean mSnappingToPage
com.facebook.react.views.scroll.ScrollEvent: int mScrollViewWidth
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
androidx.appcompat.widget.SearchView$3: androidx.appcompat.widget.SearchView this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
androidx.recyclerview.R$styleable: int[] FontFamily
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.ProducerContext mContext
com.google.android.material.datepicker.MaterialDatePicker: boolean fullscreen
androidx.core.R$styleable: int GradientColor_android_tileMode
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
androidx.appcompat.R$styleable: int[] ActionBarLayout
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sViewAttachInfoField
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: android.util.Pair val$consumerContextPair
com.facebook.imagepipeline.memory.BasePool: boolean mAllowNewBuckets
androidx.appcompat.widget.ActionBarContainer: android.view.View mTabContainer
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$Companion Companion
androidx.fragment.app.Fragment: boolean mRetainInstance
com.facebook.common.executors.CallerThreadExecutor: com.facebook.common.executors.CallerThreadExecutor sInstance
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier
androidx.appcompat.R$attr: int switchStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mCurrentTextYPx
com.facebook.react.animated.AnimationDriver: com.facebook.react.animated.ValueAnimatedNode mAnimatedValue
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
com.google.android.material.shape.MaterialShapeDrawable$2: com.google.android.material.shape.MaterialShapeDrawable this$0
androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations
okhttp3.internal.ws.MessageDeflater: boolean noContextTakeover
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left
androidx.customview.widget.ViewDragHelper: float[] mLastMotionX
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: boolean mPromiseResolved
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: boolean shouldDrawDelegate
androidx.appcompat.app.AlertController: android.widget.ImageView mIconView
com.google.android.material.animation.MotionTiming: long delay
com.horcrux.svg.VirtualView: android.graphics.Matrix mTransform
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.BitmapPool mBitmapPool
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: com.facebook.react.bridge.ReactContext $context
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean mUseLastFrameForPreview
okhttp3.Request$Builder: java.util.Map tags
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
com.facebook.imagepipeline.core.PriorityThreadFactory$1: java.lang.Runnable val$runnable
com.facebook.react.modules.core.JavaTimerManager$Timer: long mTargetTime
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mDisappearingFragmentChildren
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest
com.facebook.react.modules.core.JavaTimerManager: boolean mFrameIdleCallbackPosted
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: int clientCount
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.fragment.app.DialogFragment$3: androidx.fragment.app.DialogFragment this$0
androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode
com.facebook.drawee.view.DraweeHolder: boolean mIsControllerAttached
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mTmpInfo
androidx.cardview.widget.RoundRectDrawableWithShadow: androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
androidx.transition.Fade$FadeAnimatorListener: boolean mLayerTypeChanged
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.decoder.ImageDecoder mDefaultDecoder
androidx.core.R$styleable: int FontFamilyFont_fontWeight
com.google.android.material.transformation.FabTransformationSheetBehavior: java.util.Map importantForAccessibilityMap
androidx.appcompat.app.AlertController: android.widget.ListView mListView
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGUse
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: java.util.concurrent.atomic.AtomicInteger mFinishedDataSources
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sAttachInfoClass
androidx.appcompat.R$drawable: int abc_tab_indicator_material
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
androidx.appcompat.app.ToolbarActionBar$2: androidx.appcompat.app.ToolbarActionBar this$0
androidx.fragment.R$anim: int fragment_open_exit
com.facebook.soloader.UnpackingSoSource$InputDso: com.facebook.soloader.UnpackingSoSource$Dso dso
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int mChangingConfigurations
com.facebook.soloader.UnpackingSoSource: java.util.Map mLibsBeingLoaded
com.facebook.imagepipeline.core.ProducerFactory: int mMaxBitmapSize
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits ANIMATED
com.google.android.material.internal.CollapsingTextHelper: float textureDescent
com.facebook.react.views.text.ReactTextView: int mLinkifyMaskType
com.facebook.cache.disk.DiskStorageCache: com.facebook.common.statfs.StatFsHelper mStatFsHelper
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode EXACTLY
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: int mTintColor
com.google.android.material.R$styleable: int[] AppCompatTheme
com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode startIconTintMode
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.horcrux.svg.RenderableViewManager$TextViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.uimanager.Spacing: float[] mSpacing
androidx.appcompat.view.menu.BaseMenuPresenter: int mMenuLayoutRes
com.facebook.react.animated.FrameBasedAnimationDriver: double[] mFrames
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean isPaused
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
androidx.core.content.ContextCompat: java.lang.Object sSync
okhttp3.internal.connection.ConnectInterceptor: okhttp3.internal.connection.ConnectInterceptor INSTANCE
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] mIntBuffer
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.IncreasingQualityDataSourceSupplier this$0
androidx.appcompat.widget.TooltipPopup: android.view.View mContentView
com.facebook.soloader.ApkSoSource$ApkUnpacker: int mFlags
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
androidx.core.R$styleable: int FontFamily_fontProviderSystemFontFamily
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload2$inlined
androidx.transition.ChangeBounds$9: android.view.ViewGroup val$parent
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.horcrux.svg.VirtualView: boolean mResponsible
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter delegate
androidx.appcompat.widget.AppCompatSpinner: android.graphics.Rect mTempRect
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.BasicCertificateChainCleaner$Companion Companion
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: int accessCount
androidx.appcompat.app.TwilightManager$TwilightState: long yesterdaySunset
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
okio.Buffer$outputStream$1: okio.Buffer this$0
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.imagepipeline.memory.FlexByteArrayPool: com.facebook.common.references.ResourceReleaser mResourceReleaser
androidx.appcompat.view.menu.MenuAdapter: android.view.LayoutInflater mInflater
com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: boolean mProxyStarted
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator: com.facebook.imagepipeline.memory.FlexByteArrayPool mFlexByteArrayPool
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState RUNNING_AND_PENDING
com.horcrux.svg.MarkerView: float mMinX
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: int mNodeTag
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
com.facebook.drawee.generic.RootDrawable: com.facebook.drawee.drawable.VisibilityCallback mVisibilityCallback
com.google.android.material.R$styleable: int[] BottomAppBar
com.horcrux.svg.FontData: int absoluteFontWeight
com.facebook.imagepipeline.request.ImageRequest: boolean mIsMemoryCacheEnabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight
com.google.android.material.internal.TextDrawableHelper: com.google.android.material.resources.TextAppearanceFontCallback fontCallback
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.lang.Runnable releaseRunnable
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
androidx.core.app.RemoteActionCompat: boolean mEnabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.R$id: int react_test_id
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: boolean mIsStarted
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean mDirty
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener
com.facebook.react.views.image.ReactImageView: java.util.List mSources
com.google.android.material.appbar.AppBarLayout: int downPreScrollRange
com.facebook.react.R$string: int state_unselected_description
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.google.android.material.appbar.ViewOffsetBehavior: int tempLeftRightOffset
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double jsFps
androidx.fragment.app.BackStackRecord: boolean mCommitted
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.Rect mTmpRect
com.facebook.react.views.textinput.ReactTextInputManager$1: com.facebook.react.views.textinput.ReactTextInputManager this$0
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean dropdownPopupDirty
com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager$SnackbarRecord nextSnackbar
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController val$dialog
androidx.recyclerview.widget.DefaultItemAnimator$4: android.view.View val$view
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedEnd
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
androidx.coordinatorlayout.R$attr: int coordinatorLayoutStyle
com.google.android.material.animation.MotionSpec: androidx.collection.SimpleArrayMap timings
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$exitingViews
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int mInputType
okhttp3.RequestBody$Companion$toRequestBody$2: int $offset
com.facebook.imagepipeline.producers.DelayProducer$1: com.facebook.imagepipeline.producers.Consumer val$consumer
androidx.appcompat.view.menu.ListMenuItemView: int mMenuType
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$layoutTime
com.google.android.material.transformation.FabTransformationBehavior: float dependencyOriginalTranslationX
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mExperimentalThreadHandoffQueueEnabled
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
com.facebook.react.animated.AnimationDriver: com.facebook.react.bridge.Callback mEndCallback
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.google.android.material.transformation.FabTransformationBehavior: android.graphics.RectF tmpRectF2
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
com.google.android.material.floatingactionbutton.FloatingActionButton$1: com.google.android.material.floatingactionbutton.FloatingActionButton this$0
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
com.google.android.material.appbar.ViewOffsetHelper: int offsetTop
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mAnchorView
okhttp3.Address: javax.net.SocketFactory socketFactory
com.google.android.material.shape.ShapePath$PathLineOperation: float y
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w500
bolts.BoltsExecutors: bolts.BoltsExecutors INSTANCE
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
okhttp3.Response$Builder: okhttp3.Handshake handshake
com.google.android.material.R$styleable: int ShapeAppearance_cornerFamilyBottomLeft
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 cleanupTask
androidx.core.graphics.Insets: int right
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.imagepipeline.request.ImageRequest[] mControllerFirstAvailableImageRequests
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_X
com.facebook.imagepipeline.cache.BufferedDiskCache: java.util.concurrent.Executor mWriteExecutor
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator
androidx.core.os.CancellationSignal: boolean mIsCanceled
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
androidx.appcompat.R$attr: int actionBarTheme
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_skipCollapsed
com.google.android.material.R$styleable: int[] MaterialTextAppearance
com.google.android.material.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.horcrux.svg.MarkerView: float mMinY
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding
androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
bolts.Task$4: bolts.TaskCompletionSource val$tcs
com.facebook.common.references.CloseableReference: java.lang.Class TAG
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
okhttp3.internal.http2.Http2Reader: boolean client
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
com.google.android.material.R$id: int snackbar_text
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mBytesParsed
com.google.android.material.R$layout: int design_text_input_start_icon
okhttp3.Dispatcher: java.util.ArrayDeque runningAsyncCalls
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.horcrux.svg.PathParser: float mPenDownX
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
androidx.appcompat.widget.Toolbar: int mPopupTheme
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled
com.facebook.imagepipeline.memory.BitmapCounter: long mSize
androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator
com.google.android.material.R$styleable: int ChipGroup_chipSpacingHorizontal
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem$Companion Companion
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: int mSize
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsAttachedToWindow
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.view.menu.ActionMenuItem mNavItem
androidx.fragment.R$anim: int fragment_fade_enter
okhttp3.Response: okhttp3.ResponseBody body
com.horcrux.svg.GlyphContext: java.util.ArrayList mRsIndices
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int mMaxBitmapSize
com.google.android.material.chip.Chip$ChipTouchHelper: com.google.android.material.chip.Chip this$0
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.imagepipeline.memory.BitmapCounter: int mCount
com.facebook.react.views.scroll.ReactScrollView: boolean mPagingEnabled
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mBestScanNumber
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: android.graphics.drawable.Animatable mA
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.drawee.drawable.ScaleTypeDrawable: android.graphics.Matrix mDrawMatrix
com.facebook.react.animated.NativeAnimatedModule$20: com.facebook.react.animated.NativeAnimatedModule this$0
okhttp3.internal.concurrent.TaskRunner: long coordinatorWakeUpAt
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod AUTO
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations
com.swmansion.rnscreens.ScreenContainer: boolean mIsAttached
com.google.android.material.internal.NavigationMenuItemView: boolean needsEmptyIcon
com.horcrux.svg.ImageView: com.horcrux.svg.SVGLength mW
androidx.core.view.ViewCompat: boolean sMinHeightFieldFetched
com.google.android.material.textfield.IndicatorViewController$1: com.google.android.material.textfield.IndicatorViewController this$0
androidx.appcompat.R$styleable: int[] ActionBar
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.PoolParams mPoolParams
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.cache.disk.DiskStorageCache: long mDefaultCacheSizeLimit
androidx.appcompat.R$styleable: int[] CompoundButton
com.facebook.react.bridge.DynamicFromArray: int mIndex
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth
androidx.transition.ChangeBounds$ViewBounds: int mRight
com.horcrux.svg.VirtualView: android.graphics.Region mStrokeRegion
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float mRotationCount
com.facebook.imagepipeline.memory.BitmapCounter$1: com.facebook.imagepipeline.memory.BitmapCounter this$0
androidx.viewpager2.adapter.FragmentStateAdapter$2: androidx.viewpager2.adapter.FragmentStateAdapter this$0
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: boolean mEnabled
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat WEBP_ANIMATED
com.facebook.react.views.text.TextAttributeProps: boolean mContainsImages
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float mWidth
com.facebook.react.devsupport.LogBoxModule$4: com.facebook.react.devsupport.LogBoxModule this$0
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float parentAbsoluteElevation
com.google.android.material.appbar.ViewOffsetHelper: int layoutLeft
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: java.lang.Object mExtraData
com.facebook.imagepipeline.core.ImagePipelineExperiments: int mMaxBitmapSize
com.facebook.react.views.scroll.ReactScrollView$4: int val$scrollX
com.google.android.material.chip.Chip: com.google.android.material.chip.Chip$ChipTouchHelper touchHelper
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange exchange
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.lang.Object scaleType
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
androidx.fragment.app.DialogFragment$2: androidx.fragment.app.DialogFragment this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.collection.ArrayMap mTargetNameMap
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.horcrux.svg.GlyphContext: float mHeight
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress
com.horcrux.svg.TextView: java.lang.String mBaselineShift
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener mCustomGlobalLayoutListener
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
androidx.appcompat.R$styleable: int ActionBar_subtitle
androidx.appcompat.R$styleable: int SearchView_queryBackground
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes
com.facebook.drawee.gestures.GestureDetector: float mSingleTapSlopPx
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: java.lang.Object mFragmentToShow
com.google.android.material.R$styleable: int MaterialButton_iconGravity
com.facebook.react.uimanager.UIImplementation: long mLastCalculateLayoutTime
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsOut
androidx.cardview.widget.CardView: int[] COLOR_BACKGROUND_ATTR
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mDownscaleFrameToDrawableDimensions
androidx.appcompat.widget.AppCompatBackgroundHelper: android.view.View mView
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller
androidx.appcompat.R$drawable: int abc_btn_check_material
com.google.android.material.R$styleable: int MaterialCalendarItem_android_insetRight
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long $pingIntervalNanos$inlined
com.facebook.yoga.YogaFlexDirection: int mIntValue
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int mChangingConfigurations
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.core.ChoreographerCompat mChoreographer
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
okhttp3.CacheControl: boolean noTransform
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: com.google.android.material.shape.MaterialShapeDrawable delegate
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Paint strokePaint
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutFromEnd
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.util.Set mRequestListeners
com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.producers.LocalFetchProducer this$0
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: java.io.File mTemporaryFile
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
com.google.android.material.internal.CollapsingTextHelper: java.lang.CharSequence text
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics sWindowDisplayMetrics
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.RectF mInsideBorderBounds
com.google.android.material.internal.CollapsingTextHelper: int[] state
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$2: float val$realWidth
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges LEFT
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit UNDEFINED
androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation stackAnimation
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect
androidx.appcompat.R$id: int action_menu_presenter
com.horcrux.svg.LinearGradientView: android.graphics.Matrix mMatrix
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll
androidx.transition.FragmentTransitionSupport$4: androidx.transition.FragmentTransitionSupport this$0
com.facebook.imagepipeline.core.ProducerSequenceFactory: java.util.Map mCloseableImagePrefetchSequences
okhttp3.internal.ws.MessageDeflater: okio.Buffer deflatedBytes
okhttp3.internal.cache.DiskLruCache: java.io.File directory
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.ColorStateList mValue
com.google.android.material.R$string: int character_counter_content_description
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle selectedYear
com.facebook.react.animated.InterpolationAnimatedNode: java.util.regex.Pattern fpPattern
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
androidx.appcompat.R$id: int search_edit_frame
com.google.android.material.R$style: int Widget_Design_BottomSheet_Modal
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.google.android.material.dialog.InsetDialogOnTouchListener: int prePieSlop
androidx.transition.FragmentTransitionSupport$1: androidx.transition.FragmentTransitionSupport this$0
androidx.core.R$styleable: int ColorStateListItem_android_alpha
com.facebook.react.modules.network.ProgressResponseBody: okio.BufferedSource mBufferedSource
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.OpReorderer mOpReorderer
com.google.android.material.R$styleable: int TextInputLayout_errorEnabled
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.ColorStateList value
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag
com.facebook.react.views.scroll.ReactScrollView: java.lang.String mOverflow
com.facebook.react.views.text.ReactBaseTextShadowNode: int mJustificationMode
androidx.transition.ChangeBounds$1: android.graphics.Rect mBounds
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.ResourceManagerInternal mResourceManager
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: java.lang.String mCommand
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route nextRouteToTry
androidx.appcompat.widget.SuggestionsAdapter: int mText1Col
com.google.android.material.shape.ShapeAppearancePathProvider: android.graphics.Matrix[] edgeTransforms
com.facebook.react.views.slider.ReactSlider: double mValue
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenHeight
com.facebook.cache.disk.DiskStorageCache: java.lang.Object mLock
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: float centerX
androidx.cardview.widget.RoundRectDrawable: android.graphics.Rect mBoundsI
androidx.recyclerview.widget.FastScroller: int mVerticalThumbCenterY
androidx.transition.Transition: java.util.ArrayList mAnimators
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.lang.String $name
androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex
com.facebook.react.modules.core.JavaTimerManager: java.util.PriorityQueue mTimers
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.String mControllerId
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
com.google.android.material.textfield.IndicatorViewController: boolean errorEnabled
com.google.android.material.chip.ChipDrawable: int currentCompositeSurfaceBackgroundColor
androidx.appcompat.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
androidx.fragment.app.Fragment: boolean mCalled
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemIconResId
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard
com.google.android.material.animation.Positioning: float yAdjustment
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
androidx.transition.Visibility$VisibilityInfo: int mEndVisibility
okhttp3.internal.connection.RealCall: boolean canceled
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
androidx.appcompat.widget.AppCompatTextHelper: int mStyle
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier mEncodedMemoryCacheParamsSupplier
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing exact
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks
com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: com.facebook.imagepipeline.animated.factory.AnimatedFactory sImpl
com.google.android.material.shape.ShapePath$LineShadowOperation: float startX
com.horcrux.svg.PathParser: float mPenY
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int state
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
okio.Buffer$inputStream$1: okio.Buffer this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.lang.Runnable mCheckForGapsRunnable
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF mTempRectForCenterDrawPath
okhttp3.OkHttpClient: int connectTimeoutMillis
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mIsPosted
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity
androidx.appcompat.widget.ActionBarOverlayLayout$3: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount
com.horcrux.svg.SVGLength: double value
androidx.appcompat.widget.ScrollingTabContainerView: boolean mAllowCollapse
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: java.lang.String $name
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: android.graphics.Paint mArrowPaint
com.facebook.cache.disk.DiskCacheConfig$Builder: java.lang.String mBaseDirectoryName
okio.AsyncTimeout: long timeoutAt
com.facebook.drawee.drawable.RoundedCornersDrawable: boolean mPaintFilterBitmap
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.view.View mDelegateView
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] $VALUES
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] $VALUES
com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory: int mMaxBitmapSize
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mEndFillColor
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: com.facebook.imagepipeline.producers.ThumbnailBranchProducer this$0
androidx.transition.TransitionManager: androidx.transition.Transition sDefaultTransition
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration LineThrough
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResult
com.facebook.imagepipeline.producers.LocalFetchProducer$2: com.facebook.imagepipeline.producers.LocalFetchProducer this$0
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
okhttp3.internal.ws.WebSocketExtensions: boolean clientNoContextTakeover
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable mIconDrawable
com.google.android.material.datepicker.MaterialCalendar$6: com.google.android.material.button.MaterialButton val$monthDropSelect
com.horcrux.svg.MaskView: android.graphics.Matrix mMatrix
com.google.android.material.datepicker.DateValidatorPointForward: long point
com.facebook.imagepipeline.memory.BasePool: java.lang.Class TAG
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
com.horcrux.svg.FontData: double wordSpacing
androidx.core.R$id: int accessibility_custom_action_17
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole COMBOBOX
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
com.facebook.react.uimanager.UIImplementation: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: java.lang.ref.WeakReference callback
androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller
androidx.appcompat.R$layout: int abc_screen_toolbar
com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP
com.facebook.react.ReactActivityDelegate: java.lang.String mMainComponentName
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment leftEdge
com.facebook.react.views.text.ReactBaseTextShadowNode: int mBackgroundColor
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser sInstance
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState ON_TOP
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.google.android.material.R$styleable: int[] ShapeAppearance
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRenderableView
com.swmansion.rnscreens.ScreenStack: boolean isDetachingCurrentScreen
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
com.facebook.react.views.text.ReactTextView: android.text.TextUtils$TruncateAt mEllipsizeLocation
com.facebook.yoga.YogaAlign: int mIntValue
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
com.horcrux.svg.RadialGradientView: android.graphics.Matrix mMatrix
okhttp3.Authenticator: okhttp3.Authenticator NONE
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mSkipNextApply
androidx.fragment.app.ListFragment$2: androidx.fragment.app.ListFragment this$0
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle
androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.cache.disk.DiskStorageCache$1: com.facebook.cache.disk.DiskStorageCache this$0
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mContentDescription
androidx.recyclerview.R$styleable: int RecyclerView_android_clipToPadding
androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mX
com.google.android.material.R$id: int mtrl_calendar_months
com.google.android.material.transformation.FabTransformationBehavior: float dependencyOriginalTranslationY
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Rect padding
com.google.android.material.shape.ShapePath$PathOperation: android.graphics.Matrix matrix
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
bolts.AndroidExecutors: int MAX_POOL_SIZE
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo mMenuInfo
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon
androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: double[] rotationDegrees
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1 this$1
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection RTL
okhttp3.HttpUrl: java.lang.String scheme
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: com.facebook.imagepipeline.producers.Producer mInputProducer2
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$inFragment
androidx.appcompat.widget.DropDownListView: boolean mListSelectionHidden
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
com.google.android.material.snackbar.SnackbarContentLayout: int maxInlineActionWidth
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges TOP
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupEnabled
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.producers.BaseProducerContext mMultiplexProducerContext
com.google.android.material.bottomsheet.BottomSheetDialog: boolean cancelable
androidx.core.provider.CallbackWithHandler: android.os.Handler mCallbackHandler
com.horcrux.svg.SvgViewModule$1: int val$attempt
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mWidthPx
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: android.graphics.Rect shadowPadding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN_EASE_OUT
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mImageDrawTimeMs
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.debug.DevSettingsModule$2: com.facebook.react.modules.debug.DevSettingsModule this$0
com.facebook.drawee.drawable.RoundedCornersDrawable: boolean mIsCircle
com.facebook.cache.disk.SettableCacheEvent: long mCacheSize
com.facebook.react.views.scroll.ReactScrollView$1: com.facebook.react.views.scroll.ReactScrollView this$0
com.facebook.react.modules.core.ReactChoreographer$2: java.lang.Runnable val$runnable
com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.facebook.react.animated.NativeAnimatedModule$13: int val$animatedNodeTag
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List mPackages
com.facebook.react.ReactRootView: boolean mWasMeasured
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent mMotionEvent
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
com.facebook.imagepipeline.core.ImagePipeline$8: android.net.Uri val$uri
com.facebook.soloader.SoLoader: java.util.concurrent.locks.ReentrantReadWriteLock sSoSourcesLock
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault
com.facebook.react.animated.NativeAnimatedModule$20: com.facebook.react.bridge.ReadableMap val$eventMapping
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor this$1
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $messageOrClose$inlined
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode MARGIN
com.swmansion.rnscreens.ScreenStackHeaderSubview: int mReactWidth
androidx.transition.WindowIdApi18: android.view.WindowId mWindowId
androidx.core.R$styleable: int GradientColor_android_centerColor
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.FlexByteArrayPool mFlexByteArrayPool
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int[] mGapPerSpan
com.facebook.imagepipeline.core.ImagePipelineConfig: android.graphics.Bitmap$Config mBitmapConfig
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: java.util.List mFullSpanItems
androidx.appcompat.R$attr: int spinnerStyle
androidx.recyclerview.widget.SimpleItemAnimator: boolean mSupportsChangeAnimations
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: com.facebook.react.modules.dialog.DialogModule this$0
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mAdvanceKey
com.facebook.react.ReactInstanceManager$5$2: com.facebook.react.ReactInstanceManager$5 this$1
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.R$style: int Theme_Catalyst_LogBox
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1: okhttp3.Call val$call
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mFrames
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_SCHEDULE_CLEAR_CONTROLLER
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState
androidx.core.R$styleable: int GradientColor_android_startX
com.google.android.material.R$styleable: int AppBarLayout_android_background
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier
com.facebook.cache.disk.DiskCacheConfig$Builder: long mMaxCacheSizeOnVeryLowDiskSpace
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: android.animation.FloatEvaluator floatEvaluator
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbCenterX
androidx.fragment.app.FragmentAnim$3: androidx.core.os.CancellationSignal val$signal
com.facebook.imagepipeline.cache.LruCountingMemoryCache: java.util.Map mOtherEntries
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat WEBP_EXTENDED
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan
com.zoontek.rnbootsplash.RNBootSplashTask$Type: com.zoontek.rnbootsplash.RNBootSplashTask$Type HIDE
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.cache.disk.FileCache mFileCache
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig YOGA_CONFIG
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mNetworkFetchSequence
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mMenuPrepared
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer serverMaxWindowBits
androidx.transition.Transition: java.util.ArrayList mTargetIdExcludes
androidx.transition.ChangeBounds: android.util.Property TOP_LEFT_PROPERTY
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions
com.facebook.react.views.progressbar.ProgressBarContainerView: java.lang.Integer mColor
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener $this_asFactory
com.google.android.material.R$styleable: int ChipGroup_singleSelection
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mIsDiskCacheProbingEnabled
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mEnded
com.google.android.material.datepicker.MonthAdapter: int MAXIMUM_WEEKS
com.facebook.react.modules.network.NetworkingModule$1$1: long last
androidx.appcompat.view.menu.BaseMenuWrapper: android.content.Context mContext
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Map mActiveTaskConfigs
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.RotationOptions mRotationOptions
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.animated.DiffClampAnimatedNode: int mInputNodeTag
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.HttpUrl: java.util.List queryNamesAndValues
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful
com.horcrux.svg.GlyphContext: java.util.ArrayList mDXIndices
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
com.facebook.react.common.StandardCharsets: java.nio.charset.Charset UTF_16BE
androidx.coordinatorlayout.R$styleable: int[] GradientColor
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache
androidx.fragment.app.ListFragment: android.os.Handler mHandler
com.facebook.imagepipeline.memory.AshmemMemoryChunk: android.os.SharedMemory mSharedMemory
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.datasource.FirstAvailableDataSourceSupplier this$0
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status[] $VALUES
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope THREAD
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason CACHE_MANAGER_TRIMMED
okhttp3.internal.concurrent.TaskQueue: boolean cancelActiveTask
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment mFragment
com.facebook.react.animated.FrameBasedAnimationDriver: double mFromValue
com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint
androidx.appcompat.R$attr: int colorSwitchThumbNormal
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_backgroundTint
com.facebook.react.modules.network.NetworkingModule$2: java.lang.String val$responseType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewWidth
com.facebook.react.jstasks.HeadlessJsTaskContext$1: com.facebook.react.jstasks.HeadlessJsTaskContext this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit
androidx.appcompat.R$styleable: int Spinner_popupTheme
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.app.AlertDialog mDialog
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.content.Context mContext
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.widget.TooltipCompatHandler$1: androidx.appcompat.widget.TooltipCompatHandler this$0
com.swmansion.rnscreens.events.ScreenDismissedEvent: com.swmansion.rnscreens.events.ScreenDismissedEvent$Companion Companion
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableBottomTint
androidx.appcompat.widget.ListPopupWindow: android.os.Handler mHandler
okhttp3.Cookie$Builder: java.lang.String value
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE
androidx.appcompat.widget.SearchView: java.lang.Runnable mUpdateDrawableStateRunnable
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: com.facebook.imagepipeline.producers.ThreadHandoffProducer this$0
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: android.view.ViewGroup$OnHierarchyChangeListener onHierarchyChangeListener
com.google.android.material.datepicker.MaterialDatePicker: int overrideThemeResId
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment topLeftCorner
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIO
com.facebook.common.webp.WebpSupportStatus: boolean sIsSimpleWebpSupported
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.View mTarget
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.internal.Supplier mMemoryCacheParamsSupplier
com.google.android.material.R$attr: int materialButtonStyle
com.facebook.drawee.drawable.MatrixDrawable: android.graphics.Matrix mDrawMatrix
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okhttp3.internal.cache.DiskLruCache$Entry this$0
com.swmansion.rnscreens.ScreenStackFragment: androidx.appcompat.widget.Toolbar mToolbar
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mMutated
com.facebook.react.ReactPackageHelper$1$1: int position
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
com.facebook.react.uimanager.events.Event: int mSurfaceId
okhttp3.Request: okhttp3.CacheControl lazyCacheControl
androidx.core.R$id: int accessibility_custom_action_3
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.view.View mHostView
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
com.facebook.imagepipeline.image.EncodedImage: int mStreamSize
com.google.android.material.R$string: int character_counter_pattern
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.View mChild
com.facebook.imagepipeline.producers.FetchState: long mLastIntermediateResultTimeMs
androidx.fragment.app.FragmentManager$5: android.view.ViewGroup val$container
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
androidx.appcompat.view.menu.CascadingMenuPopup: int mDropDownGravity
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: androidx.appcompat.widget.ForwardingListener this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: java.util.List mFullSpanItems
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments
androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS
com.horcrux.svg.VirtualViewManager$2: int[] $SwitchMap$com$horcrux$svg$VirtualViewManager$SVGClass
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.view.animation.Animation animation
com.facebook.react.views.text.TextLayoutManager: java.util.concurrent.ConcurrentHashMap sTagToSpannableCache
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
com.google.android.material.internal.CollapsingTextHelper: float collapsedDrawY
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
okhttp3.Route: java.net.InetSocketAddress socketAddress
androidx.transition.TransitionUtils: boolean HAS_PICTURE_BITMAP
androidx.appcompat.view.menu.StandardMenuPopup: boolean mShowTitle
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.R$styleable: int SwitchCompat_thumbTextPadding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mDeltaWidth
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker mSmallByteArrayPoolStatsTracker
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mRetreatKey
com.google.android.material.R$dimen: int mtrl_calendar_navigation_bottom_padding
com.facebook.cache.disk.DiskStorageCache: long mCacheSizeLastUpdateTime
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.io.Closeable mLastIntermediateResult
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor
com.facebook.react.ReactInstanceManager$9: int val$rootTag
com.facebook.react.animated.NativeAnimatedModule$19: com.facebook.react.animated.NativeAnimatedModule this$0
com.google.android.material.shape.ShapePath$PathArcOperation: float startAngle
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_SAME_CONTROLLER_SKIPPED
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
kotlin.collections.AbstractList$IteratorImpl: int index
androidx.fragment.app.FragmentManager: java.util.ArrayList mPostponedTransactions
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: com.google.android.material.floatingactionbutton.FloatingActionButton this$0
com.facebook.react.modules.core.ChoreographerCompat: android.view.Choreographer mChoreographer
androidx.appcompat.R$layout: int abc_action_bar_title_item
com.facebook.react.views.text.TextAttributeProps: float mLineHeightInput
com.facebook.common.time.SystemClock: com.facebook.common.time.SystemClock INSTANCE
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment topEdge
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE
androidx.appcompat.app.AlertController: android.view.View mView
com.facebook.react.modules.dialog.AlertFragment: com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener mListener
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShouldCloseImmediately
com.google.android.material.transformation.ExpandableBehavior: int currentState
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode CALENDAR
androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: java.lang.String[] PROJECTION
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: com.google.android.material.floatingactionbutton.MotionStrategy val$strategy
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] $VALUES
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState
androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.content.Context mContext
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
androidx.appcompat.view.menu.ExpandedMenuView: int[] TINT_ATTRS
com.google.android.material.card.MaterialCardView: int DEF_STYLE_RES
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
com.google.android.material.chip.ChipDrawable: float closeIconStartPadding
androidx.lifecycle.LiveData: int mActiveCount
androidx.fragment.app.Fragment: android.view.View mView
com.google.android.material.R$attr: int chipGroupStyle
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: boolean mNeedsUpdate
androidx.cardview.widget.RoundRectDrawable: boolean mInsetForRadius
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
okhttp3.internal.ws.WebSocketWriter: boolean isClient
com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object mCallerContext
okhttp3.internal.ws.RealWebSocket: boolean failed
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mUseDownsamplingRatioForResizing
okio.Buffer$UnsafeCursor: int start
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JSBundleLoader mBundleLoader
com.horcrux.svg.SvgView: android.graphics.Bitmap mBitmap
androidx.recyclerview.widget.FastScroller: androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: android.graphics.Paint mPaint
com.facebook.common.references.OOMSoftReference: java.lang.ref.SoftReference softRef2
com.facebook.drawee.controller.AbstractDraweeController$1: com.facebook.drawee.controller.AbstractDraweeController this$0
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: java.util.List mImagePerfDataListeners
okhttp3.Authenticator: okhttp3.Authenticator$Companion Companion
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mAdditionsList
androidx.appcompat.view.menu.MenuBuilder: boolean mIsVisibleItemsStale
com.facebook.react.ReactRootView: android.os.Bundle mAppProperties
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: int val$maxBitmapSize
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean mDiskCacheEnabled
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mDiskCacheEnabled
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2: com.facebook.imagepipeline.producers.ThreadHandoffProducer this$0
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDisplayOpts
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontWeight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mAllowCaching
okio.internal.HashFunctionKt$newHashFunction$1: java.security.MessageDigest digest
okhttp3.Interceptor$Companion: okhttp3.Interceptor$Companion $$INSTANCE
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
androidx.recyclerview.widget.DefaultItemAnimator$3: java.util.ArrayList val$additions
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: com.facebook.imagepipeline.producers.DecodeProducer this$0
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
com.google.android.material.shape.ShapePath: float startY
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable
okhttp3.Cookie$Builder: boolean persistent
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTooltipText
com.google.android.material.appbar.AppBarLayout: int downScrollRange
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
okhttp3.internal.http1.HeadersReader: okhttp3.internal.http1.HeadersReader$Companion Companion
com.zoontek.rnbootsplash.RNBootSplashModule$1: int val$drawableResId
androidx.appcompat.R$id: int action_mode_bar_stub
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig mMainDiskCacheConfig
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace
androidx.appcompat.R$id: int shortcut
androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.facebook.drawee.generic.RoundingParams: int mBorderColor
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_RELEASE_CONTROLLER
com.facebook.react.ReactActivityDelegate: com.facebook.react.bridge.Callback mPermissionsCallback
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.List mOnViewFoundListeners
com.swmansion.rnscreens.ScreenStackHeaderConfig: int mTitleFontWeight
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mBitmapPrepareToDrawForPrefetch
com.google.android.material.R$style: int Widget_MaterialComponents_CompoundButton_RadioButton
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory EVICTION
androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback bottomSheetCallback
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean isExtended
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mOperations
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: android.content.res.Resources mResources
androidx.transition.Transition$AnimationInfo: androidx.transition.Transition mTransition
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupId
androidx.recyclerview.widget.GapWorker$Task: boolean immediate
androidx.appcompat.widget.SearchView: android.view.View$OnKeyListener mTextKeyListener
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1: com.google.android.material.bottomappbar.BottomAppBar$Behavior this$0
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory mPipelineDraweeControllerFactory
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver mEntryStateObserver
androidx.appcompat.view.menu.CascadingMenuPopup: int mRawDropDownGravity
androidx.appcompat.widget.AppCompatSpinner: android.content.Context mPopupContext
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mRootViewVisibleInsets
com.horcrux.svg.ImageView: int mImageHeight
androidx.fragment.app.Fragment: int mState
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.google.android.material.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus
com.facebook.react.modules.debug.FpsDebugFrameCallback: int m4PlusFrameStutters
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.horcrux.svg.RNSVGMarkerPosition: boolean auto_start_reverse_
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri mUri
androidx.collection.ArraySet: int sBaseCacheSize
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mPlaceholderImage
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache mBitmapMemoryCache
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback mCurrentFrameCallback
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
com.facebook.react.config.ReactFeatureFlags: boolean useViewManagerDelegates
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional
com.google.android.material.datepicker.MaterialCalendar$4: com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Rect collapsedBounds
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mW
androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext
com.facebook.common.webp.WebpSupportStatus: byte[] WEBP_VP8L_BYTES
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: int mValue
com.facebook.react.views.scroll.ScrollEvent: int mScrollViewHeight
com.facebook.cache.disk.DiskCacheConfig$Builder: android.content.Context mContext
okhttp3.internal.http2.Http2Stream: long readBytesAcknowledged
androidx.fragment.app.BackStackState: int mIndex
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
okhttp3.TlsVersion: java.lang.String javaName
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Handler mSubMenuHoverHandler
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: boolean val$fromUser
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.cache.disk.DefaultDiskStorage: long TEMP_FILE_LIFETIME_MS
com.facebook.drawee.drawable.RoundedCornersDrawable$1: int[] $SwitchMap$com$facebook$drawee$drawable$RoundedCornersDrawable$Type
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mInvisibilityEventTimeMs
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager mFabricViewStateManager
androidx.appcompat.widget.AppCompatRatingBar: androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: com.facebook.react.common.LongArray mTransitionToIdleEvents
com.horcrux.svg.LinearGradientView: com.horcrux.svg.SVGLength mX2
androidx.transition.FragmentTransitionSupport$3: java.lang.Object val$exitTransition
com.facebook.imagepipeline.memory.AshmemMemoryChunk: long mId
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String mPattern
androidx.appcompat.view.menu.MenuItemImpl$1: androidx.appcompat.view.menu.MenuItemImpl this$0
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative
androidx.transition.TransitionValuesMaps: androidx.collection.LongSparseArray mItemIdValues
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: com.facebook.imagepipeline.memory.BucketMap$LinkedEntry prev
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge LEFT
okhttp3.internal.connection.RealCall: boolean responseBodyOpen
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.HttpUrl url
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback
com.google.android.material.elevation.ElevationOverlayProvider: int elevationOverlayColor
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment leftEdge
androidx.fragment.app.Fragment$AnimationInfo: int mStateAfterAnimating
com.google.android.material.R$styleable: int MaterialCalendar_dayTodayStyle
androidx.appcompat.widget.DropDownListView: androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation
com.facebook.cache.disk.DiskStorageCache: com.facebook.common.time.Clock mClock
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline ideographic
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitleCondensed
com.horcrux.svg.GlyphContext: java.util.ArrayList mYsIndices
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIncludeFontPadding
kotlin.Pair: java.lang.Object first
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: android.util.Property WIDTH
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $receivedCloseReason$inlined
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
com.facebook.react.animated.NativeAnimatedModule$20: java.lang.String val$eventName
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanLookupSize
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout_Layout
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: int mHeight
com.google.android.material.textfield.ClearTextEndIconDelegate$2: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
androidx.fragment.app.FragmentManager: boolean mExecutingActions
com.google.android.material.R$id: int month_navigation_next
androidx.transition.TransitionSet$TransitionSetListener: androidx.transition.TransitionSet mTransitionSet
com.google.android.material.R$string: int exposed_dropdown_menu_content_description
okhttp3.internal.http2.Huffman: int[] CODES
com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.content.res.Resources mResources
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button actionView
androidx.appcompat.widget.ScrollingTabContainerView: int mSelectedTabIndex
com.google.android.material.chip.ChipDrawable: int[] DEFAULT_STATE
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.imagepipeline.producers.PostprocessorProducer this$0
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: com.facebook.common.util.TriState mShouldTranscodeWhenFinished
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket: java.util.LinkedList mSpareReferences
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method getMethod
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.ScreenFragment mParentScreenFragment
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect touchArea
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int mBitmapPrepareToDrawMinSizeBytes
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.material.R$styleable: int[] GradientColorItem
com.facebook.imagepipeline.image.CloseableStaticBitmap: android.graphics.Bitmap mBitmap
com.horcrux.svg.ImageView: com.horcrux.svg.SVGLength mY
androidx.fragment.app.FragmentTransition$6: android.graphics.Rect val$inEpicenter
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: int mLayoutDirection
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener mDebugOverlayImageOriginListener
androidx.core.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRelative
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mHeightPx
androidx.appcompat.R$drawable: int abc_cab_background_top_material
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback
com.facebook.drawee.drawable.DrawableProperties: android.graphics.ColorFilter mColorFilter
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder mTMMDelegateBuilder
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
com.horcrux.svg.PathElement: com.horcrux.svg.Point[] points
com.facebook.soloader.SoLoader: int sFlags
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: com.facebook.imagepipeline.common.ResizeOptions mResizeOptions
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathMethod mMethod
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.ReactRootView: java.lang.String mInitialUITemplate
com.horcrux.svg.PatternView: float mMinX
com.facebook.react.animated.NativeAnimatedModule$21: int val$viewTag
com.horcrux.svg.TextProperties$FontWeight: java.lang.String weight
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
com.facebook.react.modules.core.ReactChoreographer$1: com.facebook.react.modules.core.ReactChoreographer this$0
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
com.facebook.react.common.StandardCharsets: java.nio.charset.Charset UTF_16
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
okhttp3.Request: okhttp3.HttpUrl url
okio.Timeout: boolean hasDeadline
com.facebook.drawee.controller.AbstractDraweeController: java.util.Map SHORTCUT_EXTRAS
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET
com.google.android.material.R$style: int Widget_MaterialComponents_Chip_Action
com.facebook.datasource.AbstractDataSource: java.util.Map mExtras
com.facebook.imagepipeline.request.ImageRequest: int mSourceUriType
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: boolean mMeasured
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge RIGHT
com.facebook.drawee.drawable.ArrayDrawable: android.graphics.Rect mTmpRect
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer this$1
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mIsEncodedMemoryCacheProbingEnabled
androidx.appcompat.R$styleable: int SwitchCompat_android_thumb
androidx.appcompat.widget.ContentFrameLayout: androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float mSpringDamping
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.FragmentTransition$Callback val$callback
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: boolean useTintColorForShadow
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
androidx.core.provider.CallbackWithHandler$2: int val$reason
com.facebook.react.animated.NativeAnimatedModule$18: com.facebook.react.animated.NativeAnimatedModule this$0
com.google.android.material.textfield.TextInputLayout: boolean hintEnabled
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbWidth
com.facebook.drawee.drawable.OrientedDrawable: android.graphics.RectF mTempRectF
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $clearPrevious$inlined
com.facebook.imagepipeline.cache.MemoryCacheParams: int maxEvictionQueueSize
com.facebook.cache.disk.SettableCacheEvent: long mCacheLimit
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA NOT_SO
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: java.util.concurrent.Executor mExecutor
com.facebook.common.references.OOMSoftReference: java.lang.ref.SoftReference softRef1
com.facebook.react.ReactRootView: com.facebook.react.uimanager.JSTouchDispatcher mJSTouchDispatcher
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: com.google.android.material.appbar.AppBarLayout val$child
com.facebook.react.animated.MultiplicationAnimatedNode: int[] mInputNodes
com.facebook.drawee.generic.RoundingParams: boolean mScaleDownInsideBorders
androidx.fragment.app.FragmentManager$5: android.view.View val$animatingView
androidx.transition.Transition: java.util.ArrayList mTargetNames
com.facebook.react.animated.NativeAnimatedModule$22: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF mOuterClipTempRectForBorderRadius
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory mWebpBitmapFactory
com.google.android.material.button.MaterialButton: int iconLeft
okhttp3.internal.platform.android.AndroidLogHandler: okhttp3.internal.platform.android.AndroidLogHandler INSTANCE
androidx.recyclerview.R$styleable: int[] ColorStateListItem
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
com.google.android.material.appbar.HeaderScrollingViewBehavior: int overlayTop
com.google.android.material.animation.MatrixEvaluator: android.graphics.Matrix tempMatrix
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: boolean mIsMemoryCacheEnabled
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: java.util.List mOverlays
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.AndroidSocketAdapter$Companion Companion
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup
com.facebook.imagepipeline.request.ImageRequest: boolean sCacheHashcode
com.google.android.material.chip.Chip: boolean ensureMinTouchTargetSize
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation SLIDE_FROM_RIGHT
com.horcrux.svg.FontData: java.lang.String fontFamily
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.animated.NativeAnimatedModule$6: com.facebook.react.animated.AnimatedNodeValueListener val$listener
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: com.facebook.imagepipeline.producers.WebpTranscodeProducer this$0
com.google.android.material.internal.CollapsingTextHelper: float collapsedDrawX
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String mScrollPerfTag
com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId
androidx.core.R$id: int accessibility_custom_action_14
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int fromY
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList chipStrokeColor
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat mRootWindowInsets
com.facebook.cache.disk.SettableCacheEvent: java.io.IOException mException
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int ActionBar_height
com.swmansion.rnscreens.ScreenStack$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy mBitmapMemoryCacheTrimStrategy
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setAlpnProtocols
com.google.android.material.behavior.SwipeDismissBehavior: int swipeDirection
com.facebook.soloader.UnpackingSoSource$1: java.io.File val$stateFileName
com.google.android.material.R$attr: int bottomSheetStyle
com.google.android.material.internal.CollapsingTextHelper: android.view.View view
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DETACH_CONTROLLER
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration Overline
com.facebook.imagepipeline.cache.BoundedLinkedHashSet: java.util.LinkedHashSet mLinkedHashSet
androidx.appcompat.widget.ToolbarWidgetWrapper$2: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
androidx.core.content.res.ResourcesCompat$FontCallback$1: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.appcompat.widget.SearchView: android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType UNKNOWN
com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CONFIRM_BUTTON_TAG
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set mHeadlessJsTaskEventListeners
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: android.graphics.Path path
com.facebook.yoga.YogaValue: com.facebook.yoga.YogaValue AUTO
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER
com.facebook.react.uimanager.LayoutShadowNode: boolean mCollapsable
androidx.core.R$id: int accessibility_custom_action_2
com.google.android.material.R$drawable: int navigation_empty_icon
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag RN_CORE
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner INSTANCE
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
com.facebook.react.modules.core.JavaTimerManager$2: boolean val$sendIdleEvents
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.executors.SerialExecutorService mSerialExecutorServiceForAnimatedImages
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets mStableInsets
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.views.drawer.ReactDrawerLayout: int mDrawerPosition
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Typeface currentTypeface
androidx.appcompat.view.menu.ListMenuItemView: boolean mHasListDivider
com.facebook.react.uimanager.UIViewOperationQueue: int[] mMeasureBuffer
androidx.collection.MapCollections$MapIterator: int mIndex
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline baseline
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
okhttp3.internal.connection.RealCall: boolean expectMoreExchanges
okhttp3.internal.connection.Exchange$RequestBodySink: long bytesReceived
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$TilePostprocessor mTilePostprocessor
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Companion Companion
com.th3rdwave.safeareacontext.SafeAreaProvider: com.th3rdwave.safeareacontext.Rect mLastFrame
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipelineConfigInterface mConfig
com.horcrux.svg.RenderableViewManager$TSpanViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline
com.facebook.react.modules.statusbar.StatusBarModule$2: boolean val$translucent
com.google.android.material.R$styleable: int[] ActionMenuItemView
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor mIterativeBoxBlurPostProcessor
androidx.appcompat.widget.DropDownListView: boolean mHijackFocus
androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity
okio.SegmentedByteString: byte[][] segments
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDisallowInterceptReset
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.google.android.material.appbar.MaterialToolbar: int DEF_STYLE_RES
com.horcrux.svg.GlyphContext: int mDYIndex
androidx.core.provider.FontRequestWorker$TypefaceResult: int mResult
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
com.facebook.drawee.generic.RoundingParams: float[] mCornersRadii
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder
com.facebook.cache.disk.DiskCacheConfig: long mMinimumSizeLimit
com.facebook.soloader.SoLoader: int sSoSourcesVersion
androidx.core.R$id: int accessibility_custom_action_5
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
androidx.customview.widget.ViewDragHelper$2: androidx.customview.widget.ViewDragHelper this$0
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connection
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon
com.facebook.react.views.scroll.ReactScrollView: java.lang.reflect.Field sScrollerField
kotlin.text.Regex: java.util.regex.Pattern nativePattern
com.facebook.react.ReactInstanceManager: java.lang.String mJSMainModulePath
com.facebook.imagepipeline.memory.PoolParams: int maxNumThreads
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR
androidx.appcompat.widget.TooltipPopup: android.graphics.Rect mTmpDisplayFrame
com.google.android.material.R$string: int mtrl_picker_toggle_to_day_selection
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
com.facebook.imagepipeline.cache.BufferedDiskCache$4: com.facebook.imagepipeline.image.EncodedImage val$finalEncodedImage
androidx.transition.FragmentTransitionSupport$3: java.util.ArrayList val$sharedElementsIn
com.google.android.material.appbar.ViewOffsetHelper: boolean horizontalOffsetEnabled
com.horcrux.svg.MarkerView: com.horcrux.svg.SVGLength mMarkerWidth
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTSpan
com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] mAutoSizeTextSizesInPx
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float mPrevTouchX
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startIconDummyDrawable
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mRect
com.horcrux.svg.GlyphContext: double mFontSize
com.google.android.material.R$dimen: int mtrl_exposed_dropdown_menu_popup_vertical_padding
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener mBridgeIdleDebugListener
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft
com.google.android.material.radiobutton.MaterialRadioButton: boolean useMaterialThemeColors
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
okhttp3.Dns: okhttp3.Dns SYSTEM
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
com.google.android.material.R$id: int confirm_button
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint
com.google.android.material.R$string: int clear_text_end_icon_content_description
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMaxTextSizeInPx
com.google.android.material.shadow.ShadowRenderer: android.graphics.Path scratch
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: long mFinalImageSetTimeMs
androidx.transition.ChangeBounds$8: int val$endLeft
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchorSet
com.facebook.drawee.debug.DebugControllerOverlayDrawable: android.graphics.Rect mRect
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder mConfigBuilder
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
okhttp3.internal.http2.Http2Writer: int maxFrameSize
com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
androidx.appcompat.widget.ButtonBarLayout: boolean mAllowStacking
com.google.android.material.chip.Chip: boolean closeIconPressed
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
com.facebook.imagepipeline.request.ImageRequest: android.net.Uri mSourceUri
com.facebook.react.views.text.ReactTextView: int mDefaultGravityVertical
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.facebook.react.ReactInstanceManager$8: com.facebook.react.ReactInstanceManager this$0
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.appcompat.R$styleable: int Toolbar_titleMargins
com.facebook.imagepipeline.producers.ThrottlingProducer: int mMaxSimultaneousRequests
com.google.android.material.R$color: int design_error
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter this$0
okhttp3.internal.platform.BouncyCastlePlatform: okhttp3.internal.platform.BouncyCastlePlatform$Companion Companion
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: androidx.fragment.app.FragmentManager val$fragmentManager
com.facebook.imagepipeline.producers.LocalFetchProducer$2: com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point out_slope_
com.facebook.imageformat.ImageFormatChecker: java.util.List mCustomImageFormatCheckers
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.imagepipeline.memory.BitmapCounter mUnpooledBitmapsCounter
com.facebook.react.views.text.TextAttributeProps: boolean mAllowFontScaling
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$producerContext
androidx.transition.ViewUtils: androidx.transition.ViewUtilsBase IMPL
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2: com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver this$1
androidx.appcompat.widget.AppCompatAutoCompleteTextView: int[] TINT_ATTRS
androidx.transition.ViewOverlayApi14$OverlayViewGroup: android.view.View mRequestingView
com.google.android.material.R$styleable: int TextInputLayout_hintEnabled
com.google.android.material.appbar.AppBarLayout: androidx.core.view.WindowInsetsCompat lastInsets
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4: com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mPreviousVert
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.components.DraweeEventTracker mEventTracker
com.google.android.material.chip.ChipDrawable: android.graphics.RectF rectF
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
com.google.android.material.R$styleable: int[] ButtonBarLayout
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] $VALUES
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
com.facebook.imagepipeline.image.ImmutableQualityInfo: boolean mIsOfFullQuality
com.google.android.material.transformation.FabTransformationBehavior$4: com.google.android.material.circularreveal.CircularRevealWidget val$circularRevealChild
okhttp3.HttpUrl: int port
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
androidx.appcompat.app.TwilightCalculator: int state
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable mIconDrawable
com.horcrux.svg.GlyphPathBag: java.util.ArrayList paths
androidx.transition.Scene: android.view.ViewGroup mSceneRoot
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setUseSessionTickets
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup
com.facebook.react.CoreModulesPackage$2: com.facebook.react.CoreModulesPackage this$0
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
com.facebook.imagepipeline.common.ImageDecodeOptions: int minDecodeIntervalMs
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemContentDescription
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
okhttp3.CertificatePinner$Builder: java.util.List pins
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState RUNNING
com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags
okhttp3.Response: okhttp3.Response priorResponse
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout timeout
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleRes
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray
androidx.transition.Transition$AnimationInfo: android.view.View mView
com.google.android.material.R$styleable: int[] MaterialCalendarItem
com.facebook.imagepipeline.cache.LruCountingMemoryCache: long mLastCacheParamsCheck
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchor
androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
com.facebook.react.animated.NativeAnimatedModule$5: int val$tag
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_peekHeight
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbHeight
com.google.android.material.circularreveal.CircularRevealCompat$1: com.google.android.material.circularreveal.CircularRevealWidget val$view
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleX
com.facebook.react.animated.NativeAnimatedModule$11: int val$tag
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mIsBeingDragged
com.facebook.react.modules.core.ReactChoreographer: java.lang.Object mCallbackQueuesLock
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool
androidx.transition.Transition: java.util.ArrayList mStartValuesList
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.facebook.react.views.textinput.ReactEditText: java.lang.String mFontFamily
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
androidx.appcompat.view.menu.ListMenuPresenter: int mItemLayoutRes
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate
com.google.android.material.R$styleable: int TextInputLayout_startIconDrawable
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
okhttp3.Dispatcher: int maxRequestsPerHost
androidx.appcompat.widget.Toolbar: int mTitleMarginEnd
com.google.android.material.button.MaterialButtonHelper: int cornerRadius
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
androidx.collection.LongSparseArray: int mSize
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable mText
com.horcrux.svg.TextProperties$FontWeight: java.util.Map weightToEnum
androidx.appcompat.view.menu.CascadingMenuPopup: int mXOffset
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.ViewGroup val$viewToManage
com.facebook.react.PackageList: com.facebook.react.ReactNativeHost reactNativeHost
androidx.recyclerview.widget.AdapterHelper: boolean mDisableRecycler
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDy
com.swmansion.rnscreens.ScreenContainer: com.facebook.react.modules.core.ChoreographerCompat$FrameCallback mFrameCallback
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type OVERLAY_COLOR
androidx.appcompat.widget.AppCompatSpinner: android.widget.SpinnerAdapter mTempAdapter
androidx.appcompat.widget.ForwardingListener: int mTapTimeout
com.facebook.common.references.CloseableReference: com.facebook.common.references.ResourceReleaser DEFAULT_CLOSEABLE_RELEASER
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel ERROR
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mBackground
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
okhttp3.OkHttpClient: java.util.List interceptors
com.facebook.react.views.text.TextLayoutManagerMapBuffer: java.util.concurrent.ConcurrentHashMap sTagToSpannableCache
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: int mDefaultValue
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue mTypedValue
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: com.facebook.imagepipeline.producers.NetworkFetchProducer this$0
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger
androidx.appcompat.app.ToolbarActionBar: java.lang.Runnable mMenuInvalidator
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Path mPathForBorder
okhttp3.CertificatePinner$Pin: java.lang.String pattern
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shapeThemingEnabled
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: boolean cancelled
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mAddAnimations
com.facebook.react.ReactInstanceManager$3$1: com.facebook.react.ReactInstanceManager$3 this$1
androidx.transition.ChangeBounds$8: int val$endTop
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
androidx.customview.widget.ViewDragHelper: int mTouchSlop
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient client
okhttp3.internal.cache.DiskLruCache: long size
androidx.recyclerview.widget.OrientationHelper: android.graphics.Rect mTmpRect
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mExpandedItem
com.facebook.react.animated.DiffClampAnimatedNode: double mMax
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
com.facebook.react.views.view.ReactViewGroup: android.graphics.Path mPath
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.NullPointerException NO_REQUEST_EXCEPTION
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.google.android.material.textfield.TextInputLayout: int defaultStrokeColor
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable
com.facebook.imagepipeline.memory.PoolConfig: boolean mIgnoreBitmapPoolHardCap
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mValid
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: com.facebook.cache.disk.DefaultDiskStorage this$0
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.facebook.cache.disk.DiskCacheConfig: java.lang.String mBaseDirectoryName
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.util.BitSet mRemainingSpans
com.google.android.material.internal.TextDrawableHelper: java.lang.ref.WeakReference delegate
com.facebook.react.animated.AnimatedNode: int mActiveIncomingNodes
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView mTextRoot
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: android.graphics.Paint mShadowPaint
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide left
com.horcrux.svg.GlyphContext: double mDY
com.facebook.react.ReactInstanceManager: boolean mHasStartedCreatingInitialContext
com.facebook.drawee.drawable.ArrayDrawable$1: int val$index
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: int mLastStatus
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList tint
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
androidx.recyclerview.widget.FastScroller: android.animation.ValueAnimator mShowHideAnimator
androidx.appcompat.widget.TintContextWrapper: java.lang.Object CACHE_LOCK
com.facebook.common.statfs.StatFsHelper: long mLastRestatTime
com.google.android.material.datepicker.Month: int month
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.ReadableMap mConfig
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mTitleView
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode
com.facebook.drawee.backends.pipeline.Fresco: java.lang.Class TAG
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: com.facebook.imagepipeline.memory.BucketMap mMap
com.facebook.react.views.text.ReactTextUpdate: float mPaddingLeft
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence mHintText
com.facebook.imagepipeline.memory.PoolConfig$Builder: int mBitmapPoolMaxBitmapSize
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mAnchorPosition
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean mMemoryCacheEnabled
androidx.transition.Scene: java.lang.Runnable mExitAction
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mIconView
com.facebook.common.references.SharedReference: java.util.Map sLiveObjects
com.facebook.cache.disk.DiskStorageCache: long FUTURE_TIMESTAMP_THRESHOLD_MS
androidx.coordinatorlayout.R$styleable: int[] FontFamilyFont
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean IS_LOLLIPOP
androidx.recyclerview.widget.DefaultItemAnimator$7: androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo
com.facebook.soloader.nativeloader.NativeLoader: com.facebook.soloader.nativeloader.NativeLoaderDelegate sDelegate
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable closeIconRipple
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER_INSIDE
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow SCROLL
androidx.appcompat.widget.LinearLayoutCompat: int mGravity
com.facebook.react.R$id: int accessibility_actions
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mControllerBuilder
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mTempRect
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mSystemGestureInsets
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
com.google.android.material.textfield.TextInputLayout: int boxStrokeColor
com.facebook.soloader.SoLoader$1: java.lang.Runtime val$runtime
kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration None
com.horcrux.svg.SvgView$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.customview.widget.ViewDragHelper: int mEdgeSize
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView
com.google.android.material.bottomappbar.BottomAppBar$8: com.google.android.material.bottomappbar.BottomAppBar this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.views.text.ReactTextShadowNode: com.facebook.yoga.YogaMeasureFunction mTextMeasureFunction
com.google.android.material.resources.TextAppearance: java.lang.String fontFamily
com.facebook.common.references.OOMSoftReference: java.lang.ref.SoftReference softRef3
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.util.List protocols
com.facebook.react.uimanager.ViewManagerRegistry: java.util.Map mViewManagers
androidx.transition.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup mHostView
com.facebook.react.config.ReactFeatureFlags: boolean mapBufferSerializationEnabled
com.google.android.material.datepicker.CalendarItemStyle: android.content.res.ColorStateList strokeColor
okio.InflaterSource: okio.BufferedSource source
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges BOTTOM
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.JobScheduler mJobScheduler
com.facebook.react.modules.blob.BlobModule$2: com.facebook.react.modules.blob.BlobModule this$0
okhttp3.internal.platform.android.AndroidLog: okhttp3.internal.platform.android.AndroidLog INSTANCE
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mStartingStartTrim
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.common.memory.PooledByteArrayBufferedInputStream: byte[] mByteArray
com.horcrux.svg.GlyphContext: com.horcrux.svg.SVGLength[] mYs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.facebook.common.media.MimeTypeMapWrapper: android.webkit.MimeTypeMap sMimeTypeMap
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
androidx.fragment.app.Fragment: boolean mHiddenChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation TOP_RIGHT
com.google.android.material.elevation.ElevationOverlayProvider: int colorSurface
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.os.Handler mHandler
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String mViewClassName
com.horcrux.svg.PatternView: int mMeetOrSlice
com.google.android.material.bottomappbar.BottomAppBar$7: androidx.appcompat.widget.ActionMenuView val$actionMenuView
com.facebook.datasource.AbstractDataSource$1: boolean val$isFailure
androidx.transition.ViewUtils: android.util.Property CLIP_BOUNDS
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: com.google.android.material.shape.ShapeAppearancePathProvider$PathListener pathListener
kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mDeltaX
com.facebook.drawee.drawable.ArrayDrawable: boolean mIsStatefulCalculated
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA X86_64
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST
okhttp3.internal.http.DatesKt: okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 STANDARD_DATE_FORMAT
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.MessageInflater messageInflater
androidx.core.content.res.ComplexColorCompat: int mColor
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JSBundleLoader mJsBundleLoader
androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActiveDelegatesLock
com.facebook.react.TurboReactPackage$1$1: java.util.Map$Entry nextEntry
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat GIF
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
okhttp3.Cache: int hitCount
com.google.android.material.R$styleable: int[] PopupWindowBackgroundState
com.facebook.imagepipeline.memory.Bucket: int mMaxLength
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method ensureImeVisible
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
com.facebook.common.statfs.StatFsHelper: java.io.File mInternalPath
androidx.recyclerview.widget.DefaultItemAnimator$1: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Constructor sConstructor
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mEncodedMemoryCacheHistory
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
androidx.appcompat.widget.LinearLayoutCompat: int mShowDividers
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JSIModulePackage mJSIModulePackage
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel INFO
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: com.facebook.imagepipeline.producers.DiskCacheReadProducer this$0
com.google.android.material.textfield.TextInputLayout: boolean restoringSavedState
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.Runnable mTabSelector
com.google.android.material.R$integer: int app_bar_elevation_anim_duration
androidx.transition.TransitionSet: boolean mStarted
androidx.core.R$id: int accessibility_custom_action_28
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
com.facebook.react.views.image.ReactImageView: boolean mProgressiveRenderingEnabled
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView svgView
androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: android.view.ViewGroup val$parent
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.animated.SpringAnimation$PhysicsState: double velocity
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircleImageView mCircleView
androidx.appcompat.app.AlertController$3: android.view.View val$bottom
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems
com.facebook.imagepipeline.image.EncodedImage: boolean sUseCachedMetadata
androidx.appcompat.R$styleable: int[] AppCompatImageView
androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop
com.horcrux.svg.VirtualView: com.horcrux.svg.GlyphContext glyphContext
com.facebook.react.views.text.TextAttributeProps: boolean mIsLineThroughTextDecorationSet
androidx.fragment.app.FragmentManager$PopBackStackState: int mId
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: long mDuration
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: int mHash
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState
com.facebook.react.views.text.ReactTextShadowNode: android.text.TextPaint sTextPaintInstance
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
com.facebook.cache.disk.SettableCacheEvent: java.lang.String mResourceId
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Android10Platform$Companion Companion
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mFy
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
androidx.recyclerview.widget.AdapterHelper: androidx.core.util.Pools$Pool mUpdateOpPool
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor mRoundedCornerPostprocessor
okhttp3.Challenge: java.util.Map authParams
androidx.core.R$styleable: int GradientColor_android_startY
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
com.facebook.react.jstasks.HeadlessJsTaskContext: android.util.SparseArray mTaskTimeouts
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker mBitmapPoolStatsTracker
com.google.android.material.shape.ShapePath$1: java.util.List val$operations
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_X
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: com.facebook.imagepipeline.memory.MemoryChunkPool mPool
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper
com.facebook.drawee.components.DeferredReleaser: com.facebook.drawee.components.DeferredReleaser sInstance
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List dirtyFiles
androidx.transition.TransitionManager: java.lang.ThreadLocal sRunningTransitions
androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
com.google.android.material.datepicker.Month: int year
androidx.core.provider.FontRequest: java.lang.String mQuery
androidx.appcompat.R$styleable: int SearchView_commitIcon
androidx.drawerlayout.widget.DrawerLayout: int mDrawerState
okhttp3.Address: java.util.List protocols
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: androidx.appcompat.widget.SearchView$SearchAutoComplete this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType mAnimatedProperty
com.facebook.yoga.YogaPositionType: int mIntValue
androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes
com.facebook.drawee.drawable.RoundedCornersDrawable: float[] mRadii
com.google.android.material.R$attr: int textAppearanceLineHeightEnabled
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int mArrowWidth
com.facebook.react.views.slider.ReactSliderEvent: boolean mFromUser
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
androidx.appcompat.R$styleable: int MenuItem_showAsAction
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier this$0
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics sScreenDisplayMetrics
com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer mBackgroundColor
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.fragment.app.ListFragment: android.view.View mListContainer
com.facebook.react.config.ReactFeatureFlags: boolean enableExperimentalStaticViewConfigs
androidx.appcompat.widget.ActionMenuPresenter: boolean mPendingOverflowIconSet
com.google.android.material.button.MaterialButtonHelper: int insetRight
okhttp3.internal.http2.Http2: okhttp3.internal.http2.Http2 INSTANCE
kotlin.sequences.DropSequence$iterator$1: int left
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: com.facebook.react.bridge.ReadableArray mItems
androidx.appcompat.R$styleable: int SwitchCompat_showText
com.facebook.react.views.image.ReactImageView: int mBackgroundColor
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion Companion
androidx.appcompat.widget.AppCompatProgressBarHelper: android.widget.ProgressBar mView
com.facebook.react.views.text.ShadowStyleSpan: float mDy
com.google.android.material.shape.ShapePath$PathArcOperation: float top
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1
com.google.android.material.R$styleable: int[] Chip
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathMidLine mMidLine
com.swmansion.rnscreens.ScreenContainer: androidx.fragment.app.FragmentTransaction mCurrentTransaction
com.google.android.material.textfield.ClearTextEndIconDelegate$1: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper this$0
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: java.util.Map mDelayedExtras
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean excludeBitmapConfigFromComparison
com.facebook.react.views.view.ReactViewManager$1: com.facebook.react.views.view.ReactViewManager this$0
com.google.android.material.chip.ChipDrawable: float textStartPadding
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.facebook.react.animated.NativeAnimatedModule$21: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect
com.facebook.soloader.ApplicationSoSource: int flags
androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1: com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 this$1
okhttp3.internal.concurrent.TaskRunner$runnable$1: okhttp3.internal.concurrent.TaskRunner this$0
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder finder
com.google.android.material.datepicker.MaterialCalendar: java.lang.Object MONTHS_VIEW_GROUP_TAG
okhttp3.Cookie$Builder: boolean httpOnly
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinHeightField
com.facebook.react.views.scroll.ReactScrollView: java.lang.Runnable mPostTouchRunnable
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
com.swmansion.rnscreens.ScreenStack: java.util.ArrayList mStack
com.google.android.material.R$dimen: int design_textinput_caption_translate_y
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: com.facebook.cache.disk.DefaultDiskStorage this$0
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
androidx.fragment.app.FragmentManager: boolean mStopped
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.google.android.material.button.MaterialButtonHelper: int strokeWidth
com.google.android.material.bottomappbar.BottomAppBar$Behavior: java.lang.ref.WeakReference viewRef
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.content.Context mContext
com.facebook.react.animated.NativeAnimatedModule$2: long val$frameNo
com.google.android.material.R$styleable: int AppBarLayout_liftOnScroll
okhttp3.internal.http1.HeadersReader: long headerLimit
com.google.android.material.R$dimen: int mtrl_calendar_navigation_top_padding
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.imagepipeline.request.ImageRequest: boolean mIsDiskCacheEnabled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize bottomLeftCornerSize
com.facebook.react.ReactAndroidHWInputDeviceHelper: com.facebook.react.ReactRootView mReactRootView
androidx.appcompat.app.AlertController$5: android.view.View val$bottom
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
com.facebook.react.modules.network.NetworkingModule$1: com.facebook.react.modules.network.NetworkingModule this$0
com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList startIconTintList
androidx.appcompat.widget.SwitchCompat: int mSwitchTop
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
com.horcrux.svg.TSpanView: java.lang.String mContent
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mImageRequestStartTimeMs
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue settingsListenerQueue
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method warnIfOpenMethod
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize topLeftCornerSize
com.facebook.react.views.textinput.ReactEditText: int mFontStyle
com.facebook.drawee.drawable.RoundedDrawable: float mBorderWidth
androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: android.os.Handler mHandler
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseArray mTagsToCSSNodes
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
okhttp3.internal.Util$threadFactory$1: boolean $daemon
androidx.core.R$styleable: int[] GradientColorItem
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$RecycleListView val$listView
okhttp3.Request: java.util.Map tags
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Companion Companion
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.TextAttributes mTextAttributes
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: int mNumPostponed
com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflow
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled
androidx.transition.Visibility: java.lang.String[] sTransitionProperties
androidx.appcompat.widget.AppCompatSeekBarHelper: android.widget.SeekBar mView
androidx.appcompat.widget.ContentFrameLayout: android.graphics.Rect mDecorPadding
androidx.recyclerview.widget.ChildHelper: androidx.recyclerview.widget.ChildHelper$Bucket mBucket
com.horcrux.svg.VirtualView: java.lang.String mMarkerStart
com.facebook.react.views.textinput.ReactEditText: boolean mDisableTextDiffing
com.facebook.react.modules.statusbar.StatusBarModule$3: android.app.Activity val$activity
androidx.appcompat.widget.ListPopupWindow: boolean mForceIgnoreOutsideTouch
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean mAddPaddingForCorners
androidx.appcompat.R$attr: int checkboxStyle
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.facebook.jni.IteratorHelper: java.lang.Object mElement
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDy
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $readerToClose$inlined
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.animation.TransformationCallback fabTransformationCallback
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mStackedBackground
com.facebook.imagepipeline.cache.BufferedDiskCache$3: java.lang.Object val$token
okhttp3.internal.connection.Exchange$RequestBodySink: long contentLength
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object[] SHADOW_ARGS
androidx.transition.FragmentTransitionSupport$3: java.util.ArrayList val$enteringViews
androidx.appcompat.widget.ListPopupWindow: int mListItemExpandMaximum
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.text.ReactClickableSpan: int mForegroundColor
com.horcrux.svg.SvgView: float mVbHeight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 timeout
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.material.textfield.TextInputLayout: int DEF_STYLE_RES
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign FLEX_END
okhttp3.CacheControl: int minFreshSeconds
androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shadowPaddingEnabled
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection
com.facebook.react.animated.InterpolationAnimatedNode: double[][] mOutputs
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation TOP_LEFT
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager mFabricViewStateManager
com.facebook.react.modules.image.ImageLoaderModule$4: com.facebook.react.bridge.Promise val$promise
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: com.facebook.imagepipeline.producers.ProducerContext val$producerContext
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
com.horcrux.svg.ForeignObjectView: com.horcrux.svg.SVGLength mY
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: int mProducerIndex
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.common.CacheEventListener mCacheEventListener
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: boolean cacheRequestClosed
com.facebook.react.uimanager.OnLayoutEvent: int mWidth
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool connectionPool
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.google.android.material.appbar.ViewOffsetBehavior: int tempTopBottomOffset
com.facebook.react.ReactFragment: com.facebook.react.ReactDelegate mReactDelegate
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceEndMethod
com.swmansion.rnscreens.ScreenStackHeaderConfig: int mTintColor
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
okio.RealBufferedSource$inputStream$1: okio.RealBufferedSource this$0
com.swmansion.rnscreens.R$anim: int rns_slide_out_to_bottom
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoShrinkCallback
com.facebook.react.views.view.ReactDrawableHelper: android.util.TypedValue sResolveOutValue
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
com.horcrux.svg.PathView: android.graphics.Path mPath
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int toY
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean mIntercepted
androidx.core.R$id: int accessibility_custom_action_7
okhttp3.Cookie: java.lang.String domain
okhttp3.internal.connection.Exchange: okhttp3.EventListener eventListener
com.google.android.material.animation.DrawableAlphaProperty: android.util.Property DRAWABLE_ALPHA_COMPAT
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.horcrux.svg.LinearGradientView: com.horcrux.svg.SVGLength mX1
com.facebook.react.modules.storage.AsyncStorageModule$4: com.facebook.react.bridge.ReadableArray val$keyValueArray
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] $VALUES
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
okhttp3.internal.ws.WebSocketExtensions: boolean unknownValues
com.facebook.common.streams.LimitedInputStream: int mBytesToReadWhenMarked
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap mBackingMap
com.facebook.react.views.textinput.ReactTextInputEvent: int mRangeStart
com.facebook.imagepipeline.memory.FlexByteArrayPool: com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool mDelegatePool
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.animation.AnimatorSet mAnimatorSet
com.google.android.material.behavior.SwipeDismissBehavior$1: com.google.android.material.behavior.SwipeDismissBehavior this$0
androidx.recyclerview.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector
okhttp3.internal.http2.Header: okio.ByteString name
com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.lang.String mProducerName
okio.SegmentPool: okio.Segment LOCK
com.google.android.material.behavior.SwipeDismissBehavior: com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener listener
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.common.internal.ImmutableList mCustomDrawableFactories
com.facebook.react.ReactDelegate: com.facebook.react.ReactNativeHost mReactNativeHost
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $cancelable
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: java.lang.String val$controllerId
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.material.R$style: int Theme_Design_Light_BottomSheetDialog
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
okhttp3.ConnectionSpec: java.lang.String[] tlsVersionsAsString
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
androidx.appcompat.view.menu.MenuBuilder: boolean mOverrideVisibleItems
com.facebook.react.modules.network.ProgressResponseBody: long mTotalBytesRead
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.facebook.soloader.UnpackingSoSource$1: byte[] val$deps
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: com.facebook.react.bridge.WritableArray mTimersToCall
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.horcrux.svg.TSpanView: android.graphics.Path mCachedPath
com.facebook.react.views.scroll.ReactHorizontalScrollView$5: int val$scrollY
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.imagepipeline.platform.PlatformDecoder mPurgeableDecoder
com.horcrux.svg.MarkerView: java.lang.String mMarkerUnits
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
com.google.android.material.animation.ArgbEvaluatorCompat: com.google.android.material.animation.ArgbEvaluatorCompat instance
com.google.android.material.R$styleable: int MaterialButton_cornerRadius
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
com.google.android.material.R$styleable: int TextInputLayout_startIconCheckable
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mPreviousSelectionEnd
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$styleable: int ActionBar_popupTheme
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker
com.facebook.react.uimanager.OnLayoutEvent: int mX
com.facebook.soloader.SoLoader$1: java.lang.String val$localLdLibraryPathNoZips
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
com.horcrux.svg.MaskView: com.horcrux.svg.Brush$BrushUnits mMaskContentUnits
androidx.transition.ViewGroupOverlayApi18: android.view.ViewGroupOverlay mViewGroupOverlay
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
com.google.android.material.button.MaterialButtonHelper: boolean backgroundOverwritten
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.horcrux.svg.FontData: boolean manualKerning
com.google.android.material.resources.TextAppearance: boolean textAllCaps
com.horcrux.svg.VirtualViewManager: java.lang.String mClassName
com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset
androidx.transition.Transition: java.lang.String mName
com.google.android.material.R$styleable: int MaterialButton_iconSize
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType mPlaceholderImageScaleType
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
bolts.Task: java.util.concurrent.ExecutorService BACKGROUND_EXECUTOR
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig sDefaultImageRequestConfig
com.google.android.material.R$styleable: int AppBarLayout_android_keyboardNavigationCluster
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory DELETE_FILE
androidx.collection.ArraySet: int mSize
com.facebook.common.webp.WebpSupportStatus: byte[] WEBP_NAME_BYTES
com.facebook.imagepipeline.memory.LruBitmapPool: com.facebook.imagepipeline.memory.PoolBackend mStrategy
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
androidx.appcompat.view.ContextThemeWrapper: int mThemeResource
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.listener.RequestListener mRequestListener
com.google.android.material.datepicker.MaterialCalendar$5: com.google.android.material.datepicker.MaterialCalendar this$0
androidx.appcompat.widget.SwitchCompat: int mTouchMode
androidx.transition.Transition: androidx.collection.ArrayMap mNameOverrides
okhttp3.MultipartBody: okhttp3.MediaType type
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mRefreshing
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewCompat: boolean sMinWidthFieldFetched
com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
androidx.appcompat.R$styleable: int ActionBar_logo
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: com.th3rdwave.safeareacontext.SafeAreaViewLocalData mLocalData
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.google.android.material.transformation.FabTransformationBehavior$1: boolean val$expanded
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode$Callback mWrappedCallback
com.facebook.common.internal.Suppliers$1: java.lang.Object val$instance
androidx.appcompat.widget.ActionBarContainer: boolean mIsStacked
androidx.appcompat.view.menu.CascadingMenuPopup: int mLastPosition
com.google.android.material.textfield.TextInputLayout: int boxCollapsedPaddingTopPx
androidx.appcompat.widget.SwitchCompat: int mSwitchHeight
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool
com.google.android.material.floatingactionbutton.FloatingActionButton: int maxImageSize
com.google.android.material.internal.CollapsingTextHelper: float expandedTextSize
androidx.core.R$styleable: int GradientColor_android_centerX
com.facebook.react.views.picker.ReactPicker$2: com.facebook.react.views.picker.ReactPicker this$0
androidx.appcompat.R$color: int abc_tint_seek_thumb
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] $VALUES
com.facebook.cache.disk.DiskStorageCache: long mLowDiskSpaceCacheSizeLimit
com.google.android.material.internal.ForegroundLinearLayout: boolean mForegroundInPadding
androidx.cardview.widget.CardView: androidx.cardview.widget.CardViewImpl IMPL
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.imagepipeline.listener.ForwardingRequestListener mForwardingRequestListener
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.text.TextAttributes mTextAttributes
com.google.android.material.R$styleable: int TextAppearance_android_textColorLink
androidx.appcompat.R$styleable: int SwitchCompat_trackTint
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemChecked
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.ArrayList mEventStaging
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType kMidMarker
okhttp3.internal.ws.WebSocketReader: int opcode
com.facebook.react.bridge.ReactContext: boolean mDestroyed
androidx.appcompat.R$drawable: int abc_btn_borderless_material
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part$Companion Companion
com.facebook.common.memory.PooledByteArrayBufferedInputStream: java.io.InputStream mInputStream
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable mVerticalTrackDrawable
androidx.collection.LruCache: int size
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
androidx.core.R$id: int accessibility_custom_action_20
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mIsDiskCacheProbingEnabled
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_END
androidx.appcompat.R$layout: int abc_action_menu_layout
com.horcrux.svg.SvgViewModule$1: com.facebook.react.bridge.Callback val$successCallback
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle
androidx.appcompat.R$layout: int abc_list_menu_item_radio
com.horcrux.svg.GlyphContext: int mXIndex
androidx.appcompat.R$attr: int panelMenuListTheme
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mRotation
okhttp3.Cache: okhttp3.Cache$Companion Companion
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.cursoradapter.widget.ResourceCursorAdapter: int mDropDownLayout
com.facebook.react.uimanager.OnLayoutEvent: int mY
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller mScroller
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Http2Writer$Companion Companion
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean mAutoPlayAnimations
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Connection http2Connection
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] mObjBuffer
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer
androidx.appcompat.R$id: int title_template
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: android.view.View mView
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
androidx.fragment.R$anim: int fragment_close_enter
androidx.core.R$styleable: int FontFamilyFont_android_font
com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemId
androidx.appcompat.widget.ScrollingTabContainerView$1: android.view.View val$tabView
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type BACK
com.facebook.react.views.picker.ReactPicker: java.util.List mStagedItems
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: android.graphics.Paint mCirclePaint
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] $VALUES
okhttp3.internal.concurrent.Task: long nextExecuteNanoTime
com.google.android.material.R$styleable: int TextInputLayout_endIconTint
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.imageformat.DefaultImageFormatChecker: byte[] DNG_HEADER_MM
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
okhttp3.MultipartBody: byte[] COLONSPACE
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.facebook.react.animated.TrackingAnimatedNode: int mToValueNode
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.uimanager.UIManagerModule$3: int val$widthMeasureSpec
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
com.facebook.soloader.UnpackingSoSource$1: java.io.File val$depsFileName
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
com.facebook.drawee.controller.AbstractDraweeController: boolean mIsRequestSubmitted
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: com.facebook.common.internal.Objects$ToStringHelper$ValueHolder next
com.facebook.drawee.drawable.FadeDrawable: int[] mStartAlphas
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
androidx.appcompat.view.menu.StandardMenuPopup: int mContentWidth
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mControllerIntermediateImageSetTimeMs
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: java.util.ArrayDeque mTasks
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
com.google.android.material.R$attr: int state_lifted
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w100
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.content.res.Resources mResources
androidx.fragment.app.FragmentManager: boolean mDestroyed
com.facebook.react.module.model.ReactModuleInfo: java.lang.String mClassName
com.google.android.material.R$styleable: int[] SwitchMaterial
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int shadowCompatRotation
androidx.appcompat.widget.DropDownListView: java.lang.reflect.Field mIsChildViewEnabled
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mMoveAnimations
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.google.android.material.bottomsheet.BottomSheetDialog: boolean dismissWithAnimation
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.facebook.react.views.scroll.ReactScrollView: boolean sTriedToGetScrollerField
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_CONTROLLER
com.facebook.react.animated.AnimationDriver: int mId
androidx.core.R$styleable: int GradientColor_android_endX
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole PROGRESSBAR
androidx.recyclerview.widget.FastScroller: int[] mVerticalRange
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.imagepipeline.drawable.DrawableFactory mAnimatedDrawableFactory
com.swmansion.rnscreens.R$anim: int rns_no_animation_250
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: java.util.concurrent.Executor executor
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents NONE
androidx.core.util.Pools$SynchronizedPool: java.lang.Object mLock
androidx.appcompat.R$styleable: int Toolbar_subtitle
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.util.Pools$Pool sRectPool
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
bolts.Task: boolean complete
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer this$1
com.swmansion.rnscreens.Screen: java.lang.Integer screenOrientation
androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: int mHttpConnectionTimeout
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: boolean mCancelled
com.facebook.react.R$string: int toolbar_description
androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sStableInsets
com.facebook.imagepipeline.common.ImageDecodeOptions: android.graphics.Bitmap$Config animatedBitmapConfig
androidx.transition.ChangeBounds$8: int val$endRight
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.horcrux.svg.VirtualView: float[] sRawMatrix
com.google.android.material.ripple.RippleUtils: int[] HOVERED_STATE_SET
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mEnsureTranscoderLibraryLoaded
com.swmansion.rnscreens.ScreenWindowTraits$WhenMappings: int[] $EnumSwitchMapping$0
com.google.android.material.internal.CollapsingTextHelper: float collapsedShadowDx
okhttp3.Handshake: okhttp3.Handshake$Companion Companion
okio.ByteString: byte[] data
com.google.android.material.chip.Chip: boolean deferredCheckedValue
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer this$0
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET
androidx.appcompat.view.menu.CascadingMenuPopup: android.content.Context mContext
androidx.core.R$styleable: int GradientColor_android_endColor
androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.fresco.ui.common.LoggingListener mLoggingListener
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.AdapterHelper$Callback mCallback
okhttp3.OkHttpClient$Builder: boolean followRedirects
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray mUpdatedNodes
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets
androidx.appcompat.widget.ActionMenuPresenter: boolean mMaxItemsSet
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET
com.google.android.material.chip.ChipDrawable: float chipIconSize
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
androidx.appcompat.app.AlertController: int mListItemLayout
androidx.appcompat.resources.R$drawable: int abc_vector_test
com.google.android.material.R$attr: int isMaterialTheme
com.facebook.react.uimanager.ReactAccessibilityDelegate$3: int[] $SwitchMap$com$facebook$react$uimanager$ReactAccessibilityDelegate$AccessibilityRole
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.String mRequestId
androidx.cardview.widget.RoundRectDrawable: float mRadius
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener onLayoutChangeListener
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.memory.PooledByteBufferFactory mPooledByteBufferFactory
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs
com.facebook.imagepipeline.core.CloseableReferenceFactory$1: com.facebook.imagepipeline.core.CloseableReferenceFactory this$0
kotlin.jvm.internal.Lambda: int arity
androidx.transition.ChangeBounds: boolean mResizeClip
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String mText
androidx.appcompat.app.AlertDialog$Builder: int mTheme
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker this$1
com.google.android.material.R$styleable: int[] CoordinatorLayout
com.google.android.material.bottomappbar.BottomAppBar$Behavior: int originalBottomMargin
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: short last
com.facebook.imageformat.DefaultImageFormatChecker: byte[] GIF_HEADER_89A
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $newStream$inlined
com.google.android.material.internal.CollapsingTextHelper: boolean boundsChanged
com.facebook.react.views.text.TextLayoutManagerMapBuffer: java.lang.Object sSpannableCacheLock
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.ReactInstanceManager: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultBackButtonImpl
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.facebook.react.animated.NativeAnimatedModule$4: int val$tag
com.google.android.material.R$styleable: int TextAppearance_android_shadowRadius
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy showStrategy
com.google.android.material.R$dimen: int design_fab_size_mini
com.facebook.react.ReactAndroidHWInputDeviceHelper: java.util.Map KEY_EVENTS_ACTIONS
com.facebook.react.views.text.ShadowStyleSpan: float mRadius
androidx.appcompat.widget.SearchView: int[] mTemp
okhttp3.internal.connection.RealCall: boolean timeoutEarlyExit
com.facebook.imagepipeline.memory.Bucket: java.util.Queue mFreeList
okhttp3.internal.concurrent.TaskQueue: java.util.List futureTasks
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback mTimerFrameCallback
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mEnsureTranscoderLibraryLoaded
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets mPlatformInsets
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge TOP
okhttp3.OkHttpClient: boolean followSslRedirects
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: com.facebook.imagepipeline.listener.RequestListener2 mRequestListener
com.swmansion.rnscreens.ScreenContainer: androidx.fragment.app.FragmentManager mFragmentManager
com.facebook.imagepipeline.memory.BitmapCounterProvider: com.facebook.imagepipeline.memory.BitmapCounter sBitmapCounter
com.google.android.material.R$styleable: int Chip_chipStartPadding
com.facebook.react.views.progressbar.ProgressBarContainerView: android.widget.ProgressBar mProgressBar
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnectionPool connectionPool
com.facebook.react.CoreModulesPackage$1: java.util.Map val$reactModuleInfoMap
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
androidx.appcompat.R$id: int scrollIndicatorUp
com.facebook.imagepipeline.core.ProducerFactory: android.content.res.AssetManager mAssetManager
com.facebook.react.views.scroll.ReactScrollViewHelper: java.util.List sScrollListeners
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.lang.String mControllerId
com.google.android.material.ripple.RippleUtils: int[] PRESSED_STATE_SET
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher this$0
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mContentDescription
com.facebook.soloader.SoLoader$1: java.lang.String val$localLdLibraryPath
com.google.android.material.R$styleable: int MaterialCalendarItem_itemStrokeWidth
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.facebook.imagepipeline.core.ImagePipelineExperiments: int mBitmapCloseableRefType
com.google.android.material.chip.Chip: int[] SELECTED_STATE
com.google.android.material.appbar.HeaderBehavior: android.view.VelocityTracker velocityTracker
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsStagingLock
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetX
androidx.collection.SparseArrayCompat: int[] mKeys
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
com.horcrux.svg.FontData$AbsoluteFontWeight: com.horcrux.svg.TextProperties$FontWeight[] WEIGHTS
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
com.google.android.material.R$layout: int mtrl_calendar_year
com.facebook.common.statfs.StatFsHelper: boolean mInitialized
com.facebook.react.views.textinput.ReactEditText: boolean mTypefaceDirty
com.facebook.react.modules.core.ReactChoreographer: boolean mHasPostedCallback
androidx.recyclerview.widget.DefaultItemAnimator: android.animation.TimeInterpolator sDefaultInterpolator
androidx.lifecycle.LiveData: java.lang.Object mPendingData
androidx.recyclerview.R$styleable: int[] FontFamilyFont
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequest val$request
androidx.appcompat.widget.SearchView: android.widget.ImageView mSearchButton
com.facebook.yoga.YogaValue: com.facebook.yoga.YogaValue UNDEFINED
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1: com.google.android.material.datepicker.SmoothCalendarLayoutManager this$0
com.facebook.react.modules.network.ProgressRequestBody: long mContentLength
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection INHERIT
com.google.android.material.internal.CollapsingTextHelper: float expandedDrawY
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mEndTrim
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor mBackgroundExecutor
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvMatrix
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPosition
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: java.lang.Object key
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.UIViewOperationQueue mUIViewOperationQueue
okhttp3.Request: java.lang.String method
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.imagepipeline.memory.BitmapPool mBitmapPool
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType OPACITY
okio.Segment: okio.Segment next
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText2
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnClickListener
com.horcrux.svg.GlyphContext: double mX
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
okhttp3.internal.http2.Http2Connection: int nextStreamId
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
kotlin.comparisons.NaturalOrderComparator: kotlin.comparisons.NaturalOrderComparator INSTANCE
com.google.android.material.textfield.IndicatorViewController: int captionToShow
com.facebook.common.references.CloseableReference: int sBitmapCloseableRefType
androidx.core.graphics.drawable.IconCompat: int mType
okhttp3.MediaType: java.lang.String mediaType
com.google.android.material.R$styleable: int Chip_chipIconVisible
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] $VALUES
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mDataFetchSequence
androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback
com.facebook.react.common.ClearableSynchronizedPool: int mSize
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.ActionProvider mInner
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mBackButtonInCustomView
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled
androidx.collection.SparseArrayCompat: boolean mGarbage
com.horcrux.svg.GlyphContext: java.util.ArrayList mYsContext
com.facebook.react.views.modal.ReactModalHostManager$1: com.facebook.react.uimanager.ThemedReactContext val$reactContext
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
okhttp3.CacheControl$Builder: boolean immutable
androidx.cardview.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint
com.facebook.react.LazyReactPackage$2: com.facebook.react.LazyReactPackage this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: com.facebook.react.views.textinput.ReactTextInputManager this$0
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex
com.facebook.react.views.textinput.ReactEditText: boolean mIsSettingTextFromJS
com.facebook.react.views.text.TextAttributeProps: float mTextShadowRadius
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
com.facebook.soloader.UnpackingSoSource: android.content.Context mContext
com.facebook.common.references.SharedReference: int mRefCount
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
com.facebook.react.modules.network.NetworkingModule$1: java.lang.String val$responseType
com.google.android.material.appbar.AppBarLayout: int[] tmpStatesArray
androidx.cardview.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath
com.google.android.material.resources.TextAppearance$2: com.google.android.material.resources.TextAppearanceFontCallback val$callback
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable mDispatchEventsRunnable
androidx.appcompat.widget.TintInfo: boolean mHasTintList
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point origin_
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
okhttp3.Address: java.net.Proxy proxy
com.facebook.imageformat.ImageFormat: com.facebook.imageformat.ImageFormat UNKNOWN
com.facebook.imagepipeline.memory.PoolConfig: boolean mRegisterLruBitmapPoolAsMemoryTrimmable
androidx.appcompat.widget.ListPopupWindow: int mDropDownWidth
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutAlphabeticModifiers
androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation SLIDE_FROM_LEFT
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int mImageLoadStatus
com.horcrux.svg.PathParser: boolean mPenDown
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int lastStartedType
androidx.core.os.TraceCompat: long sTraceTagApp
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2: com.facebook.imagepipeline.producers.LocalExifThumbnailProducer this$0
com.google.android.material.floatingactionbutton.FloatingActionButton: int size
androidx.transition.Transition: java.util.ArrayList mTargetNameExcludes
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: com.facebook.react.common.LongArray mViewHierarchyUpdateEnqueuedEvents
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: float radius
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: int mCurrentDso
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.String mComponentTag
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
okhttp3.MultipartBody: okio.ByteString boundaryByteString
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
com.facebook.drawee.drawable.RoundedColorDrawable: android.graphics.Paint mPaint
androidx.appcompat.widget.DropDownListView: int mSelectionTopPadding
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endIconDummyDrawable
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] EMPTY_STATE_SET
com.facebook.common.memory.PooledByteBufferInputStream: com.facebook.common.memory.PooledByteBuffer mPooledByteBuffer
androidx.appcompat.R$styleable: int[] ColorStateListItem
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.Class sslSocketClass
com.facebook.react.ReactInstanceManager$6: com.facebook.react.ReactInstanceManager$ReactInstanceEventListener[] val$finalListeners
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
com.facebook.drawee.generic.RoundingParams: boolean mRoundAsCircle
okhttp3.Response: okhttp3.Protocol protocol
androidx.recyclerview.widget.DefaultItemAnimator$5: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.facebook.react.common.LongArray: int mLength
com.facebook.common.internal.Objects$ToStringHelper: boolean omitNullValues
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust spacingAndGlyphs
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
androidx.appcompat.R$id: int contentPanel
androidx.appcompat.widget.Toolbar: int[] mTempMargins
com.facebook.react.animated.NativeAnimatedModule$11: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: boolean mMeasured
com.facebook.react.util.JSStackTrace: java.util.regex.Pattern FILE_ID_PATTERN
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: com.facebook.imagepipeline.memory.FlexByteArrayPool mFlexByteArrayPool
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector DAY
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.JobScheduler mJobScheduler
androidx.recyclerview.widget.DefaultItemAnimator$6: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
com.swmansion.rnscreens.ScreenStackHeaderSubview: int mReactHeight
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory socketAdapterFactory
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCache_mUnthemedEntriesFieldFetched
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.Object mCallerContext
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float translationZ
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: java.util.ArrayList mAnimators
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaMeasureFunction mMeasureFunction
com.facebook.react.views.textinput.ReactTextInputManager$3: com.facebook.react.views.textinput.ReactTextInputManager this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: boolean $cancelable
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMinor
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable mProgressBarImage
okio.RealBufferedSink$outputStream$1: okio.RealBufferedSink this$0
com.google.android.material.resources.CancelableFontCallback: android.graphics.Typeface fallbackFont
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
androidx.appcompat.widget.ViewStubCompat: java.lang.ref.WeakReference mInflatedViewRef
okhttp3.Cache: int writeSuccessCount
com.swmansion.rnscreens.ScreenStack: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mLifecycleCallbacks
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean mAnimating
okhttp3.Cache$Entry: java.lang.String message
androidx.recyclerview.widget.GapWorker: java.lang.ThreadLocal sGapWorker
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mWebpSupportEnabled
com.facebook.react.uimanager.UIViewOperationQueue: long mCreateViewCount
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsTryingToCreate
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.facebook.drawee.drawable.FadeDrawable: int mActualImageLayer
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.datasource.DataSource mDataSourceWithResult
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
okhttp3.Protocol: okhttp3.Protocol QUIC
com.facebook.common.webp.WebpSupportStatus: byte[] WEBP_VP8_BYTES
com.facebook.react.modules.network.CountingOutputStream: long mCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.swmansion.rnscreens.ScreenContainer: com.facebook.react.modules.core.ChoreographerCompat$FrameCallback mLayoutCallback
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
androidx.appcompat.widget.LinearLayoutCompat: float mWeightSum
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.AspectRatioMeasure$Spec mMeasureSpec
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod SCALE
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
androidx.activity.ComponentActivity: int mContentLayoutId
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: com.facebook.drawee.backends.pipeline.info.ImagePerfState mImagePerfState
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
com.google.android.material.appbar.HeaderScrollingViewBehavior: android.graphics.Rect tempRect2
com.horcrux.svg.ImageView$1: com.horcrux.svg.ImageView this$0
com.google.android.material.transformation.FabTransformationBehavior$1: android.view.View val$child
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
com.horcrux.svg.PatternView: com.horcrux.svg.Brush$BrushUnits mPatternContentUnits
androidx.appcompat.widget.ListPopupWindow: int mDropDownVerticalOffset
com.facebook.react.views.scroll.ReactScrollView: java.lang.String mScrollPerfTag
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
androidx.appcompat.widget.SwitchCompat: int mSwitchPadding
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop
androidx.appcompat.view.menu.MenuBuilder: boolean mQwertyMode
androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: com.facebook.react.uimanager.ThemedReactContext val$reactContext
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int fromX
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder
androidx.transition.R$id: int save_overlay_view
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.widget.ActionBarContextView this$0
okhttp3.internal.connection.ExchangeFinder: int otherFailureCount
androidx.transition.Visibility$1: android.view.View val$finalOverlayView
com.google.android.material.R$styleable: int MaterialButton_strokeWidth
androidx.appcompat.R$drawable: int abc_textfield_search_material
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.internal.ws.RealWebSocket this$0
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.provider.RequestExecutor$ReplyRunnable this$0
okhttp3.internal.cache.DiskLruCache: boolean initialized
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMask
com.facebook.react.views.text.TextAttributes: float mFontSize
com.facebook.react.animated.AnimatedNode: int mBFSColor
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mIsAttachedToWindow
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: java.util.List mImageOriginListeners
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.imagepipeline.platform.PreverificationHelper mPreverificationHelper
com.google.android.material.shape.ShapePath: float endX
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType CANCEL
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: boolean mClosingActionMenu
com.google.android.material.R$attr: int state_dragged
com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.TransformCallback mTransformCallback
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long fetchCompleteTime
com.horcrux.svg.PathParser: android.graphics.Path mPath
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.internal.Supplier mLazyDataSource
androidx.transition.Transition$3: androidx.transition.Transition this$0
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String mText
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment topRightCorner
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline center
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: java.lang.Class TAG
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
com.facebook.react.modules.network.NetworkingModule$3: com.facebook.react.modules.network.NetworkingModule this$0
com.swmansion.rnscreens.Screen$onLayout$1: int $height
androidx.appcompat.R$styleable: int[] GradientColor
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR
okhttp3.internal.connection.Exchange$ResponseBodySource: long bytesReceived
com.google.android.material.R$id: int design_menu_item_action_area_stub
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.SubMenuBuilder mSubMenu
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
com.google.android.material.R$id: int textinput_helper_text
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: int mBlurRadius
androidx.appcompat.view.menu.MenuItemImpl: int mIconResId
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPositionOffset
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Matrix matrix
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPattern
androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
com.facebook.imagepipeline.cache.LruCountingMemoryCache$2: com.facebook.imagepipeline.cache.CountingMemoryCache$Entry val$entry
com.facebook.react.views.scroll.ReactScrollView$2: com.facebook.react.views.scroll.ReactScrollView this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger callsPerHost
androidx.appcompat.R$id: int message
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
androidx.appcompat.R$styleable: int SwitchCompat_android_textOn
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.google.android.material.R$styleable: int[] MaterialShape
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration Blink
com.facebook.react.CoreModulesPackage: boolean mLazyViewManagersEnabled
com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager snackbarManager
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] $VALUES
com.facebook.react.ReactDelegate: java.lang.String mMainComponentName
com.facebook.soloader.ApplicationSoSource: android.content.Context applicationContext
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
androidx.recyclerview.widget.DefaultItemAnimator$5: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
com.facebook.yoga.YogaDirection: int mIntValue
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: com.facebook.imagepipeline.cache.ImageCacheStatsTracker val$imageCacheStatsTracker
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
androidx.core.R$id: int tag_window_insets_animation_callback
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
com.google.android.material.behavior.SwipeDismissBehavior: float dragDismissThreshold
com.google.android.material.R$dimen: int mtrl_calendar_month_vertical_padding
androidx.appcompat.R$id: int textSpacerNoButtons
com.google.android.material.shape.AdjustedCornerSize: float adjustment
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener mOnRequestCloseListener
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGForeignObject
com.facebook.react.views.picker.ReactPickerAdapter: android.view.LayoutInflater mInflater
com.facebook.react.modules.image.ImageLoaderModule$3: com.facebook.react.modules.image.ImageLoaderModule this$0
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mBitmapPrepareToDrawForPrefetch
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsets
com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator modeAnimator
androidx.fragment.app.FragmentTransitionCompat21$4: java.lang.Runnable val$transitionCompleteRunnable
com.google.android.material.resources.TextAppearance: int fontFamilyResourceId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float[] mTmpFloats
androidx.collection.LongSparseArray: boolean mGarbage
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2: com.facebook.imagepipeline.producers.PartialDiskCacheProducer this$0
com.facebook.imagepipeline.producers.NetworkFetchProducer: com.facebook.common.memory.ByteArrayPool mByteArrayPool
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.TextView: java.util.ArrayList mDeltaY
com.google.android.material.textfield.TextInputLayout: boolean hintExpanded
com.facebook.imagepipeline.common.ImageDecodeOptions: int maxDimensionPx
okhttp3.OkHttpClient$Builder: int pingInterval
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mTouchSlop
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: int mNumberOfDataSources
com.zoontek.rnbootsplash.RNBootSplashTask$Type: com.zoontek.rnbootsplash.RNBootSplashTask$Type[] $VALUES
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.imagepipeline.memory.BasePool$Counter: int mCount
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions x509TrustManagerExtensions
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: com.facebook.imagepipeline.cache.MemoryCache mMemoryCache
com.horcrux.svg.Brush: android.graphics.Matrix mMatrix
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEventType mScrollEventType
com.horcrux.svg.RNSVGMarkerPosition: int element_index_
androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd
com.facebook.drawee.components.DraweeEventTracker: java.util.Queue mEventQueue
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground
com.facebook.react.animated.NativeAnimatedModule$8: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_SUBMIT
okhttp3.internal.concurrent.TaskQueue$execute$1: java.lang.String $name
androidx.lifecycle.LiveData: boolean mDispatchingValue
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.widget.MenuPopupWindow mPopup
com.google.android.material.R$styleable: int AppBarLayout_expanded
com.facebook.react.views.scroll.VelocityHelper: float mXVelocity
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: int $streamId$inlined
com.google.android.material.textfield.ClearTextEndIconDelegate: com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener clearTextOnEditTextAttachedListener
com.google.android.material.chip.ChipDrawable: float closeIconSize
okhttp3.Interceptor: okhttp3.Interceptor$Companion Companion
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
com.facebook.react.uimanager.events.Event: long mTimestampMs
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize topRightCornerSize
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: android.graphics.Rect MICRO_THUMBNAIL_DIMENSIONS
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: com.facebook.imagepipeline.producers.DecodeProducer this$0
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactContext mCurrentReactContext
com.google.android.material.dialog.InsetDialogOnTouchListener: int topInset
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: int mCurrentWidth
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.animated.factory.AnimatedFactory mAnimatedFactory
com.google.android.material.R$styleable: int ThemeEnforcement_android_textAppearance
androidx.lifecycle.ViewModel: boolean mCleared
androidx.transition.R$id: int save_non_transition_alpha
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.platform.PlatformDecoder mPlatformDecoder
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect sHelperRect
androidx.appcompat.app.AlertController$2: androidx.appcompat.app.AlertController this$0
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.decoder.ImageDecoder mAnimatedGifDecoder
com.facebook.yoga.YogaValue: com.facebook.yoga.YogaUnit unit
okhttp3.internal.http2.Http2Reader$ContinuationSource: int padding
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] $VALUES
kotlin.collections.AbstractList$SubList: int fromIndex
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.net.Uri mUri
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mAllowDelay
com.facebook.react.modules.storage.AsyncStorageModule$5: com.facebook.react.bridge.Callback val$callback
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: com.facebook.common.memory.ByteArrayPool mByteArrayPool
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.common.internal.Supplier mRecoverFromDecoderOOM
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
kotlin.collections.ArrayAsCollection: boolean isVarargs
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.recyclerview.widget.DefaultItemAnimator$1: java.util.ArrayList val$moves
androidx.appcompat.R$styleable: int ActionBar_title
androidx.appcompat.R$styleable: int ActionMode_height
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleAttr
com.facebook.drawee.drawable.ScaleTypeDrawable: android.graphics.PointF mFocusPoint
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: int mReactTag
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.imagepipeline.producers.DelayProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$context
androidx.appcompat.widget.ActionBarOverlayLayout$2: androidx.appcompat.widget.ActionBarOverlayLayout this$0
com.facebook.imagepipeline.producers.StatefulProducerRunnable: com.facebook.imagepipeline.producers.ProducerListener2 mProducerListener
com.facebook.react.TurboReactPackage$1: com.facebook.react.bridge.ReactApplicationContext val$reactContext
com.google.android.material.internal.TextDrawableHelper: com.google.android.material.resources.TextAppearance textAppearance
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode imageMode
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mImageRequestEndTimeMs
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasXOffset
androidx.appcompat.R$drawable: int abc_dialog_material_background
com.facebook.drawee.drawable.ScaleTypeDrawable: java.lang.Object mScaleTypeState
okhttp3.internal.connection.Exchange$RequestBodySink: boolean closed
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
androidx.appcompat.R$styleable: int ActionBar_icon
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteStreams mPooledByteStreams
com.facebook.react.modules.network.ForwardingCookieHandler: com.facebook.react.bridge.ReactContext mContext
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.yoga.YogaJustify: int mIntValue
okio.Buffer$UnsafeCursor: boolean readWrite
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: long mCacheTime
androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mChangeAnimations
androidx.appcompat.widget.TintTypedArray: android.content.Context mContext
com.facebook.common.webp.WebpSupportStatus: byte[] WEBP_RIFF_BYTES
com.facebook.react.modules.network.RequestBodyUtil$1: java.io.InputStream val$inputStream
com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.request.ImageRequest val$imageRequest
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
okhttp3.CacheControl: boolean mustRevalidate
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.UIImplementation this$0
androidx.recyclerview.widget.LayoutState: int mAvailable
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.appcompat.R$styleable: int CompoundButton_android_button
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.common.internal.Supplier mAsyncLogging
androidx.appcompat.app.AlertController: int mViewSpacingTop
bolts.Task$10: bolts.Continuation val$continuation
androidx.core.text.BidiFormatter: boolean mIsRtlContext
com.facebook.react.views.textinput.ReactTextInputManager$1: boolean val$_contextMenuHidden
com.google.android.material.shadow.ShadowRenderer: android.graphics.Paint shadowPaint
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean mForceStaticImage
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder mExperimentsBuilder
androidx.transition.PathProperty: float mPathLength
androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: com.facebook.common.references.CloseableReference mBufRef
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_SET_CONTROLLER
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.ColorFilter mActualImageColorFilter
com.facebook.drawee.debug.DebugControllerOverlayDrawable: android.graphics.Matrix mMatrix
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.view.ReactViewBackgroundManager mReactBackgroundManager
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform$Companion Companion
com.google.android.material.datepicker.MaterialDatePicker: int titleTextResId
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
com.facebook.react.uimanager.ReactShadowNodeImpl: float[] mPadding
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemAlphabeticModifiers
com.facebook.fresco.ui.common.ControllerListener2$Extras: int viewportWidth
com.facebook.react.views.modal.ReactModalHostManager$2: com.facebook.react.uimanager.ThemedReactContext val$reactContext
androidx.appcompat.app.AlertController: int mIconId
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
com.facebook.react.uimanager.UIManagerModule: int mBatchId
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
okhttp3.Cache$Entry: int code
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector
androidx.core.text.BidiFormatter: java.lang.String RLM_STRING
androidx.appcompat.widget.ListPopupWindow: boolean mIsAnimatedFromAnchor
com.google.android.material.datepicker.CalendarItemStyle: android.content.res.ColorStateList textColor
com.google.android.material.shadow.ShadowRenderer: android.graphics.Paint edgeShadowPaint
com.google.android.material.button.MaterialButtonHelper: boolean shouldDrawSurfaceColorStroke
com.facebook.react.views.text.ReactTextUpdate: float mPaddingRight
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner taskRunner
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
okhttp3.internal.http2.Http2Connection: long readBytesTotal
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mStartingRotation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotX
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: boolean mRunning
kotlin.sequences.DropSequence$iterator$1: kotlin.sequences.DropSequence this$0
com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio
com.google.android.material.R$dimen: int mtrl_textinput_box_stroke_width_default
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.facebook.react.views.textinput.ReactTextInputManager$3: com.facebook.react.views.textinput.ReactEditText val$editText
com.swmansion.rnscreens.ScreenStackHeaderConfig: int mDefaultStartInset
okhttp3.ConnectionSpec: boolean isTls
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
com.horcrux.svg.TSpanView$1: int[] $SwitchMap$com$horcrux$svg$TextProperties$TextLengthAdjust
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.core.view.WindowInsetsCompat$BuilderImpl29: android.view.WindowInsets$Builder mPlatBuilder
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.ForwardingListener mForwardingListener
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec: com.google.android.material.animation.MotionSpec timings
com.google.android.material.R$dimen: int mtrl_exposed_dropdown_menu_popup_elevation
androidx.fragment.app.FragmentAnim$2: android.view.ViewGroup val$container
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat
com.facebook.react.CoreModulesPackage: int mMinTimeLeftInFrameForNonBatchedOperationMs
com.google.android.material.datepicker.CalendarItemStyle: com.google.android.material.shape.ShapeAppearanceModel itemShape
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.request.ImageRequest mImageRequest
okhttp3.Request$Builder: okhttp3.HttpUrl url
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$outFragment
com.google.android.material.R$styleable: int[] MaterialRadioButton
androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout
com.facebook.react.modules.permissions.PermissionsModule$1: com.facebook.react.bridge.Promise val$promise
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean mDownsampleEnabled
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder
com.google.android.material.shape.ShapePath: java.util.List operations
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType NUMBER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SWITCH
androidx.appcompat.app.ResourcesFlusher: boolean sResourcesImplFieldFetched
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: android.app.Activity $activity
com.facebook.react.R$string: int progressbar_description
com.swmansion.rnscreens.ScreenStackHeaderConfig: java.lang.String mTitleFontFamily
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.TextView mTextView
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions ROTATION_OPTIONS_DISABLE_ROTATION
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode mIconTintMode
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME
com.facebook.imagepipeline.image.CloseableStaticBitmap: int mRotationAngle
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.facebook.react.ReactInstanceManager$7: com.facebook.react.ReactInstanceManager this$0
com.google.android.material.datepicker.MaterialDatePicker$3: com.google.android.material.datepicker.MaterialDatePicker this$0
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCheckable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition
com.horcrux.svg.SvgView: int mMeetOrSlice
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType INTERNAL
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: boolean mLayerTypeChanged
com.google.android.material.chip.ChipDrawable: int maxWidth
com.facebook.imagepipeline.cache.BufferedDiskCache$6: com.facebook.imagepipeline.cache.BufferedDiskCache this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: com.facebook.imagepipeline.cache.MemoryCacheTracker mTracker
okhttp3.Route: okhttp3.Address address
com.google.android.material.datepicker.DaysOfWeekAdapter: int CALENDAR_DAY_STYLE
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache mEncodedMemoryCache
androidx.recyclerview.widget.FastScroller$2: androidx.recyclerview.widget.FastScroller this$0
androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout
com.google.android.material.button.MaterialButton: int DEF_STYLE_RES
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
okhttp3.internal.concurrent.Task: java.lang.String name
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable mDropDownListHighlight
androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId
androidx.appcompat.app.ToolbarActionBar: boolean mLastMenuVisibility
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okio.Buffer $buffer$inlined
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: java.lang.String mUri
com.facebook.imagepipeline.common.ResizeOptions: int height
okhttp3.internal.connection.RealCall: boolean forWebSocket
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable
androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class paramClass
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5: android.widget.AutoCompleteTextView val$editText
okhttp3.CacheControl: boolean noStore
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDy
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1: com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout this$0
androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_INVALID_ENTRY
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollEnabled
okhttp3.Cache$RealCacheRequest: okhttp3.Cache this$0
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.google.android.material.R$styleable: int ShapeAppearance_cornerSizeBottomLeft
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mEncodedCacheEnabled
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.jstasks.HeadlessJsTaskConfig: long mTimeout
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources mResources
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
androidx.appcompat.app.TwilightManager: android.location.LocationManager mLocationManager
okhttp3.MediaType: okhttp3.MediaType$Companion Companion
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.ValueDescriptor mValueDescriptor
androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding
com.facebook.react.views.scroll.ReactHorizontalScrollView$5: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.disk.DiskTrimmableRegistry mDiskTrimmableRegistry
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRadialGradient
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup
com.google.android.material.datepicker.MaterialCalendar$9: com.google.android.material.datepicker.MaterialCalendar this$0
androidx.cardview.widget.RoundRectDrawable: android.graphics.PorterDuffColorFilter mTintFilter
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $inFinished$inlined
com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.ShapePath[] cornerPaths
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
okhttp3.internal.ws.RealWebSocket: long minimumDeflateSize
androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
androidx.appcompat.widget.ToolbarWidgetWrapper: int mNavigationMode
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorServiceOrNull
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.producers.MultiplexProducer this$0
com.facebook.imagepipeline.core.ImagePipelineConfig: java.util.Set mRequestListeners
com.horcrux.svg.RenderableViewManager$SymbolManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int mOriginalHorizontalOffset
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
com.horcrux.svg.SvgView: float mMinY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName
com.horcrux.svg.LineView: com.horcrux.svg.SVGLength mX1
com.facebook.datasource.FirstAvailableDataSourceSupplier: java.util.List mDataSourceSuppliers
com.zoontek.rnbootsplash.R$id: int bootsplash_layout_id
bolts.AndroidExecutors: int CORE_POOL_SIZE
com.facebook.react.animated.DivisionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mStartHeight
com.facebook.react.ReactInstanceManager$10: com.facebook.react.ReactInstanceManager this$0
com.facebook.imagepipeline.core.ProducerFactory: android.content.ContentResolver mContentResolver
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence originalHint
com.facebook.react.views.slider.ReactSlider: double mMaxValue
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: float value
androidx.appcompat.widget.ListPopupWindow$3: androidx.appcompat.widget.ListPopupWindow this$0
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.generic.RootDrawable mTopLevelDrawable
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mBackgroundNetworkFetchToEncodedMemorySequence
com.facebook.react.views.text.ReactClickableSpan: int mReactTag
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLinearGradient
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager
androidx.cardview.widget.RoundRectDrawable: android.content.res.ColorStateList mTint
com.swmansion.rnscreens.Screen: boolean mTransitioning
com.google.android.material.R$dimen: int mtrl_calendar_days_of_week_height
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
androidx.appcompat.view.menu.MenuAdapter: boolean mForceShowIcon
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets
com.swmansion.rnscreens.ScreenStackHeaderConfig: java.lang.String mDirection
androidx.appcompat.view.menu.ActionMenuItem: int mGroup
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mNextFullScanNumber
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy mRetryPolicy
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector
androidx.core.provider.CallbackWithHandler: androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback
com.facebook.react.views.slider.ReactSliderEvent: double mValue
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: java.lang.Integer mImageTranscoderType
androidx.core.R$id: int accessibility_custom_action_6
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsProfilingNextBatch
androidx.recyclerview.widget.AdapterHelper: java.util.ArrayList mPostponedList
com.facebook.react.animated.SpringAnimation: int mCurrentLoop
androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring
com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
androidx.appcompat.widget.AppCompatImageHelper: android.widget.ImageView mView
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
androidx.fragment.app.Fragment: boolean mRestored
com.google.android.material.R$styleable: int ForegroundLinearLayout_android_foregroundGravity
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: float mDefaultValue
com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusTopStart
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.PointF mInnerBottomLeftCorner
androidx.appcompat.widget.Toolbar: int mTitleMarginBottom
androidx.appcompat.view.menu.ExpandedMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS
com.facebook.react.views.modal.ReactModalHostManager$1: com.facebook.react.uimanager.events.EventDispatcher val$dispatcher
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.Spacing mDefaultPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.views.scroll.ReactScrollView: android.graphics.drawable.Drawable mEndBackground
com.facebook.react.views.textinput.ReactEditText: boolean mAutoFocus
com.facebook.react.views.picker.ReactPicker: java.util.List mItems
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint
okhttp3.internal.connection.Exchange: okhttp3.internal.http.ExchangeCodec codec
com.facebook.drawee.drawable.RoundedColorDrawable: int mColor
androidx.appcompat.R$styleable: int SearchView_searchIcon
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] $VALUES
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_XY
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType MOVE
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mCy
com.google.android.material.chip.ChipDrawable: boolean shouldDrawText
com.google.android.material.R$styleable: int Chip_textEndPadding
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool mBufferMemoryChunkPool
com.facebook.react.modules.core.JavaTimerManager$Timer: boolean mRepeat
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: boolean $translucent
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
androidx.core.view.WindowInsetsCompat$Impl20: android.view.WindowInsets mPlatformInsets
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits TRANSLUCENT
com.horcrux.svg.VirtualView: double canvasDiagonal
com.google.android.material.button.MaterialButton: boolean checked
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_DECODE
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix sInverse
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2: com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable
androidx.fragment.app.ListFragment: android.view.View mEmptyView
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.google.android.material.R$styleable: int ShapeAppearance_cornerFamilyTopRight
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] $VALUES
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline afterEdge
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotY
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.drawable.DrawableFactory mDefaultDrawableFactory
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2: com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer this$1
okhttp3.internal.http2.Hpack$Reader: int headerCount
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CALLBACK_ERROR
androidx.appcompat.widget.SearchView: int[] mTemp2
com.horcrux.svg.SvgView: android.graphics.Canvas mCanvas
com.facebook.react.uimanager.JSTouchDispatcher: long mGestureStartTime
okhttp3.internal.ws.WebSocketExtensions: boolean serverNoContextTakeover
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object mLowResImageRequest
com.facebook.common.logging.FLogDefaultLoggingDelegate: com.facebook.common.logging.FLogDefaultLoggingDelegate sInstance
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
com.horcrux.svg.TextView: com.horcrux.svg.SVGLength mTextLength
com.google.android.material.chip.ChipDrawable: android.graphics.Paint debugPaint
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ
androidx.appcompat.R$styleable: int ActionMode_background
com.facebook.react.views.scroll.ReactScrollView$1: int mStableFrames
com.horcrux.svg.SvgView: boolean mRendered
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat WEBP_LOSSLESS
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier mDataSourceSupplier
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.ListMenuPresenter mPresenter
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
com.google.android.material.datepicker.YearGridAdapter$1: com.google.android.material.datepicker.YearGridAdapter this$0
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection connection
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits COLOR
com.facebook.imagepipeline.producers.DecodeProducer: boolean mDownsampleEnabled
androidx.transition.ViewOverlayApi14$OverlayViewGroup: boolean mDisposed
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
com.google.android.material.R$style: int Widget_Design_AppBarLayout
androidx.appcompat.view.SupportActionModeWrapper: androidx.appcompat.view.ActionMode mWrappedObject
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType PATTERN
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup mHostView
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy hideStrategy
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.fresco.ui.common.DimensionsInfo mDimensionsInfo
androidx.appcompat.R$styleable: int View_android_theme
androidx.recyclerview.widget.FastScroller$AnimatorListener: boolean mCanceled
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
com.google.android.material.textfield.TextInputLayout: int hoveredStrokeColor
com.horcrux.svg.ImageView: com.horcrux.svg.SVGLength mH
com.facebook.react.animated.NativeAnimatedModule$15: int val$parentNodeTag
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
com.facebook.react.views.text.TextAttributeProps: boolean mIncludeFontPadding
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState
com.facebook.common.memory.PooledByteArrayBufferedInputStream: int mBufferedSize
com.facebook.react.config.ReactFeatureFlags: boolean enableTransitionLayoutOnlyViewCleanup
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2: java.util.concurrent.atomic.AtomicBoolean val$isCancelled
com.horcrux.svg.ForeignObjectView: android.graphics.Bitmap fakeBitmap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
okhttp3.internal.http.StatusLine: java.lang.String message
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
androidx.appcompat.R$attr: int listMenuViewStyle
com.facebook.react.views.slider.ReactSlider: int DEFAULT_TOTAL_STEPS
com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea
androidx.transition.ChangeBounds$8: androidx.transition.ChangeBounds this$0
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: java.util.concurrent.Executor mExecutor
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
okio.SocketAsyncTimeout: java.net.Socket socket
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
okhttp3.Cookie: boolean httpOnly
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.transformation.BitmapTransformation mBitmapTransformation
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: android.content.ContentResolver mContentResolver
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.graphics.Insets mStableInsets
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_FAILURE
com.facebook.react.ReactInstanceManager$4: com.facebook.react.ReactInstanceManager this$0
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: android.content.res.Resources mResources
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
com.facebook.react.modules.fresco.SystraceRequestListener: int mCurrentID
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.horcrux.svg.GlyphContext: java.util.ArrayList mDYsIndices
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation stackPresentation
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.react.animated.SpringAnimation: long mLastTime
com.google.android.material.internal.CollapsingTextHelper: android.animation.TimeInterpolator positionInterpolator
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
androidx.appcompat.R$color: int abc_input_method_navigation_guard
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
com.google.android.material.R$styleable: int[] DrawerArrowToggle
androidx.appcompat.graphics.drawable.DrawableContainer$1: androidx.appcompat.graphics.drawable.DrawableContainer this$0
okhttp3.internal.http2.Http2Writer: boolean client
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
com.facebook.react.ReactInstanceManager: boolean mUseDeveloperSupport
com.facebook.react.views.textinput.ReactEditText: java.lang.String TAG
com.zoontek.rnbootsplash.RNBootSplashModule: java.lang.String MODULE_NAME
androidx.core.R$styleable: int[] Capability
okio.DeflaterSink: boolean closed
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator
androidx.fragment.app.FragmentState: boolean mRetainInstance
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.Response: long sentRequestAtMillis
com.facebook.soloader.FileLocker: java.io.FileOutputStream mLockFileOutputStream
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontStyle
com.facebook.imagepipeline.image.CloseableImage: java.util.Map mExtras
androidx.transition.Transition: java.lang.ThreadLocal sRunningAnimators
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.google.android.material.datepicker.CalendarItemStyle: android.graphics.Rect insets
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mDeltaHeight
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.drawable.Drawable mEndBackground
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList mSortResult
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
androidx.transition.ViewGroupUtilsApi14: boolean sCancelMethodFetched
com.facebook.react.R$style: int Theme_FullScreenDialogAnimatedFade
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable mDrawable
com.facebook.imagepipeline.core.ImagePipeline$9: int[] $SwitchMap$com$facebook$imagepipeline$request$ImageRequest$CacheChoice
com.google.android.material.datepicker.MaterialCalendar$9: com.google.android.material.datepicker.MonthsPagerAdapter val$monthsPagerAdapter
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
androidx.appcompat.content.res.AppCompatResources: java.util.WeakHashMap sColorStateCaches
com.google.android.material.R$styleable: int TextInputLayout_passwordToggleEnabled
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer mPrimaryTextColor
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] cornerShadowOperation
com.facebook.imagepipeline.image.EncodedImage: int mExifOrientation
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel
androidx.appcompat.widget.AppCompatSpinner: int[] ATTRS_ANDROID_SPINNERMODE
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache mEncodedCountingMemoryCache
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
com.google.android.material.datepicker.MonthsPagerAdapter: int itemHeight
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
androidx.appcompat.R$id: int topPanel
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
androidx.core.widget.NestedScrollView: int mNestedYOffset
com.google.android.material.snackbar.SnackbarManager$1: com.google.android.material.snackbar.SnackbarManager this$0
okhttp3.Cache$Entry: long sentRequestMillis
com.google.android.material.R$attr: int colorOnSurface
com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView
androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding
com.facebook.imagepipeline.memory.BasePool: java.util.Set mInUseValues
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: com.facebook.cache.common.CacheKey val$partialImageCacheKey
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
androidx.appcompat.view.menu.MenuPopupHelper: boolean mOverflowOnly
androidx.cardview.widget.RoundRectDrawable: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.widget.ActionBarContainer: android.view.View mContextView
com.zoontek.rnbootsplash.RNBootSplashModule$5: int[] $SwitchMap$com$zoontek$rnbootsplash$RNBootSplashTask$Type
okhttp3.Headers$Builder: java.util.List namesAndValues
com.facebook.react.views.picker.ReactPicker: int mMode
com.facebook.react.modules.core.ReactChoreographer: java.util.ArrayDeque[] mCallbackQueues
com.facebook.imagepipeline.memory.BasePool: android.util.SparseArray mBuckets
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
com.google.android.material.R$drawable: int mtrl_ic_cancel
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter this$0
com.google.android.material.R$styleable: int[] TabItem
androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mTargetBounds
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
com.facebook.react.uimanager.Spacing: int[] sFlagsMap
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.google.android.material.R$attr: int materialCalendarStyle
androidx.transition.ViewUtilsBase: boolean sViewFlagsFieldFetched
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.google.android.material.R$styleable: int AppBarLayout_liftOnScrollTargetViewId
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel DEBUG
com.google.android.material.R$id: int design_bottom_sheet
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
com.facebook.imagepipeline.core.PriorityThreadFactory: int mThreadPriority
com.google.android.material.R$id: int month_navigation_fragment_toggle
com.google.android.material.textfield.IndicatorViewController: android.animation.Animator captionAnimator
com.horcrux.svg.PathParser: int i
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
androidx.transition.Transition: long mStartDelay
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.google.android.material.R$styleable: int ScrollingViewBehavior_Layout_behavior_overlapTop
okio.GzipSource: java.util.zip.Inflater inflater
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline textTop
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] $VALUES
com.google.android.material.R$dimen: int mtrl_shape_corner_size_small_component
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long responseTime
androidx.appcompat.widget.SearchView$4: androidx.appcompat.widget.SearchView this$0
androidx.fragment.app.Fragment: boolean mDetached
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: com.facebook.common.internal.ImmutableList INVERTED_EXIF_ORIENTATIONS
com.google.android.material.internal.NavigationMenuItemView: int iconSize
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] $VALUES
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ContentSizeWatcher mContentSizeWatcher
androidx.recyclerview.R$styleable: int RecyclerView_android_orientation
androidx.appcompat.widget.DropDownListView: int mSelectionRightPadding
androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener
com.horcrux.svg.SvgView: float mVbWidth
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: com.facebook.cache.disk.DefaultDiskStorage this$0
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: int mWidth
androidx.appcompat.widget.AppCompatPopupWindow: boolean mOverlapAnchor
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: int mBucketOffset
androidx.recyclerview.widget.FastScroller: int mMargin
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.util.Set mBoundControllerListeners2
com.horcrux.svg.RectView: com.horcrux.svg.SVGLength mRy
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory mCloseableReferenceFactory
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.util.Map datasourceExtras
com.google.android.material.R$dimen: int mtrl_calendar_navigation_height
androidx.appcompat.R$attr: int seekBarStyle
com.google.android.material.transformation.ExpandableBehavior$1: com.google.android.material.transformation.ExpandableBehavior this$0
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout: android.view.animation.Animation$AnimationListener mAnimationListener
com.facebook.fresco.ui.common.ControllerListener2$Extras: float focusX
com.facebook.react.animated.SpringAnimation: boolean mSpringStarted
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator mScrollAnimator
com.facebook.react.animated.InterpolationAnimatedNode: com.facebook.react.animated.ValueAnimatedNode mParent
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.google.android.material.bottomappbar.BottomAppBar$5$1: com.google.android.material.bottomappbar.BottomAppBar$5 this$1
com.facebook.imagepipeline.request.ImageRequest: java.io.File mSourceFile
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: androidx.collection.SimpleArrayMap mMenus
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.Throwable mErrorThrowable
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.VirtualView: android.graphics.Region mRegion
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.cache.common.CacheKey mCacheKey
com.google.android.material.R$styleable: int[] MaterialCheckBox
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Path path
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] $VALUES
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices
com.facebook.react.ReactInstanceManager: com.facebook.react.uimanager.ComponentNameResolverManager mComponentNameResolverManager
com.google.android.material.R$styleable: int[] StateListDrawableItem
bolts.TaskCompletionSource: bolts.Task task
com.google.android.material.internal.CollapsingTextHelper: float collapsedShadowDy
androidx.recyclerview.widget.ChildHelper$Bucket: androidx.recyclerview.widget.ChildHelper$Bucket mNext
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w600
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] $VALUES
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.imagepipeline.cache.DefaultCacheKeyFactory sInstance
okhttp3.CacheControl: int maxAgeSeconds
com.facebook.react.R$string: int state_expanded_description
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.info.ImagePerfState mImagePerfState
com.facebook.fresco.ui.common.BaseControllerListener2: com.facebook.fresco.ui.common.ControllerListener2 NO_OP_LISTENER
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isShapeExpanded
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.content.res.ColorStateList tintList
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
com.facebook.imagepipeline.core.ImagePipelineExperiments: int mBitmapPrepareToDrawMinSizeBytes
bolts.Task$14: bolts.Continuation val$continuation
androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
com.facebook.react.jstasks.HeadlessJsTaskContext: java.lang.ref.WeakReference mReactContext
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mAllowDelay
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mUseBitmapPrepareToDraw
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: com.google.android.material.animation.TransformationCallback listener
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: com.facebook.cache.common.CacheKey mRequestedCacheKey
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller mScroller
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.imagepipeline.producers.ProducerListener2 val$listener
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState BEFORE_CREATE
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.datasource.DataSource mDataSource
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher this$0
androidx.transition.Visibility$DisappearListener: android.view.View mView
com.horcrux.svg.PathParser: float mPenX
androidx.appcompat.R$color: int abc_tint_spinner
androidx.appcompat.view.menu.MenuItemImpl: int mGroup
com.facebook.react.modules.toast.ToastModule$2: com.facebook.react.modules.toast.ToastModule this$0
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.core.R$styleable: int[] GradientColor
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: androidx.appcompat.widget.ListPopupWindow this$0
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.Object mCallerContext
com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextAppearance
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float mStartTrim
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: java.util.Map mOriginalItemDelegates
com.facebook.react.modules.network.ProgressResponseBody$1: com.facebook.react.modules.network.ProgressResponseBody this$0
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.transformation.BitmapTransformation bitmapTransformation
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.common.SingleThreadAsserter mThreadAsserter
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher mReactChoreographerDispatcher
com.facebook.soloader.SoLoader: java.util.HashSet sLoadedLibraries
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.Fragment val$fragment
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialDownY
com.google.android.material.checkbox.MaterialCheckBox: int[][] ENABLED_CHECKED_STATES
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w200
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1
androidx.transition.ChangeBounds: boolean mReparent
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
androidx.transition.Transition$2: androidx.transition.Transition this$0
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object[] SHADOW_GROUP_ARGS
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.MaterialCalendar calendar
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.ScheduledExecutorService mBackgroundScheduledExecutorService
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.facebook.react.ReactInstanceManager$4: android.view.View val$decorView
androidx.appcompat.R$styleable: int AlertDialog_android_layout
com.horcrux.svg.VirtualView: android.graphics.Path mPath
com.horcrux.svg.SymbolView: int mMeetOrSlice
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge
com.google.android.material.datepicker.MonthAdapter: com.google.android.material.datepicker.CalendarStyle calendarStyle
com.google.android.material.internal.NavigationMenuItemView: boolean checkable
com.facebook.react.ReactRootView: int mLastOffsetX
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$CacheChoice mCacheChoice
com.facebook.react.views.modal.ReactModalHostManager$2: com.facebook.react.views.modal.ReactModalHostManager this$0
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
androidx.core.widget.NestedScrollView: long mLastScroll
androidx.appcompat.view.menu.MenuBuilder: android.content.Context mContext
androidx.transition.FragmentTransitionSupport$2: android.view.View val$fragmentView
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mIndicesToRemove
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassMap
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache cache
androidx.cardview.widget.CardViewBaseImpl$1: androidx.cardview.widget.CardViewBaseImpl this$0
com.google.android.material.appbar.AppBarLayout$2: com.google.android.material.appbar.AppBarLayout this$0
com.facebook.drawee.drawable.RoundedColorDrawable: boolean mPaintFilterBitmap
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.facebook.react.views.textinput.ReactEditText: boolean mOnKeyPress
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSource $source
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
androidx.appcompat.widget.ActionBarContainer: int mHeight
com.google.android.material.datepicker.MaterialCalendar: int themeResId
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
okhttp3.Cookie$Builder: long expiresAt
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable
okhttp3.Response: java.lang.String message
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.common.internal.Supplier mLazyDataSource
androidx.core.widget.AutoScrollHelper: boolean mAnimating
com.google.android.material.datepicker.MaterialCalendar$10: com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal
com.horcrux.svg.FontData: com.horcrux.svg.TextProperties$TextAnchor textAnchor
com.facebook.react.modules.statusbar.StatusBarModule$3: com.facebook.react.modules.statusbar.StatusBarModule this$0
com.google.android.material.internal.CollapsingTextHelper: float collapsedTextSize
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: int mFontWeight
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.yoga.YogaValue: float value
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean autoShrinkEnabled
okhttp3.internal.http2.Huffman: byte[] CODE_BIT_COUNTS
com.horcrux.svg.MarkerView: float mVbWidth
com.facebook.react.views.text.ReactTagSpan: int mReactTag
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
okio.Buffer: long size
androidx.appcompat.R$styleable: int Toolbar_logoDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
com.google.android.material.resources.TextAppearance: boolean fontResolved
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayDeque val$nonBatchedOperations
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: com.facebook.react.modules.core.JavaTimerManager this$0
androidx.appcompat.R$id: int action_bar_activity_content
com.facebook.react.views.scroll.ReactScrollView$3: com.facebook.react.views.scroll.ReactScrollView this$0
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: com.facebook.react.modules.core.JavaTimerManager this$0
com.google.android.material.chip.ChipDrawable: float chipEndPadding
com.google.android.material.R$styleable: int[] BottomSheetBehavior_Layout
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4: java.util.List $delimitersList
com.horcrux.svg.RadialGradientView: float[] sRawMatrix
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.google.android.material.R$styleable: int TextInputLayout_errorIconDrawable
com.facebook.react.views.scroll.ReactScrollView$1: boolean mSnappingToPage
androidx.fragment.app.FragmentState: java.lang.String mClassName
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean mIsCancelled
androidx.appcompat.R$styleable: int SwitchCompat_splitTrack
com.facebook.react.ReactInstanceManager: java.util.Set mAttachedReactRoots
com.facebook.common.util.TriState: com.facebook.common.util.TriState UNSET
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer this$0
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.imagepipeline.image.EncodedImage mPartialEncodedImageFromCache
androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback
com.facebook.imagepipeline.memory.PoolParams: boolean fixBucketsReinitialization
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
com.facebook.react.views.view.ReactViewBackgroundDrawable: int mColor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialMotionY
com.google.android.material.appbar.HeaderBehavior$FlingRunnable: com.google.android.material.appbar.HeaderBehavior this$0
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.imagepipeline.memory.PoolConfig$Builder: int mBitmapPoolMaxPoolSize
com.google.android.material.datepicker.MaterialDatePicker: android.widget.TextView headerSelectionText
androidx.transition.ChangeBounds: android.util.Property POSITION_PROPERTY
com.google.android.material.textfield.ClearTextEndIconDelegate$7: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
com.horcrux.svg.RenderableView: java.util.ArrayList mLastMergedList
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sDrawableCacheField
androidx.fragment.R$styleable: int Fragment_android_tag
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mEpicenterBounds
com.google.android.material.R$styleable: int MaterialTextView_android_textAppearance
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
com.google.android.material.datepicker.CalendarStyle: android.graphics.Paint rangeFill
androidx.appcompat.R$styleable: int SearchView_goIcon
androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point MIN_POINT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: int val$reactTag
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.swmansion.rnscreens.R$anim: int rns_slide_in_from_bottom
com.facebook.react.ReactPackageHelper$1: java.util.List val$nativeModules
androidx.appcompat.widget.SearchView$2: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.app.AlertController: int mViewSpacingBottom
androidx.appcompat.R$styleable: int[] MenuView
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputMethodManager mInputMethodManager
com.facebook.soloader.UnpackingSoSource$Dso: java.lang.String name
androidx.appcompat.widget.ActionMenuView: int mMinCellSize
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
androidx.core.R$id: int accessibility_custom_action_0
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
androidx.appcompat.view.menu.StandardMenuPopup$2: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mItem
androidx.fragment.R$styleable: int Fragment_android_id
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricInLogBox
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory: com.facebook.imagepipeline.memory.BitmapPool mBitmapPool
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
androidx.recyclerview.widget.DefaultItemAnimator$6: android.view.View val$view
com.google.android.material.chip.ChipDrawable: android.graphics.Paint chipPaint
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline central
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: int gravity
com.facebook.react.views.scroll.ScrollEvent: int mContentHeight
com.google.android.material.R$styleable: int Chip_chipStrokeWidth
androidx.recyclerview.widget.FastScroller: int[] mHorizontalRange
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0
androidx.recyclerview.widget.LayoutState: boolean mRecycle
androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent mIntent
com.facebook.react.animated.SpringAnimation$PhysicsState: double position
com.facebook.react.ReactInstanceManager: android.content.Context mApplicationContext
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: com.facebook.react.views.text.ReactSpan what
com.google.android.material.datepicker.MaterialCalendar$7: com.google.android.material.datepicker.MaterialCalendar this$0
com.facebook.imagepipeline.image.EncodedImage: int mSampleSize
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
androidx.appcompat.R$styleable: int[] PopupWindow
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidChangeAfterNestedScroll
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior behavior
okhttp3.internal.http2.Huffman$Node: int terminalBitCount
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray stroke
androidx.appcompat.view.ContextThemeWrapper: android.view.LayoutInflater mInflater
com.facebook.common.memory.PooledByteStreams: int mTempBufSize
okhttp3.MultipartBody: okhttp3.MultipartBody$Companion Companion
com.horcrux.svg.ImageView: com.horcrux.svg.SVGLength mX
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.facebook.react.animated.AnimationDriver: boolean mHasFinished
androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: int mSlop
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.FabricViewStateManager mFabricViewStateManager
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.fresco.ui.common.LoggingListener mLoggingListener
androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField
androidx.transition.Transition: android.view.ViewGroup mSceneRoot
com.google.android.material.R$id: int cancel_button
okhttp3.internal.connection.RealConnection: int successCount
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
com.horcrux.svg.SvgViewModule$1$1: com.horcrux.svg.SvgViewModule$1 this$0
com.google.android.material.checkbox.MaterialCheckBox: boolean useMaterialThemeColors
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
com.google.android.material.datepicker.CalendarConstraints: int monthSpan
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float mContentHeight
androidx.core.R$id: int accessibility_custom_action_31
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange interceptorScopedExchange
com.google.android.material.appbar.HeaderBehavior: boolean isBeingDragged
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
com.horcrux.svg.RenderableView: java.util.regex.Pattern regex
okhttp3.Response: long receivedResponseAtMillis
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount
androidx.appcompat.widget.SearchView: int mSuggestionCommitIconResId
com.horcrux.svg.CircleView: com.horcrux.svg.SVGLength mCy
com.facebook.react.ReactInstanceManager: java.lang.Thread mCreateReactContextThread
com.facebook.imagepipeline.platform.DefaultDecoder: byte[] EOI_TAIL
androidx.appcompat.widget.SuggestionsAdapter: int mText2Col
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
com.swmansion.rnscreens.Screen: java.lang.Integer mStatusBarColor
com.facebook.react.animated.AdditionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker mMemoryChunkPoolStatsTracker
com.google.android.material.transformation.FabTransformationScrimBehavior$1: com.google.android.material.transformation.FabTransformationScrimBehavior this$0
com.google.android.material.R$string: int mtrl_chip_close_icon_content_description
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mQualifiedResourceFetchSequence
com.google.android.material.radiobutton.MaterialRadioButton: int DEF_STYLE_RES
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mCx
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
com.google.android.material.animation.ChildrenAlphaProperty: android.util.Property CHILDREN_ALPHA
com.google.android.material.R$styleable: int[] MaterialCalendar
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.widget.Toolbar this$0
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mInternalImageTint
androidx.transition.PathProperty: float[] mPosition
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.ByteArrayPool mByteArrayPool
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ReactStylesDiffMap mInitialProps
okio.SegmentPool: java.util.concurrent.atomic.AtomicReference[] hashBuckets
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
androidx.transition.ViewUtilsApi21: boolean sTryHiddenTransformMatrixToGlobal
com.google.android.material.R$styleable: int Chip_closeIconVisible
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.zoontek.rnbootsplash.RNBootSplashModule$3: com.zoontek.rnbootsplash.RNBootSplashModule this$0
com.facebook.react.views.scroll.ReactScrollView: android.view.View mContentView
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
com.facebook.imagepipeline.image.CloseableStaticBitmap: int mExifOrientation
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions
com.swmansion.rnscreens.Screen$onLayout$1: int $width
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter
com.swmansion.rnscreens.ScreenStack: java.util.List drawingOpPool
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
okio.AsyncTimeout$sink$1: okio.AsyncTimeout this$0
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.google.android.material.R$styleable: int[] NavigationView
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.widget.CompoundButton mView
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] mDsos
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsUnderlineTextDecorationSet
com.google.android.material.textfield.DropdownMenuEndIconDelegate: long dropdownPopupActivatedAt
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mListeners
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sAttachInfoField
com.google.android.material.bottomsheet.BottomSheetBehavior$2: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: android.graphics.Typeface mTypeface
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.google.android.material.R$style: int Widget_MaterialComponents_Toolbar
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType CREATE
okhttp3.internal.platform.AndroidPlatform: java.util.List socketAdapters
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.horcrux.svg.RenderableViewManager$TextPathViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.animated.ModulusAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.facebook.imagepipeline.core.ImagePipelineFactory: java.lang.Class TAG
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
kotlin.ranges.IntProgression: int first
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams mFlexByteArrayPoolParams
com.google.android.material.R$styleable: int TextInputLayout_hintTextAppearance
com.facebook.imagepipeline.common.ResizeOptions: float roundUpFraction
com.facebook.imagepipeline.core.ImagePipelineConfig: java.lang.Integer mImageTranscoderType
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Rect mTmpBounds
com.google.android.material.datepicker.MaterialCalendarGridView$1: com.google.android.material.datepicker.MaterialCalendarGridView this$0
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.RoundedColorDrawable mBackgroundImageDrawable
androidx.transition.ViewOverlayApi14$OverlayViewGroup: androidx.transition.ViewOverlayApi14 mViewOverlay
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
androidx.fragment.R$styleable: int Fragment_android_name
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.gestures.GestureDetector mGestureDetector
com.facebook.imagepipeline.producers.WebpTranscodeProducer: java.util.concurrent.Executor mExecutor
com.facebook.react.animated.InterpolationAnimatedNode: int mNumVals
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Path mCenterDrawPath
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: com.facebook.react.bridge.ReadableMap val$options
androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.facebook.react.views.text.TextAttributeProps: int mTextShadowColor
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
okhttp3.internal.connection.RealCall$timeout$1: okhttp3.internal.connection.RealCall this$0
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: int end
com.google.android.material.textfield.CutoutDrawable: int savedLayer
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
com.facebook.react.modules.statusbar.StatusBarModule$4: android.app.Activity val$activity
com.facebook.react.views.picker.ReactPicker$1: com.facebook.react.views.picker.ReactPicker this$0
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode
okhttp3.CacheControl: int sMaxAgeSeconds
androidx.appcompat.view.menu.MenuWrapperICS: androidx.core.internal.view.SupportMenu mWrappedObject
com.facebook.react.animated.NativeAnimatedModule$22: int val$animatedValueNodeTag
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.facebook.drawee.gestures.GestureDetector: long mActionDownTime
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState RESUMED
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: double[] translation
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mSubMenuArrow
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: boolean val$decodeCancellationEnabled
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status TRANSITIONING_TO_VISIBLE
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemEnabled
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3: com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
com.facebook.drawee.drawable.RoundedDrawable: boolean mRadiiNonZero
com.horcrux.svg.RenderableView: android.graphics.Paint$Join strokeLinejoin
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.lang.String $name
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
com.facebook.react.animated.DiffClampAnimatedNode: double mMin
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.ExchangeFinder exchangeFinder
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation FADE
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int mSizeOfData
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE
okhttp3.Cache: int requestCount
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mTransitioningFragmentViews
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
com.horcrux.svg.GlyphContext: float mWidth
com.google.android.material.animation.MatrixEvaluator: float[] tempEndValues
androidx.appcompat.app.AppCompatDialog$1: androidx.appcompat.app.AppCompatDialog this$0
com.facebook.imagepipeline.producers.BaseProducerContext: boolean mIsCancelled
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener
com.google.android.material.datepicker.DaysOfWeekAdapter: int firstDayOfWeek
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart
androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: float[] mPaddings
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mVisibilityEventTimeMs
com.facebook.react.modules.network.ProgressRequestBody: com.facebook.react.modules.network.ProgressListener mProgressListener
androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector calendarSelector
okhttp3.HttpUrl: char[] HEX_DIGITS
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.PointF mInnerTopLeftCorner
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mUseCombinedNetworkAndCacheProducer
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate mItemDelegate
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority LOW
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory mCloseableReferenceFactory
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength[] strokeDasharray
com.horcrux.svg.RenderableView: float strokeDashoffset
com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY
com.google.android.material.R$attr: int toolbarStyle
androidx.appcompat.widget.TintResources: java.lang.ref.WeakReference mContextRef
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
okhttp3.Route: java.net.Proxy proxy
androidx.appcompat.view.menu.StandardMenuPopup: boolean mWasDismissed
com.facebook.soloader.SoLoader: com.facebook.soloader.ApplicationSoSource sApplicationSoSource
okhttp3.internal.http2.Http2Reader$ContinuationSource: int flags
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR
com.google.android.material.datepicker.MaterialDatePicker$2: com.google.android.material.datepicker.MaterialDatePicker this$0
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
androidx.appcompat.view.menu.ListMenuItemView: int mTextAppearance
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
androidx.appcompat.app.AlertController: android.view.View mCustomTitleView
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
com.facebook.react.animated.NativeAnimatedModule$17: int val$animatedNodeTag
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.views.view.ReactViewBackgroundDrawable: float[] mBorderCornerRadii
com.google.android.material.appbar.AppBarLayout: int currentOffset
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.animated.ValueAnimatedNode: java.lang.Object mAnimatedObject
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.disk.DiskStorageCache$CacheStats mCacheStats
com.facebook.imagepipeline.core.ImagePipeline: java.util.concurrent.CancellationException PREFETCH_EXCEPTION
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray fill
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int numRetries
com.horcrux.svg.EllipseView: com.horcrux.svg.SVGLength mRx
com.facebook.imagepipeline.cache.BufferedDiskCache$4: java.lang.Object val$token
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform CAPITALIZE
com.facebook.drawee.backends.pipeline.info.ImagePerfData: int mVisibilityState
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mClippingRect
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener
com.google.android.material.textfield.IndicatorViewController: android.content.Context context
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool sPool
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.facebook.cache.disk.DiskCacheConfig: long mDefaultSizeLimit
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
com.google.android.material.R$styleable: int[] MaterialAlertDialog
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod
okhttp3.Cache$Entry: okhttp3.Cache$Entry$Companion Companion
androidx.core.R$id: int tag_on_apply_window_listener
androidx.appcompat.widget.SearchView: java.util.WeakHashMap mOutsideDrawablesCache
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat mHost
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
com.horcrux.svg.TSpanView$1: int[] $SwitchMap$com$horcrux$svg$TextProperties$AlignmentBaseline
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mJavaModuleProvider
androidx.appcompat.widget.SuggestionsAdapter: int mText2UrlCol
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.imagepipeline.request.ImageRequest mControllerLowResImageRequest
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mPendingMenus
com.facebook.react.views.slider.ReactSlider: double mStepCalculated
com.horcrux.svg.VirtualView: android.graphics.Path mStrokePath
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
com.facebook.react.modules.core.ReactChoreographer: int mTotalCallbacks
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long bytesRemainingInChunk
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.facebook.react.R$string: int state_off_description
com.google.android.material.R$styleable: int[] BottomNavigationView
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion Companion
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mGingerbreadDecoderEnabled
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mStartTextYPx
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.BytesRange mBytesRange
com.google.android.material.R$dimen: int mtrl_textinput_box_stroke_width_focused
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.disk.DiskStorage mStorage
com.facebook.react.views.text.TextLayoutManagerMapBuffer: android.util.LruCache sSpannableCache
com.facebook.react.animated.NativeAnimatedModule$1: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.facebook.react.views.text.TextAttributeProps: int mFontSize
com.horcrux.svg.SymbolView: float mVbHeight
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: android.view.MenuItem$OnMenuItemClickListener mObject
okhttp3.internal.concurrent.TaskQueue$execute$1: kotlin.jvm.functions.Function0 $block
androidx.appcompat.widget.TooltipPopup: android.widget.TextView mMessageView
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
com.google.android.material.R$style: int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon
com.google.android.material.R$styleable: int AppBarLayout_elevation
com.facebook.imagepipeline.memory.AshmemMemoryChunk: java.nio.ByteBuffer mByteBuffer
com.google.android.material.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.graphics.PorterDuff$Mode tintMode
com.facebook.react.uimanager.JSTouchDispatcher: int mTargetTag
com.google.android.material.R$styleable: int[] ChipGroup
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback
com.th3rdwave.safeareacontext.EdgeInsets: float left
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: android.view.View mView
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean hasAdjustedSize
com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
com.horcrux.svg.SvgViewModule$1: com.facebook.react.bridge.ReadableMap val$options
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSizePerSpan
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge BOTTOM
androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback
com.google.android.material.R$styleable: int MaterialButton_android_checkable
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.imagepipeline.producers.DecodeProducer: boolean mDecodeCancellationEnabled
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLaidOutInvalidFullSpan
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: com.google.android.material.datepicker.MaterialCalendarGridView monthGrid
androidx.appcompat.widget.SuggestionsAdapter: android.content.res.ColorStateList mUrlColor
androidx.appcompat.app.AlertController$AlertParams$2: int mIsCheckedIndex
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
com.facebook.react.ReactRootView: java.lang.String mJSModuleName
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus SUCCESS
androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP
com.horcrux.svg.SvgView: java.util.Map mDefinedMasks
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
com.facebook.imagepipeline.common.ImageDecodeOptions: android.graphics.Bitmap$Config bitmapConfig
com.google.android.material.R$dimen: int mtrl_calendar_bottom_padding
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify SPACE_BETWEEN
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
okio.-Base64: byte[] BASE64_URL_SAFE
androidx.appcompat.R$layout: int abc_dialog_title_material
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList
okhttp3.Challenge: java.lang.String scheme
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer mBuffer
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Region scratchRegion
com.facebook.react.animated.NativeAnimatedModule$20: int val$viewTag
com.facebook.react.devsupport.LogBoxModule$1: com.facebook.react.devsupport.LogBoxModule this$0
androidx.core.content.res.ResourcesCompat$FontCallback$1: android.graphics.Typeface val$typeface
com.facebook.react.views.view.ReactViewBackgroundDrawable: int mAlpha
okhttp3.Cookie$Builder: java.lang.String name
androidx.appcompat.widget.SearchView: java.lang.CharSequence mQueryHint
com.google.android.material.textfield.EndIconDelegate: android.content.Context context
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation TOP_END
com.facebook.react.modules.toast.ToastModule$1: com.facebook.react.modules.toast.ToastModule this$0
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection COLUMN
androidx.appcompat.R$styleable: int[] SearchView
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope GLOBAL
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline top
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.horcrux.svg.SvgView: float mMinX
com.google.android.material.R$styleable: int ForegroundLinearLayout_android_foreground
okhttp3.Response: int code
androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_HIERARCHY
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: com.facebook.react.views.textinput.ReactEditText this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached
com.google.android.material.datepicker.MonthAdapter: com.google.android.material.datepicker.Month month
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunrise
com.google.android.material.ripple.RippleUtils: int[] HOVERED_FOCUSED_STATE_SET
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENU
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mControllerCancelTimeMs
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize PILL
androidx.fragment.app.BackStackState: int[] mOps
com.facebook.drawee.view.DraweeHolder: boolean mIsHolderAttached
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue mOperationsQueue
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection ROW_REVERSE
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
com.google.android.material.R$styleable: int[] ForegroundLinearLayout
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.app.AppCompatDelegateImpl: boolean sAlwaysOverrideConfiguration
com.facebook.react.ReactInstanceManager: java.util.Collection mReactInstanceEventListeners
com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: boolean sImplLoaded
androidx.recyclerview.widget.FastScroller: int[] PRESSED_STATE_SET
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$cleanupTask$1 cleanupTask
com.facebook.imagepipeline.memory.BitmapCounter: com.facebook.common.references.ResourceReleaser mUnpooledBitmapsReleaser
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow VISIBLE
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: double mValue
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin NOT_SET
com.google.android.material.R$styleable: int MaterialCheckBox_buttonTint
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mSurfaceId
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
com.google.android.material.transformation.FabTransformationBehavior$1: com.google.android.material.transformation.FabTransformationBehavior this$0
com.facebook.react.views.textinput.ReactEditText: int mDefaultGravityVertical
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: double[] scale
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManagerResolver mViewManagerResolver
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType kCGPathElementCloseSubpath
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view
okhttp3.internal.ws.MessageInflater: java.util.zip.Inflater inflater
androidx.appcompat.view.menu.MenuAdapter: boolean mOverflowOnly
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mNativeCodeDisabled
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.coordinatorlayout.R$styleable: int[] FontFamily
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenX
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: android.app.Activity $activity
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.reflect.Method sCopyBitmap
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems
com.facebook.cache.disk.DiskStorageCache: java.lang.Class TAG
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ADJUSTABLE
com.facebook.imagepipeline.memory.Bucket: int mItemSize
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.graphics.Paint$Style paintStyle
com.horcrux.svg.GlyphContext: java.util.ArrayList mRIndices
com.facebook.cache.disk.DefaultDiskStorage: java.io.File mVersionDirectory
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: java.util.concurrent.Executor mCancellationExecutor
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle DOTTED
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DATE_SET
androidx.appcompat.R$styleable: int SearchView_layout
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sResourcesImplField
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float mContentWidth
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.appcompat.widget.SwitchCompat: int mSwitchRight
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.view.ActionMode val$mode
androidx.appcompat.view.SupportMenuInflater: java.lang.Object mRealOwner
com.facebook.react.uimanager.events.Event: boolean mInitialized
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations
com.horcrux.svg.ForeignObjectView: com.horcrux.svg.SVGLength mW
com.horcrux.svg.Brush: com.facebook.react.bridge.ReadableArray mColors
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SUMMARY
com.horcrux.svg.VirtualViewManager$1: com.horcrux.svg.VirtualViewManager this$0
com.facebook.react.devsupport.LogBoxModule: android.view.View mReactRootView
com.google.android.material.animation.MotionTiming: long duration
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean hideable
androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: java.util.List result
androidx.transition.TransitionManager$MultiListener: androidx.transition.Transition mTransition
androidx.appcompat.view.menu.MenuItemImpl: int mShowAsAction
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.disk.EntryEvictionComparatorSupplier mEntryEvictionComparatorSupplier
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
androidx.appcompat.widget.ActionBarBackgroundDrawable: androidx.appcompat.widget.ActionBarContainer mContainer
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsColorSet
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener mDefaultImagePerfDataListener
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_FOCUSED_STATE_SET
com.facebook.imagepipeline.core.ProducerFactory: int mBitmapPrepareToDrawMaxSizeBytes
com.google.android.material.R$styleable: int ShapeAppearance_cornerSizeTopRight
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice SMALL
com.facebook.cache.common.NoOpCacheEventListener: com.facebook.cache.common.NoOpCacheEventListener sInstance
com.facebook.react.uimanager.UIViewOperationQueue$1: int val$batchId
com.facebook.react.views.text.ReactTextView: int mDefaultGravityHorizontal
com.google.android.material.datepicker.MonthsPagerAdapter$1: com.google.android.material.datepicker.MaterialCalendarGridView val$monthGrid
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mBackgroundTint
androidx.core.provider.FontRequestWorker$1: android.content.Context val$context
com.google.android.material.R$styleable: int TextInputLayout_counterMaxLength
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mReturningToStart
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface typeface
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment topRightCorner
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine smooth
com.horcrux.svg.ForeignObjectView: android.graphics.Canvas fake
androidx.appcompat.R$styleable: int[] ActivityChooserView
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetY
com.google.android.material.R$styleable: int Chip_iconStartPadding
com.facebook.react.uimanager.events.TouchEvent: short mCoalescingKey
com.facebook.imagepipeline.producers.JobScheduler: com.facebook.imagepipeline.image.EncodedImage mEncodedImage
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.ReactInstanceManager$5: com.facebook.react.ReactInstanceManager$ReactContextInitParams val$initParams
androidx.fragment.app.FragmentState: int mMaxLifecycleState
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.facebook.imagepipeline.memory.BitmapCounter: int mMaxSize
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean mIsClosed
com.facebook.datasource.AbstractDataSource$1: boolean val$isCancellation
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
androidx.transition.FragmentTransitionSupport$3: androidx.transition.FragmentTransitionSupport this$0
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper
androidx.transition.ChangeBounds$ViewBounds: int mBottomRightCalls
com.google.android.material.chip.Chip$2: com.google.android.material.chip.Chip this$0
androidx.appcompat.widget.SuggestionsAdapter: androidx.appcompat.widget.SearchView mSearchView
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ChoreographerCompat mChoreographer
com.google.android.material.chip.Chip: boolean closeIconFocused
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits USER_SPACE_ON_USE
okio.SegmentPool: int MAX_SIZE
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager
com.horcrux.svg.PathParser: float mPivotY
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: boolean mIsRepeatedProcessor
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.core.R$id: int accessibility_custom_action_19
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIOGROUP
okhttp3.CacheControl$Builder: boolean onlyIfCached
com.swmansion.rnscreens.R$anim: int rns_slide_in_from_left
androidx.fragment.app.FragmentAnim$3: android.view.ViewGroup val$container
com.facebook.react.views.text.TextAttributes: float mLetterSpacing
com.horcrux.svg.Brush: com.horcrux.svg.PatternView mPattern
com.google.android.material.textfield.TextInputLayout$SavedState: java.lang.CharSequence error
com.facebook.react.common.DebugServerException: java.lang.String mOriginalMessage
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$nativeModulesThreadCpuTime
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean mIsHidden
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
okhttp3.internal.http2.Http2Connection: long writeBytesMaximum
androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
com.facebook.drawee.controller.AbstractDraweeController: java.lang.Class TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: float interpolation
androidx.core.R$id: int accessibility_action_clickable_span
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Path mPathForBorderRadiusOutline
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable
com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: int mIndex
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mPosition
com.google.android.material.R$styleable: int TextAppearance_android_textColor
androidx.appcompat.widget.AppCompatSpinner: boolean mPopupSet
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable mHorizontalTrackDrawable
com.facebook.react.ReactInstanceManagerBuilder: int mMinNumShakes
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchLayoutTime
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
com.facebook.react.modules.core.ChoreographerCompat: com.facebook.react.modules.core.ChoreographerCompat sInstance
com.facebook.drawee.drawable.FadeDrawable: int mPreventInvalidateCount
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.LongSparseArray mTransitions
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: boolean mShowArrow
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object mIdleCallbackGuard
com.google.android.material.textfield.ClearTextEndIconDelegate$3: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
com.google.android.material.R$styleable: int ChipGroup_chipSpacingVertical
com.facebook.fresco.ui.common.ForwardingControllerListener2: java.util.List mListeners
androidx.appcompat.R$id: int search_mag_icon
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceBeginMethod
com.google.android.material.R$drawable: int mtrl_dropdown_arrow
androidx.appcompat.R$attr: int actionBarPopupTheme
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.BasePool$Counter mFree
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory mPipelineDraweeControllerFactory
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.bridge.JavaOnlyMap mPropMap
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String mExtrapolateLeft
com.facebook.react.animated.InterpolationAnimatedNode: double[] mInputRange
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed
com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType RADIAL_GRADIENT
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] $VALUES
com.google.android.material.chip.ChipGroup: int chipSpacingVertical
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mWidthMeasureSpec
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mPrimaryImageTranscoderFactory
com.facebook.cache.common.SimpleCacheKey: java.lang.String mKey
com.google.android.material.button.MaterialButton: int[] CHECKABLE_STATE_SET
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
com.facebook.react.views.scroll.ReactHorizontalScrollView$5: int val$fabricScrollX
androidx.recyclerview.widget.LayoutState: int mStartLine
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation BOTTOM_LEFT
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.swmansion.rnscreens.ScreenFragment$WhenMappings: int[] $EnumSwitchMapping$0
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
com.google.android.material.appbar.ViewOffsetHelper: int offsetLeft
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.horcrux.svg.SymbolView: float mMinY
androidx.appcompat.R$styleable: int[] AppCompatTheme
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.content.res.ColorStateList strokeColor
androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
androidx.recyclerview.widget.FastScroller: float mVerticalDragY
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive
com.facebook.react.modules.network.NetworkingModule$3: long last
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.facebook.react.modules.statusbar.StatusBarModule$4: java.lang.String val$style
androidx.recyclerview.widget.FastScroller: int mRecyclerViewHeight
com.horcrux.svg.LineView: com.horcrux.svg.SVGLength mX2
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER
com.google.android.material.chip.ChipDrawable: android.graphics.PointF pointF
com.google.android.material.internal.FlowLayout: int lineSpacing
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.modules.debug.FpsDebugFrameCallback: boolean mShouldStop
com.facebook.react.views.image.ReactImageView$1: com.facebook.react.views.image.ReactImageView this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap
androidx.recyclerview.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
androidx.appcompat.R$style: int Theme_AppCompat_Light
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: boolean mQueueing
okio.AsyncTimeout$source$1: okio.Source $source
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: com.facebook.react.common.mapbuffer.ReadableMapBuffer this$0
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.facebook.react.uimanager.events.Event: long sInitialClockTimeUnixOffset
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] $VALUES
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.android.material.chip.ChipDrawable: android.graphics.Paint$FontMetrics fontMetrics
okio.GzipSource: okio.RealBufferedSource source
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int mDelayMs
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits HIDDEN
okhttp3.HttpUrl: boolean isHttps
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
okio.InflaterSource: boolean closed
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.widget.TextView mTextView
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PERCENTAGE
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.DrawableProperties mDrawableProperties
okio.AsyncTimeout: okio.AsyncTimeout head
com.facebook.react.views.image.ReactImageView: float[] sComputedCornerRadii
com.horcrux.svg.MaskView: float[] sRawMatrix
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DRAWABLE_SHOW
androidx.transition.Visibility$DisappearListener: boolean mCanceled
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowRadius
androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
com.facebook.react.modules.storage.AsyncStorageModule$3: com.facebook.react.modules.storage.AsyncStorageModule this$0
com.horcrux.svg.MaskView: com.horcrux.svg.Brush$BrushUnits mMaskUnits
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: android.graphics.Rect tmpRect
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.CountingLruMap mExclusiveEntries
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_CENTER
com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: android.content.ContentResolver mContentResolver
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenWidth
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat mTabLayout
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIBlock mBlock
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.interfaces.SettableDraweeHierarchy mSettableDraweeHierarchy
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.common.internal.ImmutableList mGlobalDrawableFactories
androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop
com.horcrux.svg.RenderableView: java.util.ArrayList mAttributeList
androidx.recyclerview.widget.ChildHelper: androidx.recyclerview.widget.ChildHelper$Callback mCallback
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_RESULT
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetY
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA OTHERS
com.facebook.drawee.drawable.RoundedDrawable: boolean mIsShaderTransformDirty
com.facebook.imagepipeline.image.ImmutableQualityInfo: int mQuality
com.facebook.react.config.ReactFeatureFlags: com.facebook.react.config.ReactFeatureFlags$FlagProvider enableRuntimeExecutorFlushingProvider
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor editor
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mFrameCount
com.google.android.material.R$styleable: int TextAppearance_android_textSize
com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.shape.MaterialShapeDrawable outlinedPopupBackground
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight Bold
androidx.appcompat.R$color: int abc_tint_switch_track
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float backgroundOverlayColorAlpha
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.Bitmap$Config mAnimatedBitmapConfig
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: com.facebook.imagepipeline.producers.ProducerListener2 val$producerListener
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.google.android.material.R$styleable: int[] SearchView
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap WRAP
androidx.recyclerview.widget.FastScroller: int mState
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] $VALUES
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.ReadableMapBuffer this$0
com.google.android.material.button.MaterialButton: int iconSize
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mEndAction
com.google.android.material.datepicker.MaterialCalendar$1: com.google.android.material.datepicker.MaterialCalendar this$0
com.facebook.react.ReactActivityDelegate$2: int[] val$grantResults
okhttp3.HttpUrl$Builder: java.lang.String host
com.google.android.material.R$styleable: int MaterialCalendar_rangeFillColor
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type CENTER
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$Companion Companion
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
androidx.fragment.app.FragmentManager: java.util.concurrent.ConcurrentHashMap mExitAnimationCancellationSignals
com.horcrux.svg.TextView: java.util.ArrayList mPositionX
com.facebook.react.ReactInstanceManager: java.util.List mViewManagers
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: java.util.concurrent.Executor mExecutor
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop
com.facebook.react.animated.NativeAnimatedNodesManager$2: com.facebook.react.uimanager.events.Event val$event
androidx.appcompat.R$attr: int buttonStyle
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.fresco.ui.common.ControllerListener2$Extras mExtraData
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
com.facebook.common.memory.NoOpMemoryTrimmableRegistry: com.facebook.common.memory.NoOpMemoryTrimmableRegistry sInstance
com.google.android.material.R$dimen: int design_appbar_elevation
com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
kotlin.collections.AbstractList$ListIteratorImpl: kotlin.collections.AbstractList this$0
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: android.content.Context mContext
bolts.Task: bolts.Task TASK_CANCELLED
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
com.swmansion.rnscreens.ScreenContainer$mLayoutCallback$1: com.swmansion.rnscreens.ScreenContainer this$0
com.google.android.material.chip.ChipDrawable: int currentChipStrokeColor
com.facebook.react.uimanager.UIImplementation: java.lang.Object uiImplementationThreadLock
com.facebook.react.uimanager.UIImplementation: boolean mViewOperationsEnabled
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetY
com.google.android.material.R$styleable: int ShapeAppearance_cornerSizeTopLeft
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper sResourceDrawableIdHelper
okhttp3.CacheControl$Builder: boolean noTransform
com.facebook.imagepipeline.memory.NativeMemoryChunk: long mNativePtr
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextShadowColor
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.appcompat.view.menu.ActionMenuItem: int mFlags
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback
androidx.transition.ViewGroupUtilsApi14: boolean sLayoutSuppressedFieldFetched
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView
bolts.Task$10: bolts.Task this$0
com.horcrux.svg.SvgView: java.lang.String mAlign
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent mIntent
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton
com.facebook.drawee.drawable.RoundedCornersDrawable: com.facebook.drawee.drawable.RoundedCornersDrawable$Type mType
com.swmansion.rnscreens.ScreenStackHeaderConfig: java.lang.Integer mBackgroundColor
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_INVALID_ENTRY
androidx.fragment.app.FragmentTransition$6: androidx.collection.ArrayMap val$nameOverrides
com.facebook.react.animated.NativeAnimatedNodesManager: boolean mEventListenerInitializedForNonFabric
com.horcrux.svg.RadialGradientView: com.horcrux.svg.SVGLength mFx
com.horcrux.svg.GlyphContext: java.util.ArrayList mDYIndices
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedStart
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted
androidx.fragment.app.FragmentStore: java.util.HashMap mActive
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
com.facebook.imagepipeline.platform.DefaultDecoder: androidx.core.util.Pools$SynchronizedPool mDecodeBuffers
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] $VALUES
androidx.appcompat.view.menu.ListMenuPresenter: int mItemIndexOffset
com.facebook.react.ReactInstanceManagerBuilder: boolean mLazyViewManagersEnabled
androidx.recyclerview.widget.FastScroller: boolean mNeedVerticalScrollbar
androidx.transition.Transition: androidx.transition.PathMotion mPathMotion
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap mSampleTile
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority HIGH
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange exchange
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView
com.google.android.material.internal.StateListAnimator: android.animation.ValueAnimator runningAnimator
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable
com.coinapp.MainApplication$1: com.coinapp.MainApplication this$0
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
com.facebook.react.modules.image.ImageLoaderModule$3: com.facebook.react.bridge.Promise val$promise
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams mFlexByteArrayPoolParams
androidx.core.graphics.drawable.IconCompat: int mInt1
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean mDecodePrefetches
androidx.appcompat.R$id: int title
com.horcrux.svg.TextView: java.util.ArrayList mPositionY
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTooltipText
com.facebook.imagepipeline.core.ImagePipelineConfig: android.content.Context mContext
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList mIconTintList
com.google.android.material.R$styleable: int[] ScrollingViewBehavior_Layout
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter mTintFilter
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] $VALUES
com.facebook.cache.disk.DiskStorageCache: boolean mIndexReady
com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.facebook.imagepipeline.common.BytesRange: java.util.regex.Pattern sHeaderParsingRegEx
com.facebook.imagepipeline.cache.BufferedDiskCache$5: com.facebook.imagepipeline.cache.BufferedDiskCache this$0
androidx.appcompat.widget.Toolbar: int mMaxButtonHeight
com.zoontek.rnbootsplash.RNBootSplashModule$2: java.util.Timer val$timer
com.google.android.material.R$styleable: int Chip_showMotionSpec
com.horcrux.svg.GlyphPathBag: android.graphics.Paint paint
okhttp3.internal.concurrent.TaskRunner: boolean coordinatorWaiting
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
com.facebook.react.common.futures.SimpleSettableFuture: java.util.concurrent.CountDownLatch mReadyLatch
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
androidx.transition.ViewUtilsApi21: boolean sTryHiddenSetAnimationMatrix
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole KEYBOARDKEY
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
com.facebook.react.views.picker.ReactPicker: java.lang.Runnable measureAndLayout
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalImageFileFetchSequence
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
androidx.appcompat.widget.SearchView: android.graphics.drawable.Drawable mSearchHintIcon
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap
androidx.core.R$id: int tag_unhandled_key_listeners
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: int abiScore
com.facebook.react.views.image.ReactImageView: int mFadeDurationMs
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int sHolderCount
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TIMER
com.facebook.react.animated.NativeAnimatedModule$17: com.facebook.react.animated.NativeAnimatedModule this$0
com.google.android.material.shadow.ShadowRenderer: android.graphics.Paint cornerShadowPaint
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String mPlaceholder
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathSide mSide
com.facebook.drawee.drawable.RoundedCornersDrawable: float mPadding
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType STATIC
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: com.facebook.react.views.image.ReactImageView this$0
com.facebook.datasource.AbstractDataSource: java.lang.Throwable mFailureThrowable
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
com.facebook.react.views.text.ReactTextUpdate: int mJustificationMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleViewIndex
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FOCUS_CROP
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.lang.String mOriginText
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.imagepipeline.request.ImageRequest mControllerLowResImageRequest
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mDownsampleIfLargeBitmap
bolts.Task: java.util.List continuations
androidx.appcompat.R$id: int edit_query
androidx.core.R$id: int accessibility_custom_action_15
com.horcrux.svg.TSpanView: java.util.ArrayList emojiTransforms
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker sInstance
com.google.android.material.ripple.RippleUtils: java.lang.String LOG_TAG
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.View val$viewToDestroy
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
androidx.core.R$id: int accessibility_custom_action_22
androidx.appcompat.view.SupportMenuInflater: android.content.Context mContext
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: java.lang.Object val$imageRequest
com.facebook.react.uimanager.LayoutShadowNode$1: int[] $SwitchMap$com$facebook$yoga$YogaUnit
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: androidx.collection.SimpleArrayMap mGraph
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetX
com.facebook.react.animated.DecayAnimation: double mFromValue
com.facebook.react.uimanager.events.TouchEvent: float mViewY
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat ICO
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
com.google.android.material.textfield.PasswordToggleEndIconDelegate: android.text.TextWatcher textWatcher
com.facebook.drawee.drawable.ScaleTypeDrawable: com.facebook.drawee.drawable.ScalingUtils$ScaleType mScaleType
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long submitTime
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: boolean cancelled
okhttp3.internal.connection.RealConnectionPool: int maxIdleConnections
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig mSmallImageDiskCacheConfig
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_TEMPFILE_NOT_FOUND
com.facebook.imagepipeline.cache.BufferedDiskCache: java.util.concurrent.Executor mReadExecutor
com.horcrux.svg.UseView: com.horcrux.svg.SVGLength mW
com.google.android.material.R$styleable: int[] FloatingActionButton
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: double[] skew
androidx.appcompat.R$attr: int toolbarStyle
com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Drawable mControllerOverlay
com.google.android.material.internal.CollapsingTextHelper: float currentDrawY
com.google.android.material.appbar.HeaderBehavior: int activePointerId
androidx.appcompat.widget.SearchView: android.widget.ImageView mVoiceButton
com.google.android.material.textfield.EndIconDelegate: com.google.android.material.internal.CheckableImageButton endIconView
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
com.google.android.material.shape.ShapePath$PathArcOperation: float sweepAngle
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: androidx.appcompat.widget.AppCompatSpinner this$0
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer mImageTranscoderType
com.facebook.react.ReactActivityDelegate$2: com.facebook.react.ReactActivityDelegate this$0
com.horcrux.svg.VirtualViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.facebook.cache.disk.DiskStorageCache$Params: long mLowDiskSpaceCacheSizeLimit
com.google.android.material.R$dimen: int mtrl_calendar_day_height
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: java.util.ArrayList mViews
com.swmansion.rnscreens.ScreenStack$DrawingOp: android.view.View child
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setHostname
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mImageDrawTimeMs
com.swmansion.rnscreens.events.ScreenDisappearEvent: com.swmansion.rnscreens.events.ScreenDisappearEvent$Companion Companion
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable mPendingOverflowIcon
androidx.appcompat.R$styleable: int Toolbar_popupTheme
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleDiameter
com.google.android.material.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea
com.facebook.drawee.view.DraweeView: boolean mLegacyVisibilityHandlingEnabled
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
okhttp3.internal.ws.WebSocketReader: boolean noContextTakeover
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.common.time.MonotonicClock mMonotonicClock
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
androidx.appcompat.widget.SearchView$5: androidx.appcompat.widget.SearchView this$0
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener
androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
com.facebook.react.views.scroll.ReactScrollViewHelper: boolean mSmoothScrollDurationInitialized
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.memory.PoolConfig$Builder: boolean mRegisterLruBitmapPoolAsMemoryTrimmable
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.drawee.backends.pipeline.info.ImageOriginListener mImageOriginListener
com.google.android.material.dialog.InsetDialogOnTouchListener: int leftInset
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline beforeEdge
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode
androidx.appcompat.view.menu.StandardMenuPopup: android.content.Context mContext
com.horcrux.svg.TSpanView$1: int[] $SwitchMap$com$horcrux$svg$TextProperties$TextAnchor
androidx.recyclerview.widget.DefaultItemAnimator$5: android.view.ViewPropertyAnimator val$animation
com.facebook.react.views.scroll.ScrollEvent: int mContentWidth
kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE
com.google.android.material.R$animator: int design_fab_show_motion_spec
kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] $VALUES
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool mAshmemMemoryChunkPool
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method putMethod
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mTitleSet
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool delegate
com.horcrux.svg.CircleView: com.horcrux.svg.SVGLength mR
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
androidx.recyclerview.widget.FastScroller: int mAnimationState
androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker
com.horcrux.svg.FontData: double kerning
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
androidx.appcompat.R$styleable: int[] ButtonBarLayout
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
androidx.transition.ChangeBounds: int[] mTempLocation
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: java.lang.String $name
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0
com.facebook.react.views.textinput.ReactEditText: int mStagedInputType
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: java.lang.String mPreviousText
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
okhttp3.OkHttpClient: int readTimeoutMillis
com.google.android.material.R$styleable: int Chip_checkedIconEnabled
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.DefaultImageFormatChecker mDefaultFormatChecker
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
androidx.core.R$id: int accessibility_custom_action_30
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.bridge.WritableMap mData
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState INACTIVE
androidx.transition.Transition: androidx.transition.Transition$EpicenterCallback mEpicenterCallback
com.google.android.material.R$styleable: int[] AppCompatTextHelper
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
androidx.appcompat.widget.SuggestionsAdapter: java.util.WeakHashMap mOutsideDrawablesCache
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: com.google.android.material.behavior.SwipeDismissBehavior this$0
com.facebook.drawee.backends.pipeline.info.ImagePerfData: java.lang.String mUltimateProducerName
com.google.android.material.R$styleable: int FloatingActionButton_Behavior_Layout_behavior_autoHide
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList mTickMarkTintList
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME
com.facebook.react.modules.statusbar.StatusBarModule$1: com.facebook.react.modules.statusbar.StatusBarModule this$0
com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextColor
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: com.facebook.drawee.backends.pipeline.PipelineDraweeController mPipelineDraweeController
androidx.recyclerview.widget.ChildHelper: java.util.List mHiddenViews
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline textAfterEdge
com.facebook.react.views.scroll.ReactScrollView: int mSnapInterval
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearancePathProvider$PathListener pathShadowListener
com.google.android.material.R$styleable: int[] AlertDialog
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: com.facebook.cache.common.CacheKey mCacheKey
androidx.appcompat.app.AlertController$AlertParams$2: int mLabelIndex
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener
okhttp3.internal.http2.Huffman$Node: int symbol
androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView
androidx.recyclerview.widget.DefaultItemAnimator$7: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
okhttp3.MultipartBody: okhttp3.MediaType MIXED
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
com.facebook.soloader.UnpackingSoSource$InputDso: java.io.InputStream content
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$inFragment
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.view.menu.MenuBuilder menu
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
com.horcrux.svg.PatternView: com.horcrux.svg.SVGLength mH
androidx.core.content.ContextCompat: android.util.TypedValue sTempValue
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform$Companion Companion
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: com.facebook.react.modules.core.JavaTimerManager this$0
androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.R$styleable: int[] ActionMode
androidx.core.widget.NestedScrollView: int mActivePointerId
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView
com.swmansion.rnscreens.events.ScreenAppearEvent: com.swmansion.rnscreens.events.ScreenAppearEvent$Companion Companion
com.facebook.imagepipeline.listener.ForwardingRequestListener: java.util.List mRequestListeners
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans
com.horcrux.svg.EllipseView: com.horcrux.svg.SVGLength mCx
androidx.core.provider.RequestExecutor$ReplyRunnable: android.os.Handler mHandler
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
androidx.cardview.widget.CardViewApi17Impl$1: androidx.cardview.widget.CardViewApi17Impl this$0
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.facebook.react.modules.network.ProgressResponseBody: com.facebook.react.modules.network.ProgressListener mProgressListener
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month current
com.facebook.fresco.ui.common.ControllerListener2$Extras: int viewportHeight
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator fadeInAnim
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingBottomNoButtons
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges RIGHT
bolts.Task: java.lang.Object result
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: int mEventType
androidx.recyclerview.widget.LayoutState: int mLayoutDirection
androidx.recyclerview.widget.DefaultItemAnimator$6: android.view.ViewPropertyAnimator val$animation
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTint
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.imagepipeline.producers.ProducerListener2 mListener
com.google.android.material.animation.MotionSpec: androidx.collection.SimpleArrayMap propertyValues
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
com.swmansion.rnscreens.ScreenStackFragment: boolean mIsTranslucent
com.horcrux.svg.VirtualView: java.lang.String mName
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagingEnabled
androidx.appcompat.R$attr: int actionOverflowMenuStyle
androidx.fragment.app.FragmentTransaction: java.lang.String mName
com.facebook.react.modules.image.ImageLoaderModule$4: com.facebook.react.bridge.ReadableArray val$uris
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.content.ContentResolver mContentResolver
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
androidx.transition.ChangeBounds$8: boolean mIsCanceled
com.google.android.material.R$styleable: int TextInputLayout_endIconDrawable
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
com.facebook.imagepipeline.core.ProducerSequenceFactory: android.content.ContentResolver mContentResolver
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager
com.google.android.material.transformation.ExpandableBehavior$1: android.view.View val$child
com.facebook.react.animated.NativeAnimatedModule$3: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.imagepipeline.producers.ExperimentalThreadHandoffProducerQueueImpl: java.util.concurrent.Executor mExecutor
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceWebSearchIntent
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList mButtonTintList
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.BasePool$Counter mUsed
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty
androidx.transition.ChangeBounds$8: android.view.View val$view
androidx.core.R$id: int accessibility_custom_action_4
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams: android.util.SparseIntArray DEFAULT_BUCKETS
com.horcrux.svg.GlyphContext: java.util.ArrayList mDXsContext
com.facebook.react.fabric.FabricComponents: java.util.Map sComponentNames
com.google.android.material.R$styleable: int ShapeAppearance_cornerSizeBottomRight
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTooltipText
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoderConfig mImageDecoderConfig
com.facebook.imagepipeline.memory.BucketMap: com.facebook.imagepipeline.memory.BucketMap$LinkedEntry mTail
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
androidx.fragment.app.Fragment: int mContainerId
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflowSet
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.text.TextWatcher exposedDropdownEndIconTextWatcher
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: androidx.core.util.Pools$Pool mListPool
com.horcrux.svg.TextPathView: com.horcrux.svg.SVGLength mStartOffset
androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache
bolts.BoltsExecutors: java.util.concurrent.Executor immediate
okhttp3.Response: okhttp3.CacheControl lazyCacheControl
com.facebook.react.animated.SpringAnimation: double mDisplacementFromRestThreshold
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.HashSet mSortTmpMarked
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.MessageDeflater messageDeflater
androidx.transition.Transition: java.util.ArrayList mListeners
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: com.facebook.imagepipeline.producers.WebpTranscodeProducer this$0
com.google.android.material.internal.ThemeEnforcement: int[] MATERIAL_CHECK_ATTRS
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
com.google.android.material.textfield.IndicatorViewController$1: android.widget.TextView val$captionViewToHide
androidx.appcompat.R$attr: int colorControlHighlight
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mActivelyScrolling
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mIsEncodedMemoryCacheProbingEnabled
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView messageView
okhttp3.Cookie$Builder: java.lang.String path
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDy
androidx.fragment.app.Fragment: boolean mIsCreated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.google.android.material.R$color: int mtrl_textinput_hovered_box_stroke_color
com.swmansion.rnscreens.ScreenStack: java.util.Set mDismissed
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int mBitmapPrepareToDrawMaxSizeBytes
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
androidx.appcompat.widget.SwitchCompat: boolean mShowText
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipelineFactory sInstance
com.google.android.material.R$styleable: int TextInputLayout_errorTextColor
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mClippingRect
com.facebook.react.R$string: int state_on_description
com.google.android.material.chip.ChipDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper
androidx.appcompat.widget.SearchView: android.view.View mSearchEditFrame
com.google.android.material.chip.ChipDrawable: int currentTextColor
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
com.facebook.react.animated.NativeAnimatedNodesManager: boolean mEventListenerInitializedForFabric
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: com.facebook.imagepipeline.request.ImageRequest val$imageRequest
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList materialThemeColorsTintList
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1: com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer this$1
com.google.android.material.transformation.ExpandableBehavior$1: int val$expectedState
com.facebook.react.R$string: int button_description
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun
com.facebook.react.modules.dialog.DialogModule$1: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper val$fragmentManagerHelper
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback this$1
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
com.facebook.cache.disk.DiskStorageCache$Params: long mCacheSizeLimitMinimum
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
androidx.appcompat.app.WindowDecorActionBar$2: androidx.appcompat.app.WindowDecorActionBar this$0
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod stretch
androidx.appcompat.widget.ButtonBarLayout: int mMinimumHeight
com.facebook.react.animated.NativeAnimatedModule$4: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.google.android.material.internal.ThemeEnforcement: int[] APPCOMPAT_CHECK_ATTRS
androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mInvalidateOffsets
androidx.fragment.app.Fragment: boolean mAdded
androidx.appcompat.view.menu.CascadingMenuPopup$1: androidx.appcompat.view.menu.CascadingMenuPopup this$0
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: com.facebook.imagepipeline.producers.DecodeProducer val$this$0
androidx.appcompat.R$id: int buttonPanel
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel shapeAppearance
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int mParserState
com.facebook.react.jstasks.HeadlessJsTaskContext$2: int val$taskId
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
com.facebook.react.views.text.TextAttributeProps: float mFontSizeInput
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType LINEAR
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalTimeMs
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mDiskCacheHistory
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasYOffset
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule$1: com.facebook.react.bridge.Promise val$promise
com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpBoundsRect
com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList collapsedTextColor
com.facebook.imagepipeline.core.ImagePipelineConfig: int mHttpNetworkTimeout
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $cancelable
com.facebook.react.uimanager.events.EventDispatcherImpl: short mNextEventTypeId
androidx.recyclerview.widget.DefaultItemAnimator$6: int val$deltaY
com.facebook.react.ReactRootView: int mLastWidth
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_keylines
com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_END
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams$RoundingMethod mRoundingMethod
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: okhttp3.internal.cache.DiskLruCache this$0
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper mVerticalHelper
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation PUSH
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManager mManager
com.facebook.react.uimanager.UIViewOperationQueue$1: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind LEAF
bolts.Task$10: java.util.concurrent.Executor val$executor
com.facebook.react.views.textinput.ReactTextInputLocalData: android.text.SpannableStringBuilder mText
bolts.UnobservedErrorNotifier: bolts.Task task
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
okhttp3.internal.connection.RealConnection: int refusedStreamCount
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: com.facebook.react.bridge.Promise val$promise
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.String mUltimateProducerName
com.facebook.drawee.drawable.OrientedDrawable: int mExifOrientation
com.google.android.material.R$styleable: int[] ActionBar
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
com.horcrux.svg.SvgView: java.util.Map mDefinedMarkers
com.horcrux.svg.Point: double x
com.google.android.material.R$styleable: int MaterialTextView_lineHeight
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
com.facebook.common.media.MimeTypeMapWrapper: java.util.Map sMimeTypeToExtensionMap
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactEditText mEditText
com.google.android.material.datepicker.MaterialCalendar: android.view.View dayFrame
com.google.android.material.appbar.HeaderBehavior$FlingRunnable: androidx.coordinatorlayout.widget.CoordinatorLayout parent
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
androidx.appcompat.widget.SuggestionsAdapter: int mFlagsCol
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference mSourceImageRef
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.drawee.backends.pipeline.info.ImagePerfState mImagePerfState
com.horcrux.svg.RNSVGMarkerPosition: java.util.ArrayList positions_
com.facebook.imageutils.ImageMetaData: android.graphics.ColorSpace mColorSpace
bolts.BoltsExecutors: java.util.concurrent.ScheduledExecutorService scheduled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate sAccessibilityDelegate
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.google.android.material.chip.ChipDrawable: android.graphics.ColorFilter colorFilter
com.google.android.material.datepicker.MaterialCalendar$3: com.google.android.material.datepicker.MaterialCalendar this$0
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: com.facebook.imagepipeline.producers.ProducerListener2 val$listener
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker mBitmapPoolStatsTracker
androidx.recyclerview.widget.DefaultItemAnimator$2: java.util.ArrayList val$changes
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache mMainFileCache
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1: java.lang.Runnable val$r
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.google.android.material.R$attr: int state_liftable
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4: int val$startingAlpha
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
okio.AsyncTimeout: okio.AsyncTimeout next
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] $VALUES
com.facebook.datasource.AbstractDataSource$2: com.facebook.datasource.DataSubscriber val$subscriber
androidx.appcompat.widget.ScrollingTabContainerView$1: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.facebook.cache.disk.DiskStorageCache: long mCacheSizeLimitMinimum
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET
com.swmansion.rnscreens.ScreenStackHeaderConfig: java.util.ArrayList mConfigSubviews
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeHierarchy mHierarchy
com.facebook.react.uimanager.UIManagerModule$2: com.facebook.react.uimanager.UIManagerModule this$0
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable
androidx.core.R$id: int tag_accessibility_pane_title
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
com.facebook.drawee.view.DraweeHolder: boolean mIsVisible
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: androidx.core.view.ViewPropertyAnimatorCompat mVpa
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int mColorIndex
com.google.android.material.bottomsheet.BottomSheetBehavior: int DEF_STYLE_RES
com.google.android.material.textfield.IndicatorViewController: android.graphics.Typeface typeface
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int mOnScreenWidthPx
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize bottomRightCornerSize
com.horcrux.svg.MaskView: com.horcrux.svg.SVGLength mW
com.facebook.react.R$style: int Theme_FullScreenDialogAnimatedSlide
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
androidx.collection.LruCache: int evictionCount
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class clientProviderClass
com.facebook.react.views.picker.ReactPicker: java.lang.Integer mStagedPrimaryTextColor
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow
com.facebook.react.uimanager.TouchTargetHelper: float[] mMatrixTransformCoords
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean mDownsampleEnabled
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: com.facebook.react.views.textinput.ReactEditText mEditText
com.facebook.imagepipeline.core.NativeCodeSetup: boolean sUseNativeCode
androidx.collection.LruCache: int missCount
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig
com.google.android.material.shape.ShapePath$LineShadowOperation: float startY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.horcrux.svg.VirtualView: android.graphics.Matrix mCTM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.CallbackWithHandler this$0
androidx.appcompat.R$id: int action_context_bar
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource source
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel
com.facebook.react.uimanager.events.EventDispatcherImpl: boolean mHasDispatchScheduled
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource mSoSource
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sViewRootImplClass
com.facebook.imagepipeline.producers.BitmapProbeProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: int mReactTag
com.facebook.react.uimanager.ViewProps: int[] BORDER_SPACING_TYPES
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
com.facebook.imagepipeline.request.ImageRequest: boolean mLocalThumbnailPreviewsEnabled
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mBackgroundLocalFileFetchToEncodedMemorySequence
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
com.facebook.react.modules.network.ProgressiveStringDecoder: byte[] remainder
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout container
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.th3rdwave.safeareacontext.Rect: float y
androidx.appcompat.widget.SwitchCompat: int mSwitchWidth
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.facebook.imagepipeline.producers.ThrottlingProducer: int mNumCurrentRequests
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.view.View$OnClickListener mBackClickListener
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap WRAP_REVERSE
androidx.appcompat.app.ResourcesFlusher: boolean sDrawableCacheFieldFetched
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin ENCODED_MEM_CACHE
com.facebook.react.uimanager.ThemedReactContext: java.lang.String mModuleName
okhttp3.Response$Builder: int code
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6: androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipeline sImagePipeline
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mScale
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Exception mException
com.google.android.material.internal.CollapsingTextHelper: float expandedDrawX
androidx.core.R$id: int tag_accessibility_clickable_spans
com.facebook.react.jstasks.HeadlessJsTaskConfig: boolean mAllowedInForeground
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType PERF_MARKERS
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status VISIBLE
com.facebook.soloader.SoLoader: com.facebook.soloader.SystemLoadLibraryWrapper sSystemLoadLibraryWrapper
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.CookieJar: okhttp3.CookieJar$Companion Companion
com.facebook.imageutils.TiffUtil$TiffHeader: boolean isLittleEndian
com.facebook.drawee.gestures.GestureDetector: boolean mIsCapturingGesture
androidx.appcompat.R$styleable: int[] TextAppearance
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
com.facebook.react.animated.DiffClampAnimatedNode: double mLastValue
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext sMatrixDecompositionContext
okhttp3.internal.cache.DiskLruCache: int valueCount
com.google.android.material.R$styleable: int MaterialShape_shapeAppearanceOverlay
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.controller.ControllerViewportVisibilityListener mControllerViewportVisibilityListener
androidx.transition.Transition: int[] DEFAULT_MATCH_ORDER
com.google.android.material.animation.MotionTiming: int repeatCount
com.facebook.react.modules.toast.ToastModule$3: com.facebook.react.modules.toast.ToastModule this$0
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.cache.disk.DynamicDefaultDiskStorage$State mCurrentState
com.google.android.material.R$styleable: int TextInputLayout_boxCollapsedPaddingTop
com.google.android.material.R$styleable: int[] RecycleListView
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactEditText: int mDefaultGravityHorizontal
androidx.appcompat.widget.RtlSpacingHelper: int mStart
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: float mDesiredAspectRatio
kotlin.ranges.IntProgressionIterator: int next
com.facebook.drawee.backends.pipeline.info.ImagePerfState: long mControllerSubmitTimeMs
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.graphics.Bitmap$Config mBitmapConfig
androidx.appcompat.R$styleable: int[] MenuItem
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mTurboModuleCleanupLock
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.modules.debug.FpsDebugFrameCallback$1: com.facebook.react.modules.debug.FpsDebugFrameCallback val$fpsDebugFrameCallback
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_hideable
com.facebook.react.animated.SpringAnimation: double mSpringDamping
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine sharp
com.google.android.material.shape.ShapePath$1: com.google.android.material.shape.ShapePath this$0
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
okhttp3.Cookie: boolean persistent
com.google.android.material.chip.ChipDrawable: float chipStartPadding
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType mActualImageScaleType
com.facebook.fresco.ui.common.ControllerListener2$Extras: java.util.Map componentExtras
okhttp3.internal.http.DatesKt: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
com.facebook.react.animated.DecayAnimation: long mStartFrameTimeMillis
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
com.google.android.material.R$id: int mtrl_picker_header_selection_text
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable mLoadingImageDrawable
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleRes
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SEARCH
okhttp3.HttpUrl: java.lang.String url
com.horcrux.svg.MarkerView: com.horcrux.svg.SVGLength mMarkerHeight
com.facebook.react.config.ReactFeatureFlags: boolean eagerInitializeFabric
com.facebook.react.views.text.ReactTextView$1: com.facebook.react.views.text.ReactTextView this$0
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropName
androidx.appcompat.widget.ListPopupWindow: int mDropDownHorizontalOffset
androidx.swiperefreshlayout.widget.CircleImageView: android.view.animation.Animation$AnimationListener mListener
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue writerQueue
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: int mStableFrames
com.google.android.material.R$styleable: int ForegroundLinearLayout_foregroundInsidePadding
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: com.facebook.react.views.textinput.ReactEditText mReactEditText
androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean useLastFrameForPreview
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY
com.facebook.drawee.drawable.FadeDrawable: int mDurationMs
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.PoolStatsTracker mPoolStatsTracker
androidx.fragment.app.DialogFragment: int mTheme
androidx.recyclerview.widget.FastScroller: int mHorizontalTrackHeight
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.CipherSuite: java.lang.String javaName
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: int mIndex
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mDiskCacheHistory
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder holder
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.util.HashMap mAdditionalData
com.google.android.material.internal.FlowLayout: int itemSpacing
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl
com.facebook.drawee.drawable.DrawableProperties: int mAlpha
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust spacing
androidx.recyclerview.widget.LayoutState: boolean mInfinite
androidx.appcompat.R$attr: int actionBarSize
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform mTextTransform
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mItems
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object mImageRequest
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mDeviceRotation
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray mAnimatedNodes
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaBaselineFunction mBaselineFunction
androidx.appcompat.widget.SearchView: java.lang.CharSequence mUserQuery
androidx.core.R$id: int accessibility_custom_action_8
com.facebook.react.views.textinput.ReactEditText$1: com.facebook.react.views.textinput.ReactEditText this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
androidx.core.R$id: int accessibility_custom_action_12
com.google.android.material.shape.ShapePath$PathLineOperation: float x
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
androidx.fragment.app.FragmentAnim$1: androidx.fragment.app.Fragment val$fragment
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: com.facebook.imagepipeline.producers.ProducerContext mContext
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSendMomentumEvents
com.horcrux.svg.GlyphContext: java.util.ArrayList mRsContext
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ALERT
com.google.android.material.bottomsheet.BottomSheetDialog: boolean canceledOnTouchOutside
com.google.android.material.R$styleable: int ThemeEnforcement_enforceTextAppearance
androidx.appcompat.widget.SearchView$7: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.SpinnerAdapter mAdapter
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mReverseLayout
com.facebook.react.common.ClearableSynchronizedPool: java.lang.Object[] mPool
androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String mSystemFontFamilyName
com.facebook.imagepipeline.producers.DelayProducer: java.util.concurrent.ScheduledExecutorService mBackgroundTasksExecutor
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] $VALUES
okhttp3.internal.ws.RealWebSocket$Close: int code
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MODE
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.FragmentTransition$Callback val$callback
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
com.facebook.imagepipeline.core.ProducerSequenceFactory: java.util.Map mBitmapPrepareSequences
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState BEFORE_RESUME
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $streamId$inlined
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
com.google.android.material.internal.CheckableImageButton: boolean checked
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float mHeight
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorText
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: java.lang.String[] PROJECTION
com.facebook.imagepipeline.producers.JobScheduler$1: com.facebook.imagepipeline.producers.JobScheduler this$0
androidx.appcompat.widget.SearchView: android.widget.ImageView mCollapsedIcon
com.horcrux.svg.ImageView: java.lang.String mAlign
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache mSmallImageFileCache
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: java.util.ArrayList mActionModes
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.executors.SerialExecutorService mSerialExecutorServiceForAnimatedImages
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
androidx.appcompat.widget.SearchView: android.view.View mSubmitArea
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.PointF mInnerBottomRightCorner
androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.util.concurrent.atomic.AtomicLong sIdCounter
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
com.facebook.imageutils.ImageMetaData: android.util.Pair mDimensions
androidx.appcompat.widget.ListPopupWindow: int mPromptPosition
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$drawable: int abc_btn_radio_material
androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility
com.facebook.react.uimanager.TouchTargetHelper: float[] mEventCoords
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetX
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue mThreadHandoffProducerQueue
com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.RectF mRootBounds
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$Companion Companion
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue queue
com.google.android.material.R$styleable: int[] CardView
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate
androidx.appcompat.R$attr: int actionDropDownStyle
com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: com.facebook.imagepipeline.producers.Consumer val$consumer
com.facebook.react.animated.AnimatedNode: java.util.List mChildren
com.google.android.material.datepicker.MaterialCalendar$2: com.google.android.material.datepicker.MaterialCalendar this$0
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int mNumberOfChildrenWithZIndex
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] $VALUES
com.facebook.drawee.debug.DebugControllerOverlayDrawable: long mFinalImageTimeMs
androidx.appcompat.R$styleable: int[] StateListDrawableItem
okhttp3.Response$Builder: okhttp3.Protocol protocol
com.facebook.react.common.MapBuilder$Builder: java.util.Map mMap
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.facebook.drawee.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap
androidx.appcompat.R$id: int action_bar_subtitle
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: com.zoontek.rnbootsplash.RNBootSplashModule$4 this$1
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.decoder.ImageDecoder customImageDecoder
com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean waitingForDismissAllowingStateLoss
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.google.android.material.R$styleable: int[] CollapsingToolbarLayout_Layout
com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode
com.google.android.material.internal.CollapsingTextHelper: float expandedShadowDy
androidx.appcompat.R$layout: int abc_list_menu_item_layout
androidx.appcompat.widget.RtlSpacingHelper: int mEnd
com.google.android.material.R$attr: int textInputStyle
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
com.facebook.react.ReactInstanceManager$1: com.facebook.react.ReactInstanceManager this$0
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List cleanFiles
com.facebook.react.views.text.TextTransform$1: int[] $SwitchMap$com$facebook$react$views$text$TextTransform
com.google.android.material.R$styleable: int MaterialShape_shapeAppearance
com.google.android.material.R$styleable: int[] CollapsingToolbarLayout
com.horcrux.svg.Brush: boolean mUseContentObjectBoundingBoxUnits
com.facebook.drawee.drawable.FadeDrawable: com.facebook.drawee.drawable.FadeDrawable$OnFadeListener mOnFadeListener
com.google.android.material.shape.CutCornerTreatment: float size
com.facebook.imageformat.DefaultImageFormatChecker: byte[] GIF_HEADER_87A
com.horcrux.svg.SvgView: int mTintColor
com.horcrux.svg.RNSVGMarkerPosition: double angle
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.facebook.imagepipeline.producers.EncodedProbeProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.debug.holder.PrinterHolder: com.facebook.debug.holder.Printer sPrinter
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: float scale
androidx.viewpager2.adapter.FragmentStateAdapter$2: androidx.viewpager2.adapter.FragmentViewHolder val$holder
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection ROW
com.facebook.cache.disk.DiskCacheConfig: android.content.Context mContext
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.statusbar.StatusBarModule$2$1: com.facebook.react.modules.statusbar.StatusBarModule$2 this$1
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel DISK_CACHE
com.facebook.imagepipeline.request.ImageRequest: boolean sUseCachedHashcodeInEquals
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: com.facebook.yoga.YogaUnit unit
com.facebook.drawee.drawable.FadeDrawable: boolean mIsFadingActualImage
com.google.android.material.bottomappbar.BottomAppBar$4: com.google.android.material.bottomappbar.BottomAppBar this$0
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int[] mDrawingOrderIndices
com.google.android.material.R$styleable: int TextInputLayout_helperTextTextColor
com.google.android.material.R$styleable: int TextInputLayout_errorIconTintMode
com.horcrux.svg.PatternView: com.horcrux.svg.SVGLength mY
androidx.appcompat.R$layout: int abc_expanded_menu_layout
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.view.ReactViewBackgroundManager mReactBackgroundManager
com.facebook.react.modules.storage.AsyncStorageModule$4: com.facebook.react.modules.storage.AsyncStorageModule this$0
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_START
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float mStartOpacity
com.google.android.material.chip.ChipDrawable: boolean currentChecked
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean mIsPostProcessingRunning
com.google.android.material.textfield.TextInputLayout$2: com.google.android.material.textfield.TextInputLayout this$0
androidx.appcompat.app.WindowDecorActionBar: boolean $assertionsDisabled
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String connectionName
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.facebook.react.views.text.ReactTextUpdate: boolean mContainsImages
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object mCallerContext
com.google.android.material.R$styleable: int MaterialButton_android_insetTop
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
okhttp3.Dispatcher: java.util.ArrayDeque readyAsyncCalls
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager
com.google.android.material.R$styleable: int[] FlowLayout
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector$Selection routeSelection
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_RUN_CLEAR_CONTROLLER
com.google.android.material.shape.ShapePath: float endY
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.util.List mSnapOffsets
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mCommonNetworkFetchToEncodedMemorySequence
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
okhttp3.CipherSuite: java.util.Map INSTANCES
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object callStackTrace
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.common.internal.CountingOutputStream: long mCount
androidx.transition.Transition$AnimationInfo: java.lang.String mName
com.facebook.react.uimanager.ThemedReactContext: int mSurfaceId
com.facebook.cache.disk.DiskCacheConfig: boolean mIndexPopulateAtStartupEnabled
com.facebook.drawee.backends.pipeline.info.ImagePerfData: long mControllerSubmitTimeMs
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildStart
com.horcrux.svg.TextProperties$AlignmentBaseline: java.lang.String alignment
com.google.android.material.ripple.RippleUtils: int[] SELECTED_FOCUSED_STATE_SET
androidx.appcompat.widget.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
com.google.android.material.appbar.AppBarLayout$1: com.google.android.material.appbar.AppBarLayout this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable
com.google.android.material.chip.ChipDrawable: java.lang.ref.WeakReference delegate
androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
com.facebook.imagepipeline.producers.DecodeProducer: int mMaxBitmapSize
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okio.ByteString $pong$inlined
androidx.appcompat.view.menu.StandardMenuPopup$1: androidx.appcompat.view.menu.StandardMenuPopup this$0
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle oblique
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_saveFlags
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List mCallbacks
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealCall call
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
com.google.android.material.textfield.IndicatorViewController: int captionDisplayed
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState QUEUED
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] scale
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalDragDistance
com.facebook.react.views.text.ReactBaseTextShadowNode: int mNumberOfLines
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType mRetryImageScaleType
com.google.android.material.R$styleable: int TextInputLayout_boxStrokeColor
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.request.ImageRequest[] mFirstAvailableImageRequests
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToEnd
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] $VALUES
com.google.android.material.resources.TextAppearance$2: android.text.TextPaint val$textPaint
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext
okio.Segment: boolean owner
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
androidx.core.util.Pair: java.lang.Object second
com.facebook.react.modules.statusbar.StatusBarModule$2: android.app.Activity val$activity
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.String mResizeMode
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mSlopBounds
androidx.transition.Visibility$DisappearListener: boolean mLayoutSuppressed
com.google.android.material.datepicker.CalendarItemStyle: int strokeWidth
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue mThreadHandoffProducerQueue
com.google.android.material.R$styleable: int TextInputLayout_helperText
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
com.horcrux.svg.PathParser: java.lang.String s
com.facebook.react.animated.TrackingAnimatedNode: int mValueNode
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5: com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent Disappear
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy mBitmapMemoryCacheTrimStrategy
com.facebook.react.views.image.ImageLoadEvent: java.lang.String mErrorMessage
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mUseBitmapPrepareToDraw
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.lang.Object mLock
com.facebook.common.references.SharedReference: com.facebook.common.references.ResourceReleaser mResourceReleaser
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mSplitBackground
com.google.android.material.appbar.ViewOffsetHelper: int layoutTop
com.google.android.material.R$color: int mtrl_textinput_default_box_stroke_color
androidx.appcompat.app.AppCompatViewInflater: java.util.Map sConstructorMap
androidx.recyclerview.widget.ChildHelper$Bucket: long mData
okhttp3.MultipartBody$Part: okhttp3.Headers headers
androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: android.animation.TypeEvaluator CIRCULAR_REVEAL
com.horcrux.svg.VirtualView: boolean mOnLayout
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor
okhttp3.Cache$Entry: okhttp3.Protocol protocol
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean mFullSpan
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.google.android.material.R$styleable: int TextInputLayout_errorIconTint
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mUseBitmapPrepareToDraw
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] $VALUES
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode
com.facebook.yoga.YogaNodeJNIBase: boolean mHasNewLayout
com.facebook.react.uimanager.OnLayoutEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: java.lang.String id
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap NO_WRAP
com.facebook.react.views.text.TextLayoutManagerMapBuffer$SetSpanOperation: int end
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback this$1
com.facebook.imagepipeline.common.BytesRange: int from
com.facebook.yoga.YogaNodeJNIBase: long mNativePointer
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalResourceFetchSequence
com.facebook.cache.common.NoOpCacheErrorLogger: com.facebook.cache.common.NoOpCacheErrorLogger sInstance
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable mDefaultImageDrawable
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$2: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup this$0
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$IntRef $receivedCloseCode$inlined
androidx.transition.ViewUtilsBase: boolean sSetFrameFetched
com.google.android.material.chip.Chip: android.graphics.drawable.InsetDrawable insetBackgroundDrawable
com.facebook.react.views.scroll.ReactScrollView$4: int val$scrollY
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mImageTint
com.google.android.material.internal.CollapsingTextHelper: int collapsedTextGravity
okio.ByteString: okio.ByteString EMPTY
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.google.android.material.transformation.FabTransformationBehavior: android.graphics.Rect tmpRect
com.facebook.imagepipeline.memory.LruBitmapPool: int mMaxBitmapSize
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.swmansion.rnscreens.ScreenStackFragment: boolean mShadowHidden
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent sFirstRecycledEvent
com.google.android.material.R$styleable: int TextInputLayout_counterTextColor
com.google.android.material.bottomappbar.BottomAppBar: boolean hideOnScroll
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.lifecycle.LiveData: int mVersion
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.app.AlertController: int mListLayout
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imageformat.ImageFormat mImageFormat
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.datasource.AbstractDataSource: float mProgress
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
com.facebook.drawee.view.DraweeView: boolean sGlobalLegacyVisibilityHandlingEnabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren
com.google.android.material.bottomappbar.BottomAppBar$Behavior: android.view.View$OnLayoutChangeListener fabLayoutListener
androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage
com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusTopEnd
com.facebook.react.views.text.ReactTextUpdate: int mTextAlign
okio.Timeout: long timeoutNanos
com.google.android.material.datepicker.MaterialCalendar$4: java.util.Calendar endItem
kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE
androidx.appcompat.R$styleable: int SearchView_voiceIcon
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: int mMaxBitmapSizeBytes
com.google.android.material.R$style: int Widget_Design_FloatingActionButton
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
okhttp3.Credentials: okhttp3.Credentials INSTANCE
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.atomic.AtomicInteger mHasDispatchScheduledCount
com.google.android.material.appbar.HeaderScrollingViewBehavior: int verticalLayoutGap
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator
com.facebook.react.ReactInstanceManagerBuilder: int mMinTimeLeftInFrameForNonBatchedOperationMs
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat JPEG
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions extensions
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView yearSelector
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mStartWidth
androidx.transition.ChangeBounds$10: android.graphics.drawable.BitmapDrawable val$drawable
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
com.facebook.react.animated.NativeAnimatedModule$9: double val$value
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean closed
com.facebook.react.modules.network.NetworkingModule$2: int val$requestId
androidx.transition.TransitionValuesMaps: android.util.SparseArray mIdValues
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.Matrix sTempTransform
com.facebook.yoga.YogaNodeJNIBase: java.lang.Object mData
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_android_elevation
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheEventListener mCacheEventListener
androidx.appcompat.R$attr: int colorAccent
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize topRightCornerSize
kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1
okhttp3.CacheControl$Builder: int maxStaleSeconds
androidx.fragment.app.Fragment: boolean mHidden
com.google.android.material.datepicker.MaterialCalendar: java.lang.Object SELECTOR_TOGGLE_TAG
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.Map mExtras
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$InternalKeyListener mKeyListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
androidx.core.text.TextUtilsCompat: java.util.Locale ROOT
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
com.google.android.material.chip.Chip: android.view.View$OnClickListener onCloseIconClickListener
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: int mFadeDuration
bolts.Task$10: bolts.TaskCompletionSource val$tcs
com.facebook.react.ReactRootView: boolean mShouldLogContentAppeared
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.LayoutState mLayoutState
com.facebook.react.modules.network.ProgressiveStringDecoder: java.nio.charset.CharsetDecoder mDecoder
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.google.android.material.R$layout: int mtrl_calendar_month_labeled
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect shadowPadding
androidx.core.provider.FontRequestWorker$3: android.content.Context val$context
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mFullSizeSpec
androidx.appcompat.view.SupportActionModeWrapper: android.content.Context mContext
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: android.os.Handler mHandler
okhttp3.Cache$Entry: okhttp3.Handshake handshake
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.common.BytesRange mBytesRange
com.google.android.material.internal.StateListAnimator: com.google.android.material.internal.StateListAnimator$Tuple lastMatch
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status HIDDEN
androidx.core.provider.RequestExecutor$ReplyRunnable: androidx.core.util.Consumer mConsumer
androidx.appcompat.view.menu.StandardMenuPopup: boolean mOverflowOnly
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchBatchedExecutionTime
com.facebook.react.uimanager.BaseViewManagerDelegate: com.facebook.react.uimanager.BaseViewManagerInterface mViewManager
com.facebook.react.uimanager.UIManagerModule$3: int val$heightMeasureSpec
androidx.transition.Transition: java.util.ArrayList mTargets
okio.InputStreamSource: java.io.InputStream input
com.facebook.react.views.textinput.ReactTextInputLocalData: int mInputType
okhttp3.internal.http.RealResponseBody: long contentLength
androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_SET_HIERARCHY
androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $byteCount$inlined
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: int mHttpConnectionTimeout
okio.Segment: byte[] data
androidx.appcompat.app.AlertController: android.widget.TextView mTitleView
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: androidx.appcompat.widget.ForwardingListener this$0
com.horcrux.svg.VirtualView: boolean mTransformInvertible
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl itemData
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline hanging
com.facebook.react.modules.storage.AsyncStorageModule$3: com.facebook.react.bridge.Callback val$callback
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader: java.util.List DEPENDENCIES
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify FLEX_END
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode
androidx.core.widget.NestedScrollView: int mMinimumVelocity
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold
com.facebook.react.uimanager.LayoutShadowNode: com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue mTempYogaValue
androidx.core.provider.RequestExecutor$DefaultThreadFactory: int mPriority
com.facebook.react.modules.network.NetworkingModule$4: int val$requestId
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point in_slope_
com.google.android.material.shape.MaterialShapeDrawable: boolean pathDirty
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig mSmallImageDiskCacheConfig
com.facebook.react.ReactInstanceManager$6: com.facebook.react.bridge.ReactApplicationContext val$reactContext
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormatChecker sInstance
com.google.android.material.textfield.ClearTextEndIconDelegate$5: com.google.android.material.textfield.ClearTextEndIconDelegate this$0
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: java.lang.String mResourceId
androidx.recyclerview.widget.GridLayoutManager: int mSpanCount
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalFileFetchToEncodedMemoryPrefetchSequence
androidx.cardview.widget.RoundRectDrawable: android.graphics.Paint mPaint
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason USER_FORCED
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: com.facebook.react.animated.NativeAnimatedModule this$0
androidx.fragment.app.ListFragment: java.lang.Runnable mRequestFocus
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.facebook.react.views.text.TextAttributes: float mHeightOfTallestInlineViewOrImage
bolts.Task$14: bolts.Task val$task
com.google.android.material.R$styleable: int[] ActivityChooserView
okio.Segment: okio.Segment prev
com.google.android.material.chip.Chip: android.graphics.RectF rectF
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: java.lang.String mProperty
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState TRANSITIONING_OR_BELOW_TOP
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address address
com.facebook.react.views.image.ReactImageView: float[] mBorderCornerRadii
androidx.arch.core.internal.SafeIterableMap: int mSize
com.facebook.react.R$style: int Theme_FullScreenDialog
bolts.Task: boolean errorHasBeenObserved
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1
okhttp3.internal.connection.RealCall: java.util.concurrent.atomic.AtomicBoolean executed
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.WeakHashMap INSTANCES
com.google.android.material.R$styleable: int[] ExtendedFloatingActionButton
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: com.facebook.react.bridge.ReactContext $context
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] $VALUES
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: double[] perspective
androidx.transition.Transition: java.util.ArrayList mTargetExcludes
okhttp3.CertificatePinner$Pin: okio.ByteString hash
com.facebook.react.ReactDelegate: android.os.Bundle mLaunchOptions
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunEndTime
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback
androidx.appcompat.widget.ListPopupWindow: android.widget.PopupWindow mPopup
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$commitStartTime
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
com.facebook.imagepipeline.producers.JobScheduler: long mJobSubmitTime
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight w700
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.google.android.material.R$styleable: int Chip_closeIconTint
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab mTab
com.facebook.common.media.MimeTypeMapWrapper: java.util.Map sExtensionToMimeTypeMap
com.facebook.drawee.drawable.RoundedDrawable: int mBorderColor
com.swmansion.rnscreens.ScreenContainer: boolean mNeedUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.content.res.Resources mResources
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.String mMethodName
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: com.facebook.imagepipeline.nativecode.WebpTranscoder sWebpTranscoder
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.transition.TransitionValues: java.util.ArrayList mTargetedTransitions
com.google.android.material.R$styleable: int TextInputLayout_startIconTintMode
androidx.recyclerview.widget.SnapHelper$2: androidx.recyclerview.widget.SnapHelper this$0
androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.CallbackWithHandler this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.drawee.gestures.GestureDetector: float mActionDownX
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_shapeAppearance
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck
com.google.android.material.resources.TextAppearance: float shadowRadius
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
com.horcrux.svg.GlyphContext: java.util.ArrayList mXsContext
androidx.fragment.app.ListFragment: android.widget.ListView mList
com.horcrux.svg.VirtualViewManager: double EPSILON
com.facebook.drawee.drawable.RoundedCornersDrawable: boolean mScaleDownInsideBorders
com.google.android.material.behavior.SwipeDismissBehavior: androidx.customview.widget.ViewDragHelper$Callback dragCallback
androidx.recyclerview.widget.ViewInfoStore: androidx.collection.SimpleArrayMap mLayoutHolderMap
androidx.appcompat.widget.SearchView$SavedState: boolean isIconified
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform platform
androidx.appcompat.R$drawable: int abc_edit_text_material
androidx.core.R$styleable: int FontFamily_fontProviderPackage
androidx.transition.TransitionSet: int mChangeFlags
okhttp3.Response$Builder: okhttp3.ResponseBody body
com.facebook.react.ReactInstanceManagerBuilder: java.lang.String mJSBundleAssetUrl
androidx.transition.ChangeBounds: android.util.Property DRAWABLE_ORIGIN_PROPERTY
androidx.transition.FragmentTransitionSupport$4: android.graphics.Rect val$epicenter
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle normal
com.google.android.material.R$styleable: int[] CoordinatorLayout_Layout
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempList1
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mDiskCacheHistory
okhttp3.internal.ws.MessageInflater: okio.Buffer deflatedBytes
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize
com.google.android.material.R$layout: int mtrl_picker_fullscreen
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: java.lang.String $name
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
androidx.appcompat.R$attr: int dropDownListViewStyle
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
com.google.android.material.animation.MatrixEvaluator: float[] tempStartValues
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
androidx.transition.Visibility$1: android.view.View val$startView
com.google.android.material.ripple.RippleDrawableCompat: com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState drawableState
com.facebook.react.animated.SpringAnimation: double mSpringMass
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
androidx.appcompat.view.menu.MenuBuilder: boolean mIsActionItemsStale
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: int index
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
com.facebook.drawee.drawable.RoundedColorDrawable: int mAlpha
com.facebook.imagepipeline.producers.StatefulProducerRunnable: com.facebook.imagepipeline.producers.Consumer mConsumer
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode PADDING
androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
com.google.android.material.textfield.IndicatorViewController$1: android.widget.TextView val$captionViewToShow
androidx.core.R$id: int accessibility_custom_action_29
com.google.android.material.appbar.AppBarLayout: boolean lifted
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchDispatchViewUpdatesTime
com.google.android.material.shape.ShapePath$PathArcOperation: float right
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] $VALUES
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.String TAG
com.facebook.react.animated.DiffClampAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout: com.swmansion.rnscreens.ScreenFragment mFragment
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer mLocalAssetFetchSequence
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: boolean mEnsureTranscoderLibraryLoaded
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$AlertParams this$0
com.facebook.react.views.text.TextLayoutManager: java.lang.Object sSpannableCacheLock
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
androidx.appcompat.content.res.AppCompatResources: java.lang.Object sColorStateCacheLock
androidx.appcompat.R$color: int abc_tint_edittext
com.facebook.imagepipeline.core.ImagePipeline: java.util.concurrent.atomic.AtomicLong mIdCounter
okhttp3.internal.connection.ExchangeFinder: int refusedStreamCount
androidx.appcompat.widget.Toolbar$2: androidx.appcompat.widget.Toolbar this$0
com.google.android.material.R$integer: int mtrl_calendar_year_selector_span
com.google.android.material.chip.ChipDrawable: int alpha
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_INIT_CONTROLLER
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $stream$inlined
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: com.facebook.react.views.text.ReactSpan what
com.facebook.imagepipeline.memory.BasePool$Counter: int mNumBytes
androidx.appcompat.R$id: int search_go_btn
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
com.google.android.material.bottomappbar.BottomAppBar: android.animation.AnimatorListenerAdapter fabAnimationListener
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation PUSH
androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
com.google.android.material.R$attr: int radioButtonStyle
com.facebook.react.ReactInstanceManager: java.util.List mViewManagerNames
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SCROLLBAR
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: com.google.android.material.chip.ChipGroup this$0
com.google.android.material.R$styleable: int MaterialCalendarItem_android_insetTop
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign FLEX_START
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_BEGIN
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState
androidx.appcompat.R$styleable: int[] SwitchCompat
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.swmansion.rnscreens.ScreenStackFragment: com.google.android.material.appbar.AppBarLayout mAppBarLayout
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: byte[] EMPTY_JPEG_SUFFIX
com.google.android.material.chip.ChipDrawable: boolean useCompatRipple
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitle
com.google.android.material.animation.Positioning: float xAdjustment
androidx.collection.LongSparseArray: java.lang.Object DELETED
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
com.facebook.soloader.DirectorySoSource: int flags
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation POP
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.horcrux.svg.Brush: android.graphics.Rect mUserSpaceBoundingBox
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Paint texturePaint
com.facebook.react.views.textinput.ReactTextInputEvent: java.lang.String mText
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean skipCollapsed
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory playProviderFactory
androidx.transition.PathProperty: float mCurrentFraction
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver mBitmapMemoryCacheEntryStateObserver
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
com.swmansion.rnscreens.ScreenContainer$mFrameCallback$1: com.swmansion.rnscreens.ScreenContainer this$0
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.ControllerListener sAutoPlayAnimationsListener
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList
com.facebook.imagepipeline.memory.NativeMemoryChunk: boolean mIsClosed
com.facebook.drawee.drawable.RoundedDrawable: boolean mIsPathDirty
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
com.facebook.react.views.text.CustomLineHeightSpan: int mHeight
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign SPACE_AROUND
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge END
androidx.appcompat.R$styleable: int Toolbar_logo
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.MemoryCacheParams mMemoryCacheParams
androidx.core.R$styleable: int GradientColor_android_type
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation
okhttp3.internal.http2.Settings: int[] values
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.facebook.imagepipeline.memory.PoolConfig$Builder: boolean mIgnoreBitmapPoolHardCap
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.horcrux.svg.RenderableView: float fillOpacity
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1: int val$viewTag
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper$ValueHolder holderHead
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
com.horcrux.svg.SvgViewModule$1$2: com.horcrux.svg.SvgViewModule$1 this$0
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel BITMAP_MEMORY_CACHE
com.horcrux.svg.RenderableView: android.graphics.Path$FillType fillRule
androidx.appcompat.app.AlertController$5: androidx.appcompat.app.AlertController this$0
com.facebook.react.modules.toast.ToastModule$3: java.lang.String val$message
com.google.android.material.card.MaterialCardView: boolean dragged
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
com.facebook.react.animated.MultiplicationAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager mNativeAnimatedNodesManager
com.google.android.material.transformation.FabTransformationBehavior$1: android.view.View val$dependency
com.facebook.react.modules.storage.AsyncStorageModule$5: com.facebook.react.modules.storage.AsyncStorageModule this$0
androidx.appcompat.view.StandaloneActionMode: android.content.Context mContext
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource mImageSource
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.concurrent.TaskQueue cleanupQueue
com.google.android.material.R$layout: int design_text_input_end_icon
okio.Buffer$UnsafeCursor: okio.Buffer buffer
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
com.facebook.drawee.controller.AbstractDraweeController: boolean mJustConstructed
com.google.android.material.textfield.TextInputLayout$4: com.google.android.material.textfield.TextInputLayout this$0
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionProviderClassName
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: com.facebook.imagepipeline.common.RotationOptions mRotationOptions
androidx.appcompat.R$styleable: int[] StateListDrawable
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_ACTIVITY_START
androidx.appcompat.app.AlertController: boolean mShowTitle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_8_SHA256
com.google.android.material.floatingactionbutton.FloatingActionButton$1: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener val$listener
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
com.facebook.react.ReactInstanceManagerBuilder: android.app.Application mApplication
okhttp3.OkHttpClient$Builder: int readTimeout
com.facebook.react.views.modal.ReactModalHostManager$1: com.facebook.react.views.modal.ReactModalHostView val$view
okhttp3.internal.ws.MessageDeflater: okio.DeflaterSink deflaterSink
androidx.fragment.R$styleable: int FragmentContainerView_android_tag
com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx
com.google.android.material.chip.Chip: int[] CHECKABLE_STATE_SET
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
com.facebook.react.modules.websocket.WebSocketModule$1: int val$id
androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView
okhttp3.internal.concurrent.TaskQueue: java.lang.String name
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: int mStatus
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList compatRippleColor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.zoontek.rnbootsplash.RNBootSplashTask$Type: com.zoontek.rnbootsplash.RNBootSplashTask$Type SHOW
androidx.appcompat.view.menu.MenuPopupHelper: android.view.View mAnchorView
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback mIdleFrameCallback
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method doAfterTextChanged
com.facebook.react.modules.debug.DevSettingsModule$1: com.facebook.react.modules.debug.DevSettingsModule this$0
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrtTextViewBoundsExpanded
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole NONE
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef
androidx.appcompat.R$styleable: int[] Spinner
androidx.transition.ViewGroupUtilsApi14: java.lang.reflect.Field sLayoutSuppressedField
com.facebook.cache.disk.DynamicDefaultDiskStorage$State: java.io.File rootDirectory
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: okhttp3.internal.connection.RealConnectionPool this$0
androidx.fragment.app.FragmentManager: boolean mStateSaved
com.facebook.react.animated.AdditionAnimatedNode: int[] mInputNodes
com.google.android.material.R$styleable: int[] MaterialButtonToggleGroup
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
androidx.fragment.app.Fragment: boolean mDeferStart
com.facebook.react.views.text.TextAttributeProps: boolean mIsUnderlineTextDecorationSet
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean unsupported
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mScrollXAfterMeasure
com.facebook.react.R$string: int imagebutton_description
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.view.accessibility.AccessibilityManager accessibilityManager
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: java.util.ArrayList mDataSources
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean mProgressiveRenderingEnabled
com.facebook.drawee.view.AspectRatioMeasure$Spec: int width
com.facebook.react.uimanager.UIViewOperationQueue: long mThreadCpuTime
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.WindowInsetsCompat mLastInsets
androidx.appcompat.widget.SearchView$6: androidx.appcompat.widget.SearchView this$0
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
androidx.core.provider.FontRequestWorker$3: int val$style
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.ref.WeakReference mCustomView
com.facebook.react.views.image.ReactImageView$1: com.facebook.react.uimanager.events.EventDispatcher val$mEventDispatcher
androidx.recyclerview.widget.LayoutState: int mEndLine
com.facebook.react.module.model.ReactModuleInfo: boolean mIsTurboModule
androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE
androidx.core.provider.FontRequestWorker: java.lang.Object LOCK
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mOperations
androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd
androidx.core.R$styleable: int GradientColorItem_android_offset
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
com.facebook.react.R$id: int accessibility_state
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle italic
androidx.appcompat.R$attr: int actionBarWidgetTheme
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable mEmptyActualImageDrawable
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
com.google.android.material.R$id: int mtrl_calendar_days_of_week
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
com.facebook.react.animated.SubtractionAnimatedNode: int[] mInputNodes
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
androidx.appcompat.view.menu.MenuItemWrapperICS: androidx.core.internal.view.SupportMenuItem mWrappedObject
bolts.Task$10: bolts.CancellationToken val$ct
com.facebook.react.uimanager.events.TouchEvent: float mViewX
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean mKeepCancelledFetchAsLowPriority
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
com.facebook.imagepipeline.memory.BitmapCounterProvider: int MAX_BITMAP_TOTAL_SIZE
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrcTextViewBounds
com.google.android.material.bottomappbar.BottomAppBar$SavedState: boolean fabAttached
okhttp3.CacheControl: okhttp3.CacheControl$Companion Companion
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.String mUiComponentId
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.lang.String mImageFormat
androidx.appcompat.widget.AppCompatSeekBar: androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel val$cacheLevel
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvTransform
androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
com.google.android.material.R$style: int Widget_MaterialComponents_MaterialCalendar
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type CLIPPING
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
androidx.transition.TransitionValuesMaps: androidx.collection.ArrayMap mNameValues
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText1
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.components.DeferredReleaser mDeferredReleaser
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.drawee.debug.DebugControllerOverlayDrawable: android.graphics.RectF mRectF
androidx.recyclerview.R$styleable: int[] GradientColorItem
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup this$0
com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String selected
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
com.google.android.material.R$styleable: int MaterialCalendar_yearStyle
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mPrevInsideBorderTransform
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$enterTransition
com.facebook.imagepipeline.memory.LruBitmapPool: int mMaxPoolSize
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ScrollWatcher mScrollWatcher
androidx.core.R$id: int accessibility_custom_action_13
com.google.android.material.R$styleable: int TextInputLayout_helperTextEnabled
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView contextElement
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeStepGranularityInPx
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okio.Source $fileSource
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
androidx.appcompat.app.AlertController: int mAlertDialogLayout
com.facebook.react.views.imagehelper.ImageSource: java.lang.String mSource
androidx.core.R$id: int tag_state_description
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TEXT
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle todayDay
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.ReactInstanceManager this$0
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: androidx.appcompat.widget.ListPopupWindow this$0
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment bottomRightCorner
com.facebook.react.NativeModuleRegistryBuilder: java.util.Map mModules
androidx.core.R$id: int tag_unhandled_key_event_manager
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
androidx.core.provider.RequestExecutor$ReplyRunnable: java.util.concurrent.Callable mCallable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback val$callback
com.google.android.material.resources.CancelableFontCallback: boolean cancelled
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel FATAL
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: android.graphics.Rect MINI_THUMBNAIL_DIMENSIONS
com.facebook.imagepipeline.cache.BufferedDiskCache$3: java.util.concurrent.atomic.AtomicBoolean val$isCancelled
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator iconOutAnim
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.facebook.drawee.controller.AbstractDraweeController: boolean mHasFetchFailed
com.google.android.material.textfield.IndicatorViewController: float captionTranslationYPx
com.facebook.react.uimanager.ViewAtIndex: java.util.Comparator COMPARATOR
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mPostEventDispatchListeners
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
androidx.transition.Transition: androidx.transition.TransitionValuesMaps mStartValues
com.facebook.imagepipeline.image.ImmutableQualityInfo: com.facebook.imagepipeline.image.QualityInfo FULL_QUALITY
okhttp3.Protocol: java.lang.String protocol
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutRTL
androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
com.facebook.soloader.SoLoader: boolean SYSTRACE_LIBRARY_LOADING
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache
androidx.cardview.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint
com.horcrux.svg.RenderableViewManager$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.reflect.Method mMethod
com.google.android.material.R$color: int mtrl_textinput_disabled_color
com.google.android.material.R$styleable: int SnackbarLayout_actionTextColorAlpha
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextBreakStrategy
com.facebook.react.animated.ModulusAnimatedNode: int mInputNode
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.Paint mPaint
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.google.android.material.transformation.ExpandableTransformationBehavior: android.animation.AnimatorSet currentAnimation
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.imagepipeline.image.ImmutableQualityInfo: boolean mIsOfGoodEnoughQuality
okio.internal.HashFunctionKt$newHashFunction$1: java.lang.String $algorithm
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers trailers
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
com.google.android.material.animation.DrawableAlphaProperty: java.util.WeakHashMap alphaCache
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateY
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation DEFAULT
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable
com.google.android.material.bottomappbar.BottomAppBar: int bottomInset
com.google.android.material.R$styleable: int[] ColorStateListItem
com.facebook.react.views.text.ReactTextShadowNode$1: com.facebook.react.views.text.ReactTextShadowNode this$0
androidx.appcompat.R$layout: int abc_tooltip
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: java.util.Set mBoundControllerListeners
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache$Entry: boolean zombie
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagedArrowScrolling
com.facebook.imagepipeline.cache.CountingLruMap: int mSizeInBytes
androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor
com.facebook.react.modules.storage.AsyncStorageModule$3: com.facebook.react.bridge.ReadableArray val$keys
okhttp3.Cookie: okhttp3.Cookie$Companion Companion
com.google.android.material.chip.ChipDrawable: int currentChipBackgroundColor
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType mScaleType
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.facebook.react.uimanager.JSTouchDispatcher: boolean mChildIsHandlingNativeGesture
com.facebook.react.touch.JSResponderHandler: android.view.ViewParent mViewParentBlockingNativeResponder
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher this$0
com.facebook.react.views.textinput.ReactTextInputLocalData: int mMaxLines
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel ENCODED_MEMORY_CACHE
com.facebook.react.devsupport.LogBoxModule$3: com.facebook.react.devsupport.LogBoxModule this$0
okio.Segment: int limit
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchableInfo mSearchable
com.facebook.fresco.ui.common.ControllerListener2$Extras: float focusY
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.uimanager.ViewAtIndex: int mTag
com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache
com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsDoneCreatingModule
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
okhttp3.Cookie: boolean hostOnly
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
androidx.fragment.app.BackStackRecord: int mIndex
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: com.facebook.imagepipeline.producers.ThrottlingProducer this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mOffset
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_END
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout
com.facebook.imagepipeline.transcoder.ImageTranscodeResult: int mTranscodeStatus
com.horcrux.svg.EllipseView: com.horcrux.svg.SVGLength mCy
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.recyclerview.widget.FastScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory mBitmapMemoryCacheFactory
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs
androidx.appcompat.R$styleable: int Toolbar_titleMargin
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign STRETCH
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.common.internal.Supplier mUseNewState
com.google.android.material.theme.MaterialComponentsViewInflater: int floatingToolbarItemBackgroundResId
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: java.util.Map INTERPOLATOR
com.facebook.react.modules.intent.IntentModule$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.R$id: int scrollView
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Object mRealOwner
androidx.core.view.ViewPropertyAnimatorCompat$2: android.view.View val$view
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
com.facebook.react.modules.websocket.WebSocketModule$1: com.facebook.react.modules.websocket.WebSocketModule this$0
com.facebook.react.modules.network.RequestBodyUtil$1: okhttp3.MediaType val$mediaType
androidx.appcompat.widget.MenuPopupWindow: java.lang.reflect.Method sSetTouchModalMethod
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
com.google.android.material.datepicker.MaterialCalendar$8: com.google.android.material.datepicker.MaterialCalendar this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
com.facebook.imagepipeline.image.CloseableStaticBitmap: com.facebook.common.references.CloseableReference mBitmapReference
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector mDidJSUpdateUiDuringFrameDetector
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated
com.facebook.react.uimanager.events.TouchEvent$1: int[] $SwitchMap$com$facebook$react$uimanager$events$TouchEventType
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mInsideBorderTransform
com.horcrux.svg.ImageView: int mImageWidth
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder
com.facebook.debug.tags.ReactDebugOverlayTags: com.facebook.debug.debugoverlay.model.DebugOverlayTag RELAY
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: boolean mAnimEndCalled
com.google.android.material.R$styleable: int Chip_iconEndPadding
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$viewCommandOperations
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int mAbsGravity
androidx.appcompat.view.menu.MenuAdapter: int mItemLayoutRes
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
androidx.fragment.app.DialogFragment: int mBackStackId
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunset
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mShortcutView
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode AT_MOST
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutAlphabeticChar
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: android.graphics.RectF bounds
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason CONTENT_STALE
androidx.core.R$id: int accessibility_custom_action_9
androidx.collection.MapCollections$ArrayIterator: int mSize
androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float imageMatrixScale
androidx.lifecycle.SavedStateHandleController$1: androidx.lifecycle.Lifecycle val$lifecycle
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFeatureSettings
com.facebook.common.references.SharedReference: java.lang.Object mValue
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
com.horcrux.svg.TextView: double cachedAdvance
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy shrinkStrategy
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRunnable
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource this$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
com.google.android.material.R$layout: int design_navigation_menu_item
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart
androidx.recyclerview.widget.DefaultItemAnimator$4: android.view.ViewPropertyAnimator val$animation
com.facebook.react.module.model.ReactModuleInfo: boolean mCanOverrideExistingModule
androidx.fragment.app.Fragment: java.lang.String mTag
com.google.android.material.bottomappbar.BottomAppBar$7: boolean val$targetAttached
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int mStartTextXPx
androidx.appcompat.app.AlertController: android.os.Handler mHandler
com.th3rdwave.safeareacontext.SafeAreaProvider: com.th3rdwave.safeareacontext.EdgeInsets mLastInsets
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMajor
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaScriptTimerManager mJavaScriptTimerManager
com.google.android.material.internal.CollapsingTextHelper: com.google.android.material.resources.CancelableFontCallback expandedFontCallback
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment rightEdge
androidx.transition.ViewUtils: android.util.Property TRANSITION_ALPHA
com.facebook.react.views.text.TextLayoutManager: android.util.LruCache sSpannableCache
androidx.core.widget.AutoScrollHelper: boolean mExclusive
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater mInflater
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mShouldNotifyOnLayout
com.facebook.imagepipeline.cache.StagingArea: java.util.Map mMap
com.facebook.react.ReactInstanceManager: java.util.List mPackages
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Typeface collapsedTypeface
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.imagepipeline.producers.DelayProducer$1: com.facebook.imagepipeline.producers.DelayProducer this$0
okhttp3.internal.http.RealInterceptorChain: int calls
androidx.appcompat.app.AlertController$4: android.view.View val$bottom
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int mCurrentColor
com.facebook.react.views.text.CustomStyleSpan: android.content.res.AssetManager mAssetManager
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable
kotlin.ranges.IntProgressionIterator: int step
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds
androidx.collection.LruCache: int createCount
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConstructorFetched
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingChanges
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateX
com.google.android.material.textfield.ClearTextEndIconDelegate: android.text.TextWatcher clearTextEndIconTextWatcher
com.horcrux.svg.VirtualView: float mOpacity
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
androidx.appcompat.view.menu.ListMenuItemView: android.content.Context mTextAppearanceContext
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] $VALUES
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
com.google.android.material.floatingactionbutton.FloatingActionButton: int DEF_STYLE_RES
com.google.android.material.textfield.TextInputLayout: int counterTextAppearance
com.facebook.react.LazyReactPackage$2$1: com.facebook.react.LazyReactPackage$2 this$1
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
androidx.appcompat.view.menu.SubMenuWrapperICS: androidx.core.internal.view.SupportSubMenu mSubMenu
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: android.view.View mView
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetDelta
com.facebook.imagepipeline.producers.MultiplexProducer: java.util.Map mMultiplexers
okio.ForwardingSource: okio.Source delegate
com.google.android.material.R$styleable: int TextInputLayout_endIconCheckable
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEventType mTouchEventType
com.google.android.material.R$id: int mtrl_picker_title_text
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: com.facebook.imagepipeline.producers.Producer mInputProducer
com.facebook.common.statfs.StatFsHelper: java.util.concurrent.locks.Lock lock
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType mProgressBarImageScaleType
com.google.android.material.datepicker.CalendarConstraints$Builder: long start
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.util.Consumer val$consumer
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$ReactRootViewEventListener mRootViewEventListener
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutNumericChar
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: com.facebook.react.bridge.Promise val$promise
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
androidx.fragment.app.Fragment: int mContentLayoutId
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long $pingIntervalNanos$inlined
com.facebook.imagepipeline.memory.PoolParams: int maxSizeSoftCap
com.facebook.react.R$string: int combobox_description
androidx.transition.Transition$AnimationInfo: androidx.transition.TransitionValues mValues
androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState val$fetchState
okhttp3.OkHttpClient: java.util.List networkInterceptors
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener
com.horcrux.svg.VirtualViewManager: double[] sTransformDecompositionArray
com.facebook.drawee.gestures.GestureDetector: com.facebook.drawee.gestures.GestureDetector$ClickListener mClickListener
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ResizeOptions mResizeOptions
androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled
androidx.transition.Fade$1: androidx.transition.Fade this$0
com.facebook.react.animated.TransformAnimatedNode: java.util.List mTransformConfigs
androidx.appcompat.view.SupportMenuInflater$MenuState: android.graphics.PorterDuff$Mode itemIconTintMode
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mWebpSupportEnabled
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.animated.DecayAnimation: double mVelocity
com.google.android.material.R$styleable: int TextInputLayout_boxBackgroundColor
com.facebook.cache.common.MultiCacheKey: java.util.List mCacheKeys
com.facebook.react.modules.statusbar.StatusBarModule$4: com.facebook.react.modules.statusbar.StatusBarModule this$0
androidx.appcompat.R$attr: int radioButtonStyle
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: androidx.swiperefreshlayout.widget.CircleImageView this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.Object mCallerContext
okhttp3.internal.http.StatusLine: int code
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod RESIZE
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitEndTime
com.facebook.react.views.text.ReactTextShadowNode: android.text.Spannable mPreparedSpannableText
androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActiveDelegates
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.lang.Class TAG
com.facebook.react.modules.core.JavaTimerManager: boolean mFrameCallbackPosted
com.google.android.material.textfield.TextInputLayout$1: com.google.android.material.textfield.TextInputLayout this$0
com.horcrux.svg.TSpanView: com.horcrux.svg.TextPathView textPath
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax
okio.Buffer$UnsafeCursor: byte[] data
com.facebook.react.module.model.ReactModuleInfo: boolean mNeedsEagerInit
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mChangesList
androidx.appcompat.R$layout: int abc_action_menu_item_layout
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue mThreadHandoffProducerQueue
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: androidx.fragment.app.FragmentManager mFragmentManager
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.horcrux.svg.SvgView: android.graphics.Matrix mInvViewBoxMatrix
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify FLEX_START
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String mDeviceName
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: java.lang.Runnable mActive
com.facebook.react.uimanager.JSTouchDispatcher: float[] mTargetCoordinates
com.facebook.react.uimanager.events.Event: int mViewTag
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSource $source
com.facebook.common.streams.TailAppendingInputStream: int mTailOffset
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.producers.ProducerContext mProducerContext
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier mBitmapMemoryCacheParamsSupplier
com.google.android.material.R$styleable: int TextInputLayout_hintTextColor
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.react.ReactInstanceManager$6: com.facebook.react.ReactInstanceManager this$0
com.google.android.material.textfield.IndicatorViewController: int errorTextAppearance
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.horcrux.svg.RadialGradientView: com.facebook.react.bridge.ReadableArray mGradient
com.facebook.imagepipeline.image.EncodedImage: int mWidth
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.transition.Transition: boolean mPaused
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
androidx.appcompat.R$attr: int imageButtonStyle
bolts.Task: boolean cancelled
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: com.facebook.common.time.MonotonicClock mClock
androidx.transition.R$id: int transition_layout_save
androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch
com.facebook.react.modules.network.NetworkingModule$4: com.facebook.react.modules.network.NetworkingModule this$0
androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle
androidx.core.view.DisplayCutoutCompat: java.lang.Object mDisplayCutout
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: boolean mEnsureTranscoderLibraryLoaded
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.horcrux.svg.VirtualView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener: com.facebook.drawee.backends.pipeline.info.ImagePerfState mImagePerfState
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType EXTERNAL
com.facebook.react.views.textinput.ReactTextInputManager$2: com.facebook.react.views.textinput.ReactTextInputManager this$0
com.facebook.imagepipeline.core.ProducerSequenceFactory: boolean mResizeAndRotateEnabledForNetwork
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF pathBounds
com.facebook.imagepipeline.memory.Bucket: int mInUseLength
com.facebook.drawee.drawable.RoundedCornersDrawable: android.graphics.Path mPath
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
okhttp3.internal.platform.Android10Platform: java.util.List socketAdapters
okhttp3.Cache$RealCacheRequest: boolean done
androidx.transition.ViewUtilsApi21: boolean sTryHiddenTransformMatrixToLocal
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition
androidx.core.graphics.Insets: int bottom
androidx.appcompat.widget.ListPopupWindow: android.content.Context mContext
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PT
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger logger
com.horcrux.svg.PatternView: com.horcrux.svg.Brush$BrushUnits mPatternUnits
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
com.horcrux.svg.RenderableViewManager$MarkerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
okio.ByteString: okio.ByteString$Companion Companion
com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded
androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable
com.google.android.material.R$id: int month_title
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations
com.google.android.material.R$layout: int mtrl_calendar_day
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Resources mResources
com.coinapp.MainApplication: com.facebook.react.ReactNativeHost mReactNativeHost
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.imagepipeline.image.EncodedImageOrigin: java.lang.String mOrigin
com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableParent[] mDrawableParents
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int mImageOrigin
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight
com.google.android.material.bottomsheet.BottomSheetBehavior$3: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
com.horcrux.svg.SegmentData: com.horcrux.svg.Point position
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient client
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: android.view.animation.Interpolator mInterpolator
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int mExpandedIndex
com.google.android.material.chip.ChipDrawable: int[] closeIconStateSet
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: short current
androidx.transition.TransitionSet: boolean mPlayTogether
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.views.scroll.ReactScrollView: java.util.List mSnapOffsets
okhttp3.HttpUrl: java.lang.String password
com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener endIconOnLongClickListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mRotate
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode mTileMode
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String mExtrapolateRight
com.google.android.material.transformation.FabTransformationScrimBehavior$1: android.view.View val$child
com.swmansion.rnscreens.ScreenStackHeaderConfig: java.lang.String mTitle
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.material.card.MaterialCardView: int[] DRAGGED_STATE_SET
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResultInCache
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mIsEncodedMemoryCacheProbingEnabled
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
com.facebook.drawee.backends.pipeline.info.ImagePerfState: java.lang.String mControllerId
com.horcrux.svg.SvgView: java.util.Map mDefinedBrushes
androidx.fragment.app.DialogFragment: boolean mShownByMe
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments
okio.-Base64: byte[] BASE64
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.generic.RoundingParams mRoundingParams
com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation
androidx.appcompat.widget.ListPopupWindow: android.view.View mPromptView
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource$FileDso[] mDsos
okio.internal.BufferKt: byte[] HEX_DIGIT_BYTES
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable
com.facebook.react.R$string: int radiogroup_description
okhttp3.internal.ws.RealWebSocket: java.lang.String name
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketWriter $writer$inlined
androidx.appcompat.R$color: int abc_tint_default
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory mCloseableReferenceFactory
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.facebook.drawee.drawable.FadeDrawable: long mStartTimeMs
com.facebook.react.views.image.ReactImageView: float mBorderWidth
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
androidx.core.provider.FontRequestWorker$2: androidx.core.provider.CallbackWithHandler val$callback
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin DISK
androidx.fragment.app.DialogFragment: boolean mCancelable
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDx
com.google.android.material.chip.ChipDrawable: android.content.Context context
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int shadowCompatMode
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
androidx.fragment.R$styleable: int[] ColorStateListItem
androidx.lifecycle.LiveData: java.lang.Object mData
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren
androidx.appcompat.widget.ActionMenuPresenter: boolean mExpandedActionViewsExclusive
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent WillDisappear
com.facebook.react.modules.statusbar.StatusBarModule$3: boolean val$hidden
okhttp3.Response: okhttp3.Response cacheResponse
com.facebook.react.views.textinput.ReactTextInputShadowNode: com.facebook.react.views.textinput.ReactTextInputLocalData mLocalData
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.ReactShadowNode val$rootCSSNode
com.google.android.material.R$styleable: int SnackbarLayout_maxActionInlineWidth
com.facebook.common.executors.ScheduledFutureImpl: java.util.concurrent.FutureTask mListenableFuture
com.facebook.react.views.text.ReactTextView: android.text.Spannable mSpanned
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.drawee.view.DraweeView: boolean mInitialised
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class serverProviderClass
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
androidx.recyclerview.widget.GapWorker: long mPostTimeNs
androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener onDayClickListener
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.decoder.ImageDecoder mCustomImageDecoder
com.facebook.react.modules.network.NetworkingModule$1: int val$requestId
com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.ShapePath shapePath
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
okhttp3.Cache$Entry: java.lang.String requestMethod
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: int end
okhttp3.OkHttpClient: int writeTimeoutMillis
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
com.horcrux.svg.LinearGradientView: float[] sRawMatrix
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.facebook.react.R$string: int state_busy_description
com.facebook.react.DebugCorePackage$1: java.util.Map val$reactModuleInfoMap
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0
com.facebook.drawee.drawable.RoundedColorDrawable: float[] mRadii
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
androidx.appcompat.R$styleable: int[] AlertDialog
com.facebook.react.views.text.ReactFontManager: java.lang.String[] EXTENSIONS
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: int mDefaultValue
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType IN
com.facebook.common.memory.PooledByteArrayBufferedInputStream: int mBufferOffset
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: com.facebook.imagepipeline.producers.Consumer val$consumer
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
com.facebook.react.R$string: int scrollbar_description
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.imagepipeline.producers.ProducerContext val$producerContext
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
com.google.android.material.internal.CheckableImageButton: int[] DRAWABLE_STATE_CHECKED
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuBuilder mMenu
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: boolean mConsumed
okhttp3.OkHttpClient$Builder: int connectTimeout
okhttp3.Protocol: okhttp3.Protocol HTTP_2
com.facebook.datasource.AbstractDataSource: com.facebook.datasource.AbstractDataSource$DataSourceInstrumenter sDataSourceInstrumenter
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType ABSOLUTE
com.facebook.imageformat.DefaultImageFormats: com.facebook.imageformat.ImageFormat PNG
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
com.facebook.imagepipeline.memory.PoolConfig: int mBitmapPoolMaxBitmapSize
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.reflect.Field sScrollerField
com.horcrux.svg.SvgView: float mScale
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide right
com.google.android.material.datepicker.CalendarStyle: com.google.android.material.datepicker.CalendarItemStyle selectedDay
okhttp3.Cookie: long expiresAt
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.util.Set mCurrentItems
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_OLD_CONTROLLER
com.horcrux.svg.RenderableView: java.util.ArrayList mPropList
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy extendStrategy
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.ResizeAndRotateProducer this$0
okhttp3.internal.cache.DiskLruCache$Entry: int lockingSourceCount
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSink $sink
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] $VALUES
com.facebook.common.executors.ScheduledFutureImpl: android.os.Handler mHandler
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mLayoutUpdateListener
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mStarted
com.horcrux.svg.FontData: com.horcrux.svg.TextProperties$FontWeight fontWeight
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.google.android.material.internal.StateListAnimator: android.animation.Animator$AnimatorListener animationListener
androidx.fragment.R$styleable: int[] GradientColor
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: com.facebook.common.webp.WebpBitmapFactory mWebpBitmapFactory
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
androidx.appcompat.widget.LinearLayoutCompat: int mDividerWidth
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: com.facebook.react.devsupport.DoubleTapReloadRecognizer this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$Callback mCallback
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: android.view.MenuItem mHoveredMenuItem
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
com.google.android.material.appbar.AppBarLayout: boolean liftable
com.horcrux.svg.SvgView: boolean mInvertible
com.horcrux.svg.FontData: double letterSpacing
com.facebook.react.uimanager.events.Event: int sUniqueID
com.facebook.imagepipeline.memory.BitmapCounter: int mMaxCount
com.google.android.material.R$styleable: int AppBarLayout_statusBarForeground
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole BUTTON
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int cmd
com.swmansion.rnscreens.Screen$onLayout$1: com.facebook.react.bridge.ReactContext $reactContext
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
androidx.appcompat.view.menu.BaseMenuWrapper: java.util.Map mMenuItems
androidx.fragment.R$styleable: int[] GradientColorItem
androidx.cardview.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$exitTransition
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors
com.facebook.react.views.image.ReactImageView: int mOverlayColor
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.facebook.imagepipeline.core.ProducerFactory: android.content.res.Resources mResources
androidx.fragment.app.FragmentState: java.lang.String mTag
com.facebook.react.uimanager.NativeViewHierarchyManager$1: java.util.Set val$pendingDeletionTags
com.google.android.material.bottomsheet.BottomSheetDialog$3: com.google.android.material.bottomsheet.BottomSheetDialog this$0
androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions
com.google.android.material.bottomappbar.BottomAppBar: boolean fabAttached
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks
com.facebook.react.modules.toast.ToastModule$3: int val$yOffset
okhttp3.internal.connection.ExchangeFinder: okhttp3.EventListener eventListener
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
androidx.core.R$styleable: int FontFamilyFont_font
androidx.fragment.app.FragmentActivity: boolean mResumed
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.facebook.react.views.scroll.ReactScrollView$1: boolean mRunning
com.google.android.material.R$dimen: int design_snackbar_padding_vertical_2lines
com.google.android.material.internal.NavigationMenuItemView: android.content.res.ColorStateList iconTintList
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
com.google.android.material.internal.ThemeEnforcement: int[] ANDROID_THEME_OVERLAY_ATTRS
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: int start
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType LINEAR_GRADIENT
androidx.recyclerview.widget.FastScroller: float mHorizontalDragX
com.facebook.drawee.drawable.RoundedCornersDrawable: int mOverlayColor
com.facebook.react.perflogger.NativeModulePerfLogger: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.systrace.FrescoSystrace: com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder NO_OP_ARGS_BUILDER
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
com.facebook.imagepipeline.producers.InternalRequestListener: com.facebook.imagepipeline.listener.RequestListener2 mRequestListener2
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_TEMPFILE_PARENT_NOT_FOUND
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout
com.horcrux.svg.Brush: com.horcrux.svg.Brush$BrushType mType
com.facebook.react.animated.NativeAnimatedNodesManager: int mAnimatedGraphBFSColor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
okhttp3.internal.http2.Http2Stream: long writeBytesTotal
com.facebook.react.modules.toast.ToastModule$2: int val$gravity
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter tintFilter
com.google.android.material.internal.ForegroundLinearLayout: boolean foregroundBoundsChanged
androidx.transition.Transition: java.util.ArrayList mTargetChildExcludes
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.appcompat.view.SupportMenuInflater this$0
com.google.android.material.R$string: int mtrl_picker_navigate_to_year_description
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder mAdapterMenu
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: com.facebook.imagepipeline.cache.BoundedLinkedHashSet mEncodedMemoryCacheHistory
com.google.android.material.shape.ShapeAppearancePathProvider: android.graphics.PointF pointF
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.ReactShadowNode mNode
com.facebook.react.TurboReactPackage$ModuleHolderProvider: com.facebook.react.TurboReactPackage this$0
com.facebook.react.views.textinput.ReactEditText: boolean mIsSettingTextFromState
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
com.google.android.material.R$dimen: int design_fab_size_normal
com.facebook.imagepipeline.core.ProducerFactory: boolean mDecodeCancellationEnabled
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.android.material.chip.ChipDrawable: boolean checkable
com.facebook.drawee.drawable.MatrixDrawable: int mUnderlyingHeight
kotlin.collections.AbstractList$SubList: int _size
androidx.appcompat.widget.DropDownListView: int mMotionPosition
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
com.facebook.drawee.controller.AbstractDraweeController: java.util.concurrent.Executor mUiThreadImmediateExecutor
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence mPrompt
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
com.facebook.react.views.scroll.ReactHorizontalScrollView: int NO_SCROLL_POSITION
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: com.facebook.react.modules.network.ForwardingCookieHandler this$0
androidx.transition.Transition: java.util.ArrayList mTargetTypeExcludes
com.google.android.material.checkbox.MaterialCheckBox: int DEF_STYLE_RES
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
androidx.recyclerview.widget.LayoutState: int mItemDirection
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall this$0
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.Matrix mBoundsTransform
com.facebook.react.views.scroll.ReactScrollView: float mDecelerationRate
androidx.fragment.app.DialogFragment: boolean mShowsDialog
androidx.appcompat.app.ToolbarActionBar: boolean mToolbarMenuPrepared
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
com.facebook.react.views.image.ImageLoadEvent: int mLoaded
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okhttp3.internal.cache.CacheRequest $cacheRequest
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
androidx.appcompat.view.menu.MenuItemImpl: int mId
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light
com.facebook.drawee.drawable.OrientedDrawable: android.graphics.Matrix mRotationMatrix
androidx.cardview.widget.CardView: int mUserSetMinHeight
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
com.facebook.drawee.drawable.RoundedColorDrawable: float mPadding
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemNumericShortcut
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mTotalDuration
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mGapStrategy
okhttp3.CacheControl$Builder: boolean noStore
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine$Companion Companion
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDx
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
androidx.appcompat.widget.LinearLayoutCompat: int mOrientation
androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated
okhttp3.internal.platform.BouncyCastlePlatform: boolean isSupported
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher
com.facebook.imagepipeline.core.PriorityThreadFactory: boolean mAddThreadNumber
com.google.android.material.R$id: int mtrl_calendar_day_selector_frame
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float mRotation
com.facebook.drawee.drawable.OrientedDrawable: int mRotationAngle
androidx.core.provider.RequestExecutor$ReplyRunnable$1: java.lang.Object val$result
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
com.google.android.material.R$styleable: int[] MaterialAlertDialogTheme
okhttp3.internal.connection.RealCall: okhttp3.EventListener eventListener
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean mNativeCodeDisabled
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.UseView: java.lang.String mHref
androidx.transition.PathProperty: android.util.Property mProperty
androidx.recyclerview.widget.RecyclerView: int VERTICAL
com.google.android.material.R$styleable: int[] AppBarLayoutStates
androidx.appcompat.app.AlertController$2: android.view.View val$top
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mActualBounds
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.facebook.drawee.backends.pipeline.info.ImagePerfData: com.facebook.imagepipeline.image.ImageInfo mImageInfo
com.facebook.imagepipeline.memory.FlexByteArrayPool$1: com.facebook.imagepipeline.memory.FlexByteArrayPool this$0
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind PARENT
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
com.facebook.react.modules.permissions.PermissionsModule$2: java.util.ArrayList val$permissionsToCheck
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean mRefreshing
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel DISK_CACHE
com.google.android.material.chip.ChipDrawable: boolean hasChipIconTint
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener
androidx.collection.MapCollections$MapIterator: int mEnd
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mChildren
com.facebook.react.views.view.ReactViewGroup: java.lang.String mOverflow
com.facebook.react.jstasks.HeadlessJsTaskContext$1: int val$taskId
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: java.lang.reflect.Method sGetFileDescriptorMethod
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline alphabetic
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
androidx.appcompat.widget.ActionBarContextView: android.view.View mClose
com.google.android.material.datepicker.Month: java.lang.String longName
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
com.google.android.material.internal.CollapsingTextHelper: boolean drawTitle
com.swmansion.rnscreens.ScreenStack: androidx.fragment.app.FragmentManager$OnBackStackChangedListener mBackStackListener
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.android.material.R$attr: int colorControlActivated
com.zoontek.rnbootsplash.RNBootSplashTask: boolean mFade
androidx.cardview.widget.RoundRectDrawableWithShadow: int mInsetShadow
com.google.android.material.R$styleable: int ChipGroup_checkedChip
com.facebook.drawee.drawable.DrawableProperties: int mFilterBitmap
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList chipSurfaceColor
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: java.util.Map mPropSetters
com.facebook.react.common.JavascriptException: java.lang.String extraDataAsJson
com.facebook.drawee.drawable.RoundedCornersDrawable: float mBorderWidth
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener mOnSelectListener
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterOverflowTextColor
com.facebook.react.ReactInstanceManager: java.lang.Object mReactContextLock
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode mTickMarkTintMode
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CREATE_TEMPFILE
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.callercontext.CallerContextVerifier mCallerContextVerifier
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.Map mOnMultipleViewsFoundListener
androidx.fragment.app.Fragment: int mFragmentId
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mFinalAnimatedPositionScrollX
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: java.lang.Object val$callerContext
bolts.AndroidExecutors: java.util.concurrent.Executor uiThread
com.google.android.material.R$style: int Widget_MaterialComponents_CompoundButton_CheckBox
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TABLIST
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: boolean mResizingEnabled
com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_expandedOffset
com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.Paint mPaint
okhttp3.CertificatePinner: okhttp3.CertificatePinner$Companion Companion
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory mImageTranscoderFactory
com.facebook.drawee.components.RetryManager: int mTapToRetryAttempts
androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mHeight
com.google.android.material.internal.CollapsingTextHelper: android.graphics.Rect expandedBounds
androidx.recyclerview.widget.DefaultItemAnimator$2: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
androidx.appcompat.view.menu.ExpandedMenuView: int mAnimations
com.facebook.react.views.scroll.ScrollEvent: double mYVelocity
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.google.android.material.R$styleable: int MaterialButton_iconTintMode
okhttp3.OkHttpClient$Builder: long minWebSocketMessageToCompress
com.facebook.imagepipeline.cache.MemoryCacheParams: long paramsCheckIntervalMs
androidx.appcompat.R$styleable: int SearchView_submitBackground
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify SPACE_AROUND
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
androidx.appcompat.R$styleable: int SearchView_closeIcon
com.facebook.imagepipeline.producers.JobScheduler: int mStatus
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.facebook.imagepipeline.systrace.FrescoSystrace: void beginSection(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: AppCompatSpinner$DialogPopup(androidx.appcompat.widget.AppCompatSpinner)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getEncodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
com.facebook.react.uimanager.DisplayMetricsHolder: void setScreenDisplayMetrics(android.util.DisplayMetrics)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float)
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: MultiImageTranscoderFactory(int,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory,java.lang.Integer,boolean)
com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.ListAdapter getAdapter()
androidx.appcompat.widget.ActionMenuPresenter: ActionMenuPresenter(android.content.Context)
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: java.lang.Object invoke()
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.PathParser: boolean is_absolute(char)
okhttp3.CookieJar$Companion$NoCookies: CookieJar$Companion$NoCookies()
com.facebook.common.file.FileUtils: void mkdirs(java.io.File)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onHardCapReached()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.yoga.YogaNodeJNIBase: void setFlexGrow(float)
com.google.android.material.datepicker.MaterialCalendarGridView: int horizontalMidPoint(android.view.View)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.horcrux.svg.PathParser: void quadraticBezierCurveTo(float,float,float,float)
com.google.android.material.card.MaterialCardView: boolean isDragged()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: ForwardingRequestListener2(java.util.Set)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean getResizingAllowedOverride()
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.view.menu.MenuBuilder: void clear()
com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.ReactInstanceManager$5$1: void run()
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: boolean cleanUp()
okio.ByteString: int compareTo(okio.ByteString)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,java.lang.String)
com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeNodeContributionToParent()
com.facebook.react.animated.PropsAnimatedNode: java.lang.String prettyPrint()
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipRule(android.view.View,int)
com.facebook.drawee.drawable.FadeDrawable: void resetInternal()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.recyclerview.widget.DefaultItemAnimator$8: void onAnimationEnd(android.animation.Animator)
androidx.transition.Transition$2: void onAnimationStart(android.animation.Animator)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onAlloc(int)
androidx.collection.ArraySet: int hashCode()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int,boolean)
okhttp3.internal.platform.android.AndroidLogHandler: void publish(java.util.logging.LogRecord)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
com.facebook.imagepipeline.producers.PostprocessorProducer: java.util.concurrent.Executor access$800(com.facebook.imagepipeline.producers.PostprocessorProducer)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: com.facebook.imagepipeline.memory.PoolParams get()
com.facebook.react.ReactInstanceManagerBuilder: ReactInstanceManagerBuilder()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: AppCompatDelegateImpl$ActionMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutBase(com.facebook.react.uimanager.ReactShadowNode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
com.facebook.react.uimanager.ViewAtIndex$1: int compare(java.lang.Object,java.lang.Object)
com.horcrux.svg.MaskView: void setMaskTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: LocalAssetFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.AssetManager)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.Postprocessor getPostprocessor()
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
androidx.fragment.app.FragmentAnim$3: FragmentAnim$3(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
com.facebook.react.views.view.ReactViewBackgroundDrawable: ReactViewBackgroundDrawable(android.content.Context)
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOffset()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool: com.facebook.imagepipeline.memory.Bucket newBucket(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request getRequest$okhttp()
androidx.recyclerview.widget.ChildHelper$Bucket: void reset()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: FileSystem$Companion$SystemFileSystem()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
com.facebook.react.animated.PropsAnimatedNode: void restoreDefaultValues()
com.facebook.react.modules.core.JavaTimerManager: void createAndMaybeCallTimer(int,int,double,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: AnimatedStateListDrawableCompat$AnimatableTransition(android.graphics.drawable.Animatable)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion()
androidx.recyclerview.widget.ChildHelper: void detachViewFromParent(int)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence)
bolts.BoltsExecutors$ImmediateExecutor: int incrementDepth()
okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
com.horcrux.svg.ForeignObjectView: void setX(com.facebook.react.bridge.Dynamic)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment getFragment()
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.module.model.ReactModuleInfo: boolean needsEagerInit()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: boolean hasNext()
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.soloader.ExoSoSource: ExoSoSource(android.content.Context,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
androidx.recyclerview.widget.AdapterHelper: void preProcess()
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean,okhttp3.internal.concurrent.TaskRunner)
androidx.appcompat.widget.SearchView$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.material.datepicker.MonthsPagerAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
com.facebook.react.modules.blob.BlobModule$1: BlobModule$1(com.facebook.react.modules.blob.BlobModule)
com.facebook.common.executors.StatefulRunnable: void cancel()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$2400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: AbstractLayoutAnimation()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getNativeParent()
com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
androidx.appcompat.widget.SearchView$1: void run()
okhttp3.internal.connection.Exchange: void trackFailure(java.io.IOException)
androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
okhttp3.internal.http1.HeadersReader: HeadersReader(okio.BufferedSource)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getDelaySequence(com.facebook.imagepipeline.producers.Producer)
com.facebook.drawee.generic.GenericDraweeHierarchy: void reset()
androidx.recyclerview.widget.FastScroller: void setupCallbacks()
com.google.android.material.datepicker.MaterialCalendar$6: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion()
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()
com.google.android.material.transformation.FabTransformationSheetBehavior: com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
bolts.Task: boolean trySetError(java.lang.Exception)
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.CertificatePinner$Pin: java.lang.String getHashAlgorithm()
androidx.collection.LongSparseArray: void remove(long)
com.facebook.cache.common.NoOpCacheEventListener: void onWriteSuccess(com.facebook.cache.common.CacheEvent)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
okhttp3.internal.ws.MessageDeflater: boolean endsWith(okio.Buffer,okio.ByteString)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip$1: Chip$1(com.google.android.material.chip.Chip)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCacheMiss(java.lang.Object)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
com.facebook.react.views.text.TextAttributeProps: void setBackgroundColor(java.lang.Integer)
okhttp3.internal.http.DatesKt: java.lang.String toHttpDateString(java.util.Date)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipRule(android.view.View,int)
com.swmansion.rnscreens.ScreenContainer: void notifyContainerUpdate()
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.horcrux.svg.GroupView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
com.coinapp.MainActivity: MainActivity()
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onFailureImpl(java.lang.Throwable)
com.swmansion.rnscreens.events.ScreenAppearEvent: java.lang.String getEventName()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.imagepipeline.memory.BufferMemoryChunk: boolean isClosed()
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void draw(android.graphics.Canvas)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeOpacity(android.view.View,float)
com.google.android.material.datepicker.MonthAdapter: boolean hasStableIds()
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void notifyListenersOfVisibilityStateUpdate(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
kotlin.collections.EmptySet: int getSize()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.Request getOriginalRequest()
okio.AsyncTimeout: void access$setTimeoutAt$p(okio.AsyncTimeout,long)
com.facebook.react.modules.core.TimingModule$BridgeTimerManager: void emitTimeDriftWarning(java.lang.String)
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
com.facebook.yoga.YogaMeasureOutput: long make(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: Http2Connection$pushHeadersLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean)
com.facebook.imagepipeline.producers.JobScheduler: void doJob()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.internal.CollapsingTextHelper: boolean isClose(float,float)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setFlags(int)
androidx.recyclerview.widget.RecyclerView$6: void markViewHoldersUpdated(int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.ReactActivity: java.lang.String getMainComponentName()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
okio.Okio: okio.BufferedSink buffer(okio.Sink)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger access$100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.common.internal.Suppliers: com.facebook.common.internal.Supplier of(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.lang.Object access$000(com.facebook.drawee.components.DeferredReleaserConcurrentImpl)
okhttp3.OkHttpClient$Builder: boolean getRetryOnConnectionFailure$okhttp()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstVisibleItemPositionInt()
com.facebook.react.views.modal.ReactModalHostManager$1: ReactModalHostManager$1(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.soloader.SoLoader: java.io.File unpackLibraryAndDependencies(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void invalidateScrollRanges()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1: void onAnimationRepeat(android.view.animation.Animation)
androidx.cardview.widget.CardViewApi21Impl: float getMinWidth(androidx.cardview.widget.CardViewDelegate)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsOneShot(java.io.IOException,okhttp3.Request)
okhttp3.internal.connection.Exchange$RequestBodySink: void close()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutY()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactContext getCurrentReactContext()
androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)
com.horcrux.svg.ClipPathView: int hitTest(float[])
com.facebook.common.webp.WebpSupportStatus: boolean isSimpleWebpHeader(byte[],int)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getViewClass()
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNode)
androidx.recyclerview.widget.RecyclerView$Adapter: boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage,java.util.concurrent.Executor)
com.google.android.material.datepicker.MaterialCalendar: void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.react.uimanager.ViewAtIndex: ViewAtIndex(int,int)
com.horcrux.svg.VirtualViewManager: VirtualViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.drawee.generic.RoundingParams: int getBorderColor()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: boolean isRotationAngleAllowed(int)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient()
com.facebook.react.modules.storage.ReactDatabaseSupplier: void clear()
androidx.appcompat.view.menu.SubMenuWrapperICS: void clearHeader()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.transition.TransitionSet: androidx.transition.Transition clone()
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidthPercent(float)
androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
com.facebook.react.modules.permissions.PermissionsModule$1: void invoke(java.lang.Object[])
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
okhttp3.internal.http.HttpMethod: HttpMethod()
com.facebook.drawee.drawable.RoundedDrawable: void clearColorFilter()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setVectorEffect(android.view.View,int)
com.google.android.material.internal.ForegroundLinearLayout: void drawableStateChanged()
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.facebook.jni.DestructorThread$Terminus: void destruct()
androidx.fragment.app.Fragment$1: void run()
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int)
com.facebook.react.ReactActivity: void onWindowFocusChanged(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
com.facebook.cache.disk.DiskStorageCache$CacheStats: long getSize()
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.transition.TransitionListenerAdapter: TransitionListenerAdapter()
com.horcrux.svg.TextProperties$TextDecoration: java.lang.String toString()
com.facebook.soloader.nativeloader.NativeLoader: boolean isInitialized()
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showPendingAlert()
com.facebook.react.modules.storage.ReactDatabaseSupplier: boolean ensureDatabase()
com.google.android.material.transformation.FabTransformationBehavior$4: FabTransformationBehavior$4(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
com.facebook.react.views.text.TextAttributes: void setFontSize(float)
okhttp3.internal.http2.Http2Reader$Companion: java.util.logging.Logger getLogger()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean isAutoSizeEnabled()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()
com.facebook.common.executors.HandlerExecutorServiceImpl: boolean isTerminated()
com.google.android.material.chip.ChipDrawable: float getChipMinHeight()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean close()
okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.horcrux.svg.LineView: void setY1(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
androidx.appcompat.widget.DropDownListView: DropDownListView(android.content.Context,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
androidx.appcompat.widget.ScrollingTabContainerView$1: void run()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
okhttp3.internal.Util: long headersContentLength(okhttp3.Response)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
androidx.recyclerview.widget.SimpleItemAnimator: SimpleItemAnimator()
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
com.horcrux.svg.PathView: void setD(java.lang.String)
kotlin.internal.PlatformImplementationsKt: int getJavaVersion()
com.facebook.imagepipeline.producers.BitmapProbeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.TurboReactPackage$1$1: boolean hasNext()
okio.RealBufferedSource: byte[] readByteArray()
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void requestDisallowInterceptTouchEvent(boolean)
com.google.android.material.shape.MaterialShapeDrawable: float getTranslationZ()
com.facebook.drawee.drawable.RoundedColorDrawable: int getOpacity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAttachedToWindow()
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.ReactFragment: void onResume()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void clear()
com.google.android.material.chip.ChipGroup: void access$700(com.google.android.material.chip.ChipGroup,int)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange toMax(int)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundResource(int)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void closeSafely(com.facebook.datasource.DataSource)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3: void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.facebook.common.logging.FLog: java.lang.String formatString(java.lang.String,java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar$7: BottomAppBar$7(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.google.android.material.shape.MaterialShapeDrawable: boolean isStateful()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void clear(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: ResourceManagerInternal$AvdcInflateDelegate()
com.th3rdwave.safeareacontext.SafeAreaUtils: com.th3rdwave.safeareacontext.EdgeInsets getSafeAreaInsets(android.view.View)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
androidx.appcompat.app.AlertController: void setView(int)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getUseBitmapPrepareToDraw()
com.facebook.soloader.SoSource: void prepare(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int describeContents()
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: SearchView$AutoCompleteTextViewReflector()
com.facebook.react.modules.core.ReactChoreographer: boolean access$402(com.facebook.react.modules.core.ReactChoreographer,boolean)
androidx.cardview.widget.RoundRectDrawableWithShadow: float calculateVerticalPadding(float,float,boolean)
okhttp3.Handshake: java.lang.String getName(java.security.cert.Certificate)
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
androidx.fragment.app.Fragment: void callStartTransitionListener()
androidx.appcompat.widget.SearchView: void updateSubmitArea()
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: ResourcesCompat$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.appcompat.widget.SearchView: void onSearchClicked()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setUltimateProducerName(java.lang.String)
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.facebook.react.modules.toast.ToastModule$1: ToastModule$1(com.facebook.react.modules.toast.ToastModule,java.lang.String,int)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed$okhttp()
com.facebook.react.views.scroll.ReactHorizontalScrollView: ReactHorizontalScrollView(android.content.Context,com.facebook.react.views.scroll.FpsListener)
com.facebook.imagepipeline.image.CloseableStaticBitmap: com.facebook.common.references.CloseableReference detachBitmapReference()
com.google.android.material.bottomappbar.BottomAppBar: void createMenuViewTranslationAnimation(int,boolean,java.util.List)
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
com.google.android.material.chip.ChipDrawable: boolean onLevelChange(int)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.imagepipeline.cache.CountingLruMap: CountingLruMap(com.facebook.imagepipeline.cache.ValueDescriptor)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatTextHelper: void runOnUiThread(java.lang.Runnable)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setInitialLifecycleState(com.facebook.react.common.LifecycleState)
com.google.android.material.chip.ChipDrawable: float calculateTextCenterFromBaseline()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetTouchBehaviorTracking()
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.ListView getListView()
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdated()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.common.references.CloseableReference getCachedImage()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
okio.ForwardingTimeout: okio.Timeout delegate()
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
com.facebook.react.TurboReactPackage$1$1: TurboReactPackage$1$1(com.facebook.react.TurboReactPackage$1)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.facebook.datasource.SimpleDataSource: com.facebook.datasource.SimpleDataSource create()
androidx.cardview.widget.CardViewApi21Impl: void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
com.facebook.react.ReactInstanceManager: void moveToResumedLifecycleState(boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setVectorEffect(android.view.View,int)
okhttp3.Headers$Companion: void checkName(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)
com.facebook.soloader.SoLoader: java.lang.reflect.Method getNativeLoadRuntimeMethod()
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
com.facebook.react.views.text.TextAttributeProps: void setNumberOfLines(int)
com.facebook.drawee.drawable.RoundedBitmapDrawable: boolean shouldRound()
com.google.android.material.animation.MotionTiming: android.animation.TimeInterpolator getInterpolator()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.core.view.ViewPropertyAnimatorCompat$2: ViewPropertyAnimatorCompat$2(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)
androidx.fragment.app.FragmentManager$4: void run()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedEnd()
okhttp3.internal.connection.Exchange: java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException)
androidx.transition.ChangeBounds$5: java.lang.Object get(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
okio.SegmentedByteString: java.lang.String hex()
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void notifyStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.drawee.controller.AbstractDraweeController: void submitRequest()
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
okhttp3.Headers$Builder: Headers$Builder()
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String toString()
com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int,int)
androidx.appcompat.widget.AlertDialogLayout: int resolveMinimumHeight(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$1500(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: void close()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int,int,boolean)
com.facebook.react.ReactRootView: void onStage(int)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationRepeat(android.view.animation.Animation)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
com.google.android.material.chip.Chip: boolean shouldEnsureMinTouchTargetSize()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: boolean canReadAsFile(java.lang.String)
com.facebook.cache.disk.DynamicDefaultDiskStorage: boolean touch(java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.common.internal.Closeables: void closeQuietly(java.io.InputStream)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double getDouble(short)
com.google.android.material.resources.TextAppearanceConfig: boolean shouldLoadFontSynchronously()
androidx.recyclerview.widget.LinearLayoutManager: boolean shouldMeasureTwice()
androidx.fragment.app.FragmentManager: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.recyclerview.widget.SnapHelper: void destroyCallbacks()
com.google.android.material.bottomappbar.BottomAppBar: void dispatchAnimationStart()
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: ExtendedFloatingActionButton$5(java.lang.Class,java.lang.String)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean contains(java.lang.Object)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MonthsPagerAdapter: void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map)
androidx.fragment.app.Fragment: java.lang.String getString(int)
okhttp3.internal.http2.Http2Connection: boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
okio.ByteString: okio.ByteString of(byte[])
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.ReactRootView: void onChildStartedNativeGesture(android.view.MotionEvent)
androidx.fragment.app.Fragment: void setNextAnim(int)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: Http1ExchangeCodec$ChunkedSink(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.transition.ChangeBounds$8: void onAnimationEnd(android.animation.Animator)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.horcrux.svg.ImageView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.views.image.ReactImageView$TilePostprocessor: ReactImageView$TilePostprocessor(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1)
com.google.android.material.datepicker.MaterialCalendar$10: MaterialCalendar$10(com.google.android.material.datepicker.MaterialCalendar,int)
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.facebook.common.logging.FLog: java.lang.String getTag(java.lang.Class)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream()
com.google.android.material.internal.StateListAnimator: void setState(int[])
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.cache.LruCountingMemoryCache$1: int getSizeInBytes(java.lang.Object)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onIsIntermediateResultExpectedChanged()
androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
com.facebook.cache.disk.DynamicDefaultDiskStorage: long remove(java.lang.String)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.Future submit(java.lang.Runnable)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.horcrux.svg.PatternView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlay(int,float)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
com.facebook.react.ReactDelegate: void onActivityResult(int,int,android.content.Intent,boolean)
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
com.facebook.react.touch.JSResponderHandler: void maybeUnblockNativeResponder()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.CertificatePinner$check$1: java.lang.Object invoke()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.callercontext.CallerContextVerifier getCallerContextVerifier()
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: DatePickerDialogModule$DatePickerDialogListener(com.facebook.react.modules.datepicker.DatePickerDialogModule,com.facebook.react.bridge.Promise)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: ListMenuPresenter$MenuAdapter(androidx.appcompat.view.menu.ListMenuPresenter)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
okio.Okio__OkioKt: okio.Sink blackhole()
com.google.android.material.datepicker.YearGridAdapter$1: YearGridAdapter$1(com.google.android.material.datepicker.YearGridAdapter,int)
okhttp3.ResponseBody: java.nio.charset.Charset charset()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
com.th3rdwave.safeareacontext.EdgeInsets: boolean equalsToEdgeInsets(com.th3rdwave.safeareacontext.EdgeInsets)
com.horcrux.svg.ForeignObjectView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
okio.Okio: okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
com.google.android.material.chip.ChipDrawable: void setChipIconSizeResource(int)
com.swmansion.rnscreens.events.ScreenDisappearEvent: short getCoalescingKey()
com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.horcrux.svg.PatternView: void setAlign(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$9: NativeAnimatedModule$9(com.facebook.react.animated.NativeAnimatedModule,int,double)
androidx.fragment.app.FragmentContainerView: void removeViewAt(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: boolean shouldRotate(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: ReactEditText$TextWatcherDelegator(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.internal.TextDrawableHelper: com.google.android.material.resources.TextAppearance getTextAppearance()
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
androidx.collection.SparseArrayCompat: int keyAt(int)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)
com.facebook.react.views.text.CustomLineHeightSpan: CustomLineHeightSpan(float)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.storage.ReactDatabaseSupplier: ReactDatabaseSupplier(android.content.Context)
com.facebook.react.views.scroll.ReactScrollView$4: ReactScrollView$4(com.facebook.react.views.scroll.ReactScrollView,int,int)
com.google.android.material.transformation.FabTransformationBehavior: void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void maybeFinish(boolean)
androidx.recyclerview.widget.GridLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
androidx.drawerlayout.widget.DrawerLayout: boolean hasVisibleDrawer()
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)
androidx.appcompat.app.AppCompatDelegateImpl$4: void onFitSystemWindows(android.graphics.Rect)
androidx.recyclerview.widget.DefaultItemAnimator$5: DefaultItemAnimator$5(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.String formatDuration(long)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
com.horcrux.svg.CircleView: CircleView(com.facebook.react.bridge.ReactContext)
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry)
com.zoontek.rnbootsplash.RNBootSplashModule: void access$500(com.zoontek.rnbootsplash.RNBootSplashModule)
com.facebook.imagepipeline.core.CloseableReferenceFactory$1: void reportLeak(com.facebook.common.references.SharedReference,java.lang.Throwable)
androidx.recyclerview.widget.GridLayoutManager: void calculateItemBorders(int)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion()
androidx.core.math.MathUtils: int clamp(int,int,int)
com.facebook.react.animated.DecayAnimation: DecayAnimation(com.facebook.react.bridge.ReadableMap)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
kotlin.collections.EmptyIterator: java.lang.Void previous()
androidx.transition.Visibility$DisappearListener: void onAnimationPause(android.animation.Animator)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger access$getLogger$cp()
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
com.facebook.react.uimanager.MatrixMathHelper: void multiplyInto(double[],double[],double[])
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.facebook.react.animated.NativeAnimatedModule$7: NativeAnimatedModule$7(com.facebook.react.animated.NativeAnimatedModule,int)
androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)
com.facebook.imagepipeline.core.NativeCodeSetup: void setUseNativeCode(boolean)
com.th3rdwave.safeareacontext.SafeAreaProviderManager$1: SafeAreaProviderManager$1(com.th3rdwave.safeareacontext.SafeAreaProviderManager,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String getItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.google.android.material.textfield.CustomEndIconDelegate: CustomEndIconDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
com.facebook.common.util.StreamUtil: long skip(java.io.InputStream,long)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: int access$400(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomsheet.BottomSheetBehavior: void dispatchOnSlide(int)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
com.google.android.material.animation.ChildrenAlphaProperty: ChildrenAlphaProperty(java.lang.String)
okhttp3.Authenticator$Companion$AuthenticatorNone: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.bridge.ReactContext getReactContext(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void insertCheckBox()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.drawee.drawable.AutoRotateDrawable: int getIncrement()
com.horcrux.svg.GroupView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.GlyphContext: void incrementIndices(java.util.ArrayList,int)
androidx.appcompat.app.AlertController$4: void onScrollStateChanged(android.widget.AbsListView,int)
com.facebook.soloader.UnpackingSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
okhttp3.internal.http2.Http2Stream$FramingSource: void setTrailers(okhttp3.Headers)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: void onFontRetrieved(android.graphics.Typeface)
com.facebook.cache.disk.DynamicDefaultDiskStorage: boolean contains(java.lang.String,java.lang.Object)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void updateVisibility(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: boolean isRecentFile(java.io.File)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.internal.platform.Jdk9Platform$Companion: boolean isAvailable()
com.facebook.drawee.controller.AbstractDraweeController: void removeControllerListener2(com.facebook.fresco.ui.common.ControllerListener2)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.facebook.react.modules.permissions.PermissionsModule$2: void invoke(java.lang.Object[])
com.facebook.imagepipeline.memory.AshmemMemoryChunk: int write(int,byte[],int,int)
com.facebook.react.uimanager.UIViewOperationQueue: long access$1902(com.facebook.react.uimanager.UIViewOperationQueue,long)
com.th3rdwave.safeareacontext.SerializationUtils: java.util.Map edgeInsetsToJavaMap(com.th3rdwave.safeareacontext.EdgeInsets)
com.facebook.common.util.ExceptionWithNoStacktrace: java.lang.Throwable fillInStackTrace()
com.facebook.react.views.text.ReactTagSpan: ReactTagSpan(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisPercent(float)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int,int)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getMemoryChunkPoolParams()
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ReactShadowNode getNode(int)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
com.facebook.react.uimanager.events.Event: void dispose()
com.google.android.material.chip.ChipDrawable: void setText(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenFragment: void dispatchOnWillDisappear()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.horcrux.svg.RNSVGMarkerPosition: void ComputeQuadTangents(com.horcrux.svg.SegmentData,com.horcrux.svg.Point,com.horcrux.svg.Point,com.horcrux.svg.Point)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener: void onImageLoaded(java.lang.String,int,boolean,java.lang.String)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void maybeSetFailure()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: java.lang.Object onBeforeSubmitWork(java.lang.String)
com.google.android.material.datepicker.MaterialCalendar: void toggleVisibleSelector()
okio.RealBufferedSource: int readInt()
com.google.android.material.chip.Chip: int[] onCreateDrawableState(int)
androidx.recyclerview.widget.DefaultItemAnimator$7: void onAnimationEnd(android.animation.Animator)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeWidth(android.view.View,java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.google.android.material.button.MaterialButtonHelper: int getStrokeWidth()
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
com.facebook.imagepipeline.memory.NativeMemoryChunk: long getUniqueId()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isEnsureTranscoderLibraryLoaded()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)
okio.Buffer$UnsafeCursor: int next()
androidx.cardview.widget.RoundRectDrawableWithShadow: void buildShadowCorners()
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getPressedStateOverlay()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: boolean isShowing()
com.facebook.drawee.drawable.RoundedColorDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
androidx.core.app.ActivityCompat$2: ActivityCompat$2(android.app.Activity)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
com.facebook.imagepipeline.memory.BitmapPoolBackend: boolean isReusable(android.graphics.Bitmap)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean endBatchEdit()
androidx.transition.ViewUtils$2: ViewUtils$2(java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
com.google.android.material.chip.ChipDrawable: void setIconEndPadding(float)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentManager: void dispatchActivityCreated()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
androidx.appcompat.widget.AppCompatTextView: void consumeTextFutureAndSetBlocking()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int)
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
okhttp3.internal.Util: int and(byte,int)
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
androidx.core.widget.NestedScrollView: void doScrollY(int)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
androidx.appcompat.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.android.material.animation.ImageMatrixProperty: android.graphics.Matrix get(android.widget.ImageView)
com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean isBorderColorDefined(int)
com.facebook.imagepipeline.cache.MemoryCacheParams: MemoryCacheParams(int,int,int,int,int,long)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
com.facebook.react.views.image.ReactImageView$1: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.textfield.ClearTextEndIconDelegate$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.uimanager.MatrixMathHelper: double[] transpose(double[])
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: boolean isProgressiveRenderingEnabled()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void updateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage,com.facebook.drawee.debug.DebugControllerOverlayDrawable)
com.facebook.cache.disk.DefaultDiskStorage: long remove(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.modules.network.NetworkingModule$4: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.imagepipeline.memory.BasePool$Counter: BasePool$Counter()
com.swmansion.rnscreens.events.ScreenDismissedEvent$Companion: ScreenDismissedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
okhttp3.internal.connection.Exchange: boolean isCoalescedConnection$okhttp()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.nativecode.NativeFiltersLoader: void load()
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getParent()
androidx.recyclerview.widget.RecyclerView: void resetScroll()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.recyclerview.widget.LinearSnapHelper: int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper)
com.horcrux.svg.FontData: FontData(com.facebook.react.bridge.ReadableMap,com.horcrux.svg.FontData,double)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.material.resources.TextAppearanceFontCallback: TextAppearanceFontCallback()
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.facebook.soloader.SysUtil: int getAppVersionCode(android.content.Context)
com.facebook.react.uimanager.ShadowNodeRegistry: void removeRootNode(int)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.app.ToolbarActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.Fragment: boolean isAdded()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.cardview.widget.CardViewBaseImpl: void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
okhttp3.ResponseBody$Companion: ResponseBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: NetworkFetchProducer$1(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.drawee.drawable.AutoRotateDrawable: AutoRotateDrawable(android.graphics.drawable.Drawable,int)
com.th3rdwave.safeareacontext.Rect: boolean equalsToRect(com.th3rdwave.safeareacontext.Rect)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootTag(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean hasSubMenu()
com.swmansion.rnscreens.ScreenStackHeaderConfig: ScreenStackHeaderConfig(android.content.Context)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(android.view.WindowInsets)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.horcrux.svg.GlyphContext: double nextDeltaX()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: long runOnce()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalContentUriFetchProducer newLocalContentUriFetchProducer()
com.facebook.react.modules.blob.BlobModule$1: void onMessage(okio.ByteString,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.Object)
com.google.android.material.textfield.ClearTextEndIconDelegate: ClearTextEndIconDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEvent(android.view.View,int)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ScrollEventType: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismiss()
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.facebook.react.views.modal.ReactModalHostView: void dismiss()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.Spacing: boolean set(int,float)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: int removeAll(com.facebook.common.internal.Predicate)
androidx.transition.ChangeBounds$1: void set(java.lang.Object,java.lang.Object)
com.facebook.common.util.UriUtil: boolean isQualifiedResourceUri(android.net.Uri)
com.facebook.drawee.components.RetryManager: void setTapToRetryEnabled(boolean)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: int getRotationAngle(android.media.ExifInterface)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.swmansion.rnscreens.ScreenFragment: void updateWindowTraits()
com.facebook.datasource.BaseDataSubscriber: BaseDataSubscriber()
com.google.android.material.radiobutton.MaterialRadioButton: MaterialRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: void execute()
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginColor: int getImageOriginColor(int)
com.facebook.react.common.futures.SimpleSettableFuture: boolean cancel(boolean)
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onLowMemory()
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.common.internal.Supplier access$900(com.facebook.imagepipeline.producers.DecodeProducer)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
kotlin.collections.AbstractCollection: boolean removeAll(java.util.Collection)
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeNotifyExclusiveEntryInsertion(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.react.util.JSStackTrace: java.lang.String parseFileId(com.facebook.react.bridge.ReadableMap)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.android.material.shape.RelativeCornerSize: boolean equals(java.lang.Object)
androidx.transition.Visibility$DisappearListener: void suppressLayout(boolean)
com.facebook.imagepipeline.cache.StagingArea: void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: void getValueForDensity(int,int,android.util.TypedValue,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: java.lang.Object getResult()
okio.ByteString$Companion: okio.ByteString decodeHex(java.lang.String)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int clampViewPositionVertical(android.view.View,int,int)
androidx.appcompat.app.WindowDecorActionBar$1: WindowDecorActionBar$1(androidx.appcompat.app.WindowDecorActionBar)
com.google.android.material.floatingactionbutton.FloatingActionButton$1: void onShown()
androidx.cardview.widget.RoundRectDrawable: void setBackground(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(android.view.View,java.lang.String)
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Object)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
okhttp3.Headers$Companion: Headers$Companion()
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.String toString()
com.facebook.yoga.YogaDisplay: int intValue()
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeListener(com.th3rdwave.safeareacontext.SafeAreaProvider$OnInsetsChangeListener)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.recyclerview.widget.FastScroller: void destroyCallbacks()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()
kotlin.sequences.DropSequence: int access$getCount$p(kotlin.sequences.DropSequence)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.graphics.Bitmap decodeFileDescriptorAsPurgeable(com.facebook.common.references.CloseableReference,int,byte[],android.graphics.BitmapFactory$Options)
com.facebook.react.common.JavascriptException: JavascriptException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
okhttp3.Response$Builder: int getCode$okhttp()
com.google.android.material.snackbar.SnackbarManager$1: SnackbarManager$1(com.google.android.material.snackbar.SnackbarManager)
com.google.android.material.shape.ShapePath$PathArcOperation: void setLeft(float)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker)
androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setName(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Connection: void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean)
com.facebook.react.views.slider.ReactSlidingCompleteEvent: ReactSlidingCompleteEvent(int,int,double)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
androidx.appcompat.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(int)
com.google.android.material.animation.ChildrenAlphaProperty: void set(android.view.ViewGroup,java.lang.Float)
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions disableRotation()
com.facebook.react.modules.image.ImageLoaderModule$3: void onNewResultImpl(com.facebook.datasource.DataSource)
androidx.transition.Visibility$DisappearListener: void onAnimationResume(android.animation.Animator)
androidx.appcompat.app.TwilightManager$TwilightState: TwilightManager$TwilightState()
com.facebook.imagepipeline.memory.BasePool$Counter: void decrement(int)
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManagerDelegate: BaseViewManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.material.datepicker.YearGridAdapter$1: void onClick(android.view.View)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
com.facebook.imagepipeline.image.CloseableImage: void setImageExtra(java.lang.String,java.lang.Object)
androidx.cardview.widget.CardViewApi21Impl: void setElevation(androidx.cardview.widget.CardViewDelegate,float)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String getKey$okhttp()
com.horcrux.svg.EllipseView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: float getInterpolation(float)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8: void onAnimationEnd(android.animation.Animator)
com.facebook.react.modules.websocket.WebSocketModule$1: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.views.image.ReactImageDownloadListener: boolean onLevelChange(int)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.horcrux.svg.SvgViewManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.facebook.imagepipeline.producers.SwallowResultProducer: SwallowResultProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: JavaTimerManager$IdleFrameCallback(com.facebook.react.modules.core.JavaTimerManager)
okio.InflaterSource: long readOrInflate(okio.Buffer,long)
com.facebook.react.devsupport.LogBoxModule$2: void run()
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
okhttp3.Handshake$peerCertificates$2: java.lang.Object invoke()
kotlin.ranges.IntRange$Companion: IntRange$Companion()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder get()
com.facebook.react.bridge.ReactSoftException: void addListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
com.facebook.imagepipeline.image.EncodedImage: void setSampleSize(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
kotlin.collections.ArrayAsCollection: ArrayAsCollection(java.lang.Object[],boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.AlertController$1: AlertController$1(androidx.appcompat.app.AlertController)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.google.android.material.textfield.ClearTextEndIconDelegate: boolean hasText(android.text.Editable)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
androidx.appcompat.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
com.facebook.react.views.scroll.ReactScrollView: void scrollToChild(android.view.View)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: void onNewResultImpl(java.lang.Object,int)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void access$000(com.facebook.imagepipeline.cache.LruCountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)
com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.cache.disk.DiskStorageCache: boolean hasKeySync(com.facebook.cache.common.CacheKey)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: LruCountingMemoryCache(com.facebook.imagepipeline.cache.ValueDescriptor,com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy,com.facebook.common.internal.Supplier,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.horcrux.svg.SvgView: int reactTagForTouch(float,float)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
okhttp3.internal.http2.Http2ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetLayoutAnimationEnabled(boolean)
com.swmansion.rnscreens.ScreenContainer: void onAttachedToWindow()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void access$300(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource)
com.swmansion.rnscreens.RNScreensPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
androidx.appcompat.view.menu.MenuPopup: void setEpicenterBounds(android.graphics.Rect)
com.facebook.imagepipeline.memory.BufferMemoryChunk: byte read(int)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: RecyclerView$RecyclerViewDataObserver(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.modules.network.ProgressResponseBody: long access$000(com.facebook.react.modules.network.ProgressResponseBody)
androidx.appcompat.view.menu.MenuPopup: boolean closeMenuOnSubMenuOpened()
com.facebook.react.views.switchview.ReactSwitch: void setColor(android.graphics.drawable.Drawable,java.lang.Integer)
com.google.android.material.button.MaterialButtonHelper: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.datepicker.MaterialTextInputPicker: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object get()
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getDrawable()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
okhttp3.internal.ws.WebSocketReader: void readHeader()
com.google.android.material.bottomsheet.BottomSheetDialog: void setCancelable(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: FragmentLifecycleCallbacksDispatcher(androidx.fragment.app.FragmentManager)
com.facebook.react.views.scroll.ReactScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.drawee.generic.WrappingUtils: com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.horcrux.svg.GroupView: int hitTest(float[])
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void makeOrphan(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
androidx.appcompat.widget.SearchView$9: SearchView$9(androidx.appcompat.widget.SearchView)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
com.facebook.imagepipeline.memory.BitmapCounter$1: void release(android.graphics.Bitmap)
androidx.appcompat.app.ToolbarActionBar: boolean openOptionsMenu()
androidx.core.provider.FontRequestWorker$4: FontRequestWorker$4(java.lang.String)
com.facebook.imagepipeline.producers.BaseProducerContext: void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.imagepipeline.producers.DiskCacheReadProducer: bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.uimanager.UIImplementation: void profileNextBatch()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int,int,int)
androidx.transition.TransitionSet: androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener)
com.google.android.material.internal.CheckableImageButton: int[] onCreateDrawableState(int)
com.th3rdwave.safeareacontext.EdgeInsets: EdgeInsets(float,float,float,float)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
com.facebook.datasource.FirstAvailableDataSourceSupplier: FirstAvailableDataSourceSupplier(java.util.List)
androidx.recyclerview.widget.DefaultItemAnimator$2: DefaultItemAnimator$2(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
androidx.appcompat.view.menu.CascadingMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
okio.-Util: java.lang.String toHexString(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean isStateful()
com.google.android.material.shape.MaterialShapeDrawable: void setShadowCompatRotation(int)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: UIViewOperationQueue$MeasureOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollView: boolean isScrollPerfLoggingEnabled()
androidx.appcompat.app.AlertController$CheckedItemAdapter: boolean hasStableIds()
com.facebook.imagepipeline.producers.DecodeProducer: boolean access$200(com.facebook.imagepipeline.producers.DecodeProducer)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMinTextSize()
com.swmansion.rnscreens.ScreenContainer: void onMeasure(int,int)
com.facebook.drawee.drawable.MatrixDrawable: void configureBoundsIfUnderlyingChanged()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void onDetachedFromWindow()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
kotlin.collections.AbstractCollection: boolean retainAll(java.util.Collection)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$PatternManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.TextView: void setVerticalAlign(java.lang.String)
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
com.facebook.imagepipeline.core.ProducerSequenceFactory: ProducerSequenceFactory(android.content.ContentResolver,com.facebook.imagepipeline.core.ProducerFactory,com.facebook.imagepipeline.producers.NetworkFetcher,boolean,boolean,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,boolean,boolean,boolean,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory,boolean,boolean,boolean,boolean)
com.facebook.react.devsupport.LogBoxModule$4: void run()
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.material.bottomappbar.BottomAppBar$6: void onAnimationEnd(android.animation.Animator)
com.facebook.react.devsupport.DisabledDevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
androidx.fragment.app.Fragment: void performResume()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.google.android.material.behavior.SwipeDismissBehavior: void setStartAlphaSwipeDistance(float)
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.listener.RequestListener)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.ConcurrentLinkedQueue access$100(com.facebook.imagepipeline.producers.ThrottlingProducer)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.imagepipeline.memory.PoolConfig: java.lang.String getBitmapPoolType()
androidx.transition.Transition: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
com.facebook.react.modules.network.ForwardingCookieHandler$1: void onReceiveValue(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.views.textinput.ReactTextChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache getMainFileCache()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
okhttp3.OkHttpClient$Builder: java.net.Proxy getProxy$okhttp()
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.swiperefreshlayout.widget.CircleImageView: void onMeasure(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)
androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
com.facebook.drawee.drawable.ArrayDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)
okio.-Util: java.lang.String toHexString(byte)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: MonthsPagerAdapter$ViewHolder(android.widget.LinearLayout,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.appcompat.widget.Toolbar$LayoutParams: void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)
com.google.android.material.transformation.FabTransformationScrimBehavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.drawee.drawable.ForwardingDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()
com.horcrux.svg.TextPathView: com.horcrux.svg.SVGLength getStartOffset()
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(android.view.View,java.lang.String)
kotlin.sequences.DropSequence$iterator$1: DropSequence$iterator$1(kotlin.sequences.DropSequence)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStartEndTrim(float,float)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
kotlin.ranges.IntRange: IntRange(int,int)
kotlin.collections.EmptyList: void add(int,java.lang.Object)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$600(com.facebook.imagepipeline.memory.PoolConfig$Builder)
okhttp3.Dispatcher: boolean promoteAndExecute()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
okio.Options: Options(okio.ByteString[],int[],kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.cache.common.NoOpCacheEventListener: void onEviction(com.facebook.cache.common.CacheEvent)
com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate: AndroidDialogPickerManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onProducerStart(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.facebook.imagepipeline.transcoder.ImageTranscodeResult: java.lang.String toString()
okhttp3.internal.connection.RealCall: java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException)
com.facebook.react.views.modal.ReactModalHostView: void onHostPause()
com.facebook.imagepipeline.image.EncodedImage: boolean isValid(com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundTints()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.memory.PoolFactory access$2000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.drawee.controller.AbstractDraweeController: android.net.Uri getMainUri()
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setTextAnchor(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.yoga.YogaPositionType: YogaPositionType(java.lang.String,int,int)
com.facebook.react.uimanager.UIImplementation: void registerRootView(android.view.View,int,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenHeight()
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getRoutes()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: LocalExifThumbnailProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)
com.facebook.react.ReactActivityDelegate: ReactActivityDelegate(com.facebook.react.ReactActivity,java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: void setPadding(com.facebook.yoga.YogaEdge,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: android.view.View getFocusableViewAfter(int,int)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
com.facebook.react.views.textinput.ReactEditText: void onAttachedToWindow()
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: Http2Connection$$special$$inlined$schedule$1(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.views.textinput.ReactTextInputEvent: boolean canCoalesce()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void updateInsets()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitLayoutEvent(android.view.ViewGroup)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,char,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setBorderColor(int,float,float)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
androidx.core.view.ViewCompat$1: ViewCompat$1()
com.swmansion.rnscreens.ScreenFragment: com.facebook.react.bridge.ReactContext tryGetContext()
com.google.android.material.stateful.ExtendableSavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEventOrEnqueue(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.material.datepicker.DateValidatorPointForward$1: java.lang.Object[] newArray(int)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
kotlin.collections.EmptyMap: EmptyMap()
com.google.android.material.shape.MaterialShapeDrawable: void invalidateSelf()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
androidx.collection.SparseArrayCompat: void remove(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.views.imagehelper.ImageSource: double getSize()
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.imagepipeline.producers.BaseProducerContext: BaseProducerContext(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
com.facebook.yoga.YogaNodeJNIBase: void setPositionPercent(com.facebook.yoga.YogaEdge,float)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.common.time.SystemClock: com.facebook.common.time.SystemClock get()
com.google.android.material.card.MaterialCardView: float access$001(com.google.android.material.card.MaterialCardView)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedTemplate(java.lang.String)
com.facebook.cache.common.MultiCacheKey: boolean isResourceIdForDebugging()
com.facebook.react.animated.NativeAnimatedModule$8: NativeAnimatedModule$8(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod getProducerFactoryMethod()
com.google.android.material.stateful.ExtendableSavedState: ExtendableSavedState(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
androidx.recyclerview.widget.RecyclerView$Adapter: void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.ViewBoundsCheck: ViewBoundsCheck(androidx.recyclerview.widget.ViewBoundsCheck$Callback)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: BitmapMemoryCacheProducer$1(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideSubMenus()
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.chip.ChipDrawable: void setCheckableResource(int)
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.internal.Supplier isLazyDataSource()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
okhttp3.internal.http2.Http2Connection: void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder reset()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean retryTask(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestSimpleAnimationsInNextLayout()
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: DefaultNativeModuleCallExceptionHandler()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1: HideBottomViewOnScrollBehavior$1(com.google.android.material.behavior.HideBottomViewOnScrollBehavior)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
com.google.android.material.chip.ChipDrawable: void onSizeChange()
okhttp3.ResponseBody: java.lang.String string()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: long read(okio.Buffer,long)
okhttp3.internal.Util: int skipAll(okio.Buffer,byte)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale()
com.swmansion.rnscreens.ScreenStackFragment: void setToolbarTranslucent(boolean)
com.facebook.react.jstasks.HeadlessJsTaskContext$2: HeadlessJsTaskContext$2(com.facebook.react.jstasks.HeadlessJsTaskContext,int)
com.facebook.imageformat.DefaultImageFormatChecker: DefaultImageFormatChecker()
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()
com.facebook.drawee.controller.BaseControllerListener: BaseControllerListener()
com.horcrux.svg.ImageView: void setY(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
okhttp3.CacheControl: boolean noCache()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setStrokeWidth(float)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean areAllItemsEnabled()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$400(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.view.menu.ListMenuItemView: void insertRadioButton()
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: void onNewResultImpl(java.lang.Object,int)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onFailure(java.lang.Exception)
com.swmansion.rnscreens.ScreenStack$DrawingOp: long getDrawingTime()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchyBuilder newInstance(android.content.res.Resources)
com.facebook.react.ReactActivity: void onActivityResult(int,int,android.content.Intent)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.Handshake$Companion: java.util.List toImmutableList(java.security.cert.Certificate[])
com.facebook.react.views.text.ReactStrikethroughSpan: ReactStrikethroughSpan()
androidx.fragment.app.FragmentManager: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
com.facebook.react.ReactRootView: void init()
com.facebook.datasource.AbstractDataSource: boolean setProgressInternal(float)
com.google.android.material.checkbox.MaterialCheckBox: void onAttachedToWindow()
com.facebook.react.modules.websocket.WebSocketModule$1: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo(float,float,float)
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: ShapeAppearancePathProvider$ShapeAppearancePathSpec(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest fromUri(android.net.Uri)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onRequestSuccess(com.facebook.imagepipeline.producers.ProducerContext)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxEnd(int)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.facebook.drawee.view.DraweeHolder: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setColorIndex(int)
com.facebook.react.bridge.ReactSoftException: ReactSoftException()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAttachedToTransitionOverlay()
com.facebook.react.animated.TrackingAnimatedNode: TrackingAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.GlyphContext: com.horcrux.svg.FontData getFont()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: ReactAccessibilityDelegate$1(com.facebook.react.uimanager.ReactAccessibilityDelegate)
androidx.appcompat.widget.SearchView: void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
androidx.appcompat.view.menu.StandardMenuPopup: void onDismiss()
com.facebook.drawee.view.DraweeView: java.lang.String toString()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskheight(android.view.View,java.lang.String)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
androidx.transition.TransitionManager: androidx.collection.ArrayMap getRunningTransitions()
androidx.fragment.app.Fragment: int hashCode()
com.facebook.react.jstasks.HeadlessJsTaskContext: void scheduleTaskTimeout(int,long)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: FloatingActionButtonImpl$3(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator(com.facebook.soloader.ExoSoSource$ExoUnpacker)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.google.android.material.appbar.AppBarLayout$LayoutParams: AppBarLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStack$DrawingOp: android.graphics.Canvas getCanvas()
okio.Buffer: void setSize$okio(long)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOffset(int)
com.facebook.common.internal.Objects: com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager getReactInstanceManager()
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.UIViewOperationQueue: long access$2102(com.facebook.react.uimanager.UIViewOperationQueue,long)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: SimpleProgressiveJpegConfig()
okhttp3.internal.connection.Exchange: void writeRequestHeaders(okhttp3.Request)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okio.Options: int lastIndexOf(java.lang.Object)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.google.android.material.appbar.HeaderBehavior$FlingRunnable: void run()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInCreateTime(int,long)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.swmansion.rnscreens.ScreenFragment: void registerChildScreenContainer(com.swmansion.rnscreens.ScreenContainer)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: ReactScrollViewCommandHelper$ScrollToEndCommandData(boolean)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2: void onCancellationRequested()
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.lifecycle.LiveData: java.lang.Object getValue()
com.google.android.material.transformation.FabTransformationBehavior: void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)
com.google.android.material.datepicker.YearGridAdapter: com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
okio.ByteString: int compareTo(java.lang.Object)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void reset()
com.facebook.react.modules.statusbar.StatusBarModule$4: void run()
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueClearJSResponder()
com.facebook.react.modules.network.ResponseUtil: void onIncrementalDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,long,long)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion()
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
okhttp3.EventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,java.lang.String)
androidx.fragment.app.FragmentController: void noteStateNotSaved()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onViewUpdatesCompleted(com.facebook.react.uimanager.ReactShadowNode)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setAlignmentBaseline(com.horcrux.svg.TextView,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
com.facebook.react.bridge.JavaOnlyArray: int size()
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
androidx.transition.ViewUtilsApi29: void setTransitionAlpha(android.view.View,float)
com.google.android.material.chip.Chip: void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.views.scroll.ReactScrollView$3: ReactScrollView$3(com.facebook.react.views.scroll.ReactScrollView)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.internal.http2.Http2Connection: void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDy(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onNewResultImpl(java.lang.Object,int)
kotlin.collections.EmptyIterator: java.lang.Object previous()
com.zoontek.rnbootsplash.RNBootSplashModule: android.widget.LinearLayout getLayout(android.app.Activity,android.widget.LinearLayout$LayoutParams)
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String toString()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.views.view.ViewGroupClickEvent: boolean canCoalesce()
com.facebook.imagepipeline.memory.BucketMap: void moveToFront(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)
com.facebook.imagepipeline.producers.LocalFetchProducer$1: LocalFetchProducer$1(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.core.ImagePipeline$5: ImagePipeline$5(com.facebook.imagepipeline.core.ImagePipeline)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean isEmpty()
androidx.transition.TransitionSet: java.lang.String toString(java.lang.String)
androidx.loader.app.LoaderManager: LoaderManager()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinecap(android.view.View,int)
androidx.drawerlayout.widget.DrawerLayout$1: DrawerLayout$1(androidx.drawerlayout.widget.DrawerLayout)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeMiterlimit(android.view.View,float)
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
com.facebook.drawee.drawable.FadeDrawable: boolean updateAlphas(float)
androidx.appcompat.widget.AppCompatTextHelper: void autoSizeText()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void onAttachedToWindow()
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)
com.facebook.drawee.drawable.ArrayDrawable: void setAlpha(int)
com.facebook.yoga.YogaNodeJNIBase: void addChildAt(com.facebook.yoga.YogaNode,int)
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
com.horcrux.svg.VirtualView: void clearChildCache()
com.facebook.common.statfs.StatFsHelper: void ensureInitialized()
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.imagepipeline.core.ImagePipeline: boolean isInBitmapMemoryCache(com.facebook.imagepipeline.request.ImageRequest)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVectorEffect(android.view.View,int)
androidx.transition.FragmentTransitionSupport$2: FragmentTransitionSupport$2(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)
com.swmansion.rnscreens.ScreenWindowTraits: com.swmansion.rnscreens.Screen childScreenWithTraitSet(com.swmansion.rnscreens.Screen,com.swmansion.rnscreens.Screen$WindowTraits)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int,java.lang.Object)
com.swmansion.rnscreens.ScreenStack$DrawingOp: com.swmansion.rnscreens.ScreenStack$DrawingOp set(android.graphics.Canvas,android.view.View,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMinTextSize()
com.facebook.common.streams.TailAppendingInputStream: void mark(int)
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getCloseIcon()
com.facebook.react.views.switchview.ReactSwitch: void setThumbColor(java.lang.Integer)
com.facebook.yoga.YogaNode: YogaNode()
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener createInternal(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
com.google.android.material.shape.MaterialShapeDrawable: void prepareCanvasForShadow(android.graphics.Canvas)
com.google.android.material.internal.CollapsingTextHelper: void onBoundsChanged()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule$13: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)
com.google.android.material.shape.CornerTreatment: CornerTreatment()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspot(float,float)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.horcrux.svg.SvgView: void defineMask(com.horcrux.svg.VirtualView,java.lang.String)
okhttp3.internal.platform.Platform$Companion: boolean isOpenJSSEPreferred()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.google.android.material.transformation.FabTransformationBehavior$3: FabTransformationBehavior$3(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.viewmanagers.RNSVGTSpanManagerDelegate: RNSVGTSpanManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.react.viewmanagers.RNSVGTextPathManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.common.executors.ScheduledFutureImpl: long getDelay(java.util.concurrent.TimeUnit)
com.zoontek.rnbootsplash.RNBootSplashTask$Type: com.zoontek.rnbootsplash.RNBootSplashTask$Type[] values()
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
okhttp3.EventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
okhttp3.Response: java.lang.String toString()
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.facebook.common.memory.PooledByteBufferOutputStream: PooledByteBufferOutputStream()
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion()
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: ReactImageView$RoundedCornerPostprocessor(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1)
com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod: com.facebook.imagepipeline.core.ProducerFactory createProducerFactory(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.PooledByteStreams,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory,boolean,int)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
com.facebook.react.views.image.ReactImageView: void setSourceImage()
androidx.recyclerview.widget.SimpleItemAnimator: void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: InstrumentedMemoryCacheBitmapMemoryCacheFactory$1(com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.common.streams.LimitedInputStream: LimitedInputStream(java.io.InputStream,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveGravity(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: BranchOnSeparateImagesProducer$OnFirstImageConsumer(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.internal.TextDrawableHelper$1: void onFontRetrieved(android.graphics.Typeface,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipPath(android.view.View,java.lang.String)
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForHost(int)
com.facebook.imagepipeline.platform.PlatformDecoderFactory: com.facebook.imagepipeline.platform.PlatformDecoder buildPlatformDecoder(com.facebook.imagepipeline.memory.PoolFactory,boolean)
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String)
androidx.core.provider.FontRequestWorker$1: java.lang.Object call()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.Authenticator$Companion: Authenticator$Companion()
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlin.Pair: java.lang.Object component2()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
com.facebook.react.modules.network.ReactCookieJarContainer: java.util.List loadForRequest(okhttp3.HttpUrl)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
androidx.recyclerview.widget.ChildHelper: int getChildCount()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$400(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
com.facebook.react.ReactInstanceManager$3: void onPackagerStatusFetched(boolean)
com.facebook.imagepipeline.common.BytesRange: java.lang.String toHttpRangeHeaderValue()
kotlin.collections.AbstractCollection: boolean containsAll(java.util.Collection)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurementInOther(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2: DropdownMenuEndIconDelegate$2(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout)
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: ViewManagersPropertyCache$BooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,boolean)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner()
com.google.android.material.textfield.TextInputLayout: void assignBoxBackgroundByMode()
androidx.cardview.widget.CardViewBaseImpl$1: CardViewBaseImpl$1(androidx.cardview.widget.CardViewBaseImpl)
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onProducerStart(java.lang.String,java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig: android.content.Context getContext()
com.facebook.datasource.FirstAvailableDataSourceSupplier: int hashCode()
com.facebook.react.views.switchview.ReactSwitchEvent: short getCoalescingKey()
com.horcrux.svg.SymbolView: void setMinY(float)
com.facebook.react.views.text.ReactTextShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.recyclerview.widget.FastScroller$AnimatorListener: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.core.content.res.ComplexColorCompat: int getColor()
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.infer.annotation.Assertions: void assertCondition(boolean)
com.facebook.react.views.text.ReactTextView: void setBorderColor(int,float,float)
com.google.android.material.button.MaterialButtonHelper: void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)
androidx.recyclerview.widget.LinearSmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.facebook.imagepipeline.common.BytesRange: java.lang.String valueOrEmpty(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.google.android.material.textfield.TextInputLayout: boolean access$000(com.google.android.material.textfield.TextInputLayout)
com.facebook.imagepipeline.memory.BitmapCounter: int getCount()
androidx.recyclerview.widget.LinearLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
okhttp3.CacheControl: boolean noStore()
androidx.recyclerview.widget.RecyclerView$4: void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
okio.ByteString: ByteString(byte[])
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: java.lang.String getIdentifier()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout$LayoutParams: AppBarLayout$LayoutParams(android.widget.LinearLayout$LayoutParams)
com.google.android.material.chip.ChipDrawable: boolean setCloseIconState(int[])
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: UIViewOperationQueue$SetLayoutAnimationEnabledOperation(com.facebook.react.uimanager.UIViewOperationQueue,boolean,com.facebook.react.uimanager.UIViewOperationQueue$1)
com.facebook.systrace.Systrace: void endAsyncSection(long,java.lang.String,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: DefaultDiskStorage$EntryImpl(java.lang.String,java.io.File)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()
com.facebook.react.viewmanagers.RNSVGSvgViewManagerDelegate: RNSVGSvgViewManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.text.StringsKt__StringsJVMKt: boolean equals(java.lang.String,java.lang.String,boolean)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.horcrux.svg.RenderableView: void setFillOpacity(float)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.customview.widget.FocusStrategy: java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.generic.GenericDraweeHierarchy buildHierarchy(android.content.Context)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forBackgroundTasks()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingBottom()
com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.viewmanagers.RNSVGDefsManagerDelegate: RNSVGDefsManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.react.modules.network.ProgressResponseBody: com.facebook.react.modules.network.ProgressListener access$200(com.facebook.react.modules.network.ProgressResponseBody)
com.facebook.imagepipeline.producers.MultiplexProducer: java.lang.String access$900(com.facebook.imagepipeline.producers.MultiplexProducer)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1: CircularProgressDrawable$1(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: java.lang.Object[] newArray(int)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.common.ImageDecodeOptions build()
androidx.transition.Transition: java.util.List getTargets()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
androidx.fragment.app.FragmentContainerView: void endViewTransition(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
okhttp3.Dispatcher: java.util.List queuedCalls()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.textinput.ReactEditText: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.transition.Scene: androidx.transition.Scene getCurrentScene(android.view.ViewGroup)
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.google.android.material.datepicker.DateValidatorPointForward$1: com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int)
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator access$1002(com.facebook.react.views.scroll.ReactHorizontalScrollView,android.animation.ValueAnimator)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.ReactInstanceManager: void onNewIntent(android.content.Intent)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerClosed(android.view.View)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
androidx.collection.ArrayMap: ArrayMap(androidx.collection.SimpleArrayMap)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipRule(android.view.View,int)
com.google.android.material.chip.ChipDrawable: void setShowMotionSpecResource(int)
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.google.android.material.bottomappbar.BottomAppBar: float access$800(com.google.android.material.bottomappbar.BottomAppBar,int)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule$1: NetworkingModule$1(com.facebook.react.modules.network.NetworkingModule,java.lang.String,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths$okhttp(java.util.List)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean getBoolean(short)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: PipelineDraweeControllerBuilderSupplier(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,java.util.Set,java.util.Set,com.facebook.drawee.backends.pipeline.DraweeConfig)
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
com.facebook.react.animated.NativeAnimatedModule: void executeAllOperations(java.util.Queue,long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
androidx.recyclerview.widget.OpReorderer: void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
com.facebook.react.animated.SpringAnimation$PhysicsState: SpringAnimation$PhysicsState(com.facebook.react.animated.SpringAnimation$1)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setRadius(float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipPath(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.google.android.material.datepicker.CalendarItemStyle: CalendarItemStyle(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect)
com.facebook.imagepipeline.request.ImageRequestBuilder: android.net.Uri getSourceUri()
com.facebook.react.views.text.TextAttributeProps: int getLayoutDirection(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.ReactRootView: void onAttachedToWindow()
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace: boolean isTracing()
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: boolean isExifOrientationAllowed(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation: float getTargetShadowSize()
androidx.appcompat.app.AppCompatDialog: void onStop()
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getVersionSubdirectoryName(int)
com.google.android.material.chip.ChipDrawable: void setChipStrokeWidthResource(int)
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.TooltipCompatHandler: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.imagepipeline.producers.LocalFetchProducer$1: void disposeResult(java.lang.Object)
com.facebook.common.internal.Objects: boolean equal(java.lang.Object,java.lang.Object)
androidx.transition.ViewUtils: void saveNonTransitionAlpha(android.view.View)
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.bridge.NativeModuleRegistry build()
okio.DeflaterSink: DeflaterSink(okio.Sink,java.util.zip.Deflater)
com.horcrux.svg.Brush: void setUserSpaceBoundingBox(android.graphics.Rect)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[])
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable)
okio.AsyncTimeout: void enter()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.facebook.drawee.drawable.FadeDrawable: void maybeOnFadeStarted()
okhttp3.Response: okhttp3.Protocol protocol()
kotlin.collections.ArrayAsCollection: boolean removeAll(java.util.Collection)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.shape.MaterialShapeDrawable$1: void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.RippleDrawable getRippleDrawable(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory: DynamicDefaultDiskStorageFactory()
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.imagepipeline.producers.NetworkFetchProducer: NetworkFetchProducer(com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.NetworkFetcher)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView: boolean isCollapsed()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeUpdateCacheParams()
com.google.android.material.textfield.ClearTextEndIconDelegate$7: ClearTextEndIconDelegate$7(com.google.android.material.textfield.ClearTextEndIconDelegate)
androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)
com.horcrux.svg.RNSVGMarkerPosition: double CurrentAngle(com.horcrux.svg.RNSVGMarkerType)
com.facebook.cache.disk.DiskCacheConfig$Builder: int access$300(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.facebook.react.animated.SpringAnimation: boolean isOvershooting()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.horcrux.svg.GroupView: void resetProperties()
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$200(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollY()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable setDrawable(int,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair walkUpUntilNativeKindIsParent(com.facebook.react.uimanager.ReactShadowNode,int)
androidx.recyclerview.widget.ViewInfoStore: void onDetach()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setState(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.bridge.ReadableMap,android.content.Context)
com.horcrux.svg.RadialGradientView: RadialGradientView(com.facebook.react.bridge.ReactContext)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void finalize()
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationEnd(android.animation.Animator)
com.google.android.material.appbar.AppBarLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeShown()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: ScreenWindowTraits$setColor$1(android.app.Activity,java.lang.Integer,boolean,com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionCancel(android.transition.Transition)
com.facebook.drawee.gestures.GestureDetector: void reset()
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address getAddress$okhttp()
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.horcrux.svg.LinearGradientView: void setX2(com.facebook.react.bridge.Dynamic)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.horcrux.svg.VirtualViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setResponsible(android.view.View,boolean)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean isEndMarkerRead()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)
com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.internal.Supplier getBaseDirectoryPathSupplier()
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.facebook.drawee.components.RetryManager: void init()
com.facebook.common.time.RealtimeSinceBootClock: long now()
com.th3rdwave.safeareacontext.SafeAreaUtils: com.th3rdwave.safeareacontext.Rect getFrame(android.view.ViewGroup,android.view.View)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
okhttp3.internal.platform.Android10Platform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
androidx.appcompat.widget.TintResources: TintResources(android.content.Context,android.content.res.Resources)
com.facebook.drawee.drawable.FadeDrawable: void fadeInAllLayers()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.facebook.react.viewmanagers.RNSVGTSpanManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void reportViewInvisible(com.facebook.drawee.backends.pipeline.info.ImagePerfState,long)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void draw(android.graphics.Canvas)
com.google.android.material.appbar.AppBarLayout: void onDetachedFromWindow()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
com.swmansion.rnscreens.ScreenFragment: void onViewAnimationEnd$lambda-7(com.swmansion.rnscreens.ScreenFragment)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
okhttp3.Address: java.net.Proxy proxy()
androidx.fragment.app.ListFragment$1: ListFragment$1(androidx.fragment.app.ListFragment)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)
androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])
com.google.android.material.textfield.TextInputLayout: void applyBoxUnderlineAttributes()
androidx.appcompat.app.AlertController: void setIcon(int)
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getMaxDragOffset(android.view.View)
androidx.recyclerview.widget.OrientationHelper$1: int getModeInOther()
androidx.transition.ViewOverlayApi14: androidx.transition.ViewOverlayApi14 createFrom(android.view.View)
com.facebook.react.uimanager.DisplayMetricsHolder: java.util.Map getPhysicalPixelsMap(android.util.DisplayMetrics,double)
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.fragment.app.Fragment: boolean isResumed()
com.facebook.imagepipeline.memory.MemoryChunkPool: void free(com.facebook.imagepipeline.memory.MemoryChunk)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.transition.ChangeBounds$4: ChangeBounds$4(java.lang.Class,java.lang.String)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: CircularProgressDrawable(android.content.Context)
com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.horcrux.svg.TextProperties$FontWeight: TextProperties$FontWeight(java.lang.String,int,java.lang.String)
com.horcrux.svg.SVGLength: SVGLength(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.ReactTextView: void updateView()
androidx.core.provider.FontRequestWorker$3: FontRequestWorker$3(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
com.google.android.material.internal.ForegroundLinearLayout: void onLayout(boolean,int,int,int,int)
com.google.android.material.chip.ChipDrawable: float getTextStartPadding()
androidx.appcompat.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)
com.facebook.react.uimanager.UIViewOperationQueue: void flushPendingBatches()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenStackFragment access$getMTopScreen$p(com.swmansion.rnscreens.ScreenStack)
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: com.facebook.binaryresource.BinaryResource commit(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setChangedAfterNestedScroll(boolean)
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
kotlin.collections.AbstractList$ListIteratorImpl: void add(java.lang.Object)
okhttp3.internal.connection.Exchange: boolean isDuplex$okhttp()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(java.lang.Integer)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.horcrux.svg.TextPathView: void setSpacing(java.lang.String)
com.facebook.imagepipeline.memory.MemoryChunkPool: MemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
okio.Buffer$outputStream$1: void close()
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.producers.DataFetchProducer: boolean isBase64(java.lang.String)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$LayoutParams)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.google.android.material.internal.CheckableImageButton: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp()
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.uimanager.events.EventDispatcherImpl: void access$200(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: ImageDecodeOptionsBuilder()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.google.android.material.ripple.RippleDrawableCompat: RippleDrawableCompat(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1)
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
androidx.transition.TransitionSet: androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator)
com.facebook.react.views.text.ReactTextShadowNode: void markUpdated()
com.google.android.material.internal.TextDrawableHelper: void updateTextPaintDrawState(android.content.Context)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteStreams getPooledByteStreams()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int access$000(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
com.google.android.material.appbar.ViewOffsetHelper: boolean setLeftAndRightOffset(int)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: GapWorker$LayoutPrefetchRegistryImpl()
com.facebook.common.internal.Preconditions: int checkElementIndex(int,int,java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
com.google.android.material.animation.MotionSpec: boolean equals(java.lang.Object)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache getSmallImageFileCache()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
androidx.transition.Visibility: androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.activity.OnBackPressedCallback: void remove()
okhttp3.Cookie: java.lang.String toString$okhttp(boolean)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void clearFocus()
com.horcrux.svg.VirtualViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.android.AndroidSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(android.view.View,int)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void createPayloadsIfNeeded()
com.facebook.common.statfs.StatFsHelper: boolean testLowDiskSpace(com.facebook.common.statfs.StatFsHelper$StorageType,long)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
com.swmansion.rnscreens.ScreenStack: boolean hasScreen(com.swmansion.rnscreens.ScreenFragment)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.android.material.textfield.ClearTextEndIconDelegate$5: ClearTextEndIconDelegate$5(com.google.android.material.textfield.ClearTextEndIconDelegate)
androidx.collection.LongSparseArray: java.lang.String toString()
com.horcrux.svg.VirtualViewManager$RenderableShadowNode: VirtualViewManager$RenderableShadowNode()
androidx.appcompat.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: ExtractFromZipSoSource$ZipDso(java.lang.String,java.util.zip.ZipEntry,int)
com.google.android.material.bottomsheet.BottomSheetDialog$1: void onClick(android.view.View)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController buildController()
kotlin.jvm.internal.ArrayIterator: java.lang.Object next()
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
okio.Buffer$inputStream$1: java.lang.String toString()
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)
com.facebook.imagepipeline.memory.DummyBitmapPool: java.lang.Object get(int)
com.horcrux.svg.ImageView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp()
com.facebook.react.views.view.ReactViewManager$1: void onClick(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()
com.facebook.cache.disk.DefaultDiskStorage: void recreateDirectoryIfVersionChanges()
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(int,android.view.KeyEvent)
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.facebook.common.memory.PooledByteBufferInputStream: int read()
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequestWorker$TypefaceResult call()
okhttp3.Cache: void setWriteSuccessCount$okhttp(int)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
com.facebook.drawee.drawable.AutoRotateDrawable: AutoRotateDrawable(android.graphics.drawable.Drawable,int,boolean)
com.facebook.react.views.slider.ReactSliderEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.recyclerview.widget.FastScroller: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodes(int,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderRadius(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation)
com.facebook.drawee.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)
com.horcrux.svg.Brush: void setupPaint(android.graphics.Paint,android.graphics.RectF,float,float)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource tryGetAndClearDataSource(int,com.facebook.datasource.DataSource)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.react.views.imagehelper.ImageSource: boolean equals(java.lang.Object)
com.facebook.react.views.slider.ReactSliderEvent: java.lang.String getEventName()
okhttp3.CacheControl: int maxAgeSeconds()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
okhttp3.HttpUrl$Builder: void setPort$okhttp(int)
com.facebook.imagepipeline.memory.MemoryChunkUtil: int adjustByteCount(int,int,int)
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getSimpleImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean isSupported()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.imageutils.TiffUtil$TiffHeader: TiffUtil$TiffHeader(com.facebook.imageutils.TiffUtil$1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getProgressBarImage()
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
com.facebook.drawee.drawable.ArrayDrawable$1: android.graphics.drawable.Drawable getDrawable()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void incrementRetries()
com.facebook.imagepipeline.core.CloseableReferenceFactory: java.lang.String getStackTraceString(java.lang.Throwable)
com.facebook.cache.disk.DiskStorageCache: void evictAboveSize(long,com.facebook.cache.common.CacheEventListener$EvictionReason)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forLightweightBackgroundTasks()
okhttp3.OkHttpClient$Builder: okhttp3.Cache getCache$okhttp()
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
okio.Okio__JvmOkioKt: okio.Sink sink(java.io.OutputStream)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.google.android.material.ripple.RippleDrawableCompat: RippleDrawableCompat(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.th3rdwave.safeareacontext.SafeAreaView: boolean maybeUpdateInsets()
com.facebook.imagepipeline.common.ResizeOptions: boolean equals(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain)
com.facebook.react.viewmanagers.SliderManagerDelegate: SliderManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: java.lang.String toString()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter: java.lang.String toString()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.bridge.ReactApplicationContext access$1200(com.facebook.react.modules.core.JavaTimerManager)
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.FileCacheFactory getFileCacheFactory()
com.facebook.imagepipeline.request.ImageRequest: int getDelayMs()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.DisabledDevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.facebook.react.modules.core.ReactChoreographer: void access$700(com.facebook.react.modules.core.ReactChoreographer)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()
androidx.appcompat.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(com.facebook.imagepipeline.image.EncodedImage)
okhttp3.HttpUrl$Builder: int effectivePort()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.horcrux.svg.RenderableView: double saturate(double)
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(android.view.View,java.lang.String)
com.google.android.material.shape.ShapePath$PathLineOperation: float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
com.facebook.react.modules.network.RequestBodyUtil: com.facebook.react.modules.network.ProgressRequestBody createProgressRequest(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object)
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
okhttp3.internal.platform.AndroidPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
com.zoontek.rnbootsplash.RNBootSplashActivity: void onNewIntent(android.content.Intent)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
com.facebook.react.modules.datepicker.DismissableDatePickerDialog: java.lang.reflect.Field findField(java.lang.Class,java.lang.Class,java.lang.String)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
com.horcrux.svg.EllipseView: EllipseView(com.facebook.react.bridge.ReactContext)
com.facebook.cache.disk.DefaultDiskStorage: java.util.Collection getEntries()
okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
com.google.android.material.shape.MaterialShapeDrawable: void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent getMotionEvent()
androidx.core.widget.NestedScrollView: void initScrollView()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule$4: void doInBackgroundGuarded(java.lang.Object[])
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
com.facebook.soloader.nativeloader.SystemDelegate: boolean loadLibrary(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcel,java.lang.ClassLoader)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.String getId()
com.facebook.imagepipeline.image.EncodedImageOrigin: java.lang.String toString()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.horcrux.svg.PathParser: double round(double)
com.facebook.soloader.ExoSoSource$ExoUnpacker: ExoSoSource$ExoUnpacker(com.facebook.soloader.ExoSoSource,com.facebook.soloader.UnpackingSoSource)
okio.Buffer: okio.Buffer emit()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1102(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView: void removeView(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: com.facebook.common.references.CloseableReference get(java.lang.Object)
com.facebook.imagepipeline.memory.BufferMemoryChunk: void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)
okio.BlackholeSink: void close()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMask(android.view.View,java.lang.String)
androidx.cardview.widget.CardViewApi21Impl: float getMaxElevation(androidx.cardview.widget.CardViewDelegate)
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getBitmapPrepareToDrawForPrefetch()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.internal.CollapsingTextHelper: boolean rectEquals(android.graphics.Rect,int,int,int,int)
okhttp3.internal.platform.android.AndroidLogHandler: void flush()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
bolts.UnobservedTaskException: UnobservedTaskException(java.lang.Throwable)
androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
com.horcrux.svg.ImageView: void setWidth(java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.imagepipeline.memory.MemoryChunkPool: int getMinBufferSize()
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: int hashCode()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDetachedFromWindow()
androidx.appcompat.view.menu.MenuAdapter: int getCount()
androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.imagepipeline.memory.BucketsBitmapPool: int getBucketedSizeForValue(android.graphics.Bitmap)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setName(android.view.View,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.customview.widget.ViewDragHelper$2: void run()
androidx.coordinatorlayout.widget.ViewGroupUtils: void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.material.chip.ChipDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int,boolean)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.image.EncodedImage: java.io.InputStream getInputStreamOrThrow()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.cardview.widget.RoundRectDrawableWithShadow: void setColorFilter(android.graphics.ColorFilter)
okio.Okio: okio.Source source(java.io.File)
com.horcrux.svg.SvgPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
okio.RealBufferedSource: int read(java.nio.ByteBuffer)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
androidx.recyclerview.widget.OpReorderer: void reorderOps(java.util.List)
androidx.fragment.app.FragmentManager: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutWidth()
com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
okhttp3.internal.connection.Exchange: Exchange(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int describeContents()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
androidx.transition.Transition: boolean isValidTarget(android.view.View)
androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean)
com.facebook.soloader.SoLoader: java.lang.String makeNonZipPath(java.lang.String)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: ListPopupWindow$ResizePopupRunnable(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.text.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7: DropdownMenuEndIconDelegate$7(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: AppCompatDelegateImpl$AutoBatteryNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$1300(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.facebook.drawee.drawable.ArrayDrawable: void setHotspot(float,float)
com.facebook.react.devsupport.DisabledDevSupportManager: void setFpsDebugEnabled(boolean)
okhttp3.internal.http1.Http1ExchangeCodec: void finishRequest()
okhttp3.internal.http2.Http2Connection: java.util.Map getStreams$okhttp()
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: java.io.Closeable cloneOrNull(java.io.Closeable)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void removeAllConfigSubviews()
androidx.transition.ViewUtilsApi29: void setLeftTopRightBottom(android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(int,int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(android.view.View,java.lang.String)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()
kotlin.collections.AbstractList$ListIteratorImpl: java.lang.Object previous()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
kotlin.collections.ArraysKt__ArraysJVMKt: void copyOfRangeToIndexCheck(int,int)
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getWindowDisplayMetrics()
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void remove(android.view.View)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()
androidx.fragment.app.Fragment: boolean isInBackStack()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
androidx.transition.ViewUtils: androidx.transition.ViewOverlayImpl getOverlay(android.view.View)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setProgress(float)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: ScreenFragment$ScreenLifecycleEvent(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeOpacity(android.view.View,float)
com.facebook.datasource.AbstractDataSource: void setExtras(java.util.Map)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: void onAnimationEnd(android.animation.Animator)
com.facebook.common.internal.Closeables: Closeables()
androidx.appcompat.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.HttpHeaders: boolean promisesBody(okhttp3.Response)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar)
androidx.fragment.app.FragmentContainerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
okio.Buffer: long readDecimalLong()
androidx.fragment.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.Response: okhttp3.Headers headers()
okhttp3.Cookie$Companion: long parseExpires(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentStart()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.CertificatePinner$Pin: okio.ByteString getHash()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)
androidx.recyclerview.widget.LinearSmoothScroller: float getSpeedPerPixel()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerPosition(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void dismiss()
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
kotlin.text.StringsKt__StringsJVMKt: java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl$1: void run()
com.horcrux.svg.TextProperties$FontVariantLigatures: TextProperties$FontVariantLigatures(java.lang.String,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)
com.facebook.drawee.drawable.RoundedDrawable: void setRadii(float[])
com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.graphics.drawable.Drawable createDrawable(java.lang.Object)
androidx.cardview.widget.RoundRectDrawableWithShadow: void setColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory$1: int getSizeInBytes(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: androidx.collection.SparseArrayCompat getAllNodes()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: void onIsIntermediateResultExpectedChanged()
com.facebook.drawee.controller.AbstractDraweeController: void onAttach()
okhttp3.internal.connection.RealConnection$connectTls$2: RealConnection$connectTls$2(okhttp3.internal.connection.RealConnection)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,java.lang.String)
com.facebook.drawee.controller.AbstractDraweeController: void logMessageAndFailure(java.lang.String,java.lang.Throwable)
androidx.cardview.widget.RoundRectDrawable: void setRadius(float)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newFixedLengthSource(long)
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okhttp3.CacheControl$Companion: int indexOfElement(java.lang.String,java.lang.String,int)
com.facebook.cache.disk.DiskStorageCache$1: DiskStorageCache$1(com.facebook.cache.disk.DiskStorageCache)
com.google.android.material.datepicker.DaysOfWeekAdapter: java.lang.Integer getItem(int)
com.facebook.drawee.drawable.RoundedColorDrawable: void setBorder(int,float)
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
com.horcrux.svg.RenderableView: void initBounds()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
androidx.appcompat.view.menu.MenuDialogHelper: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.facebook.yoga.YogaNodeJNIBase: float getLayoutPadding(com.facebook.yoga.YogaEdge)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.views.image.ImageLoadEvent: short getCoalescingKey()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.uimanager.events.TouchEvent: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.imageutils.TiffUtil: int readTiffHeader(java.io.InputStream,int,com.facebook.imageutils.TiffUtil$TiffHeader)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
kotlin.collections.ArrayAsCollection: int size()
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
com.facebook.imagepipeline.producers.ExperimentalThreadHandoffProducerQueueImpl: void addToQueueOrExecute(java.lang.Runnable)
androidx.transition.Transition$2: void onAnimationEnd(android.animation.Animator)
com.facebook.imagepipeline.listener.BaseRequestListener: BaseRequestListener()
com.google.android.material.chip.ChipDrawable: boolean setVisible(boolean,boolean)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.network.RequestBodyUtil: boolean isGzipEncoding(java.lang.String)
com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getDownloadFileInputStream(android.content.Context,android.net.Uri)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()
com.facebook.react.views.text.ReactTextShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.imagepipeline.producers.BaseConsumer: BaseConsumer()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
androidx.appcompat.widget.SuggestionsAdapter: SuggestionsAdapter(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
com.horcrux.svg.SvgView: android.graphics.Bitmap drawOutput()
androidx.appcompat.widget.SwitchCompat: void applyTrackTint()
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool: FlexByteArrayPool$SoftRefByteArrayPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setProgress(float,boolean)
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean isOrWillBeShown()
com.facebook.common.references.CloseableReference$2: CloseableReference$2()
com.facebook.drawee.drawable.RoundedDrawable: int getIntrinsicWidth()
com.google.android.material.internal.CollapsingTextHelper$1: CollapsingTextHelper$1(com.google.android.material.internal.CollapsingTextHelper)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.horcrux.svg.VirtualView: void setOpacity(float)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: PipelineDraweeControllerBuilderSupplier(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig)
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.String getName()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.swiperefreshlayout.widget.CircleImageView: boolean elevationSupported()
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
com.facebook.react.views.scroll.ReactScrollView$3: void onAnimationCancel(android.animation.Animator)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.imagepipeline.memory.Bucket: void decrementInUseCount()
androidx.transition.FragmentTransitionSupport: void addTargets(java.lang.Object,java.util.ArrayList)
com.google.android.material.datepicker.MaterialDatePicker: void access$700(com.google.android.material.datepicker.MaterialDatePicker)
com.swmansion.rnscreens.ScreenStack: void dismiss(com.swmansion.rnscreens.ScreenStackFragment)
com.horcrux.svg.MaskView: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ListPopupWindow$2: ListPopupWindow$2(androidx.appcompat.widget.ListPopupWindow)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getBitmapMemoryCacheParamsSupplier()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)
com.horcrux.svg.UseView: void setX(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void measureHorizontal(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalFileFetchProducer newLocalFileFetchProducer()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()
androidx.customview.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
okio.BlackholeSink: BlackholeSink()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBitmapPrepareSequence(com.facebook.imagepipeline.producers.Producer)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] values()
okio.Buffer$outputStream$1: void write(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.drawee.controller.BaseControllerListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: Http2Connection$pushRequestLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.RectView: void setWidth(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
androidx.transition.TransitionSet: androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.CalendarItemStyle: com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int)
okhttp3.OkHttpClient$Builder: int getPingInterval$okhttp()
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
okio.Buffer: void write(okio.Buffer,long)
com.google.android.material.snackbar.SnackbarContentLayout: void onFinishInflate()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean getDidJSHitFrameAndCleanup(long,long)
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: boolean isExpectedFile(java.io.File)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.horcrux.svg.VirtualViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onTranslationChanged()
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDx(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
okhttp3.OkHttpClient$Builder: java.util.List getInterceptors$okhttp()
com.facebook.react.devsupport.DisabledDevSupportManager: DisabledDevSupportManager()
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatPopupWindow: void init(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
com.facebook.imagepipeline.image.EncodedImage: void setExifOrientation(int)
com.facebook.react.views.scroll.ReactScrollView: java.lang.Runnable access$602(com.facebook.react.views.scroll.ReactScrollView,java.lang.Runnable)
okhttp3.internal.connection.RealConnection: long getIdleAtNs$okhttp()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: void onAnimationEnd(android.animation.Animator)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.google.android.material.datepicker.PickerFragment: void clearOnSelectionChangedListeners()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet,int)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onProducerFinishWithFailure(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.lang.Throwable,java.util.Map)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: BucketMap$LinkedEntry(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
androidx.transition.Fade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: void run()
com.facebook.debug.holder.NoopPrinter: void logMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag,java.lang.String,java.lang.Object[])
okhttp3.internal.connection.RouteSelector: boolean hasNext()
androidx.core.view.ViewCompat: java.lang.CharSequence getStateDescription(android.view.View)
com.google.android.material.datepicker.CalendarConstraints: int hashCode()
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.transition.TransitionSet: TransitionSet()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.Toolbar: void ensureContentInsets()
androidx.swiperefreshlayout.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.fragment.app.FragmentStateManager: void create()
okhttp3.internal.http2.Http2Connection: void flush()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: NoOpPoolStatsTracker()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback getFrameCallback()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
androidx.appcompat.app.AlertController$1: void onClick(android.view.View)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.views.picker.ReactPickerAdapter: ReactPickerAdapter(android.content.Context,java.util.List)
com.google.android.material.datepicker.DateValidatorPointForward: int describeContents()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void onLayout(boolean,int,int,int,int)
com.facebook.react.ReactActivityDelegate: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setForeignObjectheight(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String getEventName()
okio.RealBufferedSink$outputStream$1: void write(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.google.android.material.datepicker.MonthAdapter: int firstPositionInMonth()
com.google.android.material.animation.ImageMatrixProperty: void set(android.widget.ImageView,android.graphics.Matrix)
com.facebook.react.views.textinput.ReactTextInputManager$2: void onFocusChange(android.view.View,boolean)
androidx.customview.widget.ExploreByTouchHelper$2: ExploreByTouchHelper$2()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.transition.Visibility$1: void onTransitionEnd(androidx.transition.Transition)
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: int getInt(int)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int)
bolts.TaskCompletionSource: void setError(java.lang.Exception)
okhttp3.HttpUrl: int hashCode()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
com.facebook.react.devsupport.DisabledDevSupportManager: boolean getDevSupportEnabled()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainTypedArray(int)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.behavior.SwipeDismissBehavior$1: boolean tryCaptureView(android.view.View,int)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: EventDispatcherImpl$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.EventDispatcherImpl)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
com.facebook.cache.disk.DiskStorageCache: java.lang.Object access$000(com.facebook.cache.disk.DiskStorageCache)
okhttp3.HttpUrl: java.lang.String encodedUsername()
com.facebook.react.module.model.ReactModuleInfo: java.lang.String name()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: ReactTextInputFocusEvent(int,int)
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: void execute(java.lang.Runnable)
com.horcrux.svg.MaskView: void setMaskContentUnits(int)
com.google.android.material.shape.ShapePath: float getCurrentShadowAngle()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.react.views.text.TextLayoutManager: void buildSpannableFromFragment(android.content.Context,com.facebook.react.bridge.ReadableArray,android.text.SpannableStringBuilder,java.util.List)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.ReactSoftException: void removeListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
com.facebook.react.views.picker.ReactPicker$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.MaskView: void setY(com.facebook.react.bridge.Dynamic)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.react.jstasks.HeadlessJsTaskContext: void addTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
com.facebook.soloader.ApkSoSource$ApkUnpacker: boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeNotifyExclusiveEntryRemoval(java.util.ArrayList)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
com.facebook.imagepipeline.core.ImagePipelineExperiments: int getBitmapPrepareToDrawMinSizeBytes()
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: void onResponse(java.io.InputStream,int)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()
androidx.transition.FragmentTransitionSupport: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.coinapp.MainActivity: java.lang.String getMainComponentName()
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getReactTag()
com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: MultiplexProducer$Multiplexer$1(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,android.util.Pair)
androidx.recyclerview.widget.SnapHelper$2: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setViewClassName(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.material.behavior.SwipeDismissBehavior: boolean canSwipeDismissView(android.view.View)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: Http2Connection$pushDataLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean)
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getSizeInBytes()
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onCancellationRequested()
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(byte[])
com.facebook.react.viewmanagers.RNSVGRadialGradientManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderColor(int,float,float)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.FirstAvailableDataSourceSupplier$1)
okhttp3.MultipartBody: okhttp3.MediaType contentType()
com.facebook.drawee.view.DraweeView: void onDetachedFromWindow()
com.google.android.material.appbar.AppBarLayout: boolean shouldOffsetFirstChild()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueConfigureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)
com.facebook.react.animated.AdditionAnimatedNode: AdditionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
bolts.Task: void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.collection.ArraySet: int size()
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerFromResolver(java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.th3rdwave.safeareacontext.SafeAreaViewMode: SafeAreaViewMode(java.lang.String,int)
okhttp3.internal.concurrent.Task: long getNextExecuteNanoTime$okhttp()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.RedBoxHandler getRedBoxHandler()
com.facebook.drawee.generic.GenericDraweeHierarchy: GenericDraweeHierarchy(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.imagepipeline.transcoder.ImageTranscodeResult: int getTranscodeStatus()
androidx.transition.FragmentTransitionSupport: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
com.facebook.react.modules.storage.ReactDatabaseSupplier: void onCreate(android.database.sqlite.SQLiteDatabase)
androidx.appcompat.app.WindowDecorActionBar$2: void onAnimationEnd(android.view.View)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop: java.lang.String toString()
com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void workAroundOreoBug(android.animation.ObjectAnimator)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillOpacity(android.view.View,float)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: RoundedCornersDrawable$Type(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.transition.Transition: long getStartDelay()
com.swmansion.rnscreens.ScreenContainer: ScreenContainer(android.content.Context)
com.facebook.yoga.YogaNodeJNIBase: void setJustifyContent(com.facebook.yoga.YogaJustify)
com.horcrux.svg.RenderableView: android.graphics.Region getRegion(android.graphics.Path,android.graphics.RectF)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int predictFinalScrollPosition(int)
com.google.android.material.datepicker.DaysOfWeekAdapter: DaysOfWeekAdapter()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.Fragment: boolean isStateSaved()
com.facebook.react.uimanager.UIImplementation: void removeShadowNodeRecursive(com.facebook.react.uimanager.ReactShadowNode)
androidx.transition.ChangeBounds$1: java.lang.Object get(java.lang.Object)
com.facebook.react.uimanager.Spacing: Spacing(float)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: void setShadowPadding(int,int,int,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: ViewManagerPropertyUpdater$FallbackShadowNodeSetter(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
okhttp3.internal.connection.Exchange: void noRequestBody()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.VirtualView: void restoreCanvas(android.graphics.Canvas,int)
com.google.android.material.datepicker.MaterialCalendarGridView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPosition(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.uimanager.events.Event: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: DrawerLayout$ChildAccessibilityDelegate()
okhttp3.internal.ws.MessageInflater: MessageInflater(boolean)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: FragmentAnim$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void setEnabled(boolean)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
com.google.android.material.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: java.lang.Object invoke(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
kotlin.collections.AbstractList$IteratorImpl: boolean hasNext()
com.facebook.imagepipeline.memory.DummyBitmapPool: void release(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
com.google.android.material.chip.ChipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4: kotlin.Pair invoke(java.lang.CharSequence,int)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.collection.MapCollections$MapIterator: int hashCode()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
com.facebook.drawee.generic.GenericDraweeHierarchy: void setImage(android.graphics.drawable.Drawable,float,boolean)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.Menu getMenuWrapper(android.view.Menu)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$300(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: com.facebook.drawee.backends.pipeline.info.ImagePerfState obtainState()
kotlin.text.StringsKt___StringsKt: java.lang.String take(java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getTopSortedChildren(java.util.List)
androidx.appcompat.widget.SearchView$7: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIImplementation: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.views.text.ReactRawTextShadowNode: boolean isVirtual()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
androidx.cardview.widget.RoundRectDrawableWithShadow: float getMinHeight()
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
com.horcrux.svg.VirtualView: double relativeOnHeight(com.horcrux.svg.SVGLength)
com.swmansion.rnscreens.events.ScreenAppearEvent: ScreenAppearEvent(int)
com.google.android.material.appbar.ViewOffsetHelper: ViewOffsetHelper(android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
okio.InflaterSource: okio.Timeout timeout()
com.google.android.material.shape.ShapePath$LineShadowOperation: ShapePath$LineShadowOperation(com.google.android.material.shape.ShapePath$PathLineOperation,float,float)
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeNativeChildAt(int)
com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.uimanager.UIManagerModule$3: void runGuarded()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(android.view.View,java.lang.String)
com.facebook.common.references.SharedReference: java.lang.Object get()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: UIViewOperationQueue$ViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.horcrux.svg.RNSVGMarkerPosition: double BisectingAngle(double,double)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: AndroidSocketAdapter$Companion$factory$1(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.google.android.material.transformation.FabTransformationBehavior$1: void onAnimationStart(android.animation.Animator)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$900(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setEndTrim(float)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.content.Context access$300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
okio.RealBufferedSink: okio.BufferedSink writeInt(int)
com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)
com.horcrux.svg.PathParser: void lineTo(float,float)
com.google.android.material.internal.DescendantOffsetUtils: void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
okhttp3.CacheControl: int minFreshSeconds()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void updateStatus(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method)
androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task getActiveTask$okhttp()
com.facebook.react.ReactPackageHelper$1$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: DatePickerDialogModule$1(com.facebook.react.modules.datepicker.DatePickerDialogModule,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise,androidx.fragment.app.FragmentManager)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule$1: NativeDevSplitBundleLoaderModule$1(com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(android.os.Parcel)
com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,int,int,int,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
androidx.recyclerview.widget.ChildHelper$Bucket: int countOnesBefore(int)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier: DefaultEntryEvictionComparatorSupplier()
okhttp3.Handshake: java.lang.String toString()
com.facebook.react.animated.InterpolationAnimatedNode: InterpolationAnimatedNode(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion: ScreenStackHeaderConfigViewManager$Companion()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] ensureDsos()
com.google.android.material.resources.CancelableFontCallback: void onFontRetrieved(android.graphics.Typeface,boolean)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
androidx.appcompat.widget.DropDownListView: void setPressedItem(android.view.View,int,float,float)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: boolean isResourceIdForDebugging()
androidx.recyclerview.widget.GapWorker: GapWorker()
okio.RealBufferedSink: void write(okio.Buffer,long)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: ChoreographerCompat$FrameCallback()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
androidx.appcompat.widget.TooltipCompatHandler$1: TooltipCompatHandler$1(androidx.appcompat.widget.TooltipCompatHandler)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.Cache$RealCacheRequest: okio.Sink body()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void onAnimationEnd(android.view.View)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToEnd(boolean)
com.facebook.cache.disk.DefaultDiskStorage: long doRemove(java.io.File)
androidx.transition.FragmentTransitionSupport$1: FragmentTransitionSupport$1(androidx.transition.FragmentTransitionSupport,android.graphics.Rect)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaValue getHeight()
com.facebook.yoga.YogaNodeJNIBase: void setFlexBasisAuto()
androidx.transition.Visibility$VisibilityInfo: Visibility$VisibilityInfo()
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)
com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: EncodedMemoryCacheFactory$1(com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getInitialWindowMetrics()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipRule(android.view.View,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.facebook.react.views.modal.RequestCloseEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: RippleDrawableCompat$RippleDrawableCompatState(com.google.android.material.shape.MaterialShapeDrawable)
bolts.Task: boolean isFaulted()
androidx.appcompat.widget.SearchView: void clearFocus()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: ViewManagersPropertyCache$BoxedColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
com.google.android.material.datepicker.CalendarConstraints: int getYearSpan()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutHeight()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.facebook.soloader.SoLoader: int makePrepareFlags()
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.views.picker.ReactDialogPickerManager: void setSelected(android.view.View,int)
androidx.appcompat.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void showHideDropdown(android.widget.AutoCompleteTextView)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.scroll.ReactScrollView: void access$100(com.facebook.react.views.scroll.ReactScrollView)
com.google.android.material.datepicker.MaterialTextInputPicker$1: void onSelectionChanged(java.lang.Object)
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: ScreenStackHeaderSubview$Type(java.lang.String,int)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void setBasePool(com.facebook.imagepipeline.memory.BasePool)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: StaggeredGridLayoutManager$1(androidx.recyclerview.widget.StaggeredGridLayoutManager)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentState saveState()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.google.android.material.chip.Chip: void setTextAppearance(android.content.Context,int)
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.RenderableView: RenderableView(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
okhttp3.internal.ws.RealWebSocket$WriterTask: RealWebSocket$WriterTask(okhttp3.internal.ws.RealWebSocket)
com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate: boolean isSliderAction(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
androidx.fragment.app.FragmentManager: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)
com.facebook.common.internal.Preconditions: void checkArgument(java.lang.Boolean)
com.facebook.react.devsupport.LogBoxModule$3: void run()
androidx.appcompat.widget.SearchView: void rewriteQueryFromSuggestion(int)
androidx.appcompat.widget.ResourcesWrapper: ResourcesWrapper(android.content.res.Resources)
androidx.fragment.app.FragmentManager: void dispatchLowMemory()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
kotlin.jvm.internal.Ref$LongRef: java.lang.String toString()
com.th3rdwave.safeareacontext.SafeAreaView: boolean onPreDraw()
com.facebook.react.uimanager.UIImplementation: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
kotlin.ranges.IntProgression: boolean isEmpty()
com.facebook.imagepipeline.cache.CountingLruMap: java.util.ArrayList getMatchingEntries(com.facebook.common.internal.Predicate)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForFalse(java.lang.Integer)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(android.view.View,java.lang.String)
com.google.android.material.textfield.EndIconDelegate: boolean shouldTintIconOnError()
androidx.cardview.widget.RoundRectDrawableWithShadow: void setShadowSize(float)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.textfield.NoEndIconDelegate: void initialize()
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
com.facebook.datasource.FirstAvailableDataSourceSupplier: java.lang.Object get()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,android.graphics.ColorSpace)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.producers.LocalFetchProducer$2: LocalFetchProducer$2(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)
com.facebook.react.ReactActivity: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlin.collections.AbstractList$Companion: AbstractList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.horcrux.svg.TextView: void invalidate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$600(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
androidx.core.widget.AutoScrollHelper: void startAnimating()
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
okio.RealBufferedSink$outputStream$1: void close()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: int getImageHash(java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.common.internal.Suppliers$2: java.lang.Boolean get()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap access$000(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void onFailure(java.lang.Exception)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.color.MaterialColors: int getColor(android.view.View,int,int)
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
okhttp3.internal.connection.RealConnection: void setNoNewExchanges(boolean)
androidx.core.util.LogWriter: void flushBuilder()
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forThumbnailProducer()
okhttp3.internal.platform.android.Android10SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.facebook.drawee.drawable.ForwardingDrawable: boolean isStateful()
androidx.transition.TransitionSet: void addTransitionInternal(androidx.transition.Transition)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
com.horcrux.svg.RadialGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactActivity: void invokeDefaultOnBackPressed()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.ReactDelegate: boolean onBackPressed()
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
okio.Options: int getSize()
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
androidx.cardview.widget.RoundRectDrawableWithShadow: void buildComponents(android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String,android.view.View,java.lang.Throwable)
com.google.android.material.appbar.ViewOffsetBehavior: boolean setTopAndBottomOffset(int)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(android.view.View,java.lang.String)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
com.facebook.react.LazyReactPackage$2$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
androidx.appcompat.widget.AppCompatTextHelper: void loadFromAttributes(android.util.AttributeSet,int)
okhttp3.internal.http2.Header: okio.ByteString component2()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canDragView(android.view.View)
okhttp3.CacheControl$Companion: CacheControl$Companion()
kotlin.collections.EmptyMap: java.util.Collection values()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
com.facebook.drawee.drawable.RoundedColorDrawable: void setColor(int)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig getProgressiveJpegConfig()
com.google.android.material.textfield.IndicatorViewController: void setTypefaces(android.graphics.Typeface)
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: CircularProgressDrawable$Ring()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int determineSizeHintColor(int,int,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.material.chip.ChipDrawable: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: void execute()
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
okhttp3.internal.connection.RealCall$AsyncCall: void run()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: RecyclerViewAccessibilityDelegate(androidx.recyclerview.widget.RecyclerView)
androidx.fragment.app.FragmentContainerView: void removeView(android.view.View)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: RouteSelector$resetNextProxy$1(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl)
androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheLimit(long)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitX: ScalingUtils$ScaleTypeFitX()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float,int)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.Region getTransparentRegion()
com.google.android.material.chip.ChipDrawable: void setEllipsize(android.text.TextUtils$TruncateAt)
com.swmansion.rnscreens.ScreenViewManager$Companion: ScreenViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.EmptyMap: int hashCode()
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.connection.RealCall: void enterNetworkInterceptorExchange(okhttp3.Request,boolean)
com.facebook.imagepipeline.image.CloseableStaticBitmap: void close()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomLeftCorner()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: android.graphics.Rect access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void onAttachedToWindow()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dirty()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)
com.facebook.react.animated.MultiplicationAnimatedNode: MultiplicationAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableImage decodeAnimatedWebp(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setImagewidth(com.horcrux.svg.ImageView,java.lang.String)
com.facebook.infer.annotation.Assertions: java.lang.Object assertNotNull(java.lang.Object,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.swmansion.rnscreens.Screen: void dispatchRestoreInstanceState(android.util.SparseArray)
okhttp3.internal.connection.Exchange: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHoveredFocusedTranslationZ(float)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: java.util.List getScansToDecode()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: boolean getBoolean(boolean)
com.facebook.react.modules.network.CountingOutputStream: void close()
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.disk.DefaultDiskStorage$FileInfo access$000(com.facebook.cache.disk.DefaultDiskStorage,java.io.File)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
okio.Timeout$Companion: Timeout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.zoontek.rnbootsplash.RNBootSplashModule: com.zoontek.rnbootsplash.RNBootSplashModule$Status access$102(com.zoontek.rnbootsplash.RNBootSplashModule$Status)
com.swmansion.rnscreens.ScreenFragment$Companion: android.view.View recycleView(android.view.View)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
com.google.android.material.textfield.NoEndIconDelegate: NoEndIconDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.widget.NestedScrollView: void fling(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: java.lang.Object get(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputLocalData: void apply(android.widget.EditText)
com.facebook.drawee.view.DraweeHolder: void onDetach()
com.facebook.react.bridge.DynamicFromMap: double asDouble()
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: LinearLayoutManager$LayoutState()
com.facebook.common.references.DefaultCloseableReference: DefaultCloseableReference(com.facebook.common.references.SharedReference,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
com.google.android.material.internal.ForegroundLinearLayout: void onSizeChanged(int,int,int,int)
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void updatePath()
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
okhttp3.internal.http1.Http1ExchangeCodec: void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: int available()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
com.facebook.react.modules.statusbar.StatusBarModule$4: StatusBarModule$4(com.facebook.react.modules.statusbar.StatusBarModule,android.app.Activity,java.lang.String)
com.facebook.soloader.UnpackingSoSource$1: void run()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
com.facebook.react.views.picker.ReactPicker: ReactPicker(android.content.Context,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
com.facebook.imagepipeline.cache.BufferedDiskCache$5: BufferedDiskCache$5(com.facebook.imagepipeline.cache.BufferedDiskCache,java.lang.Object,com.facebook.cache.common.CacheKey)
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getRippleColor()
com.google.android.material.datepicker.DateValidatorPointForward: boolean isValid(long)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void reset()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isYogaLeafNode()
com.facebook.react.views.swiperefresh.RefreshEvent: RefreshEvent(int,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void flush()
okio.Buffer: okio.Timeout timeout()
com.facebook.soloader.UnpackingSoSource: void access$000(java.io.File,byte)
androidx.core.graphics.TypefaceCompatUtil: java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
com.facebook.react.uimanager.TransformHelper$1: java.lang.Object initialValue()
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.Object getCallerContext()
okhttp3.internal.http.HttpHeaders: boolean skipCommasAndWhitespace(okio.Buffer)
com.facebook.react.uimanager.MatrixMathHelper: void decomposeMatrix(double[],com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.facebook.react.bridge.DynamicFromArray: int asInt()
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
com.google.android.material.card.MaterialCardView: boolean isCheckable()
com.facebook.imagepipeline.producers.DataFetchProducer: DataFetchProducer(com.facebook.common.memory.PooledByteBufferFactory)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveRightShadow()
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void detach()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
androidx.appcompat.view.menu.BaseMenuWrapper: BaseMenuWrapper(android.content.Context)
androidx.fragment.app.FragmentStateManager: void detach(androidx.fragment.app.FragmentManagerViewModel)
com.swmansion.rnscreens.ScreenFragment: void setScreen(com.swmansion.rnscreens.Screen)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontWeight(android.view.View,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
com.google.android.material.shape.MaterialShapeDrawable: boolean isElevationOverlayEnabled()
com.google.android.material.internal.CheckableImageButton$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.text.AllCapsTransformationMethod: AllCapsTransformationMethod(android.content.Context)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderRGB(int,float)
androidx.recyclerview.widget.AdapterHelper: void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
okhttp3.Dispatcher: okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup$1: StandardMenuPopup$1(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okio.RealBufferedSource: void require(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: android.view.View getChildAt(int)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDismissPopupMenu()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getChangeDuration()
com.facebook.imagepipeline.image.EncodedImage: boolean hasParsedMetaData()
com.facebook.drawee.components.DraweeEventTracker: java.lang.String toString()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedViewConstants()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.uimanager.Spacing: float getRaw(int)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream()
com.facebook.react.modules.core.JavaTimerManager: boolean hasActiveTimersInRange(long)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double access$300(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
androidx.recyclerview.widget.DefaultItemAnimator: void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[])
com.facebook.react.views.text.ReactFontManager$FontFamily: ReactFontManager$FontFamily(com.facebook.react.views.text.ReactFontManager$1)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionPercent(int,float)
com.facebook.react.ReactInstanceManager: void attachRootView(com.facebook.react.uimanager.ReactRoot)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewDragStateChanged(int)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
androidx.appcompat.app.AlertController: void setView(android.view.View)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: int hashCode()
com.facebook.imagepipeline.memory.GenericByteArrayPool: java.lang.Object alloc(int)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: UIViewOperationQueue$UIBlockOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIBlock)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: AbstractDataSource$DataSourceStatus(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
com.google.android.material.bottomsheet.BottomSheetDialog: void setCanceledOnTouchOutside(boolean)
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)
com.facebook.react.touch.JSResponderHandler: boolean onInterceptTouchEvent(android.view.ViewGroup,android.view.MotionEvent)
okio.ForwardingTimeout: long timeoutNanos()
okio.ByteString: boolean startsWith(okio.ByteString)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
okio.SocketAsyncTimeout: SocketAsyncTimeout(java.net.Socket)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: void disposeResult(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Challenge: java.lang.String realm()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
androidx.appcompat.app.AlertController: int selectContentView()
com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.google.android.material.resources.TextAppearance: void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onDismiss(android.content.DialogInterface)
com.facebook.react.views.scroll.ReactScrollView: void onScrollChanged(int,int,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.util.List)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
androidx.appcompat.widget.ResourcesWrapper: int getColor(int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
com.facebook.drawee.controller.AbstractDraweeController: void init(java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
kotlin.collections.AbstractCollection: boolean remove(java.lang.Object)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
com.facebook.soloader.UnpackingSoSource: void prepare(java.lang.String)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
okio.RealBufferedSink$outputStream$1: RealBufferedSink$outputStream$1(okio.RealBufferedSink)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenHorizontal(int)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()
androidx.recyclerview.widget.GapWorker: void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintList(android.content.res.ColorStateList)
okhttp3.Cookie$Builder: okhttp3.Cookie build()
okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)
com.google.android.material.chip.ChipDrawable: void setChipStrokeWidth(float)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])
com.facebook.common.executors.ScheduledFutureImpl: java.lang.Object get()
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
okhttp3.Cookie$Companion: long parseMaxAge(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
androidx.recyclerview.widget.RecyclerView$6: void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
okhttp3.Response$Builder: Response$Builder()
com.facebook.react.views.picker.ReactPickerAdapter: void setPrimaryTextColor(java.lang.Integer)
okhttp3.Handshake$peerCertificates$2: java.util.List invoke()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: MenuItemWrapperICS$OnActionExpandListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchImageFromBitmapCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.transition.ChangeBounds$2: void set(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerFinalImageSetTimeMs(long)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.modules.core.JavaTimerManager: void maybeIdleCallback()
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
com.google.android.material.transformation.ExpandableBehavior: int access$000(com.google.android.material.transformation.ExpandableBehavior)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void applyButtonTint()
okio.OutputStreamSink: void write(okio.Buffer,long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder,boolean)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean shouldKeepCancelledFetchAsLowPriority()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: void onNewResultImpl(java.lang.Object,int)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrolledInView(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenY()
androidx.appcompat.widget.ActionBarContextView: void initTitle()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7: void onDismiss()
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void destroyCircularRevealCache()
com.facebook.react.modules.blob.BlobCollector: void install(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: OkHttpNetworkFetcher(okhttp3.Call$Factory,java.util.concurrent.Executor,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollDelta(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: java.util.zip.ZipFile access$200(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
com.facebook.react.ReactActivity: ReactActivity()
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.CircleView: void setR(com.facebook.react.bridge.Dynamic)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager getNativeViewHierarchyManager()
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.OpReorderer: int getLastMoveOutOfOrder(java.util.List)
androidx.transition.ViewUtils$2: java.lang.Object get(java.lang.Object)
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: void process(android.graphics.Bitmap)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.google.android.material.chip.ChipDrawable: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.modules.datepicker.DatePickerDialogModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.ForwardingCookieHandler: com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver access$000(com.facebook.react.modules.network.ForwardingCookieHandler)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
com.swmansion.rnscreens.Screen: java.lang.Boolean isStatusBarHidden()
com.facebook.react.views.scroll.ReactScrollView: void flashScrollIndicators()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getFirstChildPosition()
com.facebook.imagepipeline.platform.OreoDecoder: boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
com.google.android.material.shape.AbsoluteCornerSize: float getCornerSize(android.graphics.RectF)
androidx.recyclerview.widget.FastScroller: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.facebook.imagepipeline.request.ImageRequest: int getSourceUriType()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.ReadableMapBuffer getReadableMapBuffer()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void disableFpsListener()
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomRightCorner()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: ReactUnimplementedView(android.content.Context)
com.facebook.react.common.futures.SimpleSettableFuture: void checkNotSet()
kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)
com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,boolean,java.util.concurrent.ExecutorService)
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void getOffset(int[])
com.facebook.react.modules.network.ForwardingCookieHandler: void destroy()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidth(float)
okhttp3.Cache: void update$okhttp(okhttp3.Response,okhttp3.Response)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getFinished$okhttp()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
com.facebook.imagepipeline.memory.BasePool: boolean isReusable(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
com.google.android.material.chip.Chip: void initOutlineProvider()
com.google.android.material.ripple.RippleDrawableCompat: void setTintList(android.content.res.ColorStateList)
com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: void onFailureImpl(java.lang.Throwable)
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(android.view.View,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)
kotlin.ranges.IntRange: int hashCode()
com.google.android.material.textfield.EndIconDelegate: boolean isBoxBackgroundModeSupported(int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.imagepipeline.producers.InternalProducerListener: InternalProducerListener(com.facebook.imagepipeline.producers.ProducerListener,com.facebook.imagepipeline.producers.ProducerListener2)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderWidthOrDefaultTo(float,int)
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: java.io.FileDescriptor getMemoryFileDescriptor(android.os.MemoryFile)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)
androidx.transition.ChangeBounds$2: java.lang.Object get(java.lang.Object)
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(android.view.View,float)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Request)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.yoga.YogaNodeJNIBase: void setHeightAuto()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: boolean requiresExtraMap(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()
com.facebook.react.views.image.ReactImageView: boolean hasOverlappingRendering()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void validate()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: void run()
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,java.lang.String)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: CascadingMenuPopup$CascadingMenuInfo(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int)
okhttp3.CacheControl: boolean onlyIfCached()
com.facebook.common.streams.TailAppendingInputStream: int read(byte[])
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeApplyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void notifyDataSetChanged()
androidx.transition.ChangeBounds$1: void set(android.graphics.drawable.Drawable,android.graphics.PointF)
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void run()
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: ViewManagersPropertyCache$MapPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.horcrux.svg.LineView: void setX2(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.transition.ViewUtils: void clearNonTransitionAlpha(android.view.View)
com.google.android.material.textfield.TextInputLayout: boolean canDrawStroke()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
androidx.fragment.app.FragmentManager$PopBackStackState: FragmentManager$PopBackStackState(androidx.fragment.app.FragmentManager,java.lang.String,int,int)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: void updateLiftedStateIfNeeded(android.view.View,android.view.View)
com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeElevationOverlayEnabled()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy compute()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewAttachedToWindow(android.view.View)
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.ConnectionSpec: void apply$okhttp(javax.net.ssl.SSLSocket,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.yoga.YogaConfig: YogaConfig()
com.google.android.material.textfield.PasswordToggleEndIconDelegate: android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.recyclerview.widget.ChildHelper$Bucket: void set(int)
com.facebook.react.modules.core.ReactChoreographer: void initialize()
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.app.ToolbarActionBar$2: boolean onMenuItemClick(android.view.MenuItem)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
com.facebook.react.uimanager.events.Event: void onDispose()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setName(android.view.View,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.common.streams.LimitedInputStream: void mark(int)
androidx.transition.TransitionSet: androidx.transition.Transition getTransitionAt(int)
com.facebook.react.viewmanagers.RNSVGPatternManagerDelegate: RNSVGPatternManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
com.facebook.react.animated.PropsAnimatedNode: PropsAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void set(float,float,float)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationEnd(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.imagepipeline.cache.BufferedDiskCache: BufferedDiskCache(com.facebook.cache.disk.FileCache,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.PooledByteStreams,java.util.concurrent.Executor,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
com.facebook.react.MemoryPressureRouter: void onTrimMemory(int)
com.horcrux.svg.MaskView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1: void onCancellationRequested()
androidx.appcompat.widget.ResourcesWrapper: int getInteger(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion()
okhttp3.internal.connection.RealConnectionPool: boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean)
com.facebook.react.LazyReactPackage$2$1: boolean hasNext()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
okhttp3.internal.concurrent.TaskQueue: TaskQueue(okhttp3.internal.concurrent.TaskRunner,java.lang.String)
com.facebook.react.views.textinput.ReactEditText$1: ReactEditText$1(com.facebook.react.views.textinput.ReactEditText)
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.ResponseBody access$100(com.facebook.react.modules.network.ProgressResponseBody)
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
com.google.android.material.datepicker.MaterialDatePicker$4: void onClick(android.view.View)
com.facebook.react.viewmanagers.RNSVGMarkerManagerDelegate: RNSVGMarkerManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueLayoutUpdateFinished(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
okio.internal.BufferKt: int selectPrefix(okio.Buffer,okio.Options,boolean)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_NANOS$cp()
com.facebook.react.modules.core.ChoreographerCompat: void postFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.imagepipeline.producers.FetchState: void setResponseBytesRange(com.facebook.imagepipeline.common.BytesRange)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText)
com.facebook.react.common.SingleThreadAsserter: void assertNow()
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: AnimatedStateListDrawableCompat$AnimationDrawableTransition(android.graphics.drawable.AnimationDrawable,boolean,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.transition.ChangeBounds$ViewBounds: void setTopLeft(android.graphics.PointF)
androidx.appcompat.widget.SwitchCompat: void toggle()
com.facebook.datasource.AbstractDataSource: boolean hasFailed()
androidx.transition.PathProperty: java.lang.Float get(java.lang.Object)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(android.view.View,java.lang.String)
com.google.android.material.shape.ShapePath$ArcShadowOperation: void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int getChildDrawingOrder(int,int)
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocus(int,android.graphics.Rect)
com.facebook.datasource.AbstractDataSource: AbstractDataSource()
com.google.android.material.datepicker.MonthAdapter: java.lang.Object getItem(int)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isItemPrefetchEnabled()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
okio.Segment: okio.Segment sharedCopy()
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.jni.DestructorThread$1: void run()
okhttp3.internal.HostnamesKt: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getLayout(int)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache getSmallImageBufferedDiskCache()
com.facebook.react.ReactRootView: boolean isRootViewTagSet()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void execute()
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setName(android.view.View,java.lang.String)
com.google.android.material.ripple.RippleDrawableCompat: boolean isStateful()
com.facebook.react.views.text.ReactTextUpdate: int getJustificationMode()
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.decoder.ImageDecoder access$1000(com.facebook.imagepipeline.producers.DecodeProducer)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
androidx.collection.ArrayMap: void putAll(java.util.Map)
com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
androidx.recyclerview.widget.RecyclerView$Recycler: void clear()
com.facebook.drawee.drawable.ScaleTypeDrawable: void getTransform(android.graphics.Matrix)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitY: ScalingUtils$ScaleTypeFitY()
androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRootTag(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getKeyOffsetForBucketIndex(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillOpacity(android.view.View,float)
okio.BlackholeSink: okio.Timeout timeout()
com.facebook.react.modules.datepicker.DatePickerDialogFragment: DatePickerDialogFragment()
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundInner()
com.facebook.react.uimanager.UIImplementation: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.common.references.CloseableReference$1: void release(java.io.Closeable)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitY: java.lang.String toString()
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()
com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()
androidx.lifecycle.SavedStateHandleController$1: SavedStateHandleController$1(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentEnd()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
androidx.core.provider.CallbackWithHandler: void onTypefaceRequestFailed(int)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: com.facebook.imagepipeline.memory.MemoryChunk alloc(int)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forLocalStorageRead()
com.facebook.react.modules.network.ReactCookieJarContainer: ReactCookieJarContainer()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
okhttp3.Dispatcher: int runningCallsCount()
com.zoontek.rnbootsplash.RNBootSplashModule: void waitAndShiftNextTask()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void mBackClickListener$lambda-1(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawTickMarks(android.graphics.Canvas)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
androidx.fragment.app.Fragment: void initLifecycle()
com.facebook.react.uimanager.ThemedReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.horcrux.svg.SvgViewModule$1$1$1: void run()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateFromViewRotation()
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.datepicker.CalendarConstraints: int describeContents()
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long,boolean)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getMemoryChunkPoolStatsTracker()
okio.RealBufferedSink$outputStream$1: void write(byte[],int,int)
com.facebook.react.ReactInstanceManager$6: ReactInstanceManager$6(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactInstanceEventListener[],com.facebook.react.bridge.ReactApplicationContext)
com.facebook.common.internal.ImmutableMap: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
okhttp3.Response: okhttp3.internal.connection.Exchange exchange()
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
com.facebook.imagepipeline.request.ImageRequest: boolean isMemoryCacheEnabled()
com.google.android.material.appbar.AppBarLayout$LayoutParams: AppBarLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: long runOnce()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,java.lang.String)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexGrow(float)
androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.imagepipeline.memory.GenericByteArrayPool: GenericByteArrayPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.common.internal.Sets: java.util.Set newIdentityHashSet()
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat getImageFormat(java.io.InputStream)
com.facebook.drawee.drawable.MatrixDrawable: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
okio.AsyncTimeout$source$1: okio.Timeout timeout()
com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
com.google.android.material.elevation.ElevationOverlayProvider: ElevationOverlayProvider(android.content.Context)
com.facebook.react.ReactRootView: void unmountReactApplication()
androidx.transition.ChangeBounds$3: android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getReadable$okhttp()
com.facebook.hermes.reactexecutor.HermesExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.drawee.controller.AbstractDraweeController: boolean onClick()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getHeight()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(android.view.View,float)
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence drop(int)
androidx.appcompat.widget.SuggestionsAdapter: void updateSpinnerState(android.database.Cursor)
com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker: void trackCloseableReferenceLeak(com.facebook.common.references.SharedReference,java.lang.Throwable)
com.horcrux.svg.PatternView: void setMeetOrSlice(int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,char,char,boolean)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidValueError(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
com.facebook.react.views.text.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
androidx.appcompat.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
com.facebook.react.views.text.TextLayoutManager: void setCachedSpannabledForTag(int,android.text.Spannable)
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams: com.facebook.imagepipeline.memory.PoolParams get()
com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map)
com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig build()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.ReactInstanceManager$2: ReactInstanceManager$2(com.facebook.react.ReactInstanceManager)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: ReactScrollViewHelper$OverScrollerDurationGetter(android.content.Context)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: BottomSheetBehavior$SavedState$1()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: LocalExifThumbnailProducer$1(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String prettyPrint()
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaNode removeChildAt(int)
com.google.android.material.shape.MaterialShapeDrawable: void setTint(int)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
okhttp3.RequestBody$Companion: RequestBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.RealBufferedSource$inputStream$1: int read()
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
okio.Buffer: okio.BufferedSink writeInt(int)
com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
com.facebook.react.views.textinput.ReactEditText: void onStartTemporaryDetach()
androidx.cardview.widget.RoundRectDrawableWithShadow: void setBackground(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView$1: ReactScrollView$1(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.yoga.YogaNodeJNIBase: void setMaxWidthPercent(float)
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$400(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: void onCancellationRequested()
androidx.fragment.app.Fragment: java.lang.String toString()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.modules.storage.AsyncStorageModule$6: AsyncStorageModule$6(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
okhttp3.Response: long sentRequestAtMillis()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)
com.facebook.react.views.text.ShadowStyleSpan: void updateDrawState(android.text.TextPaint)
androidx.appcompat.view.menu.CascadingMenuPopup: int getNextMenuPosition(int)
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromViewManagerClassDefinition(java.lang.Class,java.util.Map)
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: short getKey()
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
com.facebook.drawee.controller.AbstractDraweeController: void release()
com.facebook.react.views.scroll.ReactScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flingAndSnap(int)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
com.google.android.material.datepicker.DateValidatorPointForward: com.google.android.material.datepicker.DateValidatorPointForward from(long)
com.facebook.react.views.scroll.ReactScrollView: int predictFinalScrollPosition(int)
com.google.android.material.appbar.HeaderScrollingViewBehavior: int resolveGravity(int)
okhttp3.Cache$Companion: java.util.Set varyFields(okhttp3.Headers)
androidx.appcompat.view.menu.StandardMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onMemoryCacheMiss(com.facebook.cache.common.CacheKey)
okio.RealBufferedSink: void flush()
com.facebook.react.ReactPackageHelper: java.lang.Iterable getNativeModuleIterator(com.facebook.react.ReactPackage,com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)
com.horcrux.svg.PathView: PathView(com.facebook.react.bridge.ReactContext)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.horcrux.svg.TSpanView: double getSubtreeTextChunksTotalAdvance(android.graphics.Paint)
com.google.android.material.bottomappbar.BottomAppBar$8: void onAnimationStart(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2: SwipeRefreshLayout$2(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
com.horcrux.svg.SvgViewManager: void setVbWidth(android.view.View,float)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.horcrux.svg.SvgViewModule$1$1$1: SvgViewModule$1$1$1(com.horcrux.svg.SvgViewModule$1$1)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: MenuItemWrapperICS$ActionProviderWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
androidx.transition.FragmentTransitionSupport$3: void onTransitionEnd(androidx.transition.Transition)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)
androidx.lifecycle.LiveData: void onInactive()
com.facebook.react.modules.core.JavaTimerManager: void onInstanceDestroy()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.common.internal.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
androidx.customview.widget.FocusStrategy$SequentialComparator: FocusStrategy$SequentialComparator(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int,java.lang.CharSequence)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.textfield.IndicatorViewController: boolean isHelperTextEnabled()
com.facebook.cache.disk.DiskCacheConfig$1: DiskCacheConfig$1(com.facebook.cache.disk.DiskCacheConfig)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)
androidx.fragment.app.FragmentManagerViewModel: boolean removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.facebook.drawee.drawable.RoundedColorDrawable: void draw(android.graphics.Canvas)
com.google.android.material.datepicker.MaterialDatePicker: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
com.facebook.react.views.text.TextLayoutManagerMapBuffer$SetSpanOperation: void execute(android.text.Spannable,int)
okhttp3.internal.http2.Http2Connection: void writeHeaders$okhttp(int,boolean,java.util.List)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getRemoveDuration()
com.facebook.react.modules.dialog.AlertFragment: void onClick(android.content.DialogInterface,int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
com.facebook.common.executors.CallerThreadExecutor: boolean isShutdown()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.graphics.drawable.Drawable getBackground()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
kotlin.collections.AbstractList$SubList: int getSize()
androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
androidx.recyclerview.widget.LinearLayoutManager: void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)
com.facebook.common.webp.WebpSupportStatus: boolean isLosslessWebpHeader(byte[],int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.views.text.TextInlineImageSpan buildInlineImageSpan()
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float)
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.common.CacheErrorLogger access$1000(com.facebook.cache.disk.DefaultDiskStorage)
com.google.android.material.floatingactionbutton.FloatingActionButton: int resolveAdjustedSize(int,int)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStopped()
androidx.fragment.app.FragmentStateManager: int computeMaxState()
com.facebook.imagepipeline.memory.LruBitmapPool: void release(android.graphics.Bitmap)
com.facebook.react.modules.network.RequestBodyUtil$1: RequestBodyUtil$1(okhttp3.MediaType,java.io.InputStream)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getForceStaticImage()
com.facebook.react.animated.NativeAnimatedModule$1: void doFrameGuarded(long)
androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)
kotlin.collections.EmptyList: java.lang.Void get(int)
androidx.transition.AutoTransition: AutoTransition()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer getMapBuffer(short)
com.facebook.datasource.FirstAvailableDataSourceSupplier: boolean equals(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$500(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void access$100(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,java.lang.Throwable)
androidx.cardview.widget.CardViewBaseImpl: void initStatic()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.concurrent.TaskLoggerKt: void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.google.android.material.resources.CancelableFontCallback: void onFontRetrievalFailed(int)
com.facebook.drawee.drawable.ScaleTypeDrawable: void setFocusPoint(android.graphics.PointF)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.FragmentTransition$3: void run()
com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void onNewResultImpl(com.facebook.common.references.CloseableReference,int,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.common.RotationOptions: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.google.android.material.internal.ThemeEnforcement: void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getExpectedNumFrames()
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: void run()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.DiskCacheReadProducer)
okio.Segment: Segment(byte[],int,int,boolean,boolean)
okhttp3.internal.platform.android.AndroidLogHandler: AndroidLogHandler()
com.google.android.material.internal.StateListAnimator: StateListAnimator()
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.scroll.ReactScrollView: void updateStateOnScroll(int,int)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.coinapp.MainApplication$1: java.util.List getPackages()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float getStartingEndTrim()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter findNodeSetter(java.lang.Class)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.facebook.imagepipeline.cache.BoundedLinkedHashSet: boolean contains(java.lang.Object)
com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.shape.MaterialShapeDrawable$2: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize)
androidx.transition.ViewUtilsApi29: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.google.android.material.circularreveal.CircularRevealCompat$1: CircularRevealCompat$1(com.google.android.material.circularreveal.CircularRevealWidget)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void onChange()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
okhttp3.HttpUrl: java.lang.String redact()
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
androidx.collection.ArraySet: ArraySet()
com.facebook.react.bridge.Dynamic: int asInt()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: void onAnimationCancel(android.animation.Animator)
androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean getPadding(android.graphics.Rect)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
okio.ForwardingTimeout: okio.Timeout clearTimeout()
com.th3rdwave.safeareacontext.SafeAreaProvider: void onAttachedToWindow()
com.facebook.react.ReactInstanceManager$1: ReactInstanceManager$1(com.facebook.react.ReactInstanceManager)
com.facebook.react.views.modal.ModalHostShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
androidx.transition.ViewOverlayApi14: android.view.ViewGroup getContentView(android.view.View)
androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
com.google.android.material.shape.ShapePath: float getEndShadowAngle()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void flagRemovedAndOffsetPosition(int,int,boolean)
com.swmansion.rnscreens.ScreenStack: void access$setupBackHandlerIfNeeded(com.swmansion.rnscreens.ScreenStack,com.swmansion.rnscreens.ScreenStackFragment)
com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
kotlin.comparisons.NaturalOrderComparator: NaturalOrderComparator()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
com.google.android.material.stateful.ExtendableSavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
com.facebook.drawee.controller.ForwardingControllerListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean getRetainImageOnFailure()
androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setLowestPermittedRequestLevel(com.facebook.imagepipeline.request.ImageRequest$RequestLevel)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.EventDispatcherImpl$2: EventDispatcherImpl$2(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
androidx.fragment.app.FragmentStateManager: void start()
androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
okio.RealBufferedSource: long read(okio.Buffer,long)
com.facebook.soloader.SoLoader: void loadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: boolean boundsMatch()
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
com.horcrux.svg.SvgViewModule$1: SvgViewModule$1(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.horcrux.svg.LinearGradientView: void setY1(java.lang.String)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: PartialDiskCacheProducer$PartialDiskCacheConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateImageMatrixScale()
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
com.horcrux.svg.PathParser: void smoothCurve(float,float,float,float)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
okhttp3.internal.connection.Exchange$RequestBodySink: Exchange$RequestBodySink(okhttp3.internal.connection.Exchange,okio.Sink,long)
com.facebook.common.internal.CountingOutputStream: CountingOutputStream(java.io.OutputStream)
okio.InputStreamSource: InputStreamSource(java.io.InputStream,okio.Timeout)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenFragment: void onDestroy()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.horcrux.svg.TextProperties$TextDecoration: TextProperties$TextDecoration(java.lang.String,int,java.lang.String)
bolts.AndroidExecutors: AndroidExecutors()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
com.facebook.datasource.AbstractDataSource: void notifyProgressUpdate()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.common.file.FileUtils: void rename(java.io.File,java.io.File)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskQueue newQueue()
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
com.google.android.material.datepicker.MaterialCalendar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.cache.common.SimpleCacheKey: int hashCode()
okio.Segment$Companion: Segment$Companion()
com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)
okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: ReactHorizontalScrollView$2(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
com.facebook.react.modules.core.ReactChoreographer: java.util.ArrayDeque[] access$500(com.facebook.react.modules.core.ReactChoreographer)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat determineImageFormat(java.io.InputStream)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.facebook.imagepipeline.image.EncodedImage: int getHeight()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.material.textfield.TextInputLayout: boolean isStartIconVisible()
androidx.customview.widget.ViewDragHelper$1: float getInterpolation(float)
com.facebook.yoga.YogaNodeJNIBase: void setAlignItems(com.facebook.yoga.YogaAlign)
com.facebook.yoga.YogaNodeJNIFinalizer: void freeNatives()
okhttp3.internal.http2.Header$Companion: Header$Companion()
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okio.Buffer: okio.Buffer emitCompleteSegments()
com.facebook.drawee.drawable.RoundedCornersDrawable: void setBorder(int,float)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: int getOrder()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: NativeAnimatedNodesManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
com.google.android.material.internal.TextDrawableHelper: void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
okio.RealBufferedSource: okio.Buffer getBuffer()
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
com.google.android.material.textfield.TextInputLayout: void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,int,int)
com.facebook.react.touch.JSResponderHandler: void clearJSResponder()
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
androidx.appcompat.widget.TooltipCompatHandler$2: TooltipCompatHandler$2(androidx.appcompat.widget.TooltipCompatHandler)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void write(byte[],int,int)
com.swmansion.rnscreens.ScreenStack$Companion: boolean access$isTransparent(com.swmansion.rnscreens.ScreenStack$Companion,com.swmansion.rnscreens.ScreenStackFragment)
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: void visitFile(java.io.File)
com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: com.facebook.imagepipeline.memory.NativeMemoryChunk alloc(int)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.transition.Transition: void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipDrawable: void setUseCompatRipple(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
okhttp3.Request: okhttp3.RequestBody body()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropType()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: ReactEditTextInputConnectionWrapper(android.view.inputmethod.InputConnection,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.events.EventDispatcher)
com.google.android.material.appbar.AppBarLayout: androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
com.google.android.material.datepicker.MaterialCalendarGridView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
androidx.collection.ArraySet: void clear()
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()
androidx.customview.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)
com.google.android.material.behavior.SwipeDismissBehavior$1: int clampViewPositionVertical(android.view.View,int,int)
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.concurrent.Executor access$000(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher)
com.facebook.common.memory.NoOpMemoryTrimmableRegistry: void registerMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableView: boolean setupFillPaint(android.graphics.Paint,float)
com.facebook.react.modules.websocket.WebSocketModule$1: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.google.android.material.appbar.AppBarLayout: void onAttachedToWindow()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: void onPriorityChanged()
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)
com.horcrux.svg.Point: Point(double,double)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.android.material.card.MaterialCardView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.slider.ReactSlidingCompleteEvent: boolean canCoalesce()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isEncodedCacheEnabled()
com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task remove(com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: ViewPropertyAnimatorCompatSet$1(androidx.appcompat.view.ViewPropertyAnimatorCompatSet)
androidx.appcompat.view.menu.MenuPopup: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.recyclerview.widget.RecyclerView$2: void run()
androidx.cardview.widget.RoundRectDrawableWithShadow: int getOpacity()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter: java.lang.String toString()
com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.react.views.text.TextAttributeProps: boolean getBooleanProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: FloatingActionButtonImpl$4(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: CircularRevealWidget$CircularRevealScrimColorProperty(java.lang.String)
androidx.recyclerview.widget.RecyclerView$5: int getChildCount()
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setScaleDownInsideBorders(boolean)
com.swmansion.rnscreens.events.ScreenDismissedEvent: short getCoalescingKey()
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
okio.RealBufferedSink: long writeAll(okio.Source)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()
androidx.recyclerview.widget.GridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.ReactRootView: void handleException(java.lang.Throwable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.jstasks.HeadlessJsTaskContext: com.facebook.react.jstasks.HeadlessJsTaskContext getInstance(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(android.view.View,float)
com.facebook.debug.holder.NoopPrinter: NoopPrinter()
com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.memory.PooledByteBufferFactory access$200(com.facebook.imagepipeline.producers.WebpTranscodeProducer)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
androidx.transition.PathProperty: void set(java.lang.Object,java.lang.Object)
okhttp3.internal.HostnamesKt: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalResourceFetchSequence()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.ReactActivity: void onBackPressed()
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
okhttp3.TlsVersion$Companion: TlsVersion$Companion()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.transition.TransitionValuesMaps: TransitionValuesMaps()
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.facebook.cache.common.NoOpCacheEventListener: void onWriteAttempt(com.facebook.cache.common.CacheEvent)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
com.facebook.react.ReactInstanceManager$3: ReactInstanceManager$3(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.scroll.VelocityHelper: float getXVelocity()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float)
okio.Buffer: void close()
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationEnd(android.view.View)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
androidx.transition.ViewUtilsBase: void clearNonTransitionAlpha(android.view.View)
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlex(float)
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
com.horcrux.svg.RNSVGMarkerPosition: double rad2deg(double)
com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateHalfExpandedOffset()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okhttp3.Cache$CacheResponseBody$1: void close()
com.facebook.react.uimanager.events.EventDispatcherImpl: void moveStagedEventsToDispatchQueue()
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorSchemeColors(int[])
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()
com.facebook.react.modules.statusbar.StatusBarModule$3: StatusBarModule$3(com.facebook.react.modules.statusbar.StatusBarModule,boolean,android.app.Activity)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
androidx.recyclerview.widget.ChildHelper: java.lang.String toString()
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.ReactActivityDelegate: void onWindowFocusChanged(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okio.Buffer: long readLong()
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController build()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollHorizontally()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule$12: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean)
com.facebook.imagepipeline.memory.AshmemMemoryChunk: byte read(int)
com.horcrux.svg.PathParser: void parse_list_separator()
com.facebook.react.modules.core.JavaTimerManager: void clearChoreographerIdleCallback()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
androidx.recyclerview.widget.GridLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink sink(java.io.File)
androidx.fragment.app.FragmentManager$5: void onAnimationEnd(android.animation.Animator)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.react.modules.statusbar.StatusBarModule$2: StatusBarModule$2(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
com.google.android.material.shape.ShapePath$PathArcOperation: float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation)
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup createPopup()
com.facebook.imagepipeline.image.EncodedImage: android.util.Pair readWebPImageSize()
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType()
com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)
com.facebook.imagepipeline.image.EncodedImage: java.lang.String getFirstBytesAsHexString(int)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: boolean shouldRotateUsingExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)
okhttp3.internal.connection.ExchangeFinder: void trackFailure(java.io.IOException)
com.facebook.soloader.ApkSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setVectorEffect(android.view.View,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: java.lang.Float get(android.view.View)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.MemoryPressureRouter: void onLowMemory()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(android.view.View,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8: void applyTransformation(float,android.view.animation.Transformation)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
okio.ByteString: okio.ByteString toAsciiLowercase()
com.facebook.react.views.text.ReactTextView$1: int compare(java.lang.Object,java.lang.Object)
androidx.collection.MapCollections$ArrayIterator: void remove()
com.google.android.material.chip.ChipDrawable: void setCloseIconSize(float)
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
okhttp3.internal.platform.ConscryptPlatform$Companion: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
kotlin.collections.EmptyMap: void putAll(java.util.Map)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.horcrux.svg.PropHelper: double fromRelative(com.horcrux.svg.SVGLength,double,double,double,double)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Object)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver getPushObserver$okhttp()
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)
com.facebook.react.viewmanagers.RNSVGTextManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicHeight()
androidx.fragment.app.FragmentTransition$5: void run()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
com.facebook.react.CoreModulesPackage$2: java.util.List getViewManagerNames()
com.facebook.react.uimanager.events.TouchEvent: boolean canCoalesce()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.request.BasePostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
androidx.lifecycle.ReportFragment: void onStart()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
okhttp3.internal.concurrent.TaskLoggerKt: void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2: void run()
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean addNewConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: DefaultDiskStorage$PurgingVisitor(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
com.facebook.imagepipeline.producers.BaseProducerContext: void callOnCancellationRequested(java.util.List)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: java.lang.Object get(java.lang.Object)
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: java.lang.Object get(int)
com.facebook.react.ReactRootView: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(android.graphics.Rect)
com.facebook.react.modules.core.JavaTimerManager: void onHostDestroy()
com.facebook.drawee.generic.RoundingParams: boolean getPaintFilterBitmap()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.cardview.widget.RoundRectDrawable: void getOutline(android.graphics.Outline)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findLastPartiallyVisibleItemPosition()
com.zoontek.rnbootsplash.RNBootSplashModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.zoontek.rnbootsplash.RNBootSplashModule)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromReadableMap(com.facebook.react.uimanager.ReactStylesDiffMap)
com.horcrux.svg.MarkerView: void setAlign(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setEvictionReason(com.facebook.cache.common.CacheEventListener$EvictionReason)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.concurrent.TaskQueue: void shutdown()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void onProgressUpdate(com.facebook.datasource.DataSource)
androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayout: ReactDrawerLayout(com.facebook.react.bridge.ReactContext)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)
com.facebook.drawee.view.DraweeHolder: DraweeHolder(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getTopEdge()
com.facebook.drawee.gestures.GestureDetector: void setClickListener(com.facebook.drawee.gestures.GestureDetector$ClickListener)
com.facebook.datasource.DataSources$1: java.lang.Object get()
okio.ByteString$Companion: okio.ByteString of$default(okio.ByteString$Companion,byte[],int,int,int,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.MenuBuilder: void close()
com.facebook.react.views.text.ReactTextUpdate: boolean containsImages()
com.facebook.drawee.drawable.ArrayDrawable: int getIntrinsicHeight()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.fragment.app.FragmentState: java.lang.String toString()
androidx.cardview.widget.RoundRectDrawable: float getPadding()
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
com.facebook.yoga.YogaNodeJNIBase: void setWidthAuto()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void access$300(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.modal.ReactModalHostView: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.google.android.material.behavior.SwipeDismissBehavior: float clamp(float,float,float)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayIfNeeded(int,float)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setBorder(int,float)
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap getSampleTile()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState: OkHttpNetworkFetcher$OkHttpNetworkFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.common.internal.ImmutableMap: java.util.Map of(java.lang.Object,java.lang.Object)
okhttp3.internal.ws.RealWebSocket: void writePingFrame$okhttp()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd: ScalingUtils$ScaleTypeFitEnd()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternheight(com.horcrux.svg.PatternView,java.lang.String)
com.facebook.react.views.view.ReactDrawableHelper: int getColor(android.content.Context,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToDecodeSequence(com.facebook.imagepipeline.producers.Producer)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRequestPriority(com.facebook.imagepipeline.common.Priority)
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.String toString()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Comparable,int,int)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.controller.AbstractDraweeController: void reportRelease(java.util.Map,java.util.Map)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateAfter(int)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap createEventDataSource()
com.facebook.common.executors.CallerThreadExecutor: java.util.List shutdownNow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: java.nio.ByteBuffer getByteBuffer()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.Headers$Companion: Headers$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(android.view.View,java.lang.String)
com.facebook.react.bridge.Arguments$1: int size()
com.horcrux.svg.SVGLength: java.lang.String toString(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.horcrux.svg.GlyphContext: void popContext()
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Response)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.react.devsupport.DisabledDevSupportManager: boolean hasUpToDateJSBundleInCache()
com.facebook.react.ReactDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()
androidx.appcompat.app.AlertController: void setView(android.view.View,int,int,int,int)
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(java.lang.Object,int)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
okio.ByteString$Companion: ByteString$Companion()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.datepicker.DatePickerMode: DatePickerMode(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String getEventName()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentAnim$3: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int hashCode()
com.google.android.material.shape.ShapePath$LineShadowOperation: float getAngle()
com.facebook.react.views.text.TextAttributeProps: void setAllowFontScaling(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
androidx.core.util.LogWriter: void flush()
okio.ForwardingSource: void close()
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
com.facebook.react.bridge.ReactBridge: void staticInit()
com.horcrux.svg.MarkerView: void setRefY(com.facebook.react.bridge.Dynamic)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
okio.AsyncTimeout: okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setAlpha(int)
okhttp3.Route: int hashCode()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.internal.CollapsingTextHelper: void setExpandedBounds(int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int getChangingConfigurations()
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()
okhttp3.Response: Response(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange)
com.google.android.material.internal.FlowLayout: void onLayout(boolean,int,int,int,int)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void maybeSetIndexOfDataSourceWithResult(int,com.facebook.datasource.DataSource,boolean)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.view.SupportMenuInflater$MenuState: void resetGroup()
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: ResourceManagerInternal$AsldcInflateDelegate()
androidx.fragment.app.DialogFragment: void onDestroyView()
com.facebook.imagepipeline.memory.BitmapCounter: int getMaxCount()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: void drainCache()
com.google.android.material.animation.MotionSpec: void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
com.facebook.react.ReactActivityDelegate: boolean onBackPressed()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.horcrux.svg.VirtualViewManager$1: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.soloader.SoLoader: void doLoadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: AnimatedStateListDrawableCompat$AnimatedStateListState(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.toast.ToastModule$3: ToastModule$3(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int,int,int)
com.zoontek.rnbootsplash.RNBootSplashTask: com.zoontek.rnbootsplash.RNBootSplashTask$Type getType()
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.MediaType contentType()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.executors.SerialExecutorService getExecutorServiceForAnimatedImages()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void transcodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.recyclerview.widget.LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int)
com.facebook.imagepipeline.memory.PoolConfig: int getBitmapPoolMaxBitmapSize()
okhttp3.HttpUrl$Builder: void setEncodedPassword$okhttp(java.lang.String)
androidx.core.os.BuildCompat: boolean isAtLeastR()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void reportViewVisible(com.facebook.drawee.backends.pipeline.info.ImagePerfState,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.customview.widget.ViewDragHelper: void clearMotionHistory()
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
com.facebook.yoga.YogaConfigJNIFinalizer: void finalize()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.facebook.react.views.image.ReactImageView$1: ReactImageView$1(com.facebook.react.views.image.ReactImageView,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2: LocalVideoThumbnailProducer$2(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)
com.swmansion.rnscreens.Screen: void onAttachedToWindow()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.datasource.AbstractDataSource$2: AbstractDataSource$2(com.facebook.datasource.AbstractDataSource,com.facebook.datasource.DataSubscriber)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: android.graphics.Bitmap$CompressFormat getOutputFormat(com.facebook.imageformat.ImageFormat)
com.google.android.material.transformation.FabTransformationScrimBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)
androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
com.google.android.material.shape.ShapePath$PathLineOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)
com.facebook.react.views.textinput.ReactTextInputManager: android.widget.EditText createInternalEditText(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
com.google.android.material.chip.Chip: void setElevation(float)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.modules.websocket.WebSocketModule$1: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocusInternal()
androidx.coordinatorlayout.widget.CoordinatorLayout: void addPreDrawListener()
androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()
com.horcrux.svg.VirtualViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool getBufferMemoryChunkPool()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: AppCompatDelegateImpl$PanelMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
kotlin.jvm.internal.ArrayIterator: void remove()
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream(int)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: BouncyCastleSocketAdapter$Companion$factory$1()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object)
com.swmansion.rnscreens.events.ScreenWillAppearEvent: short getCoalescingKey()
kotlin.collections.AbstractList: java.util.List subList(int,int)
kotlin.text.Regex: boolean matches(java.lang.CharSequence)
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String)
com.facebook.systrace.Systrace: void beginAsyncSection(long,java.lang.String,int)
com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendarOf(java.util.Calendar)
com.facebook.soloader.UnpackingSoSource: void setSoSourceAbis(java.lang.String[])
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.facebook.react.animated.NativeAnimatedNodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getHoveredFocusedTranslationZ()
com.facebook.imageutils.JfifUtil: int getAutoRotateAngleFromOrientation(int)
com.facebook.react.views.text.ReactTextShadowNode: boolean isVirtualAnchor()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
androidx.appcompat.widget.SuggestionsAdapter: void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
androidx.recyclerview.widget.LinearLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setAlpha(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
com.facebook.react.uimanager.UIViewOperationQueue$1: void run()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$000(com.facebook.react.views.scroll.ReactHorizontalScrollView)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence)
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
kotlin.collections.EmptyList: java.lang.Object remove(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.cardview.widget.CardViewApi17Impl: void initStatic()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.swmansion.rnscreens.events.StackFinishTransitioningEvent: StackFinishTransitioningEvent(int)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean hasOutgoingEdges(java.lang.Object)
androidx.appcompat.widget.DropDownListView: boolean isFocused()
com.facebook.imagepipeline.producers.InternalRequestListener: void onRequestStart(com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.modules.storage.ReactDatabaseSupplier: com.facebook.react.modules.storage.ReactDatabaseSupplier getInstance(android.content.Context)
com.google.android.material.elevation.ElevationOverlayProvider: float calculateOverlayAlphaFraction(float)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onRequestFailure(com.facebook.imagepipeline.producers.ProducerContext,java.lang.Throwable)
okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)
com.facebook.react.perflogger.NativeModulePerfLogger: void maybeLoadOtherSoLibraries()
okhttp3.Cache$RealCacheRequest: void abort()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Cross(double[],double[])
com.google.android.material.animation.MotionSpec: void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task clearAll()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setName(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.facebook.common.references.FinalizerCloseableReference: void close()
com.facebook.common.util.UriUtil: boolean isDataUri(android.net.Uri)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
androidx.fragment.app.FragmentHostCallback: boolean onShouldShowRequestPermissionRationale(java.lang.String)
okhttp3.internal.connection.RealCall: java.io.IOException noMoreExchanges$okhttp(java.io.IOException)
androidx.transition.FragmentTransitionSupport: void setEpicenter(java.lang.Object,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void close()
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: java.lang.Object alloc(int)
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: DefaultDiskStorage$PurgingVisitor(com.facebook.cache.disk.DefaultDiskStorage)
com.facebook.common.executors.ScheduledFutureImpl: ScheduledFutureImpl(android.os.Handler,java.lang.Runnable,java.lang.Object)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.transition.TransitionSet: androidx.transition.TransitionSet setStartDelay(long)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory getWebpBitmapFactory()
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView getReactRootView()
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket: java.lang.Object pop()
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: ReactTextInputEndEditingEvent(int,int,java.lang.String)
androidx.collection.LruCache: java.lang.String toString()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
com.horcrux.svg.DefsView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion()
com.facebook.soloader.ApplicationSoSource: java.io.File getNativeLibDirFromContext(android.content.Context)
com.facebook.react.views.textinput.ReactEditText: void requestFocusFromJS()
com.horcrux.svg.TextProperties$FontStyle: TextProperties$FontStyle(java.lang.String,int)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Response)
kotlin.collections.IntIterator: void remove()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setRotate(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.graphics.drawable.Drawable createDrawable(com.facebook.common.references.CloseableReference)
com.google.android.material.textfield.TextInputLayout$4: TextInputLayout$4(com.google.android.material.textfield.TextInputLayout)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
com.facebook.imagepipeline.memory.MemoryChunkPool: boolean isReusable(com.facebook.imagepipeline.memory.MemoryChunk)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void onClick(android.content.DialogInterface,int)
com.facebook.imagepipeline.producers.BaseProducerContext: void setExtra(java.lang.String,java.lang.Object)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: java.lang.String getId()
com.facebook.imagepipeline.core.CloseableReferenceFactory: com.facebook.common.references.CloseableReference create(java.io.Closeable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(com.horcrux.svg.TextPathView,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeight(float)
com.facebook.react.NativeModuleRegistryBuilder: NativeModuleRegistryBuilder(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.references.CloseableReference newClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
okhttp3.RequestBody$Companion: RequestBody$Companion()
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveSpinner(float)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
androidx.coordinatorlayout.widget.CoordinatorLayout: void offsetChildToAnchor(android.view.View,int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.rnscreens.ScreenStack: void onDetachedFromWindow()
com.facebook.drawee.drawable.RoundedColorDrawable: void setScaleDownInsideBorders(boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
com.facebook.react.uimanager.ViewAtIndex$1: ViewAtIndex$1()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$700(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
androidx.appcompat.widget.Toolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: void onCancellationRequested()
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate3D(double[],double,double,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findPlatform()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion()
com.swmansion.rnscreens.ScreenFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.facebook.common.streams.TailAppendingInputStream: void reset()
com.horcrux.svg.ImageView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
com.google.android.material.textview.MaterialTextView: void setTextAppearance(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.material.chip.ChipDrawable: void setChipBackgroundColorResource(int)
com.facebook.react.modules.datepicker.DatePickerDialogModule$1: void run()
com.facebook.soloader.UnpackingSoSource$1: UnpackingSoSource$1(com.facebook.soloader.UnpackingSoSource,java.io.File,byte[],com.facebook.soloader.UnpackingSoSource$DsoManifest,java.io.File,com.facebook.soloader.FileLocker)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.facebook.react.animated.DiffClampAnimatedNode: double getInputNodeValue()
com.facebook.imagepipeline.producers.LocalFetchProducer$1: java.lang.Object getResult()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.drawee.drawable.ForwardingDrawable: boolean onLevelChange(int)
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: java.lang.Object invoke(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator getAlphaAnimator(float[])
com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException: DefaultDiskStorage$IncompleteFileException(long,long)
androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()
com.google.android.material.textfield.ClearTextEndIconDelegate: void initAnimators()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.memory.BufferMemoryChunk: int read(int,byte[],int,int)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.RotationOptions getRotationOptions()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl$1: DeferredReleaserConcurrentImpl$1(com.facebook.drawee.components.DeferredReleaserConcurrentImpl)
com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalResourceFetchProducer newLocalResourceFetchProducer()
androidx.transition.TransitionSet: void setupStartEndListeners()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.google.android.material.button.MaterialButtonHelper: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.MediaType: java.util.regex.Pattern access$getPARAMETER$cp()
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
androidx.transition.ChangeBounds$3: void set(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: FirstAvailableDataSourceSupplier$FirstAvailableDataSource(com.facebook.datasource.FirstAvailableDataSourceSupplier)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.common.webp.WebpSupportStatus: boolean isWebpHeader(byte[],int,int)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setRoundingParams(com.facebook.drawee.generic.RoundingParams)
com.facebook.react.views.text.ReactTextUpdate: int getJsEventCounter()
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.google.android.material.textfield.ClearTextEndIconDelegate$3: ClearTextEndIconDelegate$3(com.google.android.material.textfield.ClearTextEndIconDelegate)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: JavaTimerManager$TimerFrameCallback(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1)
androidx.recyclerview.widget.DefaultItemAnimator: boolean isRunning()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(android.view.View,java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.facebook.common.internal.Preconditions: int checkElementIndex(int,int)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager getCookieManager()
com.swmansion.rnscreens.ScreenFragment: void unregisterChildScreenContainer(com.swmansion.rnscreens.ScreenContainer)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.viewmanagers.RNSVGLineManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()
com.google.android.material.button.MaterialButton: void onAttachedToWindow()
com.google.android.material.shape.MaterialShapeDrawable: void setPadding(int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6: void applyTransformation(float,android.view.animation.Transformation)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
okio.ForwardingTimeout: okio.Timeout clearDeadline()
com.facebook.imagepipeline.producers.EncodedProbeProducer: EncodedProbeProducer(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLength(int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
androidx.appcompat.widget.AppCompatTextHelper: void onSetTextAppearance(android.content.Context,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
okio.ForwardingSink: ForwardingSink(okio.Sink)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: AppCompatSpinner$DropdownPopup$3(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.react.views.picker.ReactPickerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup,boolean)
com.facebook.common.file.FileUtils$CreateDirectoryException: FileUtils$CreateDirectoryException(java.lang.String,java.lang.Throwable)
com.horcrux.svg.PatternView: void setPatternTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp()
com.horcrux.svg.SvgView: void enableTouchEvents()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSeekBarHelper: AppCompatSeekBarHelper(android.widget.SeekBar)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.common.internal.Suppliers$3: Suppliers$3()
com.horcrux.svg.ClipPathView: ClipPathView(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: java.lang.String getAssetName(com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)
com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
androidx.cardview.widget.CardView: void setPaddingRelative(int,int,int,int)
com.facebook.imageformat.DefaultImageFormatChecker: boolean isDngHeader(byte[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState)
okhttp3.internal.ws.RealWebSocket: java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket)
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
androidx.recyclerview.widget.GridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipRule(android.view.View,int)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: void onIsPrefetchChanged()
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)
androidx.cardview.widget.RoundRectDrawableWithShadow: float getMaxShadowSize()
com.horcrux.svg.GroupView: void setupGlyphContext(android.graphics.Canvas)
com.facebook.react.modules.websocket.WebSocketModule$1: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: StaggeredGridLayoutManager$AnchorInfo(androidx.recyclerview.widget.StaggeredGridLayoutManager)
com.facebook.react.modules.core.JavaTimerManager: java.util.PriorityQueue access$300(com.facebook.react.modules.core.JavaTimerManager)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.internal.connection.RealConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
kotlin.ranges.IntProgression: int hashCode()
com.facebook.drawee.drawable.RoundedDrawable: boolean shouldRound()
okhttp3.Dns$Companion$DnsSystem: Dns$Companion$DnsSystem()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: boolean exists(java.io.File)
okhttp3.internal.platform.Platform$Companion: boolean isBouncyCastlePreferred()
okhttp3.internal.Util: boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator)
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
androidx.collection.ArrayMap: ArrayMap()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCacheMiss(com.facebook.cache.common.CacheKey)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory getSocketFactory$okhttp()
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.animated.NativeAnimatedModule$11: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void e(java.lang.String,java.lang.String)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void prepareDebugTextParameters(android.graphics.Rect,int,int)
com.facebook.cache.disk.DefaultDiskStorage: java.lang.String access$800(java.lang.String)
com.facebook.react.views.text.TextInlineImageSpan: TextInlineImageSpan()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
com.facebook.drawee.controller.AbstractDraweeController: void reportFailure(java.lang.Throwable,com.facebook.datasource.DataSource)
androidx.transition.TransitionSet: void setPropagation(androidx.transition.TransitionPropagation)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.transition.Fade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.WritableNativeArray)
okhttp3.internal.ws.RealWebSocket: void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange)
com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month monthsLater(int)
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
com.facebook.imagepipeline.core.ProducerSequenceFactory: void validateEncodedImageRequest(com.facebook.imagepipeline.request.ImageRequest)
androidx.fragment.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.google.android.material.shape.CornerTreatment: void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.ReactActivity: void onNewIntent(android.content.Intent)
okio.Buffer: java.lang.String readUtf8(long)
com.facebook.common.references.SharedReference: void removeLiveReference(java.lang.Object)
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.internal.Supplier access$100(com.facebook.cache.disk.DiskCacheConfig$Builder)
okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)
androidx.transition.Transition: androidx.transition.Transition setDuration(long)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
androidx.appcompat.widget.TooltipPopup: void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcelable)
okhttp3.internal.cache.FaultHidingSink: void close()
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
okio.SegmentPool: java.util.concurrent.atomic.AtomicReference firstRef()
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
com.facebook.imagepipeline.cache.BufferedDiskCache$6: java.lang.Void call()
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: void onFailure(java.lang.Throwable)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.google.android.material.textfield.CutoutDrawable: void removeCutout()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
okhttp3.RequestBody$Companion$toRequestBody$2: RequestBody$Companion$toRequestBody$2(byte[],okhttp3.MediaType,int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: java.lang.Float get(android.view.View)
com.facebook.imagepipeline.core.ImagePipeline$5: boolean apply(java.lang.Object)
okio.DeflaterSink: void deflate(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onBridgeDestroyed()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
androidx.recyclerview.widget.FastScroller: void resetHideDelay(int)
androidx.appcompat.view.menu.MenuItemImpl: MenuItemImpl(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)
com.facebook.imagepipeline.producers.InternalProducerListener: boolean requiresExtraMap(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
androidx.collection.LongSparseArray: void delete(long)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: AccessibilityNodeInfoCompat$CollectionInfoCompat(java.lang.Object)
kotlin.collections.AbstractList$IteratorImpl: java.lang.Object next()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getElevation()
com.google.android.material.internal.CollapsingTextHelper: void ensureExpandedTexture()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int getGapForSpan(int)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1: void onCancellationRequested()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1(java.lang.String,java.lang.String,long,okhttp3.internal.ws.RealWebSocket,java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams,okhttp3.internal.ws.WebSocketExtensions)
com.facebook.drawee.view.GenericDraweeView: GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.google.android.material.shape.ShapePath$PathArcOperation: void setSweepAngle(float)
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
com.facebook.debug.holder.PrinterHolder: com.facebook.debug.holder.Printer getPrinter()
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map)
com.google.android.material.chip.ChipDrawable: void setIconStartPadding(float)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLast(java.util.List,int)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.zoontek.rnbootsplash.RNBootSplash: void init(int,android.app.Activity)
com.facebook.react.devsupport.LogBoxModule$3: LogBoxModule$3(com.facebook.react.devsupport.LogBoxModule)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean shouldIgnore()
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.DisabledDevSupportManager: void setHotModuleReplacementEnabled(boolean)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1100(com.facebook.react.modules.core.JavaTimerManager)
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] getChildren()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
androidx.transition.Transition: void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration getEnum(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
okhttp3.internal.connection.RealCall: void enqueue(okhttp3.Callback)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
androidx.appcompat.widget.AppCompatSpinner$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void getPadding(android.graphics.Rect)
com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)
androidx.appcompat.app.AlertController$3: AlertController$3(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.imagepipeline.core.ImagePipeline: boolean isInBitmapMemoryCache(android.net.Uri)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$2: ReactModalHostView$DialogRootViewGroup$2(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)
androidx.appcompat.widget.SearchView: void updateQueryHint()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode fromInt(int)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.recyclerview.widget.ChildHelper: android.view.View findHiddenNonRemovedView(int)
androidx.transition.FragmentTransitionSupport: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.android.material.textfield.TextInputLayout$3: TextInputLayout$3(com.google.android.material.textfield.TextInputLayout)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
com.google.android.material.internal.ForegroundLinearLayout: void draw(android.graphics.Canvas)
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: boolean isTracing()
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: boolean willChangeBounds()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.storage.AsyncStorageModule$2: AsyncStorageModule$2(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
okio.RealBufferedSource: long readHexadecimalUnsignedLong()
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.uimanager.UIViewOperationQueue: UIViewOperationQueue(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager,int)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: DefaultItemAnimator$ChangeInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillOpacity(android.view.View,float)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.react.uimanager.UIImplementation: java.util.Map getProfiledBatchPerfCounters()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updatePadding()
androidx.recyclerview.widget.RecyclerView$1: RecyclerView$1(androidx.recyclerview.widget.RecyclerView)
androidx.core.provider.RequestExecutor$ReplyRunnable: RequestExecutor$ReplyRunnable(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer)
com.facebook.react.views.image.ReactImageDownloadListener: void onRelease(java.lang.String)
com.facebook.react.animated.FrameBasedAnimationDriver: FrameBasedAnimationDriver(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgView: void setBbHeight(java.lang.String)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.uimanager.UIViewOperationQueue: int[] access$300(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.horcrux.svg.Brush$BrushType: Brush$BrushType(java.lang.String,int)
com.facebook.react.animated.NativeAnimatedNodesManager: void runUpdates(long)
com.facebook.react.modules.storage.AsyncStorageModule$1: AsyncStorageModule$1(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
com.zoontek.rnbootsplash.RNBootSplashModule$4: RNBootSplashModule$4(com.zoontek.rnbootsplash.RNBootSplashModule,com.zoontek.rnbootsplash.RNBootSplashTask)
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void onFinalImageSet(long)
com.zoontek.rnbootsplash.RNBootSplashPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.DefaultItemAnimator$4: DefaultItemAnimator$4(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: int maybeTransformLeftRightToStartEnd(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange fromContentRangeHeader(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
com.facebook.imagepipeline.core.ProducerSequenceFactory: java.lang.String getShortenedUriString(android.net.Uri)
com.facebook.drawee.drawable.RoundedColorDrawable: void setPadding(float)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$1: java.lang.Object apply(java.lang.Object)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
okhttp3.CookieJar$Companion$NoCookies: java.util.List loadForRequest(okhttp3.HttpUrl)
okhttp3.internal.Util: java.util.List toImmutableList(java.util.List)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
com.google.android.material.behavior.SwipeDismissBehavior$1: void onViewReleased(android.view.View,float,float)
com.horcrux.svg.RenderableView: void setupPaint(android.graphics.Paint,float,com.facebook.react.bridge.ReadableArray)
androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.common.util.HashCodeUtil: int hashCode(int,int,int,int,int,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler: void access$100(com.facebook.imagepipeline.producers.JobScheduler)
com.facebook.react.modules.network.HeaderUtil: java.lang.String stripHeaderName(java.lang.String)
com.horcrux.svg.TextPathView: void setSharp(java.lang.String)
com.swmansion.rnscreens.ScreenStack: ScreenStack(android.content.Context)
okio.Options: boolean contains(okio.ByteString)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedFling(android.view.View,float,float,boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl$1: AppCompatDelegateImpl$1(java.lang.Thread$UncaughtExceptionHandler)
okhttp3.internal.http1.Http1ExchangeCodec: Http1ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
com.facebook.react.jstasks.HeadlessJsTaskConfig: boolean isAllowedInForeground()
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.drawable.ScalingUtils$ScaleType getResizeMode(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setAutoRotateEnabled(boolean)
com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetView(float[],android.view.ViewGroup)
com.facebook.yoga.YogaNodeJNIBase: void calculateLayout(float,float)
com.horcrux.svg.UseView: UseView(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.image.ReactImageView: void onSizeChanged(int,int,int,int)
com.google.android.material.datepicker.Month$1: Month$1()
com.google.android.material.appbar.HeaderBehavior: boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
androidx.customview.widget.ViewDragHelper: void setDragState(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: float getElevation()
com.facebook.datasource.AbstractDataSource: boolean setFailureInternal(java.lang.Throwable,java.util.Map)
androidx.cardview.widget.CardViewApi21Impl: void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList)
com.facebook.fresco.ui.common.ForwardingControllerListener2: void onFailure(java.lang.String,java.lang.Throwable,com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.collection.MapCollections$EntrySet: int size()
okhttp3.internal.concurrent.Task: boolean getCancelable()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: void init()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
okhttp3.internal.http2.Http2Stream: int getId()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(java.lang.Object,int)
com.horcrux.svg.ImageView: void setX(java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.swmansion.rnscreens.ScreenContainer: void onDetachedFromWindow()
com.horcrux.svg.ForeignObjectView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
androidx.collection.MapCollections$MapIterator: boolean hasNext()
kotlin.collections.EmptyList: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int getAnchorId()
com.google.android.material.textfield.EndIconDelegate: EndIconDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredWidth(android.view.View)
com.facebook.cache.disk.DiskCacheConfig: DiskCacheConfig(com.facebook.cache.disk.DiskCacheConfig$Builder)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
androidx.core.provider.FontProvider$1: int compare(java.lang.Object,java.lang.Object)
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.facebook.react.LazyReactPackage$2$1: java.lang.Object next()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
com.facebook.imagepipeline.memory.LruBitmapPool: android.graphics.Bitmap alloc(int)
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
okio.ForwardingSink: void write(okio.Buffer,long)
com.facebook.imagepipeline.transcoder.DownsampleUtil: int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)
okhttp3.Headers$Builder: okhttp3.Headers build()
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okio.SegmentedByteString: int[] getDirectory$okio()
androidx.transition.ViewUtilsApi19: void saveNonTransitionAlpha(android.view.View)
com.google.android.material.chip.Chip$2: Chip$2(com.google.android.material.chip.Chip)
com.horcrux.svg.TextView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.viewmanagers.RNSVGCircleManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.core.app.ActivityCompat$1: void run()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks: void onPriorityChanged()
com.facebook.react.views.view.ReactViewBackgroundManager: void setBackgroundColor(int)
okio.Buffer: long indexOfElement(okio.ByteString)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
com.facebook.cache.disk.DiskStorageCache$CacheStats: boolean isInitialized()
okhttp3.internal.ws.WebSocketExtensions$Companion: okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.devsupport.DisabledDevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SwitchCompat: boolean hitThumb(float,float)
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcelable)
com.facebook.react.animated.NativeAnimatedNodesManager: void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean removeCallbacks(java.lang.Runnable)
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform getTextTransform()
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.material.datepicker.CalendarConstraints: void writeToParcel(android.os.Parcel,int)
com.facebook.drawee.drawable.RoundedColorDrawable: void setCircle(boolean)
com.horcrux.svg.LineView: void setX1(java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler: boolean isCookieHeader(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: JavaTimerManager$TimerFrameCallback(com.facebook.react.modules.core.JavaTimerManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.facebook.imagepipeline.request.ImageRequest: java.io.File getSourceFile()
com.facebook.react.views.scroll.ReactScrollView: void onChildViewRemoved(android.view.View,android.view.View)
androidx.cardview.widget.RoundRectDrawableWithShadow: float getShadowSize()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: GridLayoutManager$DefaultSpanSizeLookup()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: boolean shouldDispatchAsync()
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.SnackbarContentLayout: boolean updateViewsWithinLayout(int,int,int)
androidx.core.text.BidiFormatter: BidiFormatter(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void maybeUpdateTypeface()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setVisible(boolean,boolean)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
com.google.android.material.bottomappbar.BottomAppBar: int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean)
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(android.view.View,java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.ImageCacheStatsTracker getImageCacheStatsTracker()
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.fragment.app.FragmentContainerView: void startViewTransition(android.view.View)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.google.android.material.button.MaterialButtonHelper: void updateStroke()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getBucketIndexForKey(short)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
androidx.appcompat.widget.SuggestionsAdapter: boolean hasStableIds()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void addFocusables(java.util.ArrayList,int,int)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillRule(android.view.View,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: LayoutAnimationController$2(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,int)
okhttp3.internal.concurrent.TaskRunner: void cancelAll()
com.facebook.react.animated.NativeAnimatedNodesManager: void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.shadow.ShadowRenderer: ShadowRenderer(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.NativeAnimatedNodesManager: void startListeningToAnimatedNodeValue(int,com.facebook.react.animated.AnimatedNodeValueListener)
com.facebook.imagepipeline.cache.BufferedDiskCache: void access$600(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: MaterialCheckBox(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenWindowTraits: void setStyle$lambda-0(android.app.Activity,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(android.view.View,java.lang.String)
com.facebook.common.memory.PooledByteBufferInputStream: boolean markSupported()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float)
com.swmansion.rnscreens.ScreenStackFragment: void setToolbarShadowHidden(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.horcrux.svg.SVGLength: SVGLength(double)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.ReactChoreographer access$1000(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.imagepipeline.cache.BufferedDiskCache: void addKeyForAsyncProbing(com.facebook.cache.common.CacheKey)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.ClearTextEndIconDelegate$2: ClearTextEndIconDelegate$2(com.google.android.material.textfield.ClearTextEndIconDelegate)
com.google.android.material.shape.ShapePath$PathArcOperation: void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
com.google.android.material.ripple.RippleDrawableCompat: android.graphics.drawable.Drawable mutate()
com.facebook.imagepipeline.image.CloseableStaticBitmap: CloseableStaticBitmap(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int,int)
com.facebook.react.devsupport.LogBoxDialog: LogBoxDialog(android.app.Activity,android.view.View)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
androidx.recyclerview.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)
androidx.recyclerview.widget.GapWorker: void flushTasksWithDeadline(long)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.IndicatorViewController: android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setPromptText(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getQualifiedResourceFetchSequence()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.facebook.react.views.scroll.ReactScrollView: boolean access$200(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.facebook.common.internal.Objects$ToStringHelper: java.lang.String toString()
com.google.android.material.textfield.IndicatorViewController: android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
com.facebook.imagepipeline.request.ImageRequest: int getPreferredHeight()
androidx.transition.Transition: void resume(android.view.View)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.horcrux.svg.PatternView: void setY(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()
com.facebook.react.ReactInstanceManager$6: void run()
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] getWritten$okhttp()
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumFrames()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
androidx.collection.ArrayMap: java.util.Set entrySet()
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.appbar.AppBarLayout$LayoutParams: AppBarLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtualAnchor()
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: ImageRequest$CacheChoice(java.lang.String,int)
com.swmansion.rnscreens.ScreenViewManager$Companion: ScreenViewManager$Companion()
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCacheHit(java.lang.Object)
com.horcrux.svg.ImageView: android.graphics.RectF getRect()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean doesTransientStatePreventRecycling()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.datepicker.MonthsPagerAdapter$1: MonthsPagerAdapter$1(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView)
com.google.android.material.bottomappbar.BottomAppBar: void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeightWithMargins(android.view.View)
bolts.TaskCompletionSource: TaskCompletionSource()
okio.Okio__JvmOkioKt: okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object)
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcelable)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.horcrux.svg.Brush: void setPattern(com.horcrux.svg.PatternView)
com.facebook.imageutils.JfifUtil: int getOrientation(java.io.InputStream)
com.th3rdwave.safeareacontext.SafeAreaUtils: com.th3rdwave.safeareacontext.EdgeInsets getRootWindowInsetsCompat(android.view.View)
androidx.appcompat.content.res.AppCompatResources: android.util.TypedValue getTypedValue()
com.google.android.material.shape.RelativeCornerSize: float getCornerSize(android.graphics.RectF)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException)
androidx.transition.Transition: void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback)
androidx.transition.Scene: void exit()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
kotlin.collections.AbstractList$ListIteratorImpl: int nextIndex()
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String getEventName()
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
okio.RealBufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredHeight(android.view.View)
com.facebook.react.modules.debug.FpsDebugFrameCallback$1: FpsDebugFrameCallback$1(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.debug.FpsDebugFrameCallback)
com.facebook.drawee.controller.AbstractDraweeController$1: void onFadeStarted()
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.controller.ControllerListener getControllerListener()
com.facebook.imagepipeline.request.ImageRequest: boolean isDiskCacheEnabled()
com.facebook.react.modules.network.ProgressResponseBody: ProgressResponseBody(okhttp3.ResponseBody,com.facebook.react.modules.network.ProgressListener)
androidx.fragment.app.FragmentTransitionImpl$1: void run()
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF getBoundsInsetByStroke()
com.facebook.react.uimanager.events.Event: boolean canCoalesce()
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
androidx.recyclerview.widget.GapWorker: void remove(androidx.recyclerview.widget.RecyclerView)
com.facebook.drawee.controller.AbstractDraweeController: boolean isExpectedDataSource(java.lang.String,com.facebook.datasource.DataSource)
com.facebook.datasource.AbstractDataSource: boolean wasCancelled()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
com.facebook.react.modules.network.ProgressResponseBody: okio.BufferedSource source()
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineConfig: java.util.Set getRequestListener2s()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.facebook.react.views.drawer.events.DrawerSlideEvent: short getCoalescingKey()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.animated.AdditionAnimatedNode: java.lang.String prettyPrint()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
androidx.transition.PathMotion: PathMotion()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.appcompat.app.AppCompatActivity: void onStart()
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$200()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.transition.Transition: void runAnimators()
com.facebook.cache.common.NoOpCacheErrorLogger: void logError(com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory,java.lang.Class,java.lang.String,java.lang.Throwable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer createAndPutNewMultiplexer(java.lang.Object)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUseDeveloperSupport(boolean)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getUseDownsamplingRatioForResizing()
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int)
okio.SegmentedByteString: byte internalGet$okio(int)
com.google.android.material.datepicker.CalendarConstraints: boolean equals(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)
androidx.recyclerview.widget.GridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
com.google.android.material.button.MaterialButtonHelper: void setStrokeWidth(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()
com.facebook.react.views.image.ReactImageView: float[] access$300()
androidx.appcompat.app.TwilightCalculator: TwilightCalculator()
okhttp3.CipherSuite$Companion: CipherSuite$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenContainer$mFrameCallback$1: void doFrame(long)
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.imagepipeline.memory.BufferMemoryChunk: BufferMemoryChunk(int)
com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
okhttp3.internal.concurrent.TaskRunner$RealBackend: TaskRunner$RealBackend(java.util.concurrent.ThreadFactory)
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
okio.Buffer: java.lang.String toString()
androidx.appcompat.app.AlertController$ButtonHandler: AlertController$ButtonHandler(android.content.DialogInterface)
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: DefaultDiskStorage$EntriesCollector(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1)
com.facebook.fresco.ui.common.BaseControllerListener2: void onFinalImageSet(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.transition.ViewGroupOverlayApi18: void remove(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mutate()
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
com.google.android.material.shape.ShapePath: float getEndX()
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.uimanager.UIImplementation: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
okhttp3.RequestBody: long contentLength()
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase(long)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void onChange()
com.facebook.imagepipeline.producers.InternalRequestListener: void onRequestCancellation(com.facebook.imagepipeline.producers.ProducerContext)
androidx.cardview.widget.CardViewBaseImpl: void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.facebook.common.executors.ScheduledFutureImpl: ScheduledFutureImpl(android.os.Handler,java.util.concurrent.Callable)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.cache.common.NoOpCacheEventListener: NoOpCacheEventListener()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onTransitionToBridgeBusy()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void makeOrphans(java.util.ArrayList)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTL(android.content.Context)
com.facebook.yoga.YogaNodeJNIFinalizer: YogaNodeJNIFinalizer()
com.horcrux.svg.RectView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
com.facebook.imagepipeline.producers.DecodeProducer: java.lang.Runnable access$800(com.facebook.imagepipeline.producers.DecodeProducer)
com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String)
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
androidx.recyclerview.widget.RecyclerView$SavedState$1: RecyclerView$SavedState$1()
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.core.ChoreographerCompat access$000(com.facebook.react.modules.debug.FpsDebugFrameCallback)
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory()
com.swmansion.rnscreens.ScreenWindowTraits: void setHidden$lambda-1(boolean,android.app.Activity)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
okhttp3.internal.cache.DiskLruCache: void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
com.facebook.react.jstasks.HeadlessJsTaskContext: HeadlessJsTaskContext(com.facebook.react.bridge.ReactContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptions)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void resetInsets(com.th3rdwave.safeareacontext.SafeAreaViewMode)
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)
com.facebook.imagepipeline.producers.InternalProducerListener: void onProducerEvent(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: ForwardingListener$DisallowIntercept(androidx.appcompat.widget.ForwardingListener)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void buildCircularRevealCache()
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setControllerId(java.lang.String)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
okhttp3.Route: boolean requiresTunnel()
com.google.android.material.textfield.CustomEndIconDelegate: void initialize()
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long)
com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String getEventName()
okio.internal.BufferKt: java.lang.String readUtf8Line(okio.Buffer,long)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean onResolvedLayoutDirectionChanged(int)
androidx.appcompat.app.AppCompatDialogFragment: void setupDialog(android.app.Dialog,int)
androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: void writeData(com.facebook.cache.common.WriterCallback,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
com.zoontek.rnbootsplash.RNBootSplashModule$3: void run()
okio.Okio__JvmOkioKt: okio.Source source(java.net.Socket)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri,com.facebook.imagepipeline.common.ResizeOptions)
com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToStatePendingLayout(int)
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.transformation.ExpandableBehavior: boolean didStateChange(boolean)
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactAbsoluteSizeSpan: ReactAbsoluteSizeSpan(int)
com.google.android.material.transformation.FabTransformationBehavior: void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerOpened(android.view.View)
com.google.android.material.datepicker.Month: long getDay(int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.disk.DiskStorage$Inserter startInsert(java.lang.String,com.facebook.cache.common.CacheKey)
com.facebook.react.animated.ValueAnimatedNode: void flattenOffset()
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource access$900(com.facebook.react.views.image.ReactImageView)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.disk.DiskTrimmableRegistry getDiskTrimmableRegistry()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[])
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
okio.Buffer: java.lang.Object clone()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)
com.google.android.material.datepicker.MonthAdapter: int getCount()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onScrollStateChanged(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVectorEffect(android.view.View,int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig getDefaultImageRequestConfig()
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate: AndroidDropdownPickerManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.swmansion.rnscreens.ScreenContainer: void detachScreen(com.swmansion.rnscreens.ScreenFragment)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable(com.google.android.material.shape.ShapeAppearanceModel)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
com.facebook.react.modules.storage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.facebook.react.common.LongArray: com.facebook.react.common.LongArray createWithInitialCapacity(int)
androidx.transition.Transition: void setPropagation(androidx.transition.TransitionPropagation)
com.horcrux.svg.RenderableViewManager$MaskManager: void setDisplay(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Stream: void waitForIo$okhttp()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig access$2100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imageutils.WebpUtil: android.util.Pair getSize(java.io.InputStream)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setSaveFlags(int)
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.network.ProgressRequestBody: long contentLength()
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: BottomSheetBehavior$4(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
okhttp3.internal.connection.RealConnection: boolean getNoNewExchanges()
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void resetState()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode toTileMode(java.lang.String)
androidx.fragment.app.FragmentManager: java.util.List getFragments()
com.facebook.yoga.YogaLogLevel: YogaLogLevel(java.lang.String,int,int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.material.shape.MaterialShapeDrawable: void invalidateSelfIgnoreShape()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
com.facebook.react.uimanager.ReactShadowNodeImpl: void markLayoutSeen()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCachePut(java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
com.facebook.common.executors.ScheduledFutureImpl: int compareTo(java.lang.Object)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.cardview.widget.RoundRectDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator(com.facebook.soloader.ExoSoSource$ExoUnpacker,com.facebook.soloader.ExoSoSource$1)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: com.facebook.react.bridge.WritableMap createKeyboardEventPayload(double,double,double,double)
com.facebook.fresco.ui.common.MultiUriHelper: android.net.Uri getMainUri(java.lang.Object,java.lang.Object,java.lang.Object[],com.facebook.common.internal.Fn)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
androidx.recyclerview.widget.LinearSmoothScroller: int clampApplyScroll(int,int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: int getResourceId(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.recyclerview.widget.GridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: ViewManagersPropertyCache$StringPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
okio.SegmentedByteString: byte[] toByteArray()
com.facebook.react.modules.image.ImageLoaderModule$1: ImageLoaderModule$1(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode$okhttp()
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: void release(android.graphics.Bitmap)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setState(int[])
com.horcrux.svg.GroupView: void saveDefinition()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setResponsible(android.view.View,boolean)
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setPriorityNoCallbacks(com.facebook.imagepipeline.common.Priority)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onUltimateProducerReached(java.lang.String,java.lang.String,boolean)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
com.google.android.material.internal.ThemeEnforcement: androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
com.horcrux.svg.SymbolView: void setMeetOrSlice(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
androidx.appcompat.widget.SearchView$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.resources.CancelableFontCallback: void cancel()
com.facebook.drawee.backends.pipeline.Fresco: com.facebook.imagepipeline.core.ImagePipelineFactory getImagePipelineFactory()
com.zoontek.rnbootsplash.RNBootSplashModule$1: RNBootSplashModule$1(android.app.Activity,int)
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.widget.AppCompatTextClassifierHelper: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.cache.disk.DiskStorageCache$CacheStats: long getCount()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.react.views.view.ReactViewBackgroundDrawable: int getAlpha()
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.views.text.TextTransform: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)
com.facebook.react.jstasks.HeadlessJsTaskConfig: java.lang.String getTaskKey()
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.transition.TransitionSet: void capturePropagationValues(androidx.transition.TransitionValues)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextAnchor(android.view.View,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
com.google.android.material.datepicker.MaterialCalendar: int getDayHeight(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)
com.facebook.react.common.MapBuilder$Builder: java.util.Map build()
com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue access$100(com.facebook.imagepipeline.producers.ThreadHandoffProducer)
com.facebook.datasource.AbstractDataSource: void closeResult(java.lang.Object)
com.facebook.react.NativeModuleRegistryBuilder: void processPackage(com.facebook.react.ReactPackage)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean pageScroll(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillRule(android.view.View,int)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.JSTouchDispatcher: JSTouchDispatcher(android.view.ViewGroup)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
com.facebook.react.devsupport.LogBoxModule$1: void run()
okhttp3.Cache$Companion: boolean hasVaryAll(okhttp3.Response)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.LogBoxModule$4: LogBoxModule$4(com.facebook.react.devsupport.LogBoxModule)
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: Objects$ToStringHelper$ValueHolder(com.facebook.common.internal.Objects$1)
com.facebook.imagepipeline.image.CloseableStaticBitmap: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
androidx.transition.Visibility$DisappearListener: void onTransitionPause(androidx.transition.Transition)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
kotlin.text.StringsKt__StringsKt: java.lang.String removePrefix(java.lang.String,java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void onDismiss()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void setInitialExtras()
com.facebook.react.views.image.ReactImageView$1: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior)
com.horcrux.svg.LinearGradientView: void saveDefinition()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.zoontek.rnbootsplash.RNBootSplashModule: void onHostDestroy()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])
com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawablesTints()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.internal.CollapsingTextHelper: void setPositionInterpolator(android.animation.TimeInterpolator)
okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.facebook.imagepipeline.image.EncodedImage: void close()
androidx.fragment.app.FragmentController: void dispatchPause()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.transition.FragmentTransitionSupport: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillRule(android.view.View,int)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.horcrux.svg.RectView: void setRx(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.GlyphPathBag: GlyphPathBag(android.graphics.Paint)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: int getMaxCacheSize()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
okio.internal.SegmentedByteStringKt: int segment(okio.SegmentedByteString,int)
com.facebook.cache.disk.DiskCacheConfig$Builder: long access$700(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.google.android.material.internal.TextDrawableHelper: java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.swmansion.rnscreens.ScreenContainer$mLayoutCallback$1: void doFrame(long)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.events.ScreenWillDisappearEvent: ScreenWillDisappearEvent(int)
com.facebook.react.views.image.MultiPostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
com.facebook.imagepipeline.core.ImagePipeline: java.lang.String generateUniqueFutureId()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onMeasure(int,int)
androidx.appcompat.widget.Toolbar$2: Toolbar$2(androidx.appcompat.widget.Toolbar)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setLocalThumbnailPreviewsEnabled(boolean)
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1: int getSizeInBytes(java.lang.Object)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.facebook.react.views.image.ImageLoadEvent: java.lang.String getEventName()
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route retryRoute()
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
com.facebook.react.common.DebugServerException: DebugServerException(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.OrientationHelper$1: void offsetChildren(int)
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory$1: CountingLruBitmapMemoryCacheFactory$1(com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory)
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JSIModulePackage getJSIModulePackage()
com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setRotation(float)
com.facebook.react.views.textinput.ReactEditText: void setBorderColor(int,float,float)
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] values()
com.google.android.material.shape.MaterialShapeDrawable: void calculatePath(android.graphics.RectF,android.graphics.Path)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
com.facebook.common.references.DefaultCloseableReference: void finalize()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.appcompat.app.AlertController: void installContent()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
com.horcrux.svg.RadialGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
okhttp3.internal.http2.Settings: boolean isSet(int)
com.facebook.react.views.modal.ReactModalHostView: void addChildrenForAccessibility(java.util.ArrayList)
com.facebook.imagepipeline.producers.BaseConsumer: int simpleStatusForIsLast(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRange(byte[],int,int)
com.swmansion.rnscreens.ScreenStack: void endViewTransition(android.view.View)
com.facebook.react.common.LongArray: void growArrayIfNeeded()
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
kotlin.collections.AbstractList: java.lang.Object set(int,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationEnd(android.view.animation.Animation)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()
com.horcrux.svg.RadialGradientView: void setFx(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void onFailure(java.lang.Exception)
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)
com.swmansion.rnscreens.Screen: java.lang.Boolean isStatusBarTranslucent()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener access$100(com.facebook.react.views.modal.ReactModalHostView)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: int read(int,byte[],int,int)
com.google.android.material.bottomappbar.BottomAppBar$6: BottomAppBar$6(com.google.android.material.bottomappbar.BottomAppBar)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateExtraData(int,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
com.facebook.drawee.backends.pipeline.Fresco: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.google.android.material.internal.TextDrawableHelper: boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.views.view.ReactDrawableHelper: int getAttrId(android.content.Context,java.lang.String)
com.horcrux.svg.TSpanView: double getAbsoluteStartOffset(com.horcrux.svg.SVGLength,double,double)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isDecodeCancellationEnabled()
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMarker(java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: ActionMenuPresenter$ActionButtonSubmenu(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View)
com.facebook.react.CoreModulesPackage$1: CoreModulesPackage$1(com.facebook.react.CoreModulesPackage,java.util.Map)
okhttp3.internal.http1.Http1ExchangeCodec: void detachTimeout(okio.ForwardingTimeout)
androidx.transition.ViewOverlayApi14: void add(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollTo(int,int)
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,android.net.Uri,java.lang.Object)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder()
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getWidth()
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.google.android.material.chip.ChipDrawable: void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)
androidx.appcompat.view.menu.StandardMenuPopup: StandardMenuPopup(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void invalidateCache()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
com.horcrux.svg.GlyphContext: com.horcrux.svg.FontData getTopOrParentFont(com.horcrux.svg.GroupView)
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean onStateChange(int[])
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getDeletedSize()
androidx.fragment.app.FragmentManager: void reportBackStackChanged()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.horcrux.svg.MarkerView: MarkerView(com.facebook.react.bridge.ReactContext)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int)
androidx.cardview.widget.RoundRectDrawableWithShadow: int toEven(float)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean isClosed()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean)
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: android.net.Uri getCacheKeySourceUri(android.net.Uri)
okio.Segment: Segment()
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool get()
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
com.facebook.react.modules.blob.BlobCollector$1: void run()
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: void doFrame(long)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.ReactInstanceManager: void showDevOptionsDialog()
androidx.recyclerview.widget.DefaultItemAnimator$4: void onAnimationEnd(android.animation.Animator)
com.google.android.material.chip.ChipDrawable: float getTextEndPadding()
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.common.memory.PooledByteBufferInputStream: PooledByteBufferInputStream(com.facebook.common.memory.PooledByteBuffer)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
okhttp3.Handshake$Companion$handshake$1: java.lang.Object invoke()
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: java.lang.Object then(bolts.Task)
com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onViewHierarchyUpdateFinished()
androidx.transition.Visibility$DisappearListener: void hideViewWhenNotCanceled()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.memory.BufferMemoryChunk: int getSize()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: UIViewOperationQueue$SendAccessibilityEvent(com.facebook.react.uimanager.UIViewOperationQueue,int,int)
com.horcrux.svg.RenderableView: void setId(int)
com.horcrux.svg.PatternView: void setVbWidth(float)
okio.RealBufferedSource: short readShortLe()
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
com.horcrux.svg.GlyphPathBag: int getIndex(char)
okhttp3.MultipartBody: long contentLength()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View,int)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(android.view.View,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipRule(android.view.View,int)
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)
com.google.android.material.shape.ShapePath: void setEndY(float)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.PooledByteBufferOutputStream merge(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipRule(android.view.View,int)
androidx.appcompat.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)
androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
com.horcrux.svg.RenderableViewManager$PatternManager: void setName(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils: android.media.ExifInterface getExifInterface(java.io.FileDescriptor)
androidx.fragment.app.Fragment: void performDetach()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getFlexByteArrayPoolParams()
com.horcrux.svg.MarkerView: void setVbHeight(float)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: ResourcesCompat$ColorStateListCacheKey(android.content.res.Resources,android.content.res.Resources$Theme)
com.facebook.react.uimanager.UIImplementation: void updateRootView(int,int,int)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.datasource.SimpleDataSource: boolean setFailure(java.lang.Throwable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri,java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okio.Buffer: okio.Buffer writeDecimalLong(long)
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: ProgressiveJpegParser(com.facebook.common.memory.ByteArrayPool)
androidx.transition.FragmentTransitionSupport$2: void onTransitionCancel(androidx.transition.Transition)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setElevation(float)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View hasGapsToFix()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.lifecycle.LiveData$1: void run()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)
androidx.transition.FragmentTransitionSupport$3: FragmentTransitionSupport$3(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.google.android.material.internal.CollapsingTextHelper: float getExpansionFraction()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
okhttp3.internal.connection.RealConnection: boolean isEligible$okhttp(okhttp3.Address,java.util.List)
com.facebook.drawee.drawable.ForwardingDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
okhttp3.OkHttpClient$Builder: long getMinWebSocketMessageToCompress$okhttp()
com.google.android.material.appbar.HeaderScrollingViewBehavior: int getOverlayTop()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.common.internal.Predicate predicateForUri(android.net.Uri)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isDownsampleEnabled()
com.facebook.react.uimanager.FabricViewStateManager: boolean hasStateWrapper()
com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.uimanager.ReactRoot)
com.google.android.material.appbar.ViewOffsetHelper: boolean setTopAndBottomOffset(int)
com.google.android.material.shape.MaterialShapeDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: TransformAnimatedNode$AnimatedTransformConfig(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)
androidx.core.graphics.Insets: androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SearchView$7: SearchView$7(androidx.appcompat.widget.SearchView)
androidx.recyclerview.widget.RecyclerView$4: void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updatePriority()
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
okio.RealBufferedSink: okio.BufferedSink writeShort(int)
com.facebook.react.modules.storage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase get()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
androidx.transition.TransitionSet$1: void onTransitionEnd(androidx.transition.Transition)
com.google.android.material.textfield.TextInputEditText: void onAttachedToWindow()
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options)
androidx.recyclerview.widget.RecyclerView$OnFlingListener: RecyclerView$OnFlingListener()
com.horcrux.svg.UseView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.imagepipeline.memory.BitmapCounterProvider: BitmapCounterProvider()
com.facebook.imagepipeline.request.ImageRequest: int hashCode()
com.google.android.material.chip.ChipDrawable: boolean getUseCompatRipple()
com.facebook.drawee.view.DraweeHolder: void onVisibilityChange(boolean)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: long read(okio.Buffer,long)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void add(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: void close()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.facebook.react.views.picker.ReactPickerManager: ReactPickerManager()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$400(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.google.android.material.chip.ChipDrawable: float getChipStartPadding()
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerStart(android.view.View,java.lang.String)
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: ReactChoreographer$ReactChoreographerDispatcher(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ReactChoreographer$1)
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)
androidx.core.view.ViewCompat$2: ViewCompat$2(int,java.lang.Class,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setInternalBackgroundTint(android.content.res.ColorStateList)
androidx.transition.TransitionSet: androidx.transition.Transition removeTarget(android.view.View)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
androidx.drawerlayout.widget.DrawerLayout: boolean isInBoundsOfChild(float,float,android.view.View)
com.facebook.common.internal.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeEvictEntries()
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void handleKeyEvent(android.view.KeyEvent)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.MaskView: MaskView(com.facebook.react.bridge.ReactContext)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported()
androidx.core.view.ViewCompat: void removeActionWithId(int,android.view.View)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: AccessibilityNodeInfoCompat$CollectionItemInfoCompat(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.util.Iterator iterator()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)
com.facebook.common.executors.HandlerExecutorServiceImpl: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.swmansion.rnscreens.ScreenWindowTraits: boolean checkTraitForScreen(com.swmansion.rnscreens.Screen,com.swmansion.rnscreens.Screen$WindowTraits)
androidx.cardview.widget.CardViewApi21Impl: void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
com.google.android.material.chip.ChipDrawable: void setCloseIconTintResource(int)
com.facebook.cache.disk.DiskCacheConfig$Builder: DiskCacheConfig$Builder(android.content.Context)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void show()
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void show(int,int)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: Http2Connection$pushResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setOpacity(android.view.View,float)
okhttp3.MediaType: java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.recyclerview.widget.ViewInfoStore: ViewInfoStore()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: DrawableContainer$BlockInvalidateCallback()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
androidx.fragment.app.Fragment: void performStop()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
com.google.android.material.shape.ShapePath: float getEndY()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: SafeAreaViewEdges(java.lang.String,int)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void initializePerformanceMonitoring(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.common.internal.Supplier)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.uimanager.FabricViewStateManager: void setState(com.facebook.react.uimanager.StateWrapper,com.facebook.react.uimanager.FabricViewStateManager$StateUpdateCallback,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter: void onItemSelected(int)
com.horcrux.svg.VirtualViewManager: void setOnLayout(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$2: com.facebook.react.bridge.WritableMap getStateUpdate()
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)
com.facebook.drawee.backends.pipeline.Fresco: void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig,com.facebook.drawee.backends.pipeline.DraweeConfig)
com.swmansion.rnscreens.ScreenContainer: void removeMyFragments(androidx.fragment.app.FragmentManager)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: FloatingActionButtonImpl$ShadowAnimatorImpl(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onClick(android.content.DialogInterface,int)
com.facebook.drawee.view.DraweeView: void onAttach()
com.facebook.imagepipeline.cache.BufferedDiskCache: void writeToDiskCache(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackHeaderSubview getConfigSubview(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.appbar.AppBarLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: NoOpImageCacheStatsTracker()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setReactTag(int)
com.swmansion.rnscreens.ScreenStack: void onAttachedToWindow()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)
com.facebook.common.memory.PooledByteBuffer$ClosedException: PooledByteBuffer$ClosedException()
com.facebook.common.statfs.StatFsHelper: StatFsHelper()
com.facebook.react.ReactInstanceManager: void onHostPause()
com.facebook.imagepipeline.producers.LocalFetchProducer$2: void onCancellationRequested()
androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: java.lang.String access$000(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.views.modal.ReactModalHostView: void onHostResume()
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: void close()
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.fresco.ui.common.ForwardingControllerListener2: void addListener(com.facebook.fresco.ui.common.ControllerListener2)
com.facebook.imagepipeline.systrace.FrescoSystrace: com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace getInstance()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
com.facebook.yoga.YogaNodeJNIBase: void setHeightPercent(float)
com.facebook.drawee.drawable.ScalingUtils: com.facebook.drawee.drawable.ScaleTypeDrawable getActiveScaleTypeDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextHelper: void setTypefaceByCallback(android.graphics.Typeface)
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)
com.facebook.yoga.YogaConfigFactory: com.facebook.yoga.YogaConfig create()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry)
com.swmansion.rnscreens.events.ScreenWillAppearEvent$Companion: ScreenWillAppearEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.shape.ShapePath$PathArcOperation: ShapePath$PathArcOperation(float,float,float,float)
com.facebook.react.uimanager.events.Event: Event(int,int)
com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.recyclerview.widget.DefaultItemAnimator$8: void onAnimationStart(android.animation.Animator)
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)
androidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
com.facebook.react.views.modal.ReactModalHostManager$1: void onRequestClose(android.content.DialogInterface)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float getStartTrim()
com.facebook.imagepipeline.core.ImagePipelineConfig: ImagePipelineConfig(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.transition.FragmentTransitionSupport$4: FragmentTransitionSupport$4(androidx.transition.FragmentTransitionSupport,android.graphics.Rect)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: StaggeredGridLayoutManager$LazySpanLookup()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
androidx.appcompat.view.menu.CascadingMenuPopup$1: void onGlobalLayout()
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
androidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillOpacity(android.view.View,float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)
com.facebook.react.uimanager.UIViewOperationQueue: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: FragmentManager$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
okhttp3.Challenge: java.nio.charset.Charset charset()
com.facebook.react.views.textinput.ReactTextInputManager$3: ReactTextInputManager$3(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.shadow.ShadowRenderer: android.graphics.Paint getShadowPaint()
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
com.google.android.material.transformation.FabTransformationBehavior$2: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.fragment.app.DialogFragment$1: DialogFragment$1(androidx.fragment.app.DialogFragment)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
com.facebook.drawee.view.DraweeHolder: void onAttach()
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurement(android.view.View)
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: DecodeProducer$NetworkImagesProgressiveDecoder(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.decoder.ProgressiveJpegParser,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.fragment.app.DialogFragment: void onStart()
com.facebook.cache.disk.DynamicDefaultDiskStorage: void purgeUnexpectedResources()
com.facebook.react.DebugCorePackage$1: DebugCorePackage$1(com.facebook.react.DebugCorePackage,java.util.Map)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.react.modules.core.JavaTimerManager: void access$1900(com.facebook.react.modules.core.JavaTimerManager)
androidx.transition.ChangeBounds$3: void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canDragView(com.google.android.material.appbar.AppBarLayout)
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.yoga.YogaNodeJNIBase: void setMarginPercent(com.facebook.yoga.YogaEdge,float)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager$1: boolean onLongClick(android.view.View)
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
com.facebook.drawee.controller.AbstractDraweeController: void onProgressUpdateInternal(java.lang.String,com.facebook.datasource.DataSource,float,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void access$200(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter)
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void startSamplingProfiler()
com.facebook.yoga.YogaNodeJNIBase: void setMinHeight(float)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
androidx.recyclerview.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)
com.facebook.react.views.text.TextInlineImageSpan: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)
com.facebook.datasource.FirstAvailableDataSourceSupplier: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink appendingSink(java.io.File)
com.facebook.react.views.slider.ReactSlidingCompleteEvent: short getCoalescingKey()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.google.android.material.datepicker.MaterialDatePicker: void onDismiss(android.content.DialogInterface)
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.ReactInstancePackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Address: okhttp3.HttpUrl url()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View)
com.facebook.debug.holder.NoopPrinter: void logMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void show()
com.facebook.react.modules.network.ProgressRequestBody$1: ProgressRequestBody$1(com.facebook.react.modules.network.ProgressRequestBody,java.io.OutputStream)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$200(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
com.horcrux.svg.PathParser: void curveTo(float,float,float,float,float,float)
androidx.appcompat.view.menu.MenuPopup: MenuPopup()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionResume(android.transition.Transition)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: AppCompatCompoundButtonHelper(android.widget.CompoundButton)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: com.facebook.imagepipeline.memory.BufferMemoryChunk alloc(int)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.collection.ArraySet: java.lang.String toString()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
com.facebook.drawee.generic.GenericDraweeHierarchy: void setBackgroundImage(android.graphics.drawable.Drawable)
com.facebook.cache.disk.DefaultDiskStorage: long remove(com.facebook.cache.disk.DiskStorage$Entry)
androidx.appcompat.widget.AppCompatTextHelper: void setAllCaps(boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
com.facebook.react.uimanager.UIViewOperationQueue: boolean access$2502(com.facebook.react.uimanager.UIViewOperationQueue,boolean)
okio.ForwardingSink: void flush()
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.facebook.react.animated.NativeAnimatedModule$4: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: java.lang.Object getResult()
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.common.memory.PooledByteBufferOutputStream: void close()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: ActionMenuPresenter$OverflowMenuButton(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: void process(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: ReactViewGroup$ChildrenLayoutChangeListener(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: UIViewOperationQueue$ConfigureLayoutAnimationOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderColor(int,float,float)
com.google.android.material.textfield.IndicatorViewController: void removeIndicator(android.widget.TextView,int)
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
com.google.android.material.transformation.FabTransformationBehavior: float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: java.lang.Object get()
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
com.facebook.soloader.UnpackingSoSource: void prepare(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.imagepipeline.producers.BaseConsumer: void onFailure(java.lang.Throwable)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.textinput.ReactEditText: void setBorderWidth(int,float)
com.google.android.material.chip.ChipDrawable: void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.customview.view.AbsSavedState: AbsSavedState()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
com.facebook.react.uimanager.UIImplementation: void clearJSResponder()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setException(java.io.IOException)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getBitmapPoolParams()
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: UIViewOperationQueue$UpdatePropertiesOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.ReactInstanceManager: java.util.List getViewManagerNames()
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
com.facebook.react.uimanager.UIImplementation: void onHostResume()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setImagewidth(android.view.View,java.lang.String)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
okhttp3.internal.platform.android.AndroidLogKt: int access$getAndroidLevel$p(java.util.logging.LogRecord)
com.swmansion.rnscreens.ScreenFragment: void dispatchEvent(com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent,com.swmansion.rnscreens.ScreenFragment)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onDetachedFromLayoutParams()
com.horcrux.svg.ForeignObjectView: void onDescendantInvalidated(android.view.View,android.view.View)
okhttp3.Request: Request(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map)
com.google.android.material.shape.MaterialShapeUtils: void setElevation(android.view.View,float)
com.facebook.react.ReactInstanceManager: void moveToBeforeResumeLifecycleState()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
com.facebook.imagepipeline.listener.BaseRequestListener: void onUltimateProducerReached(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate: ModalHostViewManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.common.internal.Suppliers$1: Suppliers$1(java.lang.Object)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.TurboReactPackage$1: java.util.Iterator iterator()
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.image.EncodedImage cloneOrNull()
com.google.android.material.ripple.RippleUtils: boolean shouldDrawRippleCompat(int[])
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(int,int)
com.facebook.imageutils.BitmapUtil: com.facebook.imageutils.ImageMetaData decodeDimensionsAndColorSpace(java.io.InputStream)
com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: void onAnimationRepeat(android.animation.Animator)
androidx.core.provider.CallbackWithHandler: void onTypefaceRetrieved(android.graphics.Typeface)
okhttp3.Handshake$Companion: Handshake$Companion()
androidx.appcompat.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.google.android.material.shape.ShapePath$PathLineOperation: float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)
com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task getAsync(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean computeIsPrefetch()
kotlin.collections.ArrayAsCollection: boolean remove(java.lang.Object)
com.facebook.drawee.drawable.RoundedColorDrawable: RoundedColorDrawable(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderWidth(int,float)
com.facebook.react.animated.InterpolationAnimatedNode: void onDetachedFromNode(com.facebook.react.animated.AnimatedNode)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.shape.ShapePath: float getStartX()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalAssetFetchProducer newLocalAssetFetchProducer()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,int,int,int)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setTextSizeInternal(int,float)
com.google.android.material.chip.ChipDrawable: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.facebook.react.animated.NativeAnimatedNodesManager$2: void run()
androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean)
com.facebook.imagepipeline.producers.NetworkFetchProducer: float calculateProgress(int,int)
com.facebook.drawee.drawable.FadeDrawable: void invalidateSelf()
com.facebook.hermes.reactexecutor.HermesExecutor: HermesExecutor(com.facebook.hermes.reactexecutor.RuntimeConfig)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
okio.SegmentedByteString: okio.ByteString toAsciiLowercase()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthPercent(float)
com.google.android.material.textfield.TextInputLayout: void onApplyBoxBackgroundMode()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1: void onAnimationEnd(android.animation.Animator)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.facebook.drawee.components.DeferredReleaser: com.facebook.drawee.components.DeferredReleaser getInstance()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
androidx.recyclerview.widget.LinearSmoothScroller: void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.facebook.react.uimanager.PixelUtil: float toDIPFromPixel(float)
com.facebook.react.util.ExceptionDataHelper: java.lang.String getExtraDataAsJson(com.facebook.react.bridge.ReadableMap)
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
bolts.ExecutorException: ExecutorException(java.lang.Exception)
androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()
com.facebook.imagepipeline.cache.BoundedLinkedHashSet: BoundedLinkedHashSet(int)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)
okhttp3.WebSocketListener: WebSocketListener()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
okhttp3.internal.http2.Http2Connection: long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection)
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForMove(int,int)
com.facebook.yoga.YogaNodeJNIBase: boolean isMeasureDefined()
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonthDayOfWeekDay(long)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
com.facebook.imagepipeline.memory.Bucket: boolean isMaxLengthExceeded()
com.facebook.react.common.SystemClock: long nanoTime()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink getSink$okhttp()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: ReactEditText$TextWatcherDelegator(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.textinput.ReactEditText$1)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
com.facebook.imagepipeline.cache.BufferedDiskCache: boolean checkInStagingAreaAndFileCache(com.facebook.cache.common.CacheKey)
okhttp3.internal.http2.Http2ExchangeCodec: void finishRequest()
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaDirection getLayoutDirection()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: AppCompatViewInflater$DeclaredOnClickListener(android.view.View,java.lang.String)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
okio.Buffer$inputStream$1: int available()
androidx.core.provider.FontRequestWorker$3: java.lang.Object call()
com.facebook.imageutils.TiffUtil: int readOrientationFromTIFF(java.io.InputStream,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,java.lang.String)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeFocusCompat(int,android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueCreateView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.SearchView$4: SearchView$4(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int evaluateColorChange(float,int,int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.view.SupportMenuInflater: java.lang.Object findRealOwner(java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()
com.facebook.drawee.drawable.FadeDrawable: void draw(android.graphics.Canvas)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.google.android.material.textfield.TextInputLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isNativeCodeDisabled()
com.facebook.common.references.RefCountCloseableReference: com.facebook.common.references.CloseableReference clone()
com.facebook.react.ReactRootView: boolean onTouchEvent(android.view.MotionEvent)
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void stop()
com.google.android.material.bottomappbar.BottomAppBar$8: BottomAppBar$8(com.google.android.material.bottomappbar.BottomAppBar)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.OpReorderer: void swapMoveOp(java.util.List,int,int)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setLocalData(java.lang.Object)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.soloader.SoLoader: void assertInitialized()
okio.AsyncTimeout$Companion: okio.AsyncTimeout awaitTimeout$okio()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: PostprocessorProducer$PostprocessorConsumer(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.request.Postprocessor,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
androidx.customview.widget.ViewDragHelper: int computeAxisDuration(int,int,int)
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
kotlin.collections.AbstractCollection$toString$1: java.lang.CharSequence invoke(java.lang.Object)
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.horcrux.svg.TextPathView: android.graphics.Path getTextPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: ViewManagerPropertyUpdater$FallbackViewManagerSetter(java.lang.Class)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Drawable getControllerOverlay()
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCachePut(com.facebook.cache.common.CacheKey)
com.facebook.react.views.image.ReactImageView: void maybeUpdateView()
androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: LocalVideoThumbnailProducer(java.util.concurrent.Executor,android.content.ContentResolver)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection asCollection(java.lang.Object[])
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: boolean close()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidth(float)
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathMidLine getMidLine()
com.facebook.imagepipeline.core.CloseableReferenceFactory$1: boolean requiresStacktrace()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: void setMaxHeightPercent(float)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.producers.LocalFetchProducer: LocalFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()
kotlin.text.Regex: Regex(java.lang.String)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
okhttp3.internal.cache.DiskLruCache$Entry: long[] getLengths$okhttp()
com.facebook.react.modules.debug.FpsDebugFrameCallback: void startAndRecordFpsAtEachFrame()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()
com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMask(java.lang.String)
com.facebook.cache.disk.DiskStorageCache$Params: DiskStorageCache$Params(long,long,long)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onBitmapCacheMiss(com.facebook.cache.common.CacheKey)
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.react.uimanager.PointerEvents: PointerEvents(java.lang.String,int)
androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getKeyline(int)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
androidx.core.view.ViewCompat: void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(android.view.View,java.lang.String)
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetInvalidated()
com.horcrux.svg.GroupView: com.horcrux.svg.GlyphContext getGlyphContext()
okio.Buffer: okio.Buffer writeShort(int)
com.facebook.soloader.DirectorySoSource: void loadDependencies(java.io.File,int,android.os.StrictMode$ThreadPolicy)
okhttp3.EventListener: EventListener()
com.facebook.react.uimanager.ReactStylesDiffMap: boolean hasKey(java.lang.String)
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(android.view.View,java.lang.String)
com.facebook.imageformat.DefaultImageFormatChecker: com.facebook.imageformat.ImageFormat getWebpFormat(byte[],int)
com.horcrux.svg.TextPathView: void setMethod(java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: int write(int,byte[],int,int)
com.facebook.common.streams.LimitedInputStream: int available()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getRetryImage()
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fresco.ui.common.BaseControllerListener2: BaseControllerListener2()
androidx.transition.ViewOverlayApi14: ViewOverlayApi14(android.content.Context,android.view.ViewGroup,android.view.View)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.facebook.imageutils.WebpUtil: byte getByte(java.io.InputStream)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
kotlin.collections.AbstractCollection: int size()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.drawee.drawable.MatrixDrawable: void getTransform(android.graphics.Matrix)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.recyclerview.widget.DefaultItemAnimator$7: void onAnimationStart(android.animation.Animator)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.recyclerview.widget.OrientationHelper$1: int getStartAfterPadding()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.facebook.react.ReactRootView: void onDetachedFromWindow()
com.facebook.react.views.picker.ReactPicker: void setImmediateSelection(int)
okio.ByteString: boolean equals(java.lang.Object)
com.facebook.fresco.middleware.MiddlewareUtils: com.facebook.fresco.ui.common.ControllerListener2$Extras obtainExtras(java.util.Map,java.util.Map,java.util.Map,android.graphics.Rect,java.lang.String,android.graphics.PointF,java.util.Map,java.lang.Object,android.net.Uri)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
androidx.core.view.WindowInsetsCompat: void setRootViewData(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
com.horcrux.svg.ForeignObjectView: void setWidth(java.lang.String)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.views.textinput.ReactEditText: void addTextChangedListener(android.text.TextWatcher)
androidx.appcompat.widget.SearchView$2: SearchView$2(androidx.appcompat.widget.SearchView)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int,int)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
com.google.android.material.chip.ChipGroup: void onFinishInflate()
com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
com.google.android.material.chip.Chip: void setLines(int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setBundleAssetName(java.lang.String)
com.facebook.cache.disk.DynamicDefaultDiskStorage: void deleteOldStorageIfNecessary()
androidx.transition.PathProperty: PathProperty(android.util.Property,android.graphics.Path)
androidx.fragment.app.FragmentContainerView: void removeViewsInLayout(int,int)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
okhttp3.EventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer toByteBuffer()
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
com.google.android.material.bottomsheet.BottomSheetBehavior: void createShapeValueAnimator()
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: ResizeAndRotateProducer$TransformingConsumer(com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)
com.facebook.imagepipeline.common.RotationOptions: boolean rotationEnabled()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.ReactRootView: void onViewAdded(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaView$1: SafeAreaView$1(com.th3rdwave.safeareacontext.SafeAreaView,java.util.concurrent.atomic.AtomicBoolean)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: AppCompatResources$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.views.image.ScaleTypeStartInside: java.lang.String toString()
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: int getMinDecodeIntervalMs()
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
com.google.android.material.datepicker.DateValidatorPointForward: int hashCode()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.swiperefresh.RefreshEvent: com.facebook.react.bridge.WritableMap getEventData()
okio.InflaterSource: void close()
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.interfaces.DraweeController getOldController()
okhttp3.internal.connection.Exchange$ResponseBodySource: void close()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(android.view.View,java.lang.String)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)
androidx.appcompat.app.AppCompatActivity: void onStop()
com.horcrux.svg.MaskView: void setMaskUnits(int)
okhttp3.internal.concurrent.TaskRunner$RealBackend: long nanoTime()
com.facebook.imagepipeline.producers.MultiplexProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.facebook.react.views.progressbar.ProgressBarContainerView: void apply()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.PathParser: float parse_list_number()
com.swmansion.rnscreens.ScreenContainer: void performUpdate()
com.horcrux.svg.SVGLength$UnitType: SVGLength$UnitType(java.lang.String,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
androidx.appcompat.app.AlertController$4: void onScroll(android.widget.AbsListView,int,int,int)
androidx.lifecycle.SavedStateHandleController: boolean isAttached()
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurementInOther(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetFullSpansForAddition(int,int)
com.facebook.react.jscexecutor.JSCExecutorFactory: JSCExecutorFactory(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStack$Companion: boolean access$isSystemAnimation(com.swmansion.rnscreens.ScreenStack$Companion,com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: void readHeader()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray(java.lang.Object[])
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.google.android.material.textfield.IndicatorViewController: void addIndicator(android.widget.TextView,int)
okio.Buffer: void readFully(byte[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.shape.ShapePath$PathArcOperation: float getBottom()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ShadowNodeRegistry: boolean isRootNode(int)
com.horcrux.svg.GroupView: void pushGlyphContext()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: long runningAverage(long,long)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)
com.facebook.react.uimanager.common.ViewUtil: boolean isRootTag(int)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getCradleVerticalOffset()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean shouldDownsampleIfLargeBitmap()
com.facebook.react.common.JavascriptException: com.facebook.react.common.JavascriptException setExtraDataAsJson(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)
com.facebook.react.animated.NativeAnimatedModule$19: NativeAnimatedModule$19(com.facebook.react.animated.NativeAnimatedModule,int)
okhttp3.internal.platform.android.AndroidLog: AndroidLog()
okhttp3.internal.http1.Http1ExchangeCodec: int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.atomic.AtomicInteger access$500(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: Http2Connection$writeSynResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener getListener$okhttp()
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.RecyclerView: void initAutofill()
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)
com.facebook.drawee.backends.pipeline.info.ImagePerfData: ImagePerfData(java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.image.ImageInfo,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest[],long,long,long,long,long,long,long,int,java.lang.String,boolean,int,int,java.lang.Throwable,int,long,long,java.lang.String,long,com.facebook.fresco.ui.common.DimensionsInfo,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,android.content.res.AssetManager)
androidx.appcompat.view.menu.MenuItemImpl: char getShortcut()
com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5: void onAnimationStart(android.view.animation.Animation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
com.facebook.react.animated.AnimatedNode: void onAttachedToNode(com.facebook.react.animated.AnimatedNode)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.datasource.AbstractDataSource: boolean hasResult()
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: java.lang.Object[] newArray(int)
com.facebook.cache.disk.DynamicDefaultDiskStorage: void createRootDirectoryIfNecessary(java.io.File)
androidx.recyclerview.widget.ViewInfoStore: boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: float distanceInfluenceForSnapDuration(float)
androidx.customview.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)
bolts.Task$4: void run()
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: ThreadHandoffProducer$1(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.Consumer)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.google.android.material.resources.TextAppearance: boolean access$102(com.google.android.material.resources.TextAppearance,boolean)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: MultiplexProducer$Multiplexer$ForwardingConsumer(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,com.facebook.imagepipeline.producers.MultiplexProducer$1)
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: EventDispatcherImpl$DispatchEventsRunnable(com.facebook.react.uimanager.events.EventDispatcherImpl)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
com.facebook.react.views.modal.ShowEvent: java.lang.String getEventName()
androidx.fragment.app.FragmentController: void dispatchStop()
okhttp3.Request: java.util.Map getTags$okhttp()
androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.horcrux.svg.RenderableViewManager$SymbolManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.textfield.TextInputLayout$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
com.facebook.systrace.SystraceMessage$NoopBuilder: SystraceMessage$NoopBuilder(com.facebook.systrace.SystraceMessage$1)
com.facebook.react.views.textinput.ReactEditText: void onContentSizeChange()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean)
androidx.recyclerview.widget.RecyclerView$Recycler: void clearOldPositions()
okio.InflaterSource: void releaseBytesAfterInflate()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
com.horcrux.svg.RadialGradientView: void setGradientUnits(int)
androidx.recyclerview.widget.RecyclerView$Recycler: void clearScrap()
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
com.horcrux.svg.SvgView: java.lang.String toDataURL(int,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(android.view.View,java.lang.String)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,java.lang.String,int,int)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: LocalContentUriThumbnailFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)
com.google.android.material.drawable.DrawableUtils: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: void onMeasure(int,int)
okhttp3.Headers: java.lang.String value(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
androidx.appcompat.view.menu.StandardMenuPopup: boolean flagActionItems()
com.facebook.react.ReactPackageHelper$1$1: java.lang.Object next()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
androidx.collection.MapCollections$MapIterator: void remove()
androidx.appcompat.app.AppCompatDelegateImpl: void attachBaseContext(android.content.Context)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: boolean canCoalesce()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
com.facebook.react.views.text.TextAttributeProps: void setLineHeight(float)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setName(android.view.View,java.lang.String)
androidx.transition.ViewUtilsApi19: void clearNonTransitionAlpha(android.view.View)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
kotlin.collections.AbstractList$IteratorImpl: void remove()
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int,int)
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
okhttp3.Response: okhttp3.ResponseBody body()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleAddView(android.view.View)
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: UIViewOperationQueue$ChangeJSResponderOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,boolean,boolean)
com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.lifecycle.ViewModel: ViewModel()
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
com.google.android.material.shape.MaterialShapeDrawable: float getTopRightCornerResolvedSize()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
androidx.transition.ChangeBounds$9: void onTransitionEnd(androidx.transition.Transition)
com.facebook.cache.disk.DefaultDiskStorage: java.io.File getSubdirectory(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.core.ImagePipelineExperiments: long getMemoryType()
com.facebook.drawee.drawable.RoundedDrawable: int getIntrinsicHeight()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.recyclerview.widget.GapWorker: void buildTaskList()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$500(com.facebook.react.animated.NativeAnimatedModule)
com.google.android.material.internal.CheckableImageButton$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.horcrux.svg.PathParser: float parse_number()
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
com.facebook.common.references.FinalizerCloseableReference: FinalizerCloseableReference(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$1: void run()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.drawable.RoundedDrawable: void setAlpha(int)
com.facebook.react.views.picker.ReactPickerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: ImagePerfMonitor(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.PipelineDraweeController,com.facebook.common.internal.Supplier)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$700(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
com.facebook.imagepipeline.producers.ThumbnailSizeChecker: int getAcceptableSize(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: void updateRadialGradient(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase(com.facebook.yoga.YogaConfig)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.facebook.imageutils.WebpUtil: int getInt(java.io.InputStream)
com.horcrux.svg.SvgView: void setId(int)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.net.HttpURLConnection openConnectionTo(android.net.Uri)
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.horcrux.svg.SvgViewManager: void setBbWidth(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()
com.facebook.imagepipeline.producers.SettableProducerContext: SettableProducerContext(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: Objects$ToStringHelper$ValueHolder()
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
com.horcrux.svg.SvgView: void defineTemplate(com.horcrux.svg.VirtualView,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.facebook.react.views.picker.events.PickerItemSelectEvent: PickerItemSelectEvent(int,int,int)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setOverlayColor(int)
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
com.facebook.drawee.backends.pipeline.Fresco: Fresco()
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.google.android.material.textfield.TextInputLayout$2: void run()
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long)
com.horcrux.svg.TSpanView: android.graphics.Path getLinePath(java.lang.String,android.graphics.Paint,android.graphics.Canvas)
com.facebook.react.uimanager.events.EventDispatcherImpl: void maybePostFrameCallbackFromNonUI()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
androidx.transition.ViewUtilsApi21: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
com.google.android.material.appbar.AppBarLayout: boolean hasCollapsibleChild()
okhttp3.internal.connection.RouteSelector: okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.google.android.material.textfield.TextInputLayout: boolean shouldUseEditTextBackgroundForBoxBackground()
com.facebook.common.time.SystemClock: SystemClock()
com.google.android.material.animation.ChildrenAlphaProperty: void set(java.lang.Object,java.lang.Object)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void invalidateDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeMiterlimit(android.view.View,float)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.google.android.material.datepicker.MaterialCalendarGridView: void onDraw(android.graphics.Canvas)
com.facebook.react.modules.core.JavaTimerManager: void onHostResume()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createShadowNode(java.lang.String)
androidx.fragment.app.Fragment: void performDestroyView()
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: HttpUrlConnectionNetworkFetcher$2(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,java.util.concurrent.Future,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginAuto(int)
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])
androidx.appcompat.widget.AppCompatDrawableManager$1: AppCompatDrawableManager$1()
com.facebook.cache.disk.DiskStorageCache$CacheStats: DiskStorageCache$CacheStats()
androidx.recyclerview.widget.FastScroller$2: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityForward()
okio.GzipSource: void updateCrc(okio.Buffer,long,long)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.backends.pipeline.Fresco: void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig,com.facebook.drawee.backends.pipeline.DraweeConfig,boolean)
com.facebook.react.views.textinput.ReactEditText: void onScrollChanged(int,int,int,int)
okio.AsyncTimeout: void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout)
androidx.cardview.widget.RoundRectDrawableWithShadow: void setMaxShadowSize(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.facebook.imagepipeline.transcoder.DownsampleUtil: int ratioToSampleSize(float)
kotlin.collections.AbstractList$ListIteratorImpl: int previousIndex()
com.facebook.react.views.textinput.ReactEditText: void setSelection(int,int)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
com.facebook.react.views.modal.ReactModalHostView: void removeViewAt(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setVerticalOffset(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
okio.Options$Companion: void buildTrieRecursive$default(okio.Options$Companion,long,okio.Buffer,int,java.util.List,int,int,java.util.List,int,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.textfield.ClearTextEndIconDelegate$4: void onAnimationStart(android.animation.Animator)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.view.menu.CascadingMenuPopup: boolean isShowing()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.imagepipeline.core.ProducerFactory: ProducerFactory(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory,boolean,int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)
androidx.transition.Transition: androidx.transition.Transition removeTarget(android.view.View)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getLength(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,int)
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
com.facebook.react.bridge.queue.MessageQueueThread: void runOnQueue(java.lang.Runnable)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenWindowTraits: void applyDidSetOrientation$react_native_screens_release()
com.facebook.react.animated.SpringAnimation: void runAnimationStep(long)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
com.google.android.material.shape.MaterialShapeDrawable: boolean hasFill()
androidx.recyclerview.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,int,boolean)
com.google.android.material.chip.ChipDrawable: void setChipCornerRadiusResource(int)
com.facebook.soloader.SoLoader: SoLoader()
androidx.transition.TransitionSet: int getTransitionCount()
com.horcrux.svg.Brush: double getVal(com.horcrux.svg.SVGLength,double,float,float)
com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener access$002(com.facebook.react.ReactActivityDelegate,com.facebook.react.modules.core.PermissionListener)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.facebook.react.util.RNLog: void e(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: int removeAll(com.facebook.common.internal.Predicate)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$100(com.facebook.react.modules.core.JavaTimerManager)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getPressedTranslationZ()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.fragment.app.FragmentActivity: void onLowMemory()
com.facebook.common.internal.Preconditions: void checkState(boolean,java.lang.Object)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.views.image.ImageLoadEvent: java.lang.String eventNameForType(int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
com.horcrux.svg.ForeignObjectView: ForeignObjectView(com.facebook.react.bridge.ReactContext)
androidx.fragment.app.BackStackRecord: int commit()
com.facebook.react.views.slider.ReactSliderEvent: short getCoalescingKey()
com.swmansion.rnscreens.Screen$StackPresentation: Screen$StackPresentation(java.lang.String,int)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: com.facebook.binaryresource.BinaryResource commit(java.lang.Object,long)
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void closeCutout()
com.facebook.cache.disk.DynamicDefaultDiskStorage: java.util.Collection getEntries()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.imagepipeline.memory.PoolParams: PoolParams(int,int,android.util.SparseIntArray,int,int,int)
com.facebook.yoga.YogaNodeJNIBase: void setAspectRatio(float)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
androidx.collection.LongSparseArray: java.lang.Object clone()
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.Task awaitTaskToRun()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: void close()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean isExpanded()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: CountingMemoryCache$Entry(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.fresco.ui.common.ControllerListener2 getControllerListener2()
androidx.appcompat.widget.ScrollingTabContainerView: void performCollapse()
com.facebook.imagepipeline.memory.LruBitmapPool: void release(java.lang.Object)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: ForwardingCookieHandler$CookieSaver(com.facebook.react.modules.network.ForwardingCookieHandler)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
com.facebook.imagepipeline.image.CloseableStaticBitmap: boolean isClosed()
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.imagepipeline.request.BasePostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
okio.internal.HashFunctionKt$newHashFunction$1: void update(byte[],int,int)
com.facebook.react.modules.core.ReactChoreographer: void postFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDx(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRectwidth(com.horcrux.svg.RectView,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
okio.-Base64: java.lang.String encodeBase64(byte[],byte[])
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: ReactTextInputManager$ReactSelectionWatcher(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText)
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()
androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean arrowScroll(int)
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil getInstance()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: DefaultDrawableFactory(android.content.res.Resources,com.facebook.imagepipeline.drawable.DrawableFactory)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
com.facebook.react.uimanager.UIImplementation: void updateViewHierarchy()
androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void calculateAnimation(int,int,int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean isStateful()
com.swmansion.rnscreens.ScreenStackFragment: boolean isDismissible()
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: com.facebook.imagepipeline.producers.SettableProducerContext access$000(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter)
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
com.facebook.react.animated.NativeAnimatedModule$6: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.google.android.material.appbar.AppBarLayout: void clearLiftOnScrollTargetView()
com.google.android.material.resources.TextAppearance$1: TextAppearance$1(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback)
androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.datepicker.MonthAdapter: int dayToPosition(int)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: void onDismiss()
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
okhttp3.internal.concurrent.TaskRunner$runnable$1: TaskRunner$runnable$1(okhttp3.internal.concurrent.TaskRunner)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.ReactInstancePackage: ReactInstancePackage()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.imagepipeline.producers.ThumbnailSizeChecker: boolean isImageBigEnough(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,java.lang.String)
com.facebook.jni.HybridData: HybridData()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: long getLastEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Boolean)
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: com.facebook.cache.disk.DefaultDiskStorage$FileInfo fromFile(java.io.File)
com.zoontek.rnbootsplash.RNBootSplashModule$Status: RNBootSplashModule$Status(java.lang.String,int)
com.google.android.material.bottomappbar.BottomAppBar: void setCutoutState()
com.google.android.material.canvas.CanvasCompat: int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.facebook.drawee.gestures.GestureDetector: GestureDetector(android.content.Context)
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable buildBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
androidx.fragment.app.FragmentStateManager: void ensureInflatedView()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AlertController$CheckedItemAdapter: AlertController$CheckedItemAdapter(android.content.Context,int,int,java.lang.CharSequence[])
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
com.facebook.react.views.view.ReactViewManager$1: ReactViewManager$1(com.facebook.react.views.view.ReactViewManager,com.facebook.react.views.view.ReactViewGroup)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Method getTextViewMethod(java.lang.String)
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher$1: ReactTextInputManager$ReactTextInputTextWatcher$1(com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher)
com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout access$100(com.facebook.react.views.text.ReactTextShadowNode,android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newEncodedCacheMultiplexToTranscodeSequence(com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context)
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPositionY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.graphics.Bitmap$Config access$600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolConfig build()
com.facebook.react.views.scroll.ReactScrollView: void handlePostTouchScrolling(int,int)
com.facebook.react.TurboReactPackage$1$1: java.lang.Object next()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void setInputType(int)
androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
com.google.android.material.transformation.FabTransformationBehavior: float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String getString(short)
com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)
com.swmansion.rnscreens.events.StackFinishTransitioningEvent$Companion: StackFinishTransitioningEvent$Companion()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(android.view.View,int)
androidx.fragment.app.FragmentManager: void dispatchDestroyView()
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: ImageStoreManager$GetBase64Task(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback,com.facebook.react.modules.camera.ImageStoreManager$1)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyChanged()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllStartsEqual()
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleWidth()
com.google.android.material.resources.TextAppearance$1: void onFontRetrieved(android.graphics.Typeface)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void access$000(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.imagepipeline.image.EncodedImage: android.graphics.ColorSpace getColorSpace()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
com.facebook.react.ReactActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: AppCompatDelegateImpl$AutoNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()
com.google.android.material.datepicker.MaterialCalendar$9: MaterialCalendar$9(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2$LogHandler: ImagePerfControllerListener2$LogHandler(android.os.Looper,com.facebook.drawee.backends.pipeline.info.ImagePerfNotifier)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.animated.SubtractionAnimatedNode: SubtractionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.app.AlertController$3: void run()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void addCallbacks(android.util.Pair,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: java.lang.Object getResult()
androidx.transition.TransitionManager$MultiListener: boolean onPreDraw()
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader: void load()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
com.facebook.react.uimanager.UIImplementation: void calculateRootLayout(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$2800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.drawee.view.DraweeHolder: void detachController()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit fromInt(int)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Settings: int size()
com.facebook.react.views.text.TextAttributeProps: float getLetterSpacing()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
androidx.fragment.app.FragmentManager: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
com.facebook.react.uimanager.FabricViewStateManager: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: UIViewOperationQueue$MeasureInWindowOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
androidx.recyclerview.widget.RecyclerView$5: void onEnteredHiddenState(android.view.View)
com.facebook.drawee.controller.AbstractDraweeController: AbstractDraweeController(com.facebook.drawee.components.DeferredReleaser,java.util.concurrent.Executor,java.lang.String,java.lang.Object)
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase getRouteDatabase()
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: java.lang.Object get(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: boolean requirePreDrawListener()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
androidx.appcompat.widget.SuggestionsAdapter: void setQueryRefinement(int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager access$300(com.facebook.react.modules.network.ForwardingCookieHandler)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: ThumbnailBranchProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[])
com.horcrux.svg.VirtualViewManager$1: VirtualViewManager$1(com.horcrux.svg.VirtualViewManager)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasureInWindow(int,com.facebook.react.bridge.Callback)
okhttp3.Response: long receivedResponseAtMillis()
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody createGzip(okhttp3.MediaType,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromFirstChar(java.util.Locale)
com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFormat(int,java.util.Locale)
com.facebook.drawee.generic.RoundingParams: float[] getCornersRadii()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.TextAttributeProps: void setTextDecorationLine(java.lang.String)
com.horcrux.svg.RenderableView: void setVectorEffect(int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setEndIconChecked(boolean)
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText createInternalEditText()
okio.Buffer$outputStream$1: void flush()
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier: com.facebook.cache.disk.EntryEvictionComparator get()
com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)
okio.DeflaterSink: void write(okio.Buffer,long)
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
androidx.core.provider.CalleeHandler: android.os.Handler create()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
com.facebook.react.views.text.TextAttributeProps: void setLayoutDirection(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitX: java.lang.String toString()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion()
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: boolean contains(com.facebook.common.internal.Predicate)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: ConscryptSocketAdapter$Companion$factory$1()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.MatrixMathHelper: double degreesToRadians(double)
androidx.appcompat.widget.SuggestionsAdapter: void onClick(android.view.View)
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
com.facebook.common.internal.Suppliers$3: java.lang.Boolean get()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManagerForReactTag(com.facebook.react.bridge.ReactContext,int)
com.facebook.soloader.SoLoader: void init(android.content.Context,int,com.facebook.soloader.SoFileLoader)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource getSource$okhttp()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.swmansion.rnscreens.ScreenContainer$mLayoutCallback$1: ScreenContainer$mLayoutCallback$1(com.swmansion.rnscreens.ScreenContainer)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline getEnum(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderColor(int,float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
com.facebook.react.modules.network.ForwardingCookieHandler: void runInBackground(java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
com.facebook.yoga.YogaNodeJNIBase: void dirty()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getCommonNetworkFetchToEncodedMemorySequence()
androidx.recyclerview.widget.AdapterHelper$UpdateOp: AdapterHelper$UpdateOp(int,int,int,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowShortcut()
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerStart(android.view.View,java.lang.String)
okio.GzipSource: okio.Timeout timeout()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.producers.NetworkFetcher getNetworkFetcher()
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
androidx.fragment.app.FragmentStateManager: void stop()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy getBitmapMemoryCacheTrimStrategy()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory getCloseableReferenceFactory()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1400(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.imagepipeline.image.EncodedImage: EncodedImage(com.facebook.common.internal.Supplier)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()
androidx.recyclerview.widget.RecyclerView$State: java.lang.String toString()
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: void setPendingContentOffsets(int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
androidx.recyclerview.widget.OrientationHelper$1: OrientationHelper$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.viewmanagers.RNSVGImageManagerDelegate: RNSVGImageManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void initMeasureFunction()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp()
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForRemove(int,int,boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setForeignObjectheight(com.horcrux.svg.ForeignObjectView,java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform()
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
androidx.core.view.ActionProvider: boolean isVisible()
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$200(com.facebook.react.modules.core.JavaTimerManager)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
okio.SegmentedByteString: int hashCode()
com.facebook.react.views.text.CustomStyleSpan: CustomStyleSpan(int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
bolts.AndroidExecutors$UIThreadExecutor: AndroidExecutors$UIThreadExecutor(bolts.AndroidExecutors$1)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
com.facebook.common.executors.ScheduledFutureImpl: boolean isCancelled()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.gestures.GestureDetector getGestureDetector()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void onImageLoadedFromCacheImmediately(java.lang.String,com.facebook.common.references.CloseableReference)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setAlpha(int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: EventDispatcherImpl$1()
com.facebook.drawee.controller.BaseControllerListener: void onRelease(java.lang.String)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.facebook.drawee.drawable.RoundedCornersDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.fragment.app.Fragment$3: void run()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean getUnsupported()
com.facebook.react.animated.StyleAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillRule(android.view.View,int)
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: boolean canSwipeDismissView(android.view.View)
com.facebook.react.jstasks.HeadlessJsTaskContext$3: HeadlessJsTaskContext$3(com.facebook.react.jstasks.HeadlessJsTaskContext,int)
com.facebook.imagepipeline.core.ImagePipelineConfig$1: ImagePipelineConfig$1(com.facebook.imagepipeline.core.ImagePipelineConfig)
okhttp3.internal.ws.RealWebSocket$Close: int getCode()
com.facebook.react.uimanager.MatrixMathHelper: void applySkewY(double[],double)
com.facebook.react.viewmanagers.RNSVGGroupManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream$okhttp(int)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: java.lang.String format(java.lang.String,java.lang.Object[])
androidx.customview.widget.ViewDragHelper: void dispatchViewReleased(float,float)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: AppCompatTextHelper$ApplyTextViewCallback(androidx.appcompat.widget.AppCompatTextHelper,int,int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.horcrux.svg.ImageView: ImageView(com.facebook.react.bridge.ReactContext)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
com.horcrux.svg.SvgViewModule$1$1: SvgViewModule$1$1(com.horcrux.svg.SvgViewModule$1)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: ThrottlingProducer$ThrottlerConsumer(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ThrottlingProducer$1)
okio.internal.ByteStringKt: int access$codePointIndexToCharIndex(byte[],int)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.uimanager.ReactStylesDiffMap: boolean getBoolean(java.lang.String,boolean)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: EventDispatcherImpl$ScheduleDispatchFrameCallback$1(com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetFullSpansForRemoval(int,int)
androidx.fragment.app.FragmentManager: void addFragment(androidx.fragment.app.Fragment)
com.google.android.material.appbar.AppBarLayout$Behavior: int getTopAndBottomOffset()
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
com.facebook.react.views.scroll.ReactScrollView: void access$300(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void resetFlags()
androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getQuantityText(int,int)
com.facebook.react.modules.core.ChoreographerCompat: android.view.Choreographer getChoreographer()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
com.horcrux.svg.PathParser: void quadraticBezierCurve(float,float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()
androidx.transition.Visibility: void captureEndValues(androidx.transition.TransitionValues)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$300(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream)
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
com.google.android.material.ripple.RippleUtils: RippleUtils()
com.facebook.imagepipeline.memory.BasePool: void ensurePoolSizeInvariant()
com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void removePreDrawListener()
androidx.core.view.ViewCompat$5: ViewCompat$5(int,java.lang.Class,int)
com.facebook.react.animated.NativeAnimatedNodesManager: void access$300(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event)
com.google.android.material.datepicker.MaterialDatePicker$2: void onClick(android.view.View)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void disposeResult(java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.react.modules.storage.AsyncStorageModule$3: AsyncStorageModule$3(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: PasswordToggleEndIconDelegate$1(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findFirstPartiallyVisibleItemPosition()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DelayProducer newDelayProducer(com.facebook.imagepipeline.producers.Producer)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)
okhttp3.internal.http2.Http2ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.facebook.react.modules.network.ProgressRequestBody$1: void write(int)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType contentType()
androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)
okhttp3.internal.platform.android.AndroidLog: java.lang.String loggerTag(java.lang.String)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: Http2Connection$sendDegradedPingLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleError(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()
androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int getScrollAnimationDuration()
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.horcrux.svg.TextView: android.graphics.Path getGroupPath(android.graphics.Canvas,android.graphics.Paint)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.chip.ChipGroup$CheckedStateTracker: void onCheckedChanged(android.widget.CompoundButton,boolean)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()
com.horcrux.svg.ForeignObjectView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.imageutils.JfifUtil: int moveToAPP1EXIF(java.io.InputStream)
androidx.appcompat.widget.SearchView$10: void onTextChanged(java.lang.CharSequence,int,int,int)
okhttp3.TlsVersion: java.lang.String javaName()
com.horcrux.svg.SvgViewModule$1: void run()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String access$000(com.facebook.drawee.controller.AbstractDraweeController)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float getStartingRotation()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: LayoutAnimationController$1(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.bridge.Callback)
com.facebook.drawee.generic.RootDrawable: boolean setVisible(boolean,boolean)
com.google.android.material.datepicker.DateValidatorPointForward: DateValidatorPointForward(long,com.google.android.material.datepicker.DateValidatorPointForward$1)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: boolean containsUri(android.net.Uri)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
androidx.appcompat.view.menu.StandardMenuPopup: void setAnchorView(android.view.View)
com.google.android.material.datepicker.YearGridAdapter: int getYearForPosition(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.datepicker.Month$1: java.lang.Object[] newArray(int)
com.facebook.react.ReactInstanceManager: void access$1400(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)
androidx.transition.ViewGroupOverlayApi14: void remove(android.view.View)
com.google.android.material.shape.ShapePath: com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
androidx.cardview.widget.RoundRectDrawableWithShadow: void setShadowSize(float,float)
androidx.fragment.app.FragmentManager: int reverseTransit(int)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
com.facebook.drawee.generic.RootDrawable: int getIntrinsicHeight()
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.facebook.react.modules.network.ForwardingCookieHandler: void put(java.net.URI,java.util.Map)
com.facebook.common.references.CloseableReference: void setDisableCloseableReferencesForBitmaps(int)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.imagepipeline.memory.PoolConfig: int getBitmapPoolMaxPoolSize()
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setFontStyle(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanIndex(int,int)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: MenuItemWrapperICS$OnMenuItemClickListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)
com.facebook.drawee.drawable.RoundedBitmapDrawable: void updatePaint()
com.facebook.drawee.generic.GenericDraweeHierarchy: void setProgressBarImage(android.graphics.drawable.Drawable)
com.facebook.react.animated.ValueAnimatedNode: void setValueListener(com.facebook.react.animated.AnimatedNodeValueListener)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: boolean hasResult()
androidx.fragment.app.FragmentStateManager: void restoreViewState()
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.google.android.material.shape.MaterialShapeDrawable: boolean isRoundRect()
com.facebook.imagepipeline.producers.LocalFetchProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.horcrux.svg.TextView: TextView(com.facebook.react.bridge.ReactContext)
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.view.View)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
com.facebook.drawee.backends.pipeline.Fresco: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder newDraweeControllerBuilder()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
androidx.core.provider.FontRequestWorker$TypefaceResult: boolean isSuccess()
okhttp3.internal.http2.Http2Stream: void setWriteBytesTotal$okhttp(long)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1300(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
com.facebook.react.views.image.MultiPostprocessor: com.facebook.imagepipeline.request.Postprocessor from(java.util.List)
androidx.appcompat.app.ToolbarActionBar$1: ToolbarActionBar$1(androidx.appcompat.app.ToolbarActionBar)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long read(okio.Buffer,long)
androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
androidx.fragment.app.Fragment: int getNextAnim()
okhttp3.HttpUrl$Builder: void setScheme$okhttp(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager createReactInstanceManager()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
androidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.th3rdwave.safeareacontext.SerializationUtils: com.facebook.react.bridge.WritableMap rectToJsMap(com.th3rdwave.safeareacontext.Rect)
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory: com.facebook.imagepipeline.cache.CountingMemoryCache create(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)
com.facebook.drawee.drawable.ForwardingDrawable: void setHotspot(float,float)
com.facebook.react.uimanager.ReactStylesDiffMap: int getInt(java.lang.String,int)
androidx.cursoradapter.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.CatalystInstance: void destroy()
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket: void runWriter()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChildWithMargins(android.view.View,int,int)
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)
com.facebook.react.animated.ValueAnimatedNode: java.lang.Object getAnimatedObject()
com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewCaptured(android.view.View,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactRootView createRootView()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,float)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
okio.SegmentedByteString: int getSize$okio()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getState()
com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setStartTrim(float)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
com.facebook.drawee.drawable.RoundedDrawable: void setPaintFilterBitmap(boolean)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
androidx.fragment.app.Fragment: void setNextTransition(int)
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
com.facebook.datasource.DataSources$1: com.facebook.datasource.DataSource get()
com.swmansion.rnscreens.ScreenWindowTraits: void trySetWindowTraits$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationStart(android.view.animation.Animation)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetchWithRequest(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback,okhttp3.Request)
okhttp3.Challenge: java.lang.String toString()
androidx.collection.SparseArrayCompat: void clear()
androidx.transition.ChangeBounds$6: java.lang.Object get(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.facebook.drawee.drawable.ScaleTypeDrawable: ScaleTypeDrawable(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(android.view.View,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
okio.BlackholeSink: void write(okio.Buffer,long)
com.facebook.datasource.AbstractDataSource: void notifyDataSubscribers()
com.facebook.react.views.drawer.ReactDrawerLayout: void closeDrawer()
com.facebook.imagepipeline.producers.BaseConsumer: void onNewResult(java.lang.Object,int)
okhttp3.internal.http2.Header: okio.ByteString component1()
okhttp3.internal.cache.FaultHidingSink: void flush()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newUnknownLengthSource()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.facebook.react.views.text.TextAttributes: float getLetterSpacing()
okhttp3.Cookie: java.util.regex.Pattern access$getMONTH_PATTERN$cp()
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: java.lang.Object alloc(int)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: java.nio.ByteBuffer getByteBuffer()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)
com.facebook.imagepipeline.memory.BucketsBitmapPool: BucketsBitmapPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker,boolean)
okio.ByteString: void setHashCode$okio(int)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$100(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(android.view.View,java.lang.String)
okhttp3.internal.connection.RealConnection$connectTls$1: java.util.List invoke()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.lifecycle.ReportFragment: void onResume()
com.horcrux.svg.UseView: void setY(java.lang.String)
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setEnsureMinTouchTargetSize(boolean)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.listener.RequestListener getRequestListenerForRequest(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.listener.RequestListener)
androidx.recyclerview.widget.DefaultItemAnimator$3: DefaultItemAnimator$3(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
com.google.android.material.datepicker.MaterialDatePicker$1: MaterialDatePicker$1(com.google.android.material.datepicker.MaterialDatePicker)
okhttp3.internal.concurrent.TaskQueue: boolean cancelAllAndDecide$okhttp()
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp()
androidx.recyclerview.widget.LinearSmoothScroller: LinearSmoothScroller(android.content.Context)
com.facebook.imageutils.JfifUtil: boolean moveToMarker(java.io.InputStream,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
com.facebook.react.uimanager.MatrixMathHelper: double v3Length(double[])
com.facebook.react.uimanager.events.EventDispatcherImpl: void onCatalystInstanceDestroyed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$000(com.facebook.react.modules.core.JavaTimerManager)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(android.view.View,java.lang.String)
okhttp3.Headers: int hashCode()
androidx.appcompat.widget.SearchView: void onTextChanged(java.lang.CharSequence)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion: ScreenStackHeaderSubviewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.Visibility$1: Visibility$1(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onMenuOpened(int,android.view.Menu)
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
okhttp3.internal.platform.android.ConscryptSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteStreams access$700(com.facebook.imagepipeline.cache.BufferedDiskCache)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RNSVGMarkerPosition: void UpdateFromPathElement(com.horcrux.svg.PathElement)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: void onAnimationEnd(android.animation.Animator)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$Recycler: void markKnownViewsInvalid()
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerStateChanged(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okio.AsyncTimeout$sink$1: java.lang.String toString()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaNodeJNIBase removeChildAt(int)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setVisible(boolean)
com.facebook.imageutils.WebpUtil: android.util.Pair getVP8LDimension(java.io.InputStream)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
okio.AsyncTimeout$sink$1: okio.AsyncTimeout timeout()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void write(okio.Buffer,long)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.FastScroller: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void disposeResult(java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
okhttp3.internal.platform.android.CloseGuard: java.lang.Object createAndOpen(java.lang.String)
com.google.android.material.chip.ChipDrawable: float getCloseIconSize()
com.facebook.react.views.text.TextAttributes: java.lang.String toString()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.google.android.material.snackbar.SnackbarManager: SnackbarManager()
com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
com.facebook.react.viewmanagers.RNSVGMaskManagerDelegate: RNSVGMaskManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.appcompat.widget.SearchView$6: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinejoin(android.view.View,int)
com.google.android.material.transformation.FabTransformationBehavior: android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader: void ensure()
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.common.futures.SimpleSettableFuture: void set(java.lang.Object)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.transition.Visibility$DisappearListener: void onAnimationRepeat(android.animation.Animator)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
androidx.appcompat.widget.ActionBarContextView: void killMode()
com.facebook.imagepipeline.producers.NetworkFetchProducer: void access$100(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4: PasswordToggleEndIconDelegate$4(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.animated.ValueAnimatedNode: void extractOffset()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.react.ReactFragment: ReactFragment()
com.horcrux.svg.Brush: android.graphics.RectF getPaintRect(android.graphics.RectF)
androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,java.lang.String)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getDirtyFiles$okhttp()
com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void clearAutoSizeConfiguration()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void clear()
androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)
kotlin.collections.EmptyMap: java.util.Set getKeys()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)
okhttp3.internal.connection.Exchange: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.modules.fresco.ReactNetworkImageRequest: ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void doDecode(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
com.facebook.drawee.drawable.DrawableUtils: int getOpacityFromColor(int)
com.facebook.cache.disk.DiskCacheConfig$1: java.io.File get()
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.WritableNativeMap)
com.facebook.react.ReactInstanceManager: void moveToBeforeCreateLifecycleState()
okhttp3.internal.connection.RealCall: okhttp3.Response getResponseWithInterceptorChain$okhttp()
com.facebook.yoga.YogaNodeJNIFinalizer: void finalize()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.google.android.material.appbar.AppBarLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.views.scroll.ReactHorizontalScrollView$3: ReactHorizontalScrollView$3(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.google.android.material.chip.ChipDrawable: float getCloseIconStartPadding()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
com.facebook.react.common.LifecycleState: LifecycleState(java.lang.String,int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getDefaultMainDiskCacheConfig(android.content.Context)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
okio.Timeout$Companion: Timeout$Companion()
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: int getOpacity()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setRoundingMethod(com.facebook.drawee.generic.RoundingParams$RoundingMethod)
androidx.transition.TransitionSet: void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback)
androidx.recyclerview.widget.LinearLayoutManager: android.os.Parcelable onSaveInstanceState()
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(java.util.List)
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setStreamId(int)
com.google.android.material.chip.ChipDrawable: float calculateCloseIconWidth()
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
com.google.android.material.shape.RelativeCornerSize: int hashCode()
com.facebook.drawee.drawable.OrientedDrawable: OrientedDrawable(android.graphics.drawable.Drawable,int,int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.soloader.UnpackingSoSource: void extractDsoImpl(com.facebook.soloader.UnpackingSoSource$InputDso,byte[])
okio.ByteString: byte[] internalArray$okio()
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imageutils.ImageMetaData readImageMetaData()
com.horcrux.svg.GlyphContext: float getWidth()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMaxTextSize()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: boolean isTaskCancelled(bolts.Task)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
androidx.appcompat.view.menu.MenuAdapter: void findExpandedIndex()
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: TextInlineViewPlaceholderSpan(int,int,int)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.cache.disk.DefaultDiskStorage: java.io.File getContentFileFor(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
com.horcrux.svg.TextPathView: void popGlyphContext()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher$1: com.facebook.react.bridge.WritableMap getStateUpdate()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
com.facebook.react.views.text.ReactTextShadowNode: boolean hoistNativeChildren()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void clear()
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean isTaskRunning(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: void onCancellation(com.facebook.datasource.DataSource)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeMiterlimit(android.view.View,float)
com.google.android.material.circularreveal.CircularRevealFrameLayout: boolean isOpaque()
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
com.facebook.drawee.drawable.DrawableProperties: void setDither(boolean)
com.facebook.drawee.drawable.RoundedNinePatchDrawable: RoundedNinePatchDrawable(android.graphics.drawable.NinePatchDrawable)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLocalData(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.FontData: FontData()
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getScreenAt(int)
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache access$3300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.fragment.app.FragmentTransaction: FragmentTransaction(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
okio.Options: Options(okio.ByteString[],int[])
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onPanelClosed(int,android.view.Menu)
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void enableFpsListener()
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: void onLayout()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewHelper: int parseOverScrollMode(java.lang.String)
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ChoreographerCompat access$202(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ChoreographerCompat)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: PositionAndSizeAnimation(android.view.View,int,int,int,int)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
com.facebook.soloader.UnpackingSoSource$InputDsoIterator: UnpackingSoSource$InputDsoIterator()
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.horcrux.svg.RectView: RectView(com.facebook.react.bridge.ReactContext)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.facebook.react.uimanager.MatrixMathHelper: double roundTo3Places(double)
okhttp3.Request: okhttp3.Request$Builder newBuilder()
com.facebook.react.animated.NativeAnimatedNodesManager: void flattenAnimatedNodeOffset(int)
com.facebook.cache.common.NoOpCacheEventListener: void onHit(com.facebook.cache.common.CacheEvent)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.facebook.drawee.controller.AbstractDraweeController: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.memory.PooledByteBufferFactory access$800(com.facebook.imagepipeline.producers.ResizeAndRotateProducer)
com.facebook.react.modules.storage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Void[])
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
androidx.transition.Visibility$DisappearListener: void onTransitionStart(androidx.transition.Transition)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer newBitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext getThemedContext()
com.facebook.imagepipeline.core.ImagePipelineConfig: int getMemoryChunkType(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments)
com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.customview.widget.ViewDragHelper: int getEdgesTouched(int,int)
bolts.Task: boolean trySetCancelled()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChildWithKeyline(android.view.View,int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: java.io.Closeable cloneOrNull(java.io.Closeable)
com.google.android.material.bottomsheet.BottomSheetDialog: boolean shouldWindowCloseOnTouchOutside()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
androidx.transition.Visibility$DisappearListener: void onTransitionEnd(androidx.transition.Transition)
androidx.fragment.app.FragmentManager: void destroyFragmentView(androidx.fragment.app.Fragment)
androidx.collection.ArrayMap$1: void colClear()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onProgressUpdate(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,float)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setProgressRotation(float)
com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker: boolean isSet()
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: WebpTranscodeProducer$1(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.io.File createTempFile(java.io.File)
com.google.android.material.textfield.IndicatorViewController$1: void onAnimationStart(android.animation.Animator)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setForeignObjectwidth(android.view.View,java.lang.String)
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: VectorDrawableCommon()
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: com.facebook.imagepipeline.cache.MemoryCacheParams get()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks: BaseProducerContextCallbacks()
com.google.android.material.datepicker.Month: Month(java.util.Calendar)
androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.ProducerListener2 getListener()
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.internal.Supplier access$102(com.facebook.cache.disk.DiskCacheConfig$Builder,com.facebook.common.internal.Supplier)
com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimation(int)
com.google.android.material.bottomsheet.BottomSheetDialog$1: BottomSheetDialog$1(com.google.android.material.bottomsheet.BottomSheetDialog)
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket: void addToFreeList(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onAttachedToWindow()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: ImagePipelineConfig$Builder(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig$1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.debug.holder.NoopPrinter: boolean shouldDisplayLogMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag)
com.facebook.react.views.textinput.ReactEditText: void setIntrinsicContentSize()
com.swmansion.rnscreens.events.ScreenWillAppearEvent: java.lang.String getEventName()
androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: com.facebook.imagepipeline.memory.AshmemMemoryChunk alloc(int)
com.facebook.imagepipeline.common.RotationOptions: int hashCode()
androidx.fragment.app.FragmentManagerState: int describeContents()
okhttp3.Cookie: java.lang.String name()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipPath(android.view.View,java.lang.String)
kotlin.collections.ArrayAsCollection: boolean containsAll(java.util.Collection)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteBuffer readFromDiskCache(com.facebook.cache.common.CacheKey)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okio.Buffer: int select(okio.Options)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer readMapBufferValue(int)
com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
okhttp3.internal.ws.RealWebSocket$WriterTask: long runOnce()
bolts.Task: Task(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void onAttachedToWindow()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion()
bolts.UnobservedErrorNotifier: void setObserved()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getNativeParent()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
okhttp3.OkHttpClient$Builder: int getCallTimeout$okhttp()
com.swmansion.rnscreens.ScreenStack$Companion: ScreenStack$Companion()
com.facebook.react.uimanager.ReactStylesDiffMap: float getFloat(java.lang.String,float)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache getMainBufferedDiskCache()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: com.facebook.imagepipeline.nativecode.WebpTranscoder getWebpTranscoder()
com.google.android.material.datepicker.MonthAdapter: long getItemId(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()
com.facebook.react.views.text.TextTransform: java.lang.String capitalize(java.lang.String)
com.facebook.react.ReactInstanceManager$3$1: void run()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
kotlin.collections.AbstractList: boolean equals(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()
okio.Okio: okio.Sink blackhole()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: SwipeRefreshLayoutManager$1(com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.CoreModulesPackage$2: CoreModulesPackage$2(com.facebook.react.CoreModulesPackage)
com.facebook.react.views.text.ReactUnderlineSpan: ReactUnderlineSpan()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: ReadableMapBuffer$1(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: TextDirectionHeuristicsCompat$AnyStrong(boolean)
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: void doFrame(long)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.drawee.generic.RoundingParams: RoundingParams()
com.facebook.react.uimanager.UIImplementation: void assertViewExists(int,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$1: UIViewOperationQueue$1(com.facebook.react.uimanager.UIViewOperationQueue,int,java.util.ArrayList,java.util.ArrayDeque,java.util.ArrayList,long,long,long,long)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
com.facebook.react.animated.MultiplicationAnimatedNode: void update()
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.util.TriState shouldTranscode(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void disposeResult(com.facebook.common.references.CloseableReference)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.cache.common.CacheKey getCacheKey()
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)
com.google.android.material.appbar.HeaderScrollingViewBehavior: boolean shouldHeaderOverlapScrollingChild()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
okio.DeflaterSink: void flush()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: RoundingParams$RoundingMethod(java.lang.String,int)
androidx.fragment.app.FragmentManager: void forcePostponedTransactions()
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List findMatchingRule(java.util.List)
androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.cache.disk.DiskCacheConfig: long getLowDiskSpaceSizeLimit()
androidx.fragment.app.ListFragment$2: ListFragment$2(androidx.fragment.app.ListFragment)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipDrawable: void setChipMinHeight(float)
com.facebook.react.animated.TrackingAnimatedNode: void update()
com.facebook.react.modules.storage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Void[])
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setOpacity(android.view.View,float)
com.facebook.imagepipeline.producers.JobScheduler: long getQueuedTime()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.CheckableImageButton: boolean isChecked()
com.facebook.yoga.YogaOverflow: YogaOverflow(java.lang.String,int,int)
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(com.facebook.react.jstasks.HeadlessJsTaskConfig)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformHeight(int,int)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildStartedNativeGesture(android.view.MotionEvent)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin(java.lang.String,java.lang.String)
com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.appcompat.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)
androidx.swiperefreshlayout.widget.CircleImageView: void onAnimationEnd()
kotlin.collections.AbstractList: void add(int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.google.android.material.internal.CollapsingTextHelper: int getCurrentColor(android.content.res.ColorStateList)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void onLayout(boolean,int,int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.imagepipeline.listener.RequestListener getRequestListener(com.facebook.drawee.interfaces.DraweeController)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimation(android.view.View,int,int,int,int)
com.facebook.react.ReactNativeHost: boolean hasInstance()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStack: void mBackStackListener$lambda-1(com.swmansion.rnscreens.ScreenStack)
com.horcrux.svg.GroupView: void popGlyphContext()
androidx.transition.Fade$FadeAnimatorListener: void onAnimationEnd(android.animation.Animator)
com.facebook.react.views.scroll.ReactScrollView: void onOverScrolled(int,int,boolean,boolean)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerProperties()
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.google.android.material.datepicker.UtcDates: android.icu.util.TimeZone getUtcAndroidTimeZone()
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
okhttp3.internal.concurrent.TaskRunner: void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue)
androidx.cardview.widget.RoundRectDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
androidx.cardview.widget.CardView: float getRadius()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: AppCompatDelegateImpl$ActionModeCallbackWrapperV9(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)
androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.yoga.YogaNodeJNIBase: void setPosition(com.facebook.yoga.YogaEdge,float)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void initialize(com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheKey,java.lang.Object,com.facebook.common.internal.ImmutableList,com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onException(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.memory.BitmapCounter: void decrease(android.graphics.Bitmap)
okhttp3.internal.concurrent.TaskQueue$execute$1: long runOnce()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: void set(java.lang.Object,java.lang.Object)
com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
okhttp3.internal.platform.BouncyCastlePlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.CipherSuite: CipherSuite(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.SymbolView: void drawSymbol(android.graphics.Canvas,android.graphics.Paint,float,float,float)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumEndEvent(android.view.ViewGroup)
androidx.viewpager2.adapter.FragmentStateAdapter$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
okhttp3.internal.cache.DiskLruCache: boolean removeOldestEntry()
com.facebook.common.internal.Sets: java.util.Set newSetFromMap(java.util.Map)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchSequence()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator)
com.facebook.binaryresource.FileBinaryResource: java.io.InputStream openStream()
com.facebook.imagepipeline.producers.BaseConsumer: boolean isNotLast(int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.String getUiComponentId()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.Adapter getAdapter()
androidx.appcompat.widget.SearchView: void dismissSuggestions()
com.facebook.soloader.UnpackingSoSource$Unpacker: void close()
androidx.fragment.app.FragmentAnim$2: void onAnimationEnd(android.view.animation.Animation)
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.imagepipeline.memory.BufferMemoryChunk: long getUniqueId()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getBitmapHeight(android.graphics.Bitmap)
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
com.facebook.react.views.text.ReactTypefaceUtils: java.lang.String parseFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: HttpUrlConnectionNetworkFetcher(java.lang.String,java.util.Map,com.facebook.common.time.MonotonicClock)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
androidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)
com.facebook.react.views.text.TextAttributeProps: int getTextBreakStrategy(java.lang.String)
androidx.cardview.widget.RoundRectDrawableWithShadow: void onBoundsChange(android.graphics.Rect)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.facebook.binaryresource.FileBinaryResource: long size()
com.google.android.material.shape.EdgeTreatment: void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
androidx.transition.Transition: androidx.collection.ArrayMap getRunningAnimators()
androidx.appcompat.widget.AbsActionBarView: void access$101(androidx.appcompat.widget.AbsActionBarView,int)
com.facebook.imagepipeline.producers.WebpTranscodeProducer: void doTranscode(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.backends.pipeline.Fresco: void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig)
androidx.recyclerview.widget.DefaultItemAnimator: void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isLocalThumbnailPreviewsEnabled()
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
androidx.fragment.app.FragmentAnim: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback)
androidx.core.util.LogWriter: void close()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
okhttp3.internal.cache.DiskLruCache: void flush()
com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext: VirtualViewManager$MatrixDecompositionContext()
com.facebook.react.animated.NativeAnimatedModule$15: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.lifecycle.SavedStateHandleController: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()
com.google.android.material.textfield.CutoutDrawable: void setPaintStyles()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean onStateChanged(int[])
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: boolean canTranscode(com.facebook.imageformat.ImageFormat)
com.google.android.material.resources.TextAppearance$2: void onFontRetrieved(android.graphics.Typeface,boolean)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference access$302(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference)
com.facebook.imagepipeline.memory.BasePool: void trimToSoftCap()
androidx.collection.SimpleArrayMap: void clear()
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.modules.statusbar.StatusBarModule$1: StatusBarModule$1(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean,int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okio.SegmentedByteString: java.lang.String toString()
okio.Okio__JvmOkioKt: okio.Sink sink(java.io.File,boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5: void onAnimationEnd(android.view.animation.Animation)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentEnd()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinEnd(int)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket getSocket$okhttp()
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManager)
androidx.lifecycle.Lifecycle: Lifecycle()
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedEnd(android.view.View)
okio.Buffer: okio.Buffer write(okio.ByteString)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.horcrux.svg.RNSVGMarkerPosition: java.util.ArrayList fromPath(java.util.ArrayList)
com.facebook.imagepipeline.memory.AshmemMemoryChunk: void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateDrawableForTargetState(int)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab getTab()
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
androidx.transition.ViewUtilsApi19: void setTransitionAlpha(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
com.facebook.react.fabric.FabricComponents: java.lang.String getFabricComponentName(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.common.util.HashCodeUtil: int hashCode(int,int)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyDataSetChanged()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startProgressAlphaStartAnimation()
com.horcrux.svg.MaskView: void setY(java.lang.String)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.imagepipeline.memory.Bucket: void incrementInUseCount()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])
okhttp3.HttpUrl$Companion: void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.facebook.drawee.drawable.DrawableProperties: void setColorFilter(android.graphics.ColorFilter)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$200(com.facebook.imagepipeline.memory.PoolConfig$Builder)
okhttp3.internal.connection.RealCall: void callStart()
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: android.content.res.ColorStateList getCompoundDrawableTintList()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.google.android.material.transformation.FabTransformationBehavior: android.view.ViewGroup calculateChildContentContainer(android.view.View)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.android.material.internal.NavigationMenuItemView$1: NavigationMenuItemView$1(com.google.android.material.internal.NavigationMenuItemView)
com.google.android.material.textfield.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.views.text.TextAttributes: float getFontSize()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
androidx.recyclerview.widget.DefaultItemAnimator$1: void run()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
androidx.transition.Visibility: boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues)
bolts.UnobservedErrorNotifier: void finalize()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(android.view.View,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypefaceByIndex(int,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.rnscreens.events.ScreenAppearEvent$Companion: ScreenAppearEvent$Companion()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: int compare(android.view.View,android.view.View)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.collection.LongSparseArray: int indexOfKey(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$300(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableParent getDrawableParentForIndex(int)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: BottomSheetDialogFragment()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.Object getExtra(java.lang.String)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView createRootView()
com.facebook.imageutils.TiffUtil$TiffHeader: TiffUtil$TiffHeader()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: ImagePerfState()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.ImageView$1: ImageView$1(com.horcrux.svg.ImageView)
com.facebook.imagepipeline.listener.BaseRequestListener: boolean requiresExtraMap(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.uimanager.UIManagerModule$3: UIManagerModule$3(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,int,int)
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
com.facebook.imagepipeline.producers.DelayProducer: DelayProducer(com.facebook.imagepipeline.producers.Producer,java.util.concurrent.ScheduledExecutorService)
com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomappbar.BottomAppBar$4: BottomAppBar$4(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.imagepipeline.image.CloseableImage: boolean isStateful()
okhttp3.Handshake$Companion$handshake$1: Handshake$Companion$handshake$1(java.util.List)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(android.view.View,java.lang.String)
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$202(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)
com.facebook.imagepipeline.memory.BucketsBitmapPool: int getSizeInBytes(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
androidx.collection.SparseArrayCompat: int indexOfKey(int)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: int hashCode()
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean getResizingAllowedOverride()
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
com.facebook.soloader.nativeloader.NativeLoader: void initIfUninitialized(com.facebook.soloader.nativeloader.NativeLoaderDelegate)
com.google.android.material.internal.CollapsingTextHelper: int getCurrentCollapsedTextColor()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.transition.Visibility$DisappearListener: void onAnimationEnd(android.animation.Animator)
com.horcrux.svg.SVGLength: SVGLength()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$000(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(java.io.File)
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setIsPrefetchNoCallbacks(boolean)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getDataSourceWithResult()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void assertNodeDoesNotNeedCustomLayoutForChildren(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams: android.util.SparseIntArray generateBuckets(int,int,int)
androidx.recyclerview.widget.RecyclerView$State: void assertLayoutStep(int)
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout: ScreenStackFragment$NotifyingCoordinatorLayout(android.content.Context,com.swmansion.rnscreens.ScreenFragment)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: boolean defaultIsRtl()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)
androidx.appcompat.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getTintList()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.bridge.Dynamic: double asDouble()
androidx.recyclerview.widget.GridLayoutManager: int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.drawee.drawable.RoundedCornersDrawable: void draw(android.graphics.Canvas)
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.google.android.material.chip.Chip: int[] createCloseIconDrawableState()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void deleteContents(java.io.File)
com.facebook.yoga.YogaNodeJNIBase: void setDirection(com.facebook.yoga.YogaDirection)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
androidx.collection.ArraySet: java.lang.Object[] toArray()
com.facebook.react.jscexecutor.JSCExecutorFactory: void startSamplingProfiler()
androidx.recyclerview.widget.GapWorker: void add(androidx.recyclerview.widget.RecyclerView)
androidx.coordinatorlayout.widget.CoordinatorLayout: void drawableStateChanged()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
androidx.appcompat.app.AlertController$CheckedItemAdapter: long getItemId(int)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
androidx.appcompat.app.AlertController$AlertParams$1: AlertController$AlertParams$1(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void attach()
com.zoontek.rnbootsplash.RNBootSplashModule: void onHostPause()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: android.view.View getChildAt(int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.FileCacheFactory access$800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
com.google.android.material.internal.CollapsingTextHelper: void getTextPaintExpanded(android.text.TextPaint)
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: TypefaceCompat$ResourcesCallbackAdapter(androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int getHorizontalOriginalOffset()
com.facebook.react.animated.ValueAnimatedNode: double getValue()
com.facebook.react.uimanager.UIViewOperationQueue: void resumeFrameCallback()
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: void onEndWork(java.lang.Object)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: ReadableMapBuffer$MapBufferEntry(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int,com.facebook.react.common.mapbuffer.ReadableMapBuffer$1)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.views.text.CustomStyleSpan: void updateMeasureState(android.text.TextPaint)
okio.RealBufferedSource: int select(okio.Options)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setName(android.view.View,java.lang.String)
androidx.core.text.ICUCompat: java.lang.String addLikelySubtags(java.util.Locale)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: short getCoalescingKey(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
okhttp3.Response: okhttp3.Response networkResponse()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.textinput.ReactTextInputFocusEvent: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.bottomappbar.BottomAppBar$6: void onAnimationStart(android.animation.Animator)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDrawableStateChanged(int[])
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,double)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
androidx.fragment.app.Fragment: boolean isPostponed()
com.facebook.drawee.drawable.RoundedCornersDrawable: void setPaintFilterBitmap(boolean)
bolts.AndroidExecutors: java.util.concurrent.Executor uiThread()
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: InstrumentedMemoryCache(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCacheTracker)
com.facebook.yoga.YogaNodeJNIBase: float getLayoutWidth()
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignItems(com.facebook.yoga.YogaAlign)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo getFpsInfo(long)
com.facebook.react.uimanager.UIImplementation: void removeSubviewsFromContainerWithID(int)
com.facebook.drawee.drawable.ArrayDrawable: boolean setVisible(boolean,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.transformation.FabTransformationScrimBehavior$1: FabTransformationScrimBehavior$1(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()
com.facebook.react.ReactFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.LinearSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
com.facebook.react.modules.network.NetworkingModule$3: NetworkingModule$3(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getConstants()
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.picker.events.PickerItemSelectEvent: java.lang.String getEventName()
com.google.android.material.chip.Chip: boolean isCloseIconVisible()
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
com.coinapp.MainApplication: com.facebook.react.ReactNativeHost getReactNativeHost()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void reset()
com.facebook.imagepipeline.request.ImageRequest: android.net.Uri getSourceUri()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void releaseImage(java.lang.Object)
com.facebook.common.references.NoOpCloseableReference: com.facebook.common.references.CloseableReference clone()
com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF getDirectionAwareBorderInsets()
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdateSeen()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
androidx.transition.TransitionSet: androidx.transition.TransitionSet setOrdering(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: java.lang.String getProducerName()
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$400(com.facebook.imagepipeline.cache.BufferedDiskCache)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.Screen$Companion: Screen$Companion()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.shape.ShapeAppearancePathProvider: void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.facebook.soloader.SoLoader$1: void load(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
com.google.android.material.datepicker.MaterialDatePicker$1: void onClick(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList getCollapsedTextColor()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.DropDownListView: void clearPressedItem()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.facebook.drawee.components.DeferredReleaser: DeferredReleaser()
com.facebook.react.uimanager.util.ReactFindViewUtil: void notifyViewRendered(android.view.View)
com.horcrux.svg.LineView: void setX2(com.facebook.react.bridge.Dynamic)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.fragment.app.FragmentStateManager: void attach(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void scheduleAccessibilityEventSender(android.view.View)
com.google.android.material.bottomsheet.BottomSheetBehavior$3: BottomSheetBehavior$3(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void access$100(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver)
okio.Buffer: byte readByte()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace(java.lang.String,int,int)
com.facebook.imagepipeline.memory.MemoryChunkPool: java.lang.Object alloc(int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.viewmanagers.RNSVGMaskManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
com.facebook.soloader.SoLoader$Api14Utils: java.lang.String getClassLoaderLdLoadLibrary()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean access$602(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,boolean)
com.facebook.imagepipeline.producers.FetchState: void setLastIntermediateResultTimeMs(long)
okio.Buffer: java.io.InputStream inputStream()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newChunkedSink()
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean isBoxBackgroundModeSupported(int)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,java.lang.String)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void maybeSetDataSourceWithResult(com.facebook.datasource.DataSource,boolean)
androidx.appcompat.widget.Toolbar$1: Toolbar$1(androidx.appcompat.widget.Toolbar)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.datasource.BaseDataSubscriber: void onProgressUpdate(com.facebook.datasource.DataSource)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void update()
com.facebook.imagepipeline.producers.BitmapProbeProducer: java.lang.String getProducerName()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.request.Postprocessor)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.modules.network.NetworkingModule$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: boolean canSwipeDismissView(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.react.views.modal.ReactModalHostView: void updateState(int,int)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)
com.google.android.material.shape.ShapeAppearancePathProvider: void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)
androidx.recyclerview.widget.RecyclerView$5: int indexOfChild(android.view.View)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.animated.DiffClampAnimatedNode: java.lang.String prettyPrint()
okhttp3.HttpUrl$Builder: void setHost$okhttp(java.lang.String)
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: void ensureValid()
okhttp3.internal.platform.Platform$Companion: boolean isConscryptPreferred()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.material.textfield.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
com.horcrux.svg.TSpanView: int hitTest(float[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
com.google.android.material.chip.Chip: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
com.google.android.material.datepicker.MaterialCalendar$6: MaterialCalendar$6(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton)
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTimeout(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
com.facebook.datasource.AbstractDataSource: boolean setFailure(java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
androidx.collection.SparseArrayCompat: java.lang.String toString()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource(com.facebook.datasource.IncreasingQualityDataSourceSupplier)
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.views.scroll.ReactHorizontalScrollView$3: void onAnimationUpdate(android.animation.ValueAnimator)
com.swmansion.rnscreens.ScreenStackFragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getClosed$okhttp()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: boolean updateEditTextHeightBasedOnIcon()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: void execute()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
com.facebook.drawee.view.DraweeView: void doAttach()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: void onChange(boolean)
androidx.cardview.widget.CardViewBaseImpl$1: void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getSoftwareNumerator(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,boolean)
okio.BlackholeSink: void flush()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.HttpUrl: boolean equals(java.lang.Object)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.CookieJar$Companion$NoCookies: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: float getFullBorderRadius()
com.facebook.react.uimanager.JSTouchDispatcher: void dispatchCancelEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
androidx.fragment.app.FragmentManager: void addRetainedFragment(androidx.fragment.app.Fragment)
com.facebook.common.executors.CallerThreadExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
com.google.android.material.textfield.PasswordToggleEndIconDelegate: PasswordToggleEndIconDelegate(com.google.android.material.textfield.TextInputLayout)
com.facebook.drawee.drawable.ScaleTypeDrawable: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.transition.FragmentTransitionSupport: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
kotlin.ranges.RangesKt__RangesKt: void checkStepIsPositive(boolean,java.lang.Number)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: EventDispatcherImpl$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.EventDispatcherImpl,com.facebook.react.uimanager.events.EventDispatcherImpl$1)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onCompatShadowChanged()
okhttp3.Dispatcher: java.util.List runningCalls()
com.horcrux.svg.SvgViewManager: void setMinY(android.view.View,float)
okhttp3.internal.connection.RealCall$AsyncCall: void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall)
androidx.recyclerview.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,int)
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: DefaultEncodedMemoryCacheParamsSupplier()
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.views.picker.ReactPicker: void onLayout(boolean,int,int,int,int)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.MenuItemImpl: void appendModifier(java.lang.StringBuilder,int,int,java.lang.String)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: Http2Connection$writeWindowUpdateLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long)
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.fresco.ui.common.BaseControllerListener2: void onIntermediateImageFailed(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: void onRequery(androidx.lifecycle.ViewModel)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.fragment.app.BackStackRecord: java.lang.String getName()
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: BottomSheetDialogFragment$BottomSheetDismissCallback(com.google.android.material.bottomsheet.BottomSheetDialogFragment,com.google.android.material.bottomsheet.BottomSheetDialogFragment$1)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: UIViewOperationQueue$DispatchStringCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.cardview.widget.CardViewBaseImpl: void setElevation(androidx.cardview.widget.CardViewDelegate,float)
com.facebook.react.views.modal.ReactModalHostView$1: ReactModalHostView$1(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.imagepipeline.image.ImmutableQualityInfo: int getQuality()
com.horcrux.svg.TextProperties$TextPathMethod: TextProperties$TextPathMethod(java.lang.String,int)
com.google.android.material.shape.MaterialShapeDrawable: float getBottomLeftCornerResolvedSize()
okhttp3.internal.cache.DiskLruCache: void rebuildJournal$okhttp()
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.JavaTimerManager$2: JavaTimerManager$2(com.facebook.react.modules.core.JavaTimerManager,boolean)
androidx.fragment.app.FragmentContainerView: void removeViewInLayout(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: void onAnimationStart(android.animation.Animator)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
com.google.android.material.datepicker.MaterialDatePicker: int getThemeResId(android.content.Context)
androidx.appcompat.widget.SearchView: void updateViewsVisibility(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.cache.common.SimpleCacheKey: SimpleCacheKey(java.lang.String,boolean)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)
okhttp3.internal.connection.RealConnection: java.util.List getCalls()
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean shouldDecodePrefetches()
com.google.android.material.ripple.RippleDrawableCompat: void draw(android.graphics.Canvas)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.imagepipeline.producers.BaseConsumer: boolean statusHasAnyFlag(int,int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.modules.datepicker.DatePickerDialogFragment: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
bolts.AndroidExecutors$UIThreadExecutor: void execute(java.lang.Runnable)
kotlin.Pair: java.lang.Object getSecond()
okhttp3.internal.connection.Exchange$ResponseBodySource: long read(okio.Buffer,long)
okhttp3.Address: java.net.ProxySelector proxySelector()
okhttp3.internal.http2.Http2Stream: boolean isOpen()
androidx.transition.ChangeBounds$5: android.graphics.PointF get(android.view.View)
com.google.android.material.internal.CheckableImageButton: void toggle()
com.google.android.material.textfield.IndicatorViewController: boolean canAdjustIndicatorPadding()
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: boolean hasObservers()
androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void resetOriginals()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,java.lang.String)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: boolean hasNext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.core.ChoreographerCompat access$002(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.core.ChoreographerCompat)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)
com.facebook.react.views.modal.ReactModalHostView: void onLayout(boolean,int,int,int,int)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: void onDismiss(android.content.DialogInterface)
com.horcrux.svg.ImageView: void setSrc(com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView$2: RecyclerView$2(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.ReactInstanceManager: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.datasource.BaseDataSubscriber: void onFailure(com.facebook.datasource.DataSource)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.Month$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRetrieved(android.graphics.Typeface)
com.facebook.imagepipeline.core.ImagePipeline: void clearMemoryCaches()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingTop()
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: boolean isSmoothScrollbarEnabled()
okhttp3.Cache: void trackConditionalCacheHit$okhttp()
okhttp3.internal.connection.RealConnectionPool: void put(okhttp3.internal.connection.RealConnection)
com.google.android.material.datepicker.MonthsPagerAdapter$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: ReactTextInputSelectionEvent(int,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.drawee.drawable.FadeDrawable: void maybeOnFadeFinished()
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options)
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Headers$Companion: void access$checkName(okhttp3.Headers$Companion,java.lang.String)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onValueReuse(int)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: ReactAccessibilityDelegate$AccessibilityRole(java.lang.String,int)
androidx.appcompat.view.menu.CascadingMenuPopup: int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.modules.core.ChoreographerCompat: ChoreographerCompat()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setDimensions(int,int)
androidx.appcompat.widget.SearchView$SavedState$1: SearchView$SavedState$1()
com.facebook.react.bridge.queue.NativeRunnable: void run()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
bolts.AndroidExecutors$UIThreadExecutor: AndroidExecutors$UIThreadExecutor()
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.facebook.common.references.SharedReference: void ensureValid()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.views.text.TextTransform: TextTransform(java.lang.String,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(java.nio.ByteBuffer)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
com.facebook.react.views.drawer.events.DrawerOpenedEvent: DrawerOpenedEvent(int,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onFailure(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.lang.Throwable)
com.facebook.react.ReactActivityDelegate: android.os.Bundle getLaunchOptions()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: void initMeasureFunction()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.facebook.react.views.text.CustomStyleSpan: void updateDrawState(android.text.TextPaint)
androidx.fragment.app.Fragment: void performLowMemory()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
com.facebook.react.views.modal.ReactModalHostView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX(int)
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
androidx.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setPerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.imagepipeline.image.ImmutableQualityInfo: boolean equals(java.lang.Object)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass valueOf(java.lang.String)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.google.android.material.chip.Chip$1: void onFontRetrievalFailed(int)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.CollapsingTextHelper: boolean isStateful()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.floatingactionbutton.FloatingActionButton: void drawableStateChanged()
com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int computeScrollDuration(int,int,int,int)
okhttp3.internal.platform.android.AndroidLogKt: int getAndroidLevel(java.util.logging.LogRecord)
com.google.android.material.animation.MotionTiming: MotionTiming(long,long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)
com.google.android.material.internal.CheckableImageButton$1: CheckableImageButton$1(com.google.android.material.internal.CheckableImageButton)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onCancellationRequested()
androidx.transition.ChangeBounds$9: void onTransitionCancel(androidx.transition.Transition)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)
com.facebook.react.views.drawer.events.DrawerSlideEvent: DrawerSlideEvent(int,int,float)
bolts.TaskCompletionSource: void setResult(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(int,int)
com.swmansion.rnscreens.Screen$ReplaceAnimation: Screen$ReplaceAnimation(java.lang.String,int)
com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
com.facebook.drawee.controller.AbstractDraweeController: android.graphics.Rect getDimensions()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
androidx.recyclerview.widget.ChildHelper: ChildHelper(androidx.recyclerview.widget.ChildHelper$Callback)
com.facebook.react.modules.network.NetworkingModule$2: void onFailure(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.AppCompatTextHelper: void onSetCompoundDrawables()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIViewOperationQueue: long access$2900(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)
com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getError(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void buildCircularRevealCache()
com.facebook.react.common.MapBuilder$Builder: MapBuilder$Builder(com.facebook.react.common.MapBuilder$1)
com.google.android.material.datepicker.YearGridAdapter: int getPositionForYear(int)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition()
androidx.recyclerview.widget.RecyclerView$ViewHolder: RecyclerView$ViewHolder(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
com.horcrux.svg.VirtualView: double relativeOnOther(com.horcrux.svg.SVGLength)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
androidx.recyclerview.widget.FastScroller: void drawVerticalScrollbar(android.graphics.Canvas)
com.horcrux.svg.RenderableViewManager$PatternManager: void setOpacity(android.view.View,float)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getExcludeBitmapConfigFromComparison()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: void onProgressUpdate(com.facebook.datasource.DataSource)
androidx.recyclerview.widget.ViewInfoStore: void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.ReactInstanceManager: void processPackage(com.facebook.react.ReactPackage,com.facebook.react.NativeModuleRegistryBuilder)
com.google.android.material.shape.ShapeAppearanceModel$Builder: ShapeAppearanceModel$Builder(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalClear()
com.google.android.material.shape.MaterialShapeDrawable: void setParentAbsoluteElevation(float)
com.facebook.soloader.ApplicationSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
androidx.fragment.app.Fragment: boolean isHideReplaced()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: boolean isOpaque()
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
androidx.transition.ViewUtilsApi23: ViewUtilsApi23()
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void setBounds(int,int,int,int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.swmansion.rnscreens.Screen$ActivityState: Screen$ActivityState(java.lang.String,int)
androidx.transition.WindowIdApi14: int hashCode()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addEdge(java.lang.Object,java.lang.Object)
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
kotlin.ranges.IntProgressionIterator: int nextInt()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List)
com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()
com.facebook.react.modules.image.ImageLoaderModule$2: void onNewResultImpl(com.facebook.datasource.DataSource)
com.facebook.react.views.image.ReactImageDownloadListener: ReactImageDownloadListener()
com.facebook.imagepipeline.memory.FlexByteArrayPool: FlexByteArrayPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams)
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: DialogModule$FragmentManagerHelper(com.facebook.react.modules.dialog.DialogModule,androidx.fragment.app.FragmentManager)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: Http2Connection$ReaderRunnable$ping$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
com.google.android.material.animation.ImageMatrixProperty: java.lang.Object get(java.lang.Object)
kotlin.sequences.DropSequence$iterator$1: boolean hasNext()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: int compare(android.view.View,android.view.View)
com.google.android.material.chip.ChipDrawable: boolean showsChipIcon()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setRotation(float)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void disposeIfEmpty()
com.zoontek.rnbootsplash.RNBootSplashTask: RNBootSplashTask(com.zoontek.rnbootsplash.RNBootSplashTask$Type,boolean,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.google.android.material.button.MaterialButtonHelper: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.datepicker.MaterialCalendar: void onSaveInstanceState(android.os.Bundle)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: RealConnectionPool$cleanupTask$1(okhttp3.internal.connection.RealConnectionPool,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: float access$1200(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: boolean willChangeBounds()
androidx.recyclerview.widget.FastScroller: FastScroller(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: boolean equals(java.lang.Object)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float)
okhttp3.ResponseBody: void close()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.bottomsheet.BottomSheetBehavior$3: void onViewPositionChanged(android.view.View,int,int,int,int)
okhttp3.Cache: int getWriteAbortCount$okhttp()
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
kotlin.text.StringsKt__StringsKt: java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] $values()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.VirtualView: double fromRelativeFast(com.horcrux.svg.SVGLength)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.animated.InterpolationAnimatedNode: double interpolate(double,double,double,double,double,java.lang.String,java.lang.String)
com.google.android.material.textfield.ClearTextEndIconDelegate$7: void onAnimationUpdate(android.animation.ValueAnimator)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
com.horcrux.svg.VirtualViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.PathParser: void smoothQuadraticBezierCurveTo(float,float)
androidx.fragment.app.FragmentController: void dispatchResume()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUIImplementationProvider(com.facebook.react.uimanager.UIImplementationProvider)
bolts.Task: boolean trySetResult(java.lang.Object)
okio.ByteString: int size()
com.google.android.material.transformation.ExpandableBehavior$1: ExpandableBehavior$1(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionExpand(android.view.MenuItem)
okhttp3.internal.platform.android.Android10SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.cache.disk.DiskStorageCache: boolean maybeUpdateFileCacheSizeAndIndex()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map getNativeProps(java.lang.Class,java.lang.Class)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker getInstance()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.core.math.MathUtils: float clamp(float,float,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)
com.facebook.fresco.ui.common.BaseControllerListener2: void onFailure(java.lang.String,java.lang.Throwable,com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
com.facebook.common.executors.CallerThreadExecutor: CallerThreadExecutor()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: com.facebook.imagepipeline.cache.MemoryCacheParams get()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.uimanager.MatrixMathHelper: void resetIdentityMatrix(double[])
androidx.appcompat.widget.AppCompatSeekBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: void onScrollChanged(int,int,int,int)
com.google.android.material.chip.ChipDrawable: com.google.android.material.resources.TextAppearance getTextAppearance()
kotlin.collections.AbstractList: java.lang.Object remove(int)
com.facebook.react.TurboReactPackage$ModuleHolderProvider: com.facebook.react.bridge.NativeModule get()
com.google.android.material.datepicker.Month: int daysFromStartOfWeekToFirstOfMonth()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.PointF getActualImageFocusPoint()
com.google.android.material.shape.ShapePath$1: ShapePath$1(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix)
com.facebook.react.animated.SpringAnimation: void advance(double)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
okio.internal.ByteStringKt: int access$decodeHexDigit(char)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable setRadius(com.facebook.react.bridge.ReadableMap,android.graphics.drawable.Drawable)
com.facebook.react.ReactDelegate: void onHostResume()
com.facebook.drawee.drawable.MatrixDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void cancel()
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: UIViewOperationQueue$SendAccessibilityEvent(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexWrap(com.facebook.yoga.YogaWrap)
okhttp3.HttpUrl$Companion: HttpUrl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.SvgView: void onDetachedFromWindow()
androidx.appcompat.app.AlertController: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.horcrux.svg.TextProperties$TextPathSide: TextProperties$TextPathSide(java.lang.String,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: void onAnimationCancel(android.animation.Animator)
androidx.cardview.widget.CardViewBaseImpl: android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
okio.GzipSource: void close()
com.google.android.material.internal.StateListAnimator: void start(com.google.android.material.internal.StateListAnimator$Tuple)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: long getBatchNumber()
com.google.android.material.bottomappbar.BottomAppBar: android.view.View findDependentView()
com.facebook.soloader.UnpackingSoSource: void writeState(java.io.File,byte)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String readStringValue(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void updateAccessibilityDelegate()
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: NativeAsyncLocalStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(com.facebook.react.uimanager.events.Event,com.facebook.react.uimanager.events.Event)
com.google.android.material.textfield.IndicatorViewController: void setCaptionViewVisibilities(int,int)
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.memory.BitmapPoolBackend: java.lang.Object get(int)
com.facebook.imagepipeline.memory.BucketMap: BucketMap()
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)
com.horcrux.svg.MarkerView: void setRefY(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findContainingItemView(android.view.View)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationRepeat(android.view.animation.Animation)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
androidx.lifecycle.LifecycleRegistry: void popParentState()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewPositionChanged(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.fragment.app.FragmentManager: void removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStyle(int)
com.google.android.material.textfield.TextInputLayout: void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeStepGranularity()
androidx.appcompat.widget.RtlSpacingHelper: RtlSpacingHelper()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollAndSnap(int)
com.google.android.material.internal.CollapsingTextHelper: int getCurrentExpandedTextColor()
com.facebook.yoga.YogaUnit: int intValue()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
okhttp3.Cache$RealCacheRequest: Cache$RealCacheRequest(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
androidx.transition.FragmentTransitionSupport: void removeTarget(java.lang.Object,android.view.View)
com.facebook.react.views.image.ScaleTypeStartInside: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean checkAnchorChanged()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropName()
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable getTopLevelDrawable()
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.transition.ViewUtilsBase: void saveNonTransitionAlpha(android.view.View)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.fragment.app.FragmentManager: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.horcrux.svg.TSpanView: void applyTextPropertiesToPaint(android.graphics.Paint,com.horcrux.svg.FontData)
androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map)
com.swmansion.rnscreens.Screen$StackAnimation: Screen$StackAnimation(java.lang.String,int)
com.facebook.jni.CppException: CppException(java.lang.String)
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.common.LongArray: LongArray(int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPositionX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBufferAndReadHeader()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateShapeElevation(float)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean isSupported()
com.facebook.react.uimanager.UIImplementation: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.ReactRootView: void onLayout(boolean,int,int,int,int)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
androidx.transition.ChangeBounds$6: void set(java.lang.Object,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMask(android.view.View,java.lang.String)
androidx.transition.TransitionSet: androidx.transition.Transition setStartDelay(long)
androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)
androidx.recyclerview.widget.RecyclerView$5: android.view.View getChildAt(int)
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float,float)
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall getCall()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: int hashCode()
com.facebook.react.common.LongArray: void set(int,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.touch.JSResponderHandler: JSResponderHandler()
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String getString(java.lang.String)
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.UIImplementation$1: void run()
com.facebook.yoga.YogaNodeJNIBase: void setAlignSelf(com.facebook.yoga.YogaAlign)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
okhttp3.ConnectionSpec: java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec)
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: UIViewOperationQueue$ManageChildrenOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
okhttp3.Cookie: java.util.regex.Pattern access$getTIME_PATTERN$cp()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeUniformPresetSizesConfiguration()
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)
com.facebook.common.util.UriUtil: android.content.res.AssetFileDescriptor getAssetFileDescriptor(android.content.ContentResolver,android.net.Uri)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
okhttp3.internal.http2.Http2Connection: void setLastGoodStreamId$okhttp(int)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
androidx.appcompat.widget.SearchView$4: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton$1: FloatingActionButton$1(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)
com.google.android.material.math.MathUtils: float distanceToFurthestCorner(float,float,float,float,float,float)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
com.facebook.common.internal.CountingOutputStream: void close()
com.google.android.material.chip.ChipDrawable: boolean isStateful()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PartialDiskCacheProducer newPartialDiskCacheProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.modules.core.JavaTimerManager: void setChoreographerCallback()
androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: void onAnimationEnd(android.animation.Animator)
com.google.android.material.internal.CollapsingTextHelper: void getCollapsedTextActualBounds(android.graphics.RectF)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithSource(android.net.Uri)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean getClipToPadding()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
com.google.android.material.resources.MaterialResources: int getIndexWithValue(android.content.res.TypedArray,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popEnd()
okhttp3.ConnectionSpec: java.util.List cipherSuites()
androidx.appcompat.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.scroll.ReactScrollView: void flingAndSnap(int)
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerStart(java.lang.String,java.lang.String)
com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable getDrawable(int)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: Http1ExchangeCodec$ChunkedSource(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl)
com.facebook.soloader.MinElf$ISA: MinElf$ISA(java.lang.String,int,java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.soloader.nativeloader.NativeLoader: void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate)
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.collection.MapCollections$EntrySet: void clear()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderWidth(int,float)
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode resolveShadowNode(int)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setOpacity(android.view.View,float)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolConfig$Builder newBuilder()
com.facebook.react.animated.DiffClampAnimatedNode: void update()
okio.ByteString$Companion: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
com.facebook.react.modules.image.ImageLoaderModule$2: ImageLoaderModule$2(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise)
androidx.appcompat.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.android.material.chip.ChipDrawable: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
kotlin.collections.EmptyIterator: int nextIndex()
com.facebook.imageformat.ImageFormatCheckerUtils: boolean startsWithPattern(byte[],byte[])
com.horcrux.svg.SvgView: com.horcrux.svg.Brush getDefinedBrush(java.lang.String)
com.google.android.material.appbar.AppBarLayout$LayoutParams: AppBarLayout$LayoutParams(int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
com.facebook.yoga.YogaNodeJNIBase: float getLayoutY()
com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.facebook.drawee.drawable.OrientedDrawable: void onBoundsChange(android.graphics.Rect)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
okio.Buffer: okio.Buffer write(byte[],int,int)
com.google.android.material.textfield.ClearTextEndIconDelegate$5: void onAnimationEnd(android.animation.Animator)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.NativeKind getNativeKind()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
okio.ForwardingSink: java.lang.String toString()
com.facebook.react.modules.storage.AsyncStorageModule$4: AsyncStorageModule$4(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.swmansion.rnscreens.ScreenStackFragment: void onViewAnimationEnd()
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeUri(android.content.Context)
okhttp3.OkHttpClient: java.util.List networkInterceptors()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.common.internal.ImmutableSet: ImmutableSet(java.util.Set)
androidx.transition.Fade: void captureStartValues(androidx.transition.TransitionValues)
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: UIViewOperationQueue$SetLayoutAnimationEnabledOperation(com.facebook.react.uimanager.UIViewOperationQueue,boolean)
kotlin.collections.EmptyMap: int getSize()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
com.horcrux.svg.MaskView: void setWidth(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int calculateScrollDirectionForPosition(int)
com.facebook.react.uimanager.ViewAtIndex$1: int compare(com.facebook.react.uimanager.ViewAtIndex,com.facebook.react.uimanager.ViewAtIndex)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.fragment.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.appcompat.widget.ToolbarWidgetWrapper$1: void onClick(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerFailureTimeMs(long)
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.common.file.FileUtils$FileDeleteException: FileUtils$FileDeleteException(java.lang.String)
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
okhttp3.Interceptor$Companion: Interceptor$Companion()
com.facebook.common.logging.FLog: boolean isLoggable(int)
com.google.android.material.datepicker.MaterialDatePicker: void updateHeader()
com.facebook.react.uimanager.FabricViewStateManager: com.facebook.react.bridge.ReadableMap getStateData()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)
androidx.core.graphics.TypefaceCompatApi29Impl: TypefaceCompatApi29Impl()
com.horcrux.svg.Brush: void parseGradientStops(com.facebook.react.bridge.ReadableArray,int,float[],int[],float)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(android.view.View,java.lang.String)
kotlin.jvm.internal.ArrayIterator: ArrayIterator(java.lang.Object[])
com.google.android.material.datepicker.CalendarItemStyle: int getBottomInset()
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.customview.widget.ExploreByTouchHelper$2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
okio.GzipSource: void checkEqual(java.lang.String,int,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1: BaseTransientBottomBar$SnackbarBaseLayout$1()
com.facebook.react.animated.SubtractionAnimatedNode: void update()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(android.view.View,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
androidx.appcompat.widget.AppCompatBackgroundHelper: AppCompatBackgroundHelper(android.view.View)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: boolean close()
okhttp3.internal.cache.DiskLruCache$Entry: void setSequenceNumber$okhttp(long)
okhttp3.EventListener$Companion$NONE$1: EventListener$Companion$NONE$1()
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.common.internal.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: android.graphics.PathEffect getPathEffect(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle,float)
okio.AsyncTimeout$source$1: AsyncTimeout$source$1(okio.AsyncTimeout,okio.Source)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.MediaType: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.common.webp.WebpSupportStatus: byte[] asciiBytes(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager$Timer: JavaTimerManager$Timer(int,long,int,boolean)
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSeekBarHelper: void applyTickMarkTint()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
com.google.android.material.datepicker.CalendarConstraints$1: CalendarConstraints$1()
com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: int getBorderColor(int)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
com.google.android.material.internal.ThemeEnforcement: android.content.Context createThemedContext(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long runOnce()
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.facebook.react.TurboReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.content.res.ResourcesCompat$FontCallback$2: ResourcesCompat$FontCallback$2(androidx.core.content.res.ResourcesCompat$FontCallback,int)
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.LinearLayoutManager getLayoutManager()
androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
androidx.core.util.LogWriter: LogWriter(java.lang.String)
androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)
com.facebook.react.DebugCorePackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.common.util.UriUtil: java.lang.String getRealPathFromUri(android.content.ContentResolver,android.net.Uri)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int sizeForPosition(int)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getFilename(java.lang.String)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()
com.facebook.drawee.drawable.FadeDrawable: void beginBatchMode()
com.facebook.react.views.text.ReactTextShadowNode: android.text.Spannable access$000(com.facebook.react.views.text.ReactTextShadowNode)
okio.ByteString: void setUtf8$okio(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object getLowResImageRequest()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)
com.facebook.imagepipeline.producers.FetchState: long getLastIntermediateResultTimeMs()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeTextType()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalFileFetchToEncodedMemoryPrefetchSequence()
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
com.google.android.material.datepicker.Month: int compareTo(java.lang.Object)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
okio.ByteString: java.lang.String utf8()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context)
com.facebook.react.modules.storage.ReactDatabaseSupplier: void clearAndCloseDatabase()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object)
androidx.transition.ViewGroupUtilsApi14$1: ViewGroupUtilsApi14$1()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean canChildScrollUp()
com.google.android.material.internal.CheckableImageButton$SavedState: CheckableImageButton$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinejoin(android.view.View,int)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.google.android.material.animation.ImageMatrixProperty: void set(java.lang.Object,java.lang.Object)
androidx.transition.Scene: void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene)
com.horcrux.svg.VirtualViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildEnd(android.view.View)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuf(java.io.InputStream,com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()
androidx.appcompat.app.ToolbarActionBar: android.content.Context getThemedContext()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBasicDecodedImageSequence(com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
androidx.appcompat.widget.TooltipPopup: android.view.View getAppRootView(android.view.View)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.ReactRootView: int getRootViewTag()
androidx.recyclerview.widget.LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.view.ActionBarPolicy: ActionBarPolicy(android.content.Context)
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String,java.lang.Object[])
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: void setColorSpace(android.graphics.BitmapFactory$Options,android.graphics.ColorSpace)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
com.facebook.drawee.view.DraweeHolder: void registerWithContext(android.content.Context)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: java.lang.Object alloc(int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.jstasks.HeadlessJsTaskContext$1: void run()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
androidx.recyclerview.widget.LinearSmoothScroller: int getVerticalSnapPreference()
com.google.android.material.textfield.CutoutDrawable: void preDraw(android.graphics.Canvas)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.producers.LocalFetchProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
com.google.android.material.textfield.TextInputLayout: void updateCounter(int)
com.facebook.react.ReactNativeHost: java.lang.String getBundleAssetName()
androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()
com.horcrux.svg.MarkerView: void setRefX(com.facebook.react.bridge.Dynamic)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
com.google.android.material.ripple.RippleDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.TextAttributes: void setTextTransform(com.facebook.react.views.text.TextTransform)
androidx.fragment.app.FragmentManager: void dispatchStop()
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
com.facebook.soloader.FileLocker: void close()
com.facebook.imageformat.DefaultImageFormatChecker: boolean isPngHeader(byte[],int)
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(android.view.View,int)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: boolean lastPrefetchIncludedPosition(int)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: DefaultImageDecoder(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceTypeName(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$2: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
com.google.android.material.chip.ChipDrawable: java.lang.CharSequence getText()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.Runnable access$702(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.Runnable)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onFree(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.appcompat.view.menu.CascadingMenuPopup: void setGravity(int)
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer()
com.facebook.drawee.drawable.AutoRotateDrawable: void run()
com.facebook.react.views.view.ReactViewBackgroundDrawable: int colorFromAlphaAndRGBComponents(float,float)
okio.Buffer: java.io.OutputStream outputStream()
com.facebook.common.executors.UiThreadImmediateExecutorService: void execute(java.lang.Runnable)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JavaScriptExecutorFactory getDefaultJSExecutorFactory(java.lang.String,java.lang.String,android.content.Context)
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.Event: int getSurfaceId()
androidx.appcompat.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.widget.SearchView: void onQueryRefine(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.viewmanagers.RNSVGSvgViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void addSpansForMeasurement(android.text.Spannable)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageLoadStatus(int)
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
com.google.android.material.appbar.AppBarLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.transition.Visibility: void captureStartValues(androidx.transition.TransitionValues)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: TurboModuleManager$TurboModuleHolder()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void onUpdate()
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
kotlin.jvm.internal.Intrinsics: Intrinsics()
androidx.transition.PathProperty: java.lang.Object get(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)
com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPosition(int,float)
com.google.android.material.textfield.PasswordToggleEndIconDelegate: void initialize()
com.swmansion.rnscreens.Screen: Screen(com.facebook.react.bridge.ReactContext)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
com.facebook.imagepipeline.common.ImageDecodeOptions: java.lang.String toString()
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
com.google.android.material.datepicker.MaterialCalendar$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Comparator access$1300()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getChildCount()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
com.facebook.imagepipeline.memory.PoolFactory: int getFlexByteArrayPoolMaxNumThreads()
com.facebook.react.views.switchview.ReactSwitch: void setOn(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
com.swmansion.rnscreens.ScreenContainer: void removeScreenAt(int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()
androidx.drawerlayout.widget.DrawerLayout: android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)
androidx.fragment.app.FragmentManager: void showFragment(androidx.fragment.app.Fragment)
androidx.core.graphics.Insets: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.google.android.material.internal.CollapsingTextHelper: float lerp(float,float,float,android.animation.TimeInterpolator)
com.facebook.react.animated.SpringAnimation: boolean isAtRest()
kotlin.collections.AbstractCollection: java.lang.String toString()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
okio.ForwardingTimeout: boolean hasDeadline()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setExpandedOffset(int)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequestStartTimeMs(long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: AnimatedVectorDrawableCompat$1(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerCancelTimeMs(long)
com.horcrux.svg.SvgView: void setBbWidth(java.lang.String)
okhttp3.HttpUrl: java.net.URI uri()
com.facebook.imagepipeline.memory.BucketsBitmapPool: android.graphics.Bitmap getValue(com.facebook.imagepipeline.memory.Bucket)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
androidx.appcompat.view.menu.CascadingMenuPopup: void setForceShowIcon(boolean)
bolts.Task$14: void run()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.view.menu.MenuPopup: boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.material.chip.ChipDrawable: int getIntrinsicHeight()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.cache.disk.DefaultDiskStorage: void mkdirs(java.io.File,java.lang.String)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)
com.facebook.react.views.scroll.ReactScrollView: int access$802(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: ResourceManagerInternal$ColorFilterLruCache(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection getConnection$okhttp()
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderEvent: com.facebook.react.bridge.WritableMap serializeEventData()
kotlin.collections.AbstractCollection: boolean add(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$State: void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: DiskLruCache$cleanupTask$1(okhttp3.internal.cache.DiskLruCache,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollX()
androidx.fragment.app.Fragment: void initState()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedClipPath(java.lang.String)
okhttp3.Cookie$Companion: int dateCharacterOffset(java.lang.String,int,int,boolean)
kotlin.collections.EmptyMap: void clear()
com.google.android.material.resources.TextAppearance: android.graphics.Typeface getFont(android.content.Context)
com.google.android.material.internal.StateListAnimator: void cancel()
okio.SegmentedByteString: boolean equals(java.lang.Object)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: int hashCode()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(android.view.View,java.lang.String)
kotlin.collections.ArrayAsCollection: void clear()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hoistNativeChildren()
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.widget.TooltipCompatHandler$2: void run()
androidx.appcompat.view.menu.SubMenuWrapperICS: SubMenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportSubMenu)
com.facebook.react.viewmanagers.RNSVGRectManagerDelegate: RNSVGRectManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.horcrux.svg.TextProperties$FontWeight: boolean hasEnum(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(android.view.View,java.lang.String)
androidx.transition.Fade: float getStartAlpha(androidx.transition.TransitionValues,float)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
okhttp3.OkHttpClient$Builder: boolean getFollowRedirects$okhttp()
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)
com.horcrux.svg.TSpanView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.transition.Transition: androidx.transition.Transition addTarget(android.view.View)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)
com.facebook.imagepipeline.memory.MemoryChunkPool: void free(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void onLayout(boolean,int,int,int,int)
com.google.android.material.internal.FlowLayout: boolean isSingleLine()
androidx.appcompat.widget.SearchView: void onSubmitQuery()
com.google.android.material.shape.MaterialShapeDrawable: float getZ()
androidx.appcompat.widget.RtlSpacingHelper: int getEnd()
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean)
com.facebook.react.views.drawer.ReactDrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
okhttp3.Cookie: boolean equals(java.lang.Object)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentAnim$2: void onAnimationStart(android.view.animation.Animation)
com.facebook.react.views.textinput.ReactEditText: void onDetachedFromWindow()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry access$300(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getMainDiskCacheConfig()
androidx.swiperefreshlayout.widget.CircleImageView: CircleImageView(android.content.Context,int)
okhttp3.HttpUrl: boolean isHttps()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
com.facebook.react.views.modal.ReactModalHostView: void onDropInstance()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void iterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.imagepipeline.listener.BaseRequestListener: void onProducerStart(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: void removeAnimatedEventFromView(int,java.lang.String,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] $values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeText()
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getCustomImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.ColorSpace getColorSpace()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
okhttp3.Dns$Companion: Dns$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
com.facebook.react.ReactRootView: boolean access$100(com.facebook.react.ReactRootView)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flashScrollIndicators()
okhttp3.internal.ws.WebSocketExtensions: boolean noContextTakeover(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.zoontek.rnbootsplash.RNBootSplashModule$1: void run()
com.google.android.material.chip.ChipGroup: int access$400(com.google.android.material.chip.ChipGroup)
com.facebook.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)
com.google.android.material.button.MaterialButton: void onMeasure(int,int)
androidx.appcompat.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int getViewHorizontalDragRange(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.views.textinput.ReactEditText: void access$400(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.textfield.CutoutDrawable: void setCutout(float,float,float,float)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
com.horcrux.svg.CircleView: void setCx(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getDecodeAllFrames()
androidx.collection.LongSparseArray: void gc()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
androidx.appcompat.widget.AlertDialogLayout: void forceUniformWidth(int,int)
androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeController: void logMessageAndImage(java.lang.String,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
com.horcrux.svg.FontData$AbsoluteFontWeight: int lighter(int)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewInLimitedList(android.view.View)
androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.google.android.material.shape.ShapePath$PathArcOperation: void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void onDataSourceFailed(com.facebook.datasource.DataSource)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference postprocessInternal(com.facebook.imagepipeline.image.CloseableImage)
androidx.appcompat.widget.AppCompatTextClassifierHelper: AppCompatTextClassifierHelper(android.widget.TextView)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager)
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(com.horcrux.svg.MaskView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
com.horcrux.svg.RenderableView: void resetProperties()
androidx.fragment.app.Fragment: void performAttach()
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.ReactInstanceManager: boolean access$1002(com.facebook.react.ReactInstanceManager,boolean)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.animation.Animator)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.react.animated.DivisionAnimatedNode: java.lang.String prettyPrint()
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
com.facebook.react.ReactInstanceManager$7: ReactInstanceManager$7(com.facebook.react.ReactInstanceManager)
androidx.recyclerview.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)
com.facebook.react.viewmanagers.RNSVGLineManagerDelegate: RNSVGLineManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()
androidx.recyclerview.widget.LinearSnapHelper: float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
com.facebook.datasource.AbstractDataSource: boolean isClosed()
com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookies(com.facebook.react.bridge.Callback)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
com.facebook.react.ReactDelegate: boolean shouldShowDevMenuOrReload(int,android.view.KeyEvent)
androidx.lifecycle.ReportFragment: void onDestroy()
com.google.android.material.chip.ChipDrawable: void setChipIconTintResource(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: MatrixMathHelper$MatrixDecompositionContext()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void flush()
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.devsupport.DisabledDevSupportManager: void toggleElementInspector()
androidx.recyclerview.widget.RecyclerView$5: void detachViewFromParent(int)
com.horcrux.svg.TSpanView: void setContent(java.lang.String)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void dispatchDraw(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
com.google.android.material.shape.AbsoluteCornerSize: boolean equals(java.lang.Object)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.horcrux.svg.VirtualViewManager$1: void onChildViewRemoved(android.view.View,android.view.View)
androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()
com.facebook.drawee.components.DraweeEventTracker: DraweeEventTracker()
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateY(double[],double)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: AbstractDraweeControllerBuilder(android.content.Context,java.util.Set,java.util.Set)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: UIViewOperationQueue$MeasureOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)
okhttp3.internal.platform.Android10Platform: boolean access$isSupported$cp()
com.facebook.react.uimanager.MatrixMathHelper: double[] inverse(double[])
androidx.appcompat.app.AppCompatActivity: void onDestroy()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromReadableMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.react.uimanager.UIViewOperationQueue: long access$1702(com.facebook.react.uimanager.UIViewOperationQueue,long)
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: void run()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
com.google.android.material.shape.MaterialShapeDrawable: boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean)
com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])
com.facebook.hermes.reactexecutor.RuntimeConfig: RuntimeConfig(long)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.drawee.drawable.RoundedColorDrawable: boolean getPaintFilterBitmap()
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
com.facebook.react.ReactActivityDelegate: void onCreate(android.os.Bundle)
com.facebook.react.modules.core.TimingModule: void onHostPause()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.transition.ChangeBounds$4: void set(java.lang.Object,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
okhttp3.internal.concurrent.TaskQueue: void setActiveTask$okhttp(okhttp3.internal.concurrent.Task)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Hpack: java.util.Map getNAME_TO_FIRST_INDEX()
com.facebook.cache.disk.DiskCacheConfig$Builder: android.content.Context access$000(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void appendToSpan(android.view.View)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: RenderableViewManager$TextViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.uimanager.UIImplementation: void removeRootView(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.facebook.react.views.switchview.ReactSwitch: ReactSwitch(android.content.Context)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
com.horcrux.svg.LinearGradientView: void setX1(java.lang.String)
kotlin.ranges.IntProgression: int getFirst()
com.facebook.common.references.DefaultCloseableReference: com.facebook.common.references.CloseableReference clone()
androidx.recyclerview.widget.GridLayoutManager: void setStackFromEnd(boolean)
com.horcrux.svg.SvgView: boolean interceptsTouchEvent(float,float)
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getStrokeColor()
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: RecyclerView$LayoutManager$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean doParseMoreData(java.io.InputStream)
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: com.facebook.imagepipeline.cache.CountingMemoryCache$Entry of(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.viewmanagers.RNSVGEllipseManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
okhttp3.internal.platform.android.DeferredSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onBatchComplete()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setName(android.view.View,java.lang.String)
androidx.appcompat.view.ActionMode: ActionMode()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
com.facebook.react.animated.SpringAnimation: SpringAnimation(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.SpringAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
androidx.appcompat.widget.RtlSpacingHelper: int getRight()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.shape.ShapePath$PathArcOperation: void setRight(float)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
okio.AsyncTimeout$sink$1: void close()
com.facebook.react.viewmanagers.RNSVGPatternManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar$8: void onClick(android.view.View)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.internal.ThemeEnforcement: int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)
okio.AsyncTimeout$Companion: AsyncTimeout$Companion()
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.chip.ChipDrawable: boolean showsCheckedIcon()
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener)
com.google.android.material.textfield.PasswordToggleEndIconDelegate: boolean hasPasswordTransformation()
com.google.android.material.bottomappbar.BottomAppBar$5: void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.fragment.app.ListFragment: void ensureList()
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.InternalProducerListener: void onProducerFinishWithFailure(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.lang.Throwable,java.util.Map)
com.google.android.material.theme.MaterialComponentsViewInflater: boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()
com.facebook.react.views.scroll.ReactScrollView: void setBorderWidth(int,float)
okio.AsyncTimeout$source$1: okio.AsyncTimeout timeout()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setAdapter(android.widget.ListAdapter)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean)
androidx.recyclerview.widget.OrientationHelper$2: int getEndAfterPadding()
com.google.android.material.snackbar.SnackbarManager: boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
com.facebook.imageutils.WebpUtil: short getShort(java.io.InputStream)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontSize(android.view.View,java.lang.String)
okio.Buffer: int write(java.nio.ByteBuffer)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.facebook.soloader.ApplicationSoSource: ApplicationSoSource(android.content.Context,int)
okio.RealBufferedSource: short readShort()
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: java.lang.String getProducerName()
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle)
okhttp3.internal.http2.Http2Stream: void setReadBytesAcknowledged$okhttp(long)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: Jdk8WithJettyBootPlatform$AlpnProvider(java.util.List)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,java.lang.String)
com.google.android.material.textfield.IndicatorViewController: void setErrorViewTextColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.producers.BaseProducerContext: void callOnIsIntermediateResultExpectedChanged(java.util.List)
com.facebook.react.modules.network.ProgressResponseBody: long totalBytesRead()
androidx.recyclerview.widget.AdapterHelper: void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void d(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,int,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
okhttp3.RequestBody: RequestBody()
com.swmansion.rnscreens.RNScreensPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.generic.RoundingParams: boolean getRoundAsCircle()
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void addViewportData()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
okhttp3.Response: boolean isSuccessful()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void onCancellationImpl()
com.facebook.imagepipeline.systrace.FrescoSystrace: void endSection()
com.horcrux.svg.LineView: void setY2(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ViewModel: void clear()
com.facebook.react.ReactRootView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: ReactViewBackgroundDrawable$BorderRadiusLocation(java.lang.String,int)
com.facebook.cache.common.NoOpCacheErrorLogger: com.facebook.cache.common.NoOpCacheErrorLogger getInstance()
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.facebook.react.viewmanagers.RNSVGTextManagerDelegate: RNSVGTextManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.google.android.material.internal.TextDrawableHelper$1: TextDrawableHelper$1(com.google.android.material.internal.TextDrawableHelper)
androidx.fragment.app.FragmentStateManager: void createView(androidx.fragment.app.FragmentContainer)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.lang.Object invoke()
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
androidx.appcompat.widget.ActionBarContextView: void closeMode()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.uimanager.events.Event: int getUniqueID()
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
com.facebook.drawee.generic.GenericDraweeHierarchy: void resetActualImages()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.RequestBody$Companion$toRequestBody$2: void writeTo(okio.BufferedSink)
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.CutoutDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationStart(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.shell.MainReactPackage$1: MainReactPackage$1(com.facebook.react.shell.MainReactPackage,java.util.Map)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int getSpanIndex()
com.google.android.material.resources.TextAppearance: void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarStyle getCalendarStyle()
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollX()
androidx.transition.Transition$EpicenterCallback: Transition$EpicenterCallback()
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(float,float)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: LayoutAnimationType(java.lang.String,int)
androidx.cardview.widget.RoundRectDrawableWithShadow: float calculateHorizontalPadding(float,float,boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
com.facebook.imagepipeline.request.ImageRequest: int getSourceUriType(android.net.Uri)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String,java.lang.Object)
com.facebook.cache.common.MultiCacheKey: boolean equals(java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.cache.DiskLruCache$Entry: int getLockingSourceCount$okhttp()
com.facebook.common.time.MonotonicClock: long now()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.module.model.ReactModuleInfo: boolean isCxxModule()
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(int)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String getEventName()
androidx.appcompat.widget.Toolbar$2: void run()
androidx.collection.ArraySet: int indexOfNull()
com.th3rdwave.safeareacontext.SerializationUtils: com.facebook.react.bridge.WritableMap edgeInsetsToJsMap(com.th3rdwave.safeareacontext.EdgeInsets)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setResponsible(android.view.View,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: UIViewOperationQueue$UpdatePropertiesOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.transition.Transition: androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateX(double[],double)
androidx.appcompat.widget.LinearLayoutCompat: void measureVertical(int,int)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation: FloatingActionButtonImpl$ResetElevationAnimation(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.horcrux.svg.PatternView: void setPatternContentUnits(int)
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontWeight(java.lang.String)
com.facebook.react.ReactInstanceManager$5: ReactInstanceManager$5(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)
com.facebook.imagepipeline.image.EncodedImage: boolean isValid()
com.facebook.yoga.YogaFlexDirection: int intValue()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
androidx.cardview.widget.RoundRectDrawable: void draw(android.graphics.Canvas)
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void addFlags(int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onProducerFinishWithCancellation(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.util.Map)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.imagepipeline.transcoder.DownsampleUtil: int determineSampleSize(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: android.view.View onCreatePanelView(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
com.facebook.react.uimanager.UIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.facebook.react.animated.AnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void start()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()
com.facebook.react.views.text.ReactTextView: void onStartTemporaryDetach()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.facebook.systrace.Systrace: void registerListener(com.facebook.systrace.TraceListener)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.common.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: void onAnimationStart(android.animation.Animator)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.google.android.material.datepicker.MaterialCalendar: void postSmoothRecyclerViewScroll(int)
okhttp3.Request: java.lang.String method()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
okio.InputStreamSource: okio.Timeout timeout()
okio.SegmentedByteString: java.lang.String base64()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.savedstate.Recreator$SavedStateProvider: android.os.Bundle saveState()
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: ReactViewGroup$ChildrenLayoutChangeListener(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.views.view.ReactViewGroup$1)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isEncodedMemoryCacheProbingEnabled()
com.facebook.react.views.text.ReactClickableSpan: void onClick(android.view.View)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
androidx.fragment.app.FragmentAnim$2: void onAnimationRepeat(android.view.animation.Animation)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOpacity(android.view.View,float)
okhttp3.OkHttpClient: OkHttpClient()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.core.JavaTimerManager$1: int compare(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.FastScroller: void drawHorizontalScrollbar(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ListPopupWindow$2: void run()
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onNewResultImpl(java.lang.Object,int,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: void run()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.blob.BlobModule$3: BlobModule$3(com.facebook.react.modules.blob.BlobModule)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.common.references.OOMSoftReference: java.lang.Object get()
com.google.android.material.button.MaterialButtonHelper: MaterialButtonHelper(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig: int getMemoryChunkType()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp()
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
com.google.android.material.chip.Chip: void drawableStateChanged()
androidx.core.graphics.Insets: boolean equals(java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar: void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.transition.ViewUtils$2: void set(android.view.View,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okio.Okio__JvmOkioKt: okio.Source source(java.io.File)
okhttp3.internal.http2.Settings$Companion: Settings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean)
okio.-Platform: java.lang.String toUtf8String(byte[])
com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceEntryName(int)
androidx.transition.Fade$1: void onTransitionEnd(androidx.transition.Transition)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: boolean canTranscode(com.facebook.imageformat.ImageFormat)
com.zoontek.rnbootsplash.RNBootSplashModule: void show(com.zoontek.rnbootsplash.RNBootSplashTask)
com.facebook.react.uimanager.NativeKind: NativeKind(java.lang.String,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.facebook.soloader.ExtractFromZipSoSource: ExtractFromZipSoSource(android.content.Context,java.lang.String,java.io.File,java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler: void possiblyWorkaroundSyncManager(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AlertController: void setCustomTitle(android.view.View)
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setRadii(float[])
androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void copy(java.io.InputStream,java.io.OutputStream,int)
androidx.transition.ChangeBounds$ViewBounds: void setBottomRight(android.graphics.PointF)
androidx.appcompat.app.AlertController$5: void run()
com.facebook.react.views.textinput.ReactEditText: void removeTextChangedListener(android.text.TextWatcher)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.transition.ViewGroupUtilsApi14$1: boolean isChangingLayout()
androidx.recyclerview.widget.RecyclerView$5: void removeAllViews()
com.facebook.drawee.drawable.RoundedColorDrawable: void setRadius(float)
com.facebook.drawee.components.DraweeEventTracker$Event: DraweeEventTracker$Event(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.connection.RealConnection: int getRouteFailureCount$okhttp()
androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory: ArtBitmapFactory(com.facebook.imagepipeline.memory.BitmapPool,com.facebook.imagepipeline.core.CloseableReferenceFactory)
com.horcrux.svg.TextProperties$TextAnchor: TextProperties$TextAnchor(java.lang.String,int)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] $values()
com.facebook.react.views.modal.ShowEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
com.facebook.soloader.MinElf: long get64(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean hasEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: ImagePerfRequestListener(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState)
okio.AsyncTimeout: long remainingNanos(long)
androidx.transition.Transition: void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void init()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeMiterlimit(android.view.View,float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onStagingAreaHit(com.facebook.cache.common.CacheKey)
androidx.recyclerview.widget.RecyclerView$Recycler: void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.imagepipeline.cache.LruCountingMemoryCache$2: void release(java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(android.view.View,java.lang.String)
androidx.recyclerview.widget.LinearSmoothScroller: void onStart()
androidx.fragment.app.Fragment: int getNextTransition()
com.facebook.react.modules.blob.BlobModule$4: boolean supports(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform()
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: void setOverlayTop(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.platform.android.ConscryptSocketAdapter: ConscryptSocketAdapter()
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: DiskCacheWriteProducer(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
com.google.android.material.chip.ChipDrawable: void setTextAppearanceResource(int)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int)
androidx.transition.ChangeBounds: java.lang.String[] getTransitionProperties()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollY()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactInstanceManager$4: void onViewAttachedToWindow(android.view.View)
com.facebook.drawee.controller.AbstractDraweeController: void onNewResultInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.Object,java.lang.Object)
androidx.transition.FragmentTransitionSupport: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
kotlin.collections.EmptyList: java.lang.Object get(int)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
com.google.android.material.shape.ShapePath: void setEndX(float)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method,com.facebook.react.uimanager.ViewManagersPropertyCache$1)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.google.android.material.math.MathUtils: float dist(float,float,float,float)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.facebook.react.uimanager.ReactShadowNodeImpl: void onAfterUpdateTransaction()
androidx.savedstate.Recreator$SavedStateProvider: Recreator$SavedStateProvider(androidx.savedstate.SavedStateRegistry)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setTextLength(android.view.View,java.lang.String)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.google.android.material.textfield.IndicatorViewController: void showHelper(java.lang.CharSequence)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
com.zoontek.rnbootsplash.RNBootSplashTask: boolean getFade()
androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)
com.google.android.material.bottomappbar.BottomAppBar: boolean setFabDiameter(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onStagingAreaMiss(com.facebook.cache.common.CacheKey)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.transition.ViewGroupOverlayApi18: void add(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CacheKeyFactory access$700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()
okio.RealBufferedSink: okio.BufferedSink write(byte[])
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: SimpleProgressiveJpegConfig(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig)
androidx.cursoradapter.widget.CursorFilter: CursorFilter(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)
okhttp3.Cache: void remove$okhttp(okhttp3.Request)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.ListView getListView()
com.facebook.imagepipeline.common.ResizeOptions: int hashCode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager$2: ReactModalHostManager$2(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.th3rdwave.safeareacontext.SafeAreaView: void waitForReactLayout()
com.th3rdwave.safeareacontext.SafeAreaView: void updateInsets()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
com.facebook.systrace.SystraceMessage$NoopBuilder: com.facebook.systrace.SystraceMessage$Builder arg(java.lang.String,java.lang.Object)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.modules.storage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Void[])
androidx.transition.Transition: androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(android.view.View,java.lang.String)
okio.Buffer: okio.ByteString readByteString(long)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void reset()
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte read(int)
com.facebook.yoga.YogaConfigJNIFinalizer: void freeNatives()
androidx.transition.TransitionSet: androidx.transition.Transition addTarget(android.view.View)
com.zoontek.rnbootsplash.RNBootSplashModule: void onHostResume()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.fresco.ui.common.ControllerListener2$Extras obtainExtras(com.facebook.datasource.DataSource,java.lang.Object,android.net.Uri)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.zoontek.rnbootsplash.RNBootSplashModule$4$1: RNBootSplashModule$4$1(com.zoontek.rnbootsplash.RNBootSplashModule$4,android.view.ViewGroup,android.widget.LinearLayout,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.Binding: void stopSurface(int)
okhttp3.internal.connection.RealCall$AsyncCall: java.lang.String getHost()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.WebpTranscodeProducer newWebpTranscodeProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getNewResultForImagesWithoutExifData(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList access$1600(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
com.facebook.react.ReactInstanceManager$7: void run()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.ReactFragment: void onDestroy()
com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
androidx.core.os.CancellationSignal: boolean isCanceled()
com.facebook.react.views.slider.ReactSlider: void updateValue()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)
okio.Buffer: okio.Buffer writeLong(long)
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: MaterialShapeDrawable$MaterialShapeDrawableState(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: void buildSpannableFromFragment(android.content.Context,com.facebook.react.common.mapbuffer.ReadableMapBuffer,android.text.SpannableStringBuilder,java.util.List)
com.google.android.material.snackbar.SnackbarManager: void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)
com.google.android.material.internal.CollapsingTextHelper: void draw(android.graphics.Canvas)
androidx.transition.TransitionValues: int hashCode()
com.facebook.soloader.ApplicationSoSource: void prepare(int)
com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException: BasePool$PoolSizeViolationException(int,int,int,int)
com.facebook.react.viewmanagers.RNSVGImageManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
okhttp3.internal.connection.Exchange$RequestBodySink: void flush()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources getResources()
androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)
com.facebook.drawee.drawable.FadeDrawable: void setOnFadeListener(com.facebook.drawee.drawable.FadeDrawable$OnFadeListener)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setControllerOverlay(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void updatePathEffect()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void prependToSpan(android.view.View)
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
com.facebook.imagepipeline.producers.BaseProducerContext: void callOnIsPrefetchChanged(java.util.List)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean performClick()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
okhttp3.internal.concurrent.TaskRunner: void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task)
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.views.image.ReactImageView$1: void onSubmit(java.lang.String,java.lang.Object)
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
okhttp3.internal.connection.RealCall: boolean isCanceled()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.android.material.math.MathUtils: float lerp(float,float,float)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4: void applyTransformation(float,android.view.animation.Transformation)
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
com.facebook.yoga.YogaWrap: YogaWrap(java.lang.String,int,int)
androidx.appcompat.view.menu.MenuBuilder: int getOrdering(int)
com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeOutLayer(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: DidJSUpdateUiDuringFrameDetector()
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: int getMaxSizeSoftCap()
okhttp3.OkHttpClient: int readTimeoutMillis()
androidx.cardview.widget.CardViewBaseImpl: float getElevation(androidx.cardview.widget.CardViewDelegate)
com.facebook.imagepipeline.memory.LruBitmapPool: java.lang.Object get(int)
com.google.android.material.textfield.CutoutDrawable: boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)
okio.Buffer: okio.BufferedSink writeShort(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: int hashCode()
com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.cache.disk.DefaultDiskStorage: java.io.File access$300(com.facebook.cache.disk.DefaultDiskStorage)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: void finalize()
com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager getInstance()
androidx.appcompat.widget.TooltipCompatHandler: boolean onLongClick(android.view.View)
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
com.facebook.soloader.SoLoader$Api14Utils: SoLoader$Api14Utils()
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.Dynamic)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setProgressiveRenderingEnabled(boolean)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice()
okio.ByteString: okio.ByteString md5()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onSubmit(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: RecyclerView$RecycledViewPool()
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean,boolean)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void peekDrawer()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
com.facebook.cache.disk.DiskStorageCache: com.facebook.binaryresource.BinaryResource endInsert(com.facebook.cache.disk.DiskStorage$Inserter,com.facebook.cache.common.CacheKey,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int getModuleId()
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
okio.Okio__JvmOkioKt: boolean isAndroidGetsocknameError(java.lang.AssertionError)
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame$okhttp()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void ensureValid()
com.google.android.material.shape.ShapePath$PathArcOperation: float getLeft()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.i18nmanager.I18nUtil: I18nUtil()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: DecodeProducer$ProgressiveDecoder(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)
com.facebook.imagepipeline.image.CloseableImage: CloseableImage()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.facebook.imagepipeline.listener.BaseRequestListener: void onRequestCancellation(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float,int)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: void run()
com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean setResolvedLayoutDirection(int)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.facebook.common.internal.Objects$ToStringHelper: Objects$ToStringHelper(java.lang.String,com.facebook.common.internal.Objects$1)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.horcrux.svg.TextPathView: void setStartOffset(com.facebook.react.bridge.Dynamic)
com.facebook.drawee.drawable.FadeDrawable: long getCurrentTimeMs()
com.facebook.react.ReactInstanceManager$5$1: ReactInstanceManager$5$1(com.facebook.react.ReactInstanceManager$5)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: com.facebook.datasource.DataSource get()
com.google.android.material.floatingactionbutton.FloatingActionButton: int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
com.facebook.react.animated.TransformAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setRadius(float)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int getSpan(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.BitmapPool getBitmapPool()
okhttp3.internal.cache.CacheStrategy$Companion: boolean isCacheable(okhttp3.Response,okhttp3.Request)
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
androidx.transition.ViewUtilsApi29: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutDirection(com.facebook.yoga.YogaDirection)
com.google.android.material.animation.MatrixEvaluator: MatrixEvaluator()
androidx.appcompat.widget.Toolbar: void ensureLogoView()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)
androidx.fragment.app.FragmentAnim: int transitToAnimResourceId(int,boolean)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.ChildHelper$Bucket: void insert(int,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
kotlin.text.Charsets: java.nio.charset.Charset UTF32_LE()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,java.lang.String)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: void setAnchorView(android.view.View)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void fetchSync(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedEndWithDecoration(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer access$1300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
okhttp3.internal.connection.RealConnection: void setIdleAtNs$okhttp(long)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: int getSampleSize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void autoSizeText()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: FloatingActionButtonImpl$1(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)
com.facebook.react.devsupport.LogBoxModule: void hide()
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.transition.Transition: androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean)
com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean onStateChanged(int[])
com.facebook.react.animated.NativeAnimatedModule$10: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: android.graphics.Matrix getTransformationMatrixFromInvertedExif(int)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String getEventName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.textinput.ReactEditText: void finalize()
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point getModalHostSize(android.content.Context)
com.facebook.react.views.image.ReactImageView: void warnImageSource(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.soloader.nativeloader.SystemDelegate: SystemDelegate()
com.facebook.imagepipeline.producers.InternalProducerListener: void onUltimateProducerReached(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,boolean)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)
com.facebook.common.executors.ScheduledFutureImpl: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.facebook.imagepipeline.producers.DelegatingConsumer: void onCancellationImpl()
com.horcrux.svg.VirtualViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.Point subtract(com.horcrux.svg.Point,com.horcrux.svg.Point)
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.text.ReactTextUpdate: int getSelectionEnd()
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: ScrollingTabContainerView$TabClickListener(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationRepeat(android.view.animation.Animation)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void cacheReferenceLineAndClear(boolean,int)
com.swmansion.rnscreens.ScreenStackViewManager$Companion: ScreenStackViewManager$Companion()
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(int,com.facebook.react.bridge.ReadableMap)
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
com.google.android.material.stateful.ExtendableSavedState$1: ExtendableSavedState$1()
com.swmansion.rnscreens.ScreenStack: void dispatchDraw(android.graphics.Canvas)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.soloader.SysUtil: boolean is64Bit()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
com.google.android.material.dialog.InsetDialogOnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: DiskCacheWriteProducer$DiskCacheWriteConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.DiskCacheWriteProducer$1)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: FloatingActionButtonImpl$2(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspotBounds(int,int,int,int)
androidx.recyclerview.widget.RecyclerView$4: void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: boolean isSupported()
androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2: PartialDiskCacheProducer$2(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,java.util.concurrent.atomic.AtomicBoolean)
com.facebook.react.views.scroll.VelocityHelper: void calculateVelocity(android.view.MotionEvent)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.google.android.material.datepicker.DateValidatorPointForward: DateValidatorPointForward(long)
androidx.versionedparcelable.ParcelImpl: int describeContents()
com.facebook.react.uimanager.events.TouchEventType: TouchEventType(java.lang.String,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
com.facebook.yoga.YogaNodeJNIBase: void setFlexShrink(float)
com.facebook.react.uimanager.NativeViewHierarchyManager$1: void onAnimationEnd()
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJavaScriptExecutorFactory(com.facebook.react.bridge.JavaScriptExecutorFactory)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.google.android.material.transformation.FabTransformationSheetBehavior: void updateImportantForAccessibility(android.view.View,boolean)
kotlin.collections.AbstractList: java.util.ListIterator listIterator()
com.facebook.soloader.UnpackingSoSource: void deleteUnmentionedFiles(com.facebook.soloader.UnpackingSoSource$Dso[])
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void close()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentStateManager: void saveViewState()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: void invoke(java.io.IOException)
com.google.android.material.datepicker.DaysOfWeekAdapter: java.lang.Object getItem(int)
okio.RealBufferedSource: void close()
com.google.android.material.datepicker.DateValidatorPointForward: boolean equals(java.lang.Object)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.net.HttpURLConnection downloadFrom(android.net.Uri,int)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.app.AlertController$5: AlertController$5(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.horcrux.svg.TextProperties$TextPathSpacing: TextProperties$TextPathSpacing(java.lang.String,int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
kotlin.collections.AbstractList: int hashCode()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHalfExpandedRatio(float)
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: java.lang.Runnable decorateRunnable(java.lang.Runnable,java.lang.String)
com.swmansion.rnscreens.ScreenStack: void removeAllScreens()
com.facebook.react.modules.image.ImageLoaderModule$1: void onNewResultImpl(com.facebook.datasource.DataSource)
com.horcrux.svg.SvgView: void defineBrush(com.horcrux.svg.Brush,java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldHide(android.view.View,float)
kotlin.sequences.DropSequence: DropSequence(kotlin.sequences.Sequence,int)
androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int access$802(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.modules.network.CountingOutputStream: void write(byte[],int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.imagepipeline.memory.BucketsBitmapPool: java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.horcrux.svg.RadialGradientView: void setRy(java.lang.String)
androidx.collection.ArraySet$1: void colRemoveAt(int)
androidx.recyclerview.widget.OrientationHelper$2: int getTotalSpace()
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.drawee.drawable.ForwardingDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)
com.google.android.material.internal.CollapsingTextHelper: boolean setCollapsedTypefaceInternal(android.graphics.Typeface)
androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
okhttp3.Cache: okhttp3.Response get$okhttp(okhttp3.Request)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.facebook.react.modules.network.ForwardingCookieHandler: java.util.Map get(java.net.URI,java.util.Map)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.facebook.imagepipeline.memory.BucketsBitmapPool: boolean isReusable(android.graphics.Bitmap)
com.facebook.cache.disk.DynamicDefaultDiskStorage: void clearAll()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.google.android.material.shape.ShapePath: void setEndShadowAngle(float)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillOpacity(android.view.View,float)
com.google.android.material.datepicker.MaterialCalendar$2: MaterialCalendar$2(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int)
okhttp3.Cache$Companion: int readInt$okhttp(okio.BufferedSource)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.ActionMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.recyclerview.widget.OpReorderer: void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object access$2700(com.facebook.react.uimanager.UIViewOperationQueue)
okhttp3.Address: int hashCode()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.facebook.soloader.UnpackingSoSource: byte[] getDepsBlock()
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: DecodeProducer$ProgressiveDecoder$1(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.ProducerContext,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
okio.SocketAsyncTimeout: void timedOut()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableStaticBitmap decodeJpeg(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)
androidx.appcompat.view.menu.StandardMenuPopup: void dismiss()
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.zoontek.rnbootsplash.RNBootSplashModule: void hide(boolean,com.facebook.react.bridge.Promise)
androidx.fragment.app.BackStackRecord: java.lang.String toString()
com.google.android.material.datepicker.MaterialDatePicker: void onCreate(android.os.Bundle)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onSuccess(java.lang.String)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
com.facebook.react.ReactPackageHelper$1$1: ReactPackageHelper$1$1(com.facebook.react.ReactPackageHelper$1)
com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()
androidx.transition.WindowIdApi14: WindowIdApi14(android.os.IBinder)
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.app.ToolbarActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
okio.RealBufferedSource$inputStream$1: int available()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.drawee.controller.BaseControllerListener: com.facebook.drawee.controller.ControllerListener getNoOpListener()
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: void calculateWindowBounds(android.view.View,android.graphics.RectF)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
com.horcrux.svg.SVGLength: java.util.ArrayList arrayFrom(com.facebook.react.bridge.ReadableArray)
kotlin.collections.AbstractCollection: AbstractCollection()
androidx.recyclerview.widget.LinearSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.transition.ViewUtilsApi19: ViewUtilsApi19()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
com.horcrux.svg.ImageView$1: void onFailureImpl(com.facebook.datasource.DataSource)
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.generic.RoundingParams getRoundingParams()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setRadius(float,int)
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
com.google.android.material.shape.ShapeAppearancePathProvider: void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)
androidx.appcompat.widget.ResourceManagerInternal: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.bridge.ReadableMap castToProps(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer newBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: boolean isReverse()
com.facebook.imagepipeline.producers.BaseProducerContext: void putExtras(java.util.Map)
com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator: HoneycombBitmapCreator(com.facebook.imagepipeline.memory.PoolFactory)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
com.google.android.material.shape.ShapePath: ShapePath()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onNextResult(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.io.Closeable,int)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: AndroidDrawerLayoutManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$400(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
com.facebook.imagepipeline.image.EncodedImage: void parseMetadataIfNeeded()
com.horcrux.svg.VirtualViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onCancellationImpl()
com.google.android.material.chip.ChipDrawable: float getChipStrokeWidth()
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
okio.ForwardingSink: void close()
com.google.android.material.appbar.HeaderBehavior$FlingRunnable: HeaderBehavior$FlingRunnable(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int,int,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
okhttp3.internal.platform.android.AndroidLog: void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: BitmapPrepareProducer$BitmapPrepareConsumer(com.facebook.imagepipeline.producers.Consumer,int,int)
com.google.android.material.internal.StateListAnimator$Tuple: StateListAnimator$Tuple(int[],android.animation.ValueAnimator)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
com.swmansion.rnscreens.events.ScreenWillDisappearEvent: java.lang.String getEventName()
com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.google.android.material.datepicker.MaterialDatePicker: android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: AppCompatDelegateImpl$6$1(androidx.appcompat.app.AppCompatDelegateImpl$6)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
kotlin.Pair: java.lang.Object getFirst()
com.google.android.material.datepicker.MaterialCalendar$4: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: TransformAnimatedNode$AnimatedTransformConfig(com.facebook.react.animated.TransformAnimatedNode)
okio.RealBufferedSink: okio.BufferedSink write(okio.ByteString)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,java.lang.String)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache getEncodedMemoryCache()
okhttp3.internal.Util: boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl)
androidx.fragment.app.Fragment: void onResume()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.ChildHelper: void removeViewAt(int)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.bridge.WritableMap getEventData()
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: java.util.EnumSet getEdges()
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEvent(java.lang.String)
okhttp3.internal.connection.Exchange: void flushRequest()
com.facebook.drawee.drawable.RoundedColorDrawable: com.facebook.drawee.drawable.RoundedColorDrawable fromColorDrawable(android.graphics.drawable.ColorDrawable)
okhttp3.MediaType: java.lang.String toString()
com.facebook.imagepipeline.producers.FetchState: android.net.Uri getUri()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getAddDuration()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignContent(com.facebook.yoga.YogaAlign)
com.horcrux.svg.ClipPathView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.yoga.YogaNodeJNIBase: boolean isDirty()
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
kotlin.ranges.IntProgression: java.lang.String toString()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.util.Set access$2200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$700(com.facebook.imagepipeline.memory.PoolConfig$Builder)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.react.uimanager.UIViewOperationQueue: long access$2202(com.facebook.react.uimanager.UIViewOperationQueue,long)
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket)
com.google.android.material.shape.MaterialShapeDrawable: boolean hasStroke()
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
com.google.android.material.datepicker.MaterialCalendarGridView: void gainFocus(int,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()
com.facebook.react.animated.AnimatedNode: void removeChild(com.facebook.react.animated.AnimatedNode)
androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.collection.SimpleArrayMap: boolean isEmpty()
com.google.android.material.appbar.AppBarLayout: boolean shouldDrawStatusBarForeground()
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.platform.DefaultDecoder: DefaultDecoder(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)
androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
androidx.transition.ViewOverlayApi18: void add(android.graphics.drawable.Drawable)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: HttpUrlConnectionNetworkFetcher$1(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)
com.facebook.react.views.scroll.ReactScrollView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void setupListeners()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
com.google.android.material.chip.ChipDrawable: boolean shouldDrawText()
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: void onUltimateProducerReached(java.lang.String,java.lang.String,boolean)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
androidx.collection.ArraySet: boolean contains(java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
com.horcrux.svg.PathView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean isBottomSheet(android.view.View)
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: int compareTo(java.lang.Object)
okhttp3.Challenge: java.lang.String scheme()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.common.internal.Suppliers$1: java.lang.Object get()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: Http1ExchangeCodec$UnknownLengthSource(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.imagepipeline.producers.NetworkFetchProducer: void maybeHandleIntermediateResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
kotlin.collections.EmptyMap: java.util.Set keySet()
com.facebook.imagepipeline.producers.NetworkFetchProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.recyclerview.widget.RecyclerView$Recycler: RecyclerView$Recycler(androidx.recyclerview.widget.RecyclerView)
com.facebook.imagepipeline.cache.StagingArea: void clearAll()
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
com.google.android.material.appbar.MaterialToolbar: void initBackground(android.content.Context)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
okio.Timeout: okio.Timeout deadlineNanoTime(long)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setStyle(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
com.facebook.yoga.YogaNodeJNIBase: void reset()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1: EncodedCountingMemoryCacheFactory$1()
com.horcrux.svg.RadialGradientView: void setCy(java.lang.String)
com.facebook.imagepipeline.producers.ExperimentalThreadHandoffProducerQueueImpl: void remove(java.lang.Runnable)
com.facebook.react.animated.NativeAnimatedModule$13: NativeAnimatedModule$13(com.facebook.react.animated.NativeAnimatedModule,int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.transition.Transition: androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
com.facebook.datasource.AbstractDataSource: boolean isFinished()
com.facebook.common.executors.ScheduledFutureImpl: boolean cancel(boolean)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)
com.facebook.common.executors.CallerThreadExecutor: boolean isTerminated()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setDelayMs(int)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.drawee.backends.pipeline.PipelineDraweeController newController()
com.facebook.imagepipeline.producers.BaseConsumer: boolean isLast(int)
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: ChipGroup$PassThroughHierarchyChangeListener(com.google.android.material.chip.ChipGroup)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.disk.EntryEvictionComparatorSupplier getEntryEvictionComparatorSupplier()
androidx.cardview.widget.RoundRectDrawable: boolean onStateChange(int[])
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.ReactInstanceManager: void detachViewFromInstance(com.facebook.react.uimanager.ReactRoot,com.facebook.react.bridge.CatalystInstance)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.lang.String error(java.lang.String,java.lang.Object[])
androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
com.facebook.jni.HybridData: void resetNative()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
okhttp3.internal.HostnamesKt: java.lang.String toCanonicalHost(java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
com.google.android.material.datepicker.Month: int hashCode()
androidx.cardview.widget.RoundRectDrawableWithShadow: void setAlpha(int)
okhttp3.CertificatePinner: void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0)
androidx.transition.Visibility$DisappearListener: void onTransitionCancel(androidx.transition.Transition)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream)
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$100(com.facebook.react.views.image.ReactImageView)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)
com.facebook.drawee.drawable.ScaleTypeDrawable: void configureBounds()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource submitPrefetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.listener.RequestListener)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void onNewResult(com.facebook.datasource.DataSource)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEndDragEvent(android.view.ViewGroup,float,float)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getZombie$okhttp()
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer(com.facebook.imagepipeline.producers.Consumer)
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.graphics.Bitmap createThumbnailFromContentProvider(android.content.ContentResolver,android.net.Uri)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.google.android.material.behavior.SwipeDismissBehavior$1: int clampViewPositionHorizontal(android.view.View,int,int)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setFitToContents(boolean)
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger getCallsPerHost()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.common.MapBuilder$Builder: MapBuilder$Builder()
com.horcrux.svg.RadialGradientView: void setCx(java.lang.String)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void access$000(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,com.facebook.common.util.TriState)
com.google.android.material.chip.Chip: void validateAttributes(android.util.AttributeSet)
com.facebook.imagepipeline.producers.InternalRequestListener: void onRequestFailure(com.facebook.imagepipeline.producers.ProducerContext,java.lang.Throwable)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: ImagePipelineExperiments$Builder(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.views.text.TextAttributes: void setLetterSpacing(float)
okio.ByteString: int getHashCode$okio()
okhttp3.EventListener$Companion: EventListener$Companion()
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int)
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.PointF getActualImageFocusPoint()
com.google.android.material.textfield.TextInputLayout$3: void run()
com.swmansion.rnscreens.ScreenStackFragment: void removeToolbar()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollBeginDragEvent(android.view.ViewGroup)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: void onAnimationStart(android.animation.Animator)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)
com.facebook.binaryresource.FileBinaryResource: FileBinaryResource(java.io.File)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
com.facebook.react.views.text.ReactFontManager$FontFamily: void setTypeface(int,android.graphics.Typeface)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String buildKeySelection(int)
com.google.android.material.animation.MotionTiming: int hashCode()
com.facebook.react.views.scroll.ReactScrollView: void disableFpsListener()
com.google.android.material.datepicker.MaterialDatePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
com.th3rdwave.safeareacontext.SafeAreaContextPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: Toolbar$ExpandedActionViewMenuPresenter(androidx.appcompat.widget.Toolbar)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,int,java.lang.String,int,int)
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.facebook.react.views.image.MultiPostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
okhttp3.internal.http2.Http2Writer: void close()
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.facebook.drawee.view.DraweeHolder: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean equals(java.lang.Object)
androidx.transition.ViewUtilsApi29: float getTransitionAlpha(android.view.View)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void reset()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
androidx.lifecycle.SavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
okhttp3.internal.connection.RealCall$timeout$1: RealCall$timeout$1(okhttp3.internal.connection.RealCall)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void onAttachedToWindow()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: TransformAnimatedNode$StaticTransformConfig(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: ForwardingListener$TriggerLongPress(androidx.appcompat.widget.ForwardingListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getNetworkFetchSequence()
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.horcrux.svg.TextView: void setInlineSize(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.Void invalidLengths(java.util.List)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipPath(android.view.View,java.lang.String)
kotlin.SynchronizedLazyImpl: boolean isInitialized()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
androidx.appcompat.view.menu.StandardMenuPopup: void updateMenuView(boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.OpReorderer: void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateFullSpansAfter(int)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnFailure(java.lang.Throwable)
com.facebook.react.views.text.TextAttributes: float getHeightOfTallestInlineViewOrImage()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
androidx.appcompat.widget.SwitchCompat$1: void set(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabCradleMargin()
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
com.facebook.imagepipeline.core.CloseableReferenceFactory$1: CloseableReferenceFactory$1(com.facebook.imagepipeline.core.CloseableReferenceFactory,com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getInt(short)
com.facebook.react.views.slider.ReactSliderManager$1: void onStartTrackingTouch(android.widget.SeekBar)
com.facebook.cache.common.SimpleCacheKey: java.lang.String toString()
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_CONNECTION_SPECS$cp()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
com.facebook.imagepipeline.memory.PoolFactory: PoolFactory(com.facebook.imagepipeline.memory.PoolConfig)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
com.facebook.imagepipeline.producers.SettableProducerContext: SettableProducerContext(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerContext)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillRule(android.view.View,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
com.facebook.imagepipeline.request.ImageRequestBuilder: int getDelayMs()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: MultiplexProducer$Multiplexer$ForwardingConsumer(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.switchview.ReactSwitch: void setChecked(boolean)
com.facebook.imagepipeline.producers.NetworkFetchProducer: void onFailure(com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$3: void onViewDragStateChanged(int)
com.facebook.imagepipeline.image.EncodedImage: boolean isCompleteAt(int)
com.google.android.material.textfield.ClearTextEndIconDelegate$1: void afterTextChanged(android.text.Editable)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.react.modules.core.ReactChoreographer$2: void run()
com.google.android.material.bottomappbar.BottomAppBar: void setActionMenuViewPosition()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
androidx.fragment.app.FragmentManager: void completeShowHideFragment(androidx.fragment.app.Fragment)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getAndClearDataSource(int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.transition.TransitionListenerAdapter: void onTransitionResume(androidx.transition.Transition)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
com.facebook.react.modules.websocket.WebSocketModule$1: WebSocketModule$1(com.facebook.react.modules.websocket.WebSocketModule,int)
okio.Options: int[] getTrie$okio()
com.swmansion.rnscreens.ScreenContainer: void moveToFront(com.swmansion.rnscreens.ScreenFragment)
androidx.transition.TransitionValues: TransitionValues()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableArray createsPointersArray(int,int,com.facebook.react.uimanager.events.TouchEvent)
okhttp3.HttpUrl$Builder$Companion: int slashCount(java.lang.String,int,int)
okhttp3.internal.http.StatusLine: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PostprocessorProducer newPostprocessorProducer(com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)
com.facebook.drawee.drawable.RoundedColorDrawable: void setRadii(float[])
com.google.android.material.datepicker.Month: int monthsUntil(com.google.android.material.datepicker.Month)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setDisplay(android.view.View,java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
com.facebook.react.animated.NativeAnimatedNodesManager: void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)
com.facebook.react.views.text.TextAttributeProps: void setFontWeight(java.lang.String)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object getCallStackTrace()
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void goToNextColor()
com.facebook.react.modules.storage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Void[])
com.horcrux.svg.MarkerView: void setVbWidth(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.facebook.react.uimanager.events.Event: Event(int)
okio.internal.HashFunctionKt$newHashFunction$1: HashFunctionKt$newHashFunction$1(java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
com.facebook.imagepipeline.cache.BufferedDiskCache$3: BufferedDiskCache$3(com.facebook.imagepipeline.cache.BufferedDiskCache,java.lang.Object,java.util.concurrent.atomic.AtomicBoolean,com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment(com.swmansion.rnscreens.Screen)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)
okio.RealBufferedSink: okio.Timeout timeout()
okhttp3.internal.Util$asFactory$1: Util$asFactory$1(okhttp3.EventListener)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)
okio.RealBufferedSource: RealBufferedSource(okio.Source)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onProgressUpdateImpl(float)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.horcrux.svg.SymbolView: void setMinX(float)
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedEndWithDecoration(android.view.View)
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
com.facebook.imagepipeline.common.ImageDecodeOptions: boolean equals(java.lang.Object)
androidx.appcompat.widget.TooltipPopup: boolean isShowing()
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setIsLayoutOnly(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
com.facebook.react.viewmanagers.RNSVGCircleManagerDelegate: RNSVGCircleManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.horcrux.svg.TextView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint,android.graphics.Region$Op)
com.facebook.common.internal.Throwables: void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)
androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void rename(java.io.File,java.io.File)
okhttp3.internal.http2.Header: int hashCode()
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,java.lang.String)
androidx.transition.ChangeBounds$1: android.graphics.PointF get(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedNodesManager: void initializeEventListenerForUIManagerType(int)
com.facebook.react.devsupport.DisabledDevSupportManager: void showDevOptionsDialog()
com.facebook.imagepipeline.memory.BucketsBitmapPool: android.graphics.Bitmap alloc(int)
androidx.transition.ViewUtilsApi22: ViewUtilsApi22()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVectorEffect(android.view.View,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule$1: UIManagerModule$1(com.facebook.react.uimanager.UIManagerModule)
androidx.customview.widget.ViewDragHelper$2: ViewDragHelper$2(androidx.customview.widget.ViewDragHelper)
androidx.recyclerview.widget.FastScroller: int scrollTo(float,float,int[],int,int,int)
okhttp3.internal.connection.RealConnectionPool: RealConnectionPool(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit)
okio.RealBufferedSource$inputStream$1: int read(byte[],int,int)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: BitmapMemoryCacheProducer(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
com.facebook.imagepipeline.common.BytesRange: int hashCode()
com.horcrux.svg.RadialGradientView: void saveDefinition()
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void offsetChildByInset(android.view.View,android.graphics.Rect,int)
com.facebook.imageformat.ImageFormatChecker: void setCustomImageFormatCheckers(java.util.List)
com.google.android.material.chip.ChipDrawable: int getIntrinsicWidth()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener2)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
androidx.transition.Fade: Fade(int)
com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)
androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)
com.facebook.react.modules.blob.BlobCollector$1: BlobCollector$1(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void ensureTarget()
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig: ImagePipelineConfig(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineConfig$1)
androidx.appcompat.widget.SearchView$5: SearchView$5(androidx.appcompat.widget.SearchView)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.imagepipeline.memory.LruBitmapPool: android.graphics.Bitmap get(int)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
com.swmansion.rnscreens.ScreenWindowTraits: ScreenWindowTraits()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.transition.TransitionSet: androidx.transition.TransitionSet setDuration(long)
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: int getCount()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.soloader.UnpackingSoSource$InputDso: UnpackingSoSource$InputDso(com.facebook.soloader.UnpackingSoSource$Dso,java.io.InputStream)
com.google.android.material.shape.ShapePath$PathArcOperation: float getSweepAngle()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillRule(android.view.View,int)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
androidx.appcompat.widget.ActionBarContainer: boolean isCollapsed(android.view.View)
com.google.android.material.textview.MaterialTextView: int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[])
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setPrompt(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(java.lang.Integer)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.textfield.TextInputLayout: void dispatchRestoreInstanceState(android.util.SparseArray)
com.facebook.react.viewmanagers.RNSVGForeignObjectManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.transition.Transition: java.lang.Object clone()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: void onAnimationCancel(android.animation.Animator)
com.google.android.material.datepicker.DateValidatorPointForward$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter: ReactPickerManager$PickerEventEmitter(com.facebook.react.views.picker.ReactPicker,com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.internal.connection.Exchange$RequestBodySink: java.io.IOException complete(java.io.IOException)
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.config.ReactFeatureFlags: boolean enableRuntimeExecutorFlushing()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontSize(android.view.View,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.EncodedProbeProducer$ProbeConsumer: EncodedProbeProducer$ProbeConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.cache.BoundedLinkedHashSet)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setPostprocessor(com.facebook.imagepipeline.request.Postprocessor)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
com.facebook.imageformat.ImageFormat: ImageFormat(java.lang.String,java.lang.String)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.viewmanagers.RNSVGRectManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
com.facebook.react.uimanager.events.Event: long getTimestampMs()
com.facebook.drawee.drawable.ArrayDrawable: ArrayDrawable(android.graphics.drawable.Drawable[])
com.facebook.react.views.view.ColorUtil: int multiplyColorAlpha(int,int)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
okhttp3.internal.cache.DiskLruCache$Entry: okio.Source newSource(int)
androidx.recyclerview.widget.SnapHelper: boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.facebook.react.views.scroll.ReactScrollView$2: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.customview.widget.ExploreByTouchHelper$2: int size(androidx.collection.SparseArrayCompat)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.facebook.react.animated.InterpolationAnimatedNode: int findRangeIndex(double,double[])
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: AshmemMemoryChunk(int)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers(com.facebook.common.util.TriState)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
okio.AsyncTimeout: okio.AsyncTimeout access$getHead$cp()
androidx.appcompat.view.menu.MenuDialogHelper: void show(android.os.IBinder)
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void run()
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetDialog: BottomSheetDialog(android.content.Context,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()
com.swmansion.rnscreens.ScreenStackFragment: void onContainerUpdate()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(boolean)
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String toString()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: boolean ensureAccessibleTouchTarget(int)
com.facebook.drawee.controller.AbstractDraweeController: void setUpLoggingListener()
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.google.android.material.chip.ChipDrawable: android.graphics.ColorFilter getColorFilter()
com.google.android.material.shape.ShapePath: void reset(float,float)
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket: OOMSoftReferenceBucket(int,int,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void getOutline(android.graphics.Outline)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasure(int,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.MenuPopupHelper$1: void onDismiss()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
androidx.core.provider.CallbackWithHandler$2: void run()
com.facebook.imagepipeline.producers.FetchState: int getOnNewResultStatusFlags()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.app.AppCompatDelegate: void markStopped(androidx.appcompat.app.AppCompatDelegate)
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.material.appbar.AppBarLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomsheet.BottomSheetDialog: android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: AbstractDraweeControllerBuilder$CacheLevel(java.lang.String,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String getEventName()
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void reset()
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: void execute(android.text.SpannableStringBuilder,int)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.internal.TextDrawableHelper: void setTextWidthDirty(boolean)
com.google.android.material.textfield.CutoutDrawable: void saveCanvasLayer(android.graphics.Canvas)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.HttpUrl$Companion: void toQueryString$okhttp(java.util.List,java.lang.StringBuilder)
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.SvgView: void onDraw(android.graphics.Canvas)
com.google.android.material.internal.StateListAnimator: void jumpToCurrentState()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: CacheErrorLogger$CacheErrorCategory(java.lang.String,int)
com.facebook.react.CoreModulesPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: GenericDraweeHierarchyBuilder(android.content.res.Resources)
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getBubblingEventTypeConstants()
com.facebook.imagepipeline.memory.BitmapCounterProvider: int getMaxSizeHardCap()
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.swmansion.rnscreens.ScreenStack$Companion: boolean access$needsDrawReordering(com.swmansion.rnscreens.ScreenStack$Companion,com.swmansion.rnscreens.ScreenStackFragment)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
com.google.android.material.card.MaterialCardView: void onAttachedToWindow()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getChildAt(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(android.view.View,int)
androidx.core.widget.AutoScrollHelper: void requestStop()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
com.facebook.react.views.imagehelper.ImageSource: java.lang.String getSource()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NativeModuleRegistry processPackages(com.facebook.react.bridge.ReactApplicationContext,java.util.List,boolean)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.facebook.react.views.scroll.ReactScrollView: void onMeasure(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onLayout(boolean,int,int,int,int)
com.swmansion.rnscreens.events.ScreenDisappearEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.drawee.drawable.FadeDrawable: void setTransitionDuration(int)
com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
com.facebook.cache.common.MultiCacheKey: java.lang.String toString()
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromJS(com.facebook.react.views.text.ReactTextUpdate)
androidx.transition.FragmentTransitionSupport$2: void onTransitionResume(androidx.transition.Transition)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: int getNextScanNumberToDecode(int)
androidx.appcompat.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: void run()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.common.ClearableSynchronizedPool: void clear()
com.facebook.react.modules.blob.BlobModule$4: com.facebook.react.bridge.WritableMap toResponseData(okhttp3.ResponseBody)
bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addEventToEventsToDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.modules.network.ProgressResponseBody$1: long read(okio.Buffer,long)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: java.lang.Object getResult()
kotlin.collections.EmptyIterator: boolean hasPrevious()
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
androidx.appcompat.text.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getThis()
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.soloader.SoLoader$1: SoLoader$1(boolean,java.lang.String,java.lang.String,java.lang.Runtime,java.lang.reflect.Method)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.fragment.app.FragmentManager$2: void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray access$000(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController)
com.facebook.imagepipeline.memory.BucketMap: java.lang.Object removeFromEnd()
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
com.facebook.react.devsupport.DisabledDevSupportManager: void loadSplitBundleFromServer(java.lang.String,com.facebook.react.devsupport.interfaces.DevSplitBundleCallback)
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar)
androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(android.view.View,java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean shouldDodge(android.view.View,int)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: LocalVideoThumbnailProducer$1(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
androidx.transition.ChangeBounds$8: ChangeBounds$8(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: AbstractProducerToDataSourceAdapter(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener2)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
com.google.android.material.transformation.FabTransformationBehavior$2: FabTransformationBehavior$2(com.google.android.material.transformation.FabTransformationBehavior,android.view.View)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout measureSpannedText(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig get()
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DiskCacheWriteProducer newDiskCacheWriteProducer(com.facebook.imagepipeline.producers.Producer)
okhttp3.ResponseBody$Companion$asResponseBody$1: ResponseBody$Companion$asResponseBody$1(okio.BufferedSource,okhttp3.MediaType,long)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task get(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean)
androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8: DropdownMenuEndIconDelegate$8(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab()
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
okhttp3.internal.ws.MessageDeflater: void close()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(android.view.View,java.lang.String)
okhttp3.internal.http2.Settings: Settings()
com.facebook.react.modules.network.NetworkingModule$2: NetworkingModule$2(com.facebook.react.modules.network.NetworkingModule,int,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,java.lang.String,boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.drawee.drawable.ArrayDrawable: boolean getPadding(android.graphics.Rect)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig access$1500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JSBundleLoader getJsBundleLoader()
com.facebook.cache.common.MultiCacheKey: java.util.List getCacheKeys()
okio.RealBufferedSource: java.lang.String readString(java.nio.charset.Charset)
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2: DiskCacheReadProducer$2(com.facebook.imagepipeline.producers.DiskCacheReadProducer,java.util.concurrent.atomic.AtomicBoolean)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.horcrux.svg.PatternView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformWidth(int,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getItemViewType(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetNestedScroll(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void clearPrefetchPositions()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onRelease(java.lang.String,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.facebook.react.uimanager.NoSuchNativeViewException: NoSuchNativeViewException(java.lang.String)
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okio.Source)
com.google.android.material.chip.ChipDrawable: boolean hasState(int[],int)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildStart(android.view.View)
androidx.cardview.widget.RoundRectDrawableWithShadow: float getCornerRadius()
androidx.recyclerview.widget.AdapterHelper$UpdateOp: boolean equals(java.lang.Object)
okio.Buffer: void skip(long)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.facebook.imagepipeline.memory.BasePool: BasePool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
okio.Buffer: int read(java.nio.ByteBuffer)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: byte read(int)
com.google.android.material.datepicker.MaterialDatePicker: int getDialogPickerHeight(android.content.Context)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeTextType()
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: void execute(android.text.Spannable,int)
com.horcrux.svg.VirtualView: void invalidate()
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
com.facebook.imageformat.DefaultImageFormatChecker: com.facebook.imageformat.ImageFormat determineFormat(byte[],int)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.lang.String toPath(java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)
com.facebook.react.jstasks.HeadlessJsTaskContext: void access$000(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int)
androidx.transition.TransitionManager$MultiListener$1: TransitionManager$MultiListener$1(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap)
com.google.android.material.internal.CollapsingTextHelper: void interpolateBounds(float)
com.google.android.material.chip.ChipDrawable: void setChipEndPadding(float)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.ReactContext getReactContext(android.view.View)
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
com.horcrux.svg.UseView: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.uimanager.ThemedReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean startNextDataSource()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void close()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)
androidx.recyclerview.widget.ViewInfoStore: void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] values()
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaValue valueFromLong(long)
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()
androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
okhttp3.internal.http2.Http2Connection: void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.imagepipeline.cache.DefaultCacheKeyFactory getInstance()
com.facebook.react.uimanager.ThemedReactContext: boolean isBridgeless()
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawableStateChanged()
com.facebook.imagepipeline.core.CloseableReferenceFactory: CloseableReferenceFactory(com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.shape.AdjustedCornerSize: AdjustedCornerSize(float,com.google.android.material.shape.CornerSize)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
androidx.fragment.app.FragmentContainerView: void removeViews(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer()
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: void onNewResultImpl(java.lang.Object,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeSurfaceColor(int)
okhttp3.internal.platform.Platform$Companion: java.util.List alpnProtocolNames(java.util.List)
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
okhttp3.Authenticator$Companion: Authenticator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.yoga.YogaNodeJNIBase: void setBorder(com.facebook.yoga.YogaEdge,float)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: boolean endsWithEOI(com.facebook.common.references.CloseableReference,int)
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
com.horcrux.svg.RectView: void setRy(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
com.facebook.react.ReactPackageHelper$1: ReactPackageHelper$1(java.util.List)
androidx.collection.SimpleArrayMap: int hashCode()
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: boolean loadLibrary(java.lang.String,int)
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setName(android.view.View,java.lang.String)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
okio.internal.BufferKt: int selectPrefix$default(okio.Buffer,okio.Options,boolean,int,java.lang.Object)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void execute(java.lang.Runnable)
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
com.facebook.soloader.ApkSoSource$ApkUnpacker: ApkSoSource$ApkUnpacker(com.facebook.soloader.ApkSoSource,com.facebook.soloader.ExtractFromZipSoSource)
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.horcrux.svg.RenderableViewManager$MaskManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: ViewManagersPropertyCache$BoxedBooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.DrawableParent getParentDrawableAtIndex(int)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getViewFragment(android.view.View)
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
okhttp3.internal.connection.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.internal.connection.RealCall,okhttp3.Callback)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.OkHttpClient$Builder: java.util.List getProtocols$okhttp()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
com.swmansion.rnscreens.ScreenContainer: void onLayout(boolean,int,int,int,int)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
com.facebook.imageutils.ImageMetaData: android.graphics.ColorSpace getColorSpace()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: int read(int,byte[],int,int)
androidx.transition.TransitionSet: java.lang.Object clone()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: boolean access$1000(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer)
androidx.recyclerview.widget.ChildHelper: void hideViewInternal(android.view.View)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getLeftEdge()
com.google.android.material.textfield.TextInputLayout: int calculateLabelMarginTop()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.react.views.picker.ReactPicker: int getMode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
kotlin.text.Regex$Companion: Regex$Companion()
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: void execute()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.facebook.react.animated.NativeAnimatedModule$2: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
com.facebook.react.jscexecutor.JSCExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.common.references.CloseableReference$2: boolean requiresStacktrace()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: DialogModule$AlertFragmentListener(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willCreateInTime(int,long,long)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.google.android.material.animation.MotionTiming: long getDuration()
androidx.fragment.app.FragmentStateManager: void activityCreated()
okhttp3.Request: java.util.List headers(java.lang.String)
okhttp3.RequestBody: boolean isOneShot()
androidx.recyclerview.widget.RecyclerView$ViewFlinger: RecyclerView$ViewFlinger(androidx.recyclerview.widget.RecyclerView)
com.facebook.datasource.BaseDataSubscriber: void onNewResult(com.facebook.datasource.DataSource)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean close()
androidx.appcompat.widget.SwitchCompat: void cancelPositionAnimator()
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
com.horcrux.svg.VirtualViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(java.lang.Object[])
androidx.appcompat.widget.AppCompatSpinner$1: boolean onForwardingStarted()
com.horcrux.svg.TSpanView: void invalidate()
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
com.google.android.material.chip.ChipDrawable: float getChipIconSize()
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout$2: TextInputLayout$2(com.google.android.material.textfield.TextInputLayout)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
androidx.fragment.app.Fragment: void onStop()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.imagepipeline.decoder.DecodeException: DecodeException(java.lang.String,com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
okio.internal.ByteStringKt: char[] getHEX_DIGIT_CHARS()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.StandardMenuPopup$1: void onGlobalLayout()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.FontData$AbsoluteFontWeight: com.horcrux.svg.TextProperties$FontWeight nearestFontWeight(int)
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: DebugControllerOverlayDrawable()
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.ReactInstanceManager: void access$000(com.facebook.react.ReactInstanceManager)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: Http1ExchangeCodec$FixedLengthSource(okhttp3.internal.http1.Http1ExchangeCodec,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
com.facebook.react.animated.AnimationDriver: AnimationDriver()
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List,double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.toast.ToastModule$2: void run()
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)
com.google.android.material.shape.ShapePath$PathArcOperation: float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: java.lang.Object getResult()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
com.horcrux.svg.VirtualView: void clearParentCache()
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToVerifiedAncestor(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int[])
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMask(android.view.View,java.lang.String)
com.facebook.imageutils.WebpUtil: int read3Bytes(java.io.InputStream)
androidx.appcompat.widget.TooltipCompatHandler: void onViewDetachedFromWindow(android.view.View)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
okhttp3.internal.connection.Exchange: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams()
okhttp3.internal.platform.Platform: void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object)
androidx.cardview.widget.RoundRectDrawable: void setColorFilter(android.graphics.ColorFilter)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
com.google.android.material.animation.ArgbEvaluatorCompat: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: boolean supportsImageType(com.facebook.imagepipeline.image.CloseableImage)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: void getRadii(android.graphics.Bitmap,float[],float[])
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object getFirstKey()
androidx.customview.widget.ViewDragHelper: float clampMag(float,float,float)
com.facebook.common.internal.ByteStreams: int read(java.io.InputStream,byte[],int,int)
okhttp3.Response$Builder: okhttp3.Response build()
com.facebook.react.bridge.queue.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap)
androidx.transition.TransitionSet: void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getOffsetForDynamicData()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
androidx.transition.TransitionSet$TransitionSetListener: void onTransitionStart(androidx.transition.Transition)
com.facebook.react.ReactRootView: void runApplication()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)
androidx.fragment.app.FragmentActivity: void onStart()
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.ViewInfoStore: void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.shape.ShapeAppearancePathProvider: float getEdgeCenterForIndex(android.graphics.RectF,int)
com.facebook.datasource.AbstractDataSource: boolean setResult(java.lang.Object,boolean,java.util.Map)
com.facebook.imagepipeline.core.NativeCodeSetup: boolean getUseNativeCode()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Iterable calculateLayoutOnChildren()
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
com.facebook.drawee.drawable.ArrayDrawable: int getIntrinsicWidth()
androidx.appcompat.app.AppCompatDelegate: void markStarted(androidx.appcompat.app.AppCompatDelegate)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: UIViewOperationQueue$MeasureInWindowOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationStart(android.view.animation.Animation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator access$902(com.facebook.react.views.scroll.ReactScrollView,android.animation.ValueAnimator)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getBackground()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: void execute()
com.facebook.react.views.scroll.ReactScrollView: void fling(int)
kotlin.collections.IntIterator: java.lang.Integer next()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.MenuDialogHelper: MenuDialogHelper(androidx.appcompat.view.menu.MenuBuilder)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)
com.facebook.soloader.UnpackingSoSource: void regenerate(byte,com.facebook.soloader.UnpackingSoSource$DsoManifest,com.facebook.soloader.UnpackingSoSource$InputDsoIterator)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: ViewManagerPropertyUpdater$FallbackShadowNodeSetter(java.lang.Class)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternwidth(android.view.View,java.lang.String)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.react.views.image.ReactImageView: void cornerRadii(float[])
com.horcrux.svg.MarkerView: void setRefX(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$3: WindowDecorActionBar$3(androidx.appcompat.app.WindowDecorActionBar)
com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.recyclerview.widget.LinearLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
okhttp3.Headers: Headers(java.lang.String[])
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabCradleRoundedCornerRadius()
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String)
com.horcrux.svg.MaskView: void saveDefinition()
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getHeight()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1700(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.storage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Object[])
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.yoga.YogaNodeJNIBase: void setHeight(float)
kotlin.collections.AbstractList$Companion: AbstractList$Companion()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.facebook.cache.disk.DiskCacheConfig: java.lang.String getBaseDirectoryName()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: ViewGroupDrawingOrderHelper$1(com.facebook.react.uimanager.ViewGroupDrawingOrderHelper)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.facebook.drawee.drawable.ArrayDrawable: void setDither(boolean)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
bolts.Task$14: Task$14(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task)
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
com.facebook.imagepipeline.producers.WebpTranscodeProducer: void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
com.google.android.material.chip.ChipDrawable: void setTextStartPaddingResource(int)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger getWebpErrorLogger()
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.WritableNativeMap)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: RequestExecutor$DefaultThreadFactory$ProcessPriorityThread(java.lang.Runnable,java.lang.String,int)
com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.Producer access$800(com.facebook.imagepipeline.producers.MultiplexProducer)
okio.Buffer: long read(okio.Buffer,long)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1(kotlin.sequences.Sequence)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier obtainDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String)
com.facebook.react.CoreModulesPackage: void endProcessPackage()
com.google.android.material.transformation.FabTransformationBehavior: float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float)
androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)
com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException: ImageRequestBuilder$BuilderException(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.chip.ChipDrawable: void setAlpha(int)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean didEndFrameIdle(long,long)
com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLeft()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver getBitmapMemoryCacheEntryStateObserver()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetJSResponder(int,int,boolean)
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.common.time.Clock access$400(com.facebook.cache.disk.DefaultDiskStorage)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported()
com.facebook.imagepipeline.memory.DummyBitmapPool: android.graphics.Bitmap get(int)
okio.SegmentedByteString: byte[][] getSegments$okio()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipRule(android.view.View,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
androidx.appcompat.view.menu.ActionMenuItem: void applyIconTint()
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.horcrux.svg.UseView: void setHeight(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: BranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer)
com.google.android.material.checkbox.MaterialCheckBox: MaterialCheckBox(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()
com.facebook.imagepipeline.memory.PoolConfig: PoolConfig(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.facebook.react.views.text.ReactTextShadowNode$1: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: android.graphics.drawable.Drawable createDrawable(com.facebook.imagepipeline.image.CloseableImage)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
okio.RealBufferedSource: long indexOf(byte)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.CookieJar$Companion: CookieJar$Companion()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
com.google.android.material.shape.MaterialShapeDrawable: void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)
okio.Segment: okio.Segment push(okio.Segment)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.horcrux.svg.SVGLength: com.horcrux.svg.SVGLength from(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule()
com.google.android.material.shape.AbsoluteCornerSize: AbsoluteCornerSize(float)
com.facebook.react.modules.network.ForwardingCookieHandler: ForwardingCookieHandler(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideUp(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.IndicatorViewController: IndicatorViewController(com.google.android.material.textfield.TextInputLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void maybeUpdate()
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_PROTOCOLS$okhttp()
androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] cleanupAutoSizePresetSizes(int[])
androidx.transition.TransitionManager$MultiListener$1: void onTransitionEnd(androidx.transition.Transition)
com.google.android.material.shape.MaterialShapeDrawable: int getOpacity()
androidx.fragment.app.Fragment: void onPause()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.TSpanView: android.text.StaticLayout getStaticLayout(android.text.TextPaint,android.text.Layout$Alignment,boolean,android.text.SpannableString,int)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.swmansion.rnscreens.ScreenStackHeaderConfig: androidx.appcompat.widget.Toolbar getToolbar()
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.material.datepicker.MonthAdapter: int positionToDay(int)
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
com.facebook.imagepipeline.core.ImagePipeline: void clearDiskCaches()
com.google.android.material.chip.ChipDrawable: void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: RecyclerView$AdapterDataObservable()
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpHeaderWithAlpha(byte[],int)
okio.Segment$Companion: Segment$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: long runOnce()
kotlin.Pair: int hashCode()
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.animated.AnimatedNode getNodeById(int)
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
androidx.transition.Transition: androidx.transition.Transition setStartDelay(long)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule resolveModule(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)
com.google.android.material.ripple.RippleDrawableCompat: void setAlpha(int)
androidx.swiperefreshlayout.widget.CircleImageView: void onAnimationStart()
com.facebook.imagepipeline.producers.NetworkFetchProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)
androidx.appcompat.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
com.facebook.imagepipeline.cache.StagingArea: void logStats()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.google.android.material.bottomsheet.BottomSheetBehavior: void reset()
androidx.appcompat.widget.AppCompatTextHelper: void setTextSizeInternal(int,float)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer: BitmapMemoryCacheGetProducer(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.cardview.widget.CardView: void setRadius(float)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException: MemoryPooledByteBufferOutputStream$InvalidStreamException()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setOpacity(android.view.View,float)
androidx.fragment.app.BackStackRecord: void executeOps()
com.facebook.react.views.textinput.ReactEditText: void commitStagedInputType()
androidx.drawerlayout.widget.DrawerLayout: boolean hasPeekingDrawer()
com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])
androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
okhttp3.Handshake$Companion$get$1: java.util.List invoke()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeightPercent(float)
com.facebook.yoga.YogaJustify: YogaJustify(java.lang.String,int,int)
com.facebook.react.views.progressbar.ProgressBarShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.google.android.material.textfield.TextInputLayout$SavedState: TextInputLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments build()
androidx.fragment.app.FragmentStateManager: void destroy(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManagerViewModel)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setPositionY(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forLocalStorageWrite()
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: DebugOverlayImageOriginListener()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6: DropdownMenuEndIconDelegate$6(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollVertically()
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.swmansion.rnscreens.ScreenFragment: android.view.View recycleView(android.view.View)
androidx.fragment.app.FragmentTransitionImpl$3: void run()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
androidx.core.widget.NestedScrollView: void stopNestedScroll()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver access$500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: ScrollingTabContainerView$TabAdapter(androidx.appcompat.widget.ScrollingTabContainerView)
com.horcrux.svg.RectView: void setRx(java.lang.String)
com.facebook.react.views.scroll.ScrollEvent: short getCoalescingKey()
androidx.fragment.app.FragmentManager: void addBackStackState(androidx.fragment.app.BackStackRecord)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void releaseClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.drawee.drawable.ForwardingDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
com.horcrux.svg.TSpanView: TSpanView(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableView: int hitTest(float[])
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
com.google.android.material.internal.CollapsingTextHelper: int blendColors(int,int,float)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: void onCancellationImpl()
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[])
com.facebook.react.views.textinput.ReactEditText: boolean canUpdateWithEventCount(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.appcompat.widget.TooltipCompatHandler: TooltipCompatHandler(android.view.View,java.lang.CharSequence)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet,int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setupAnimators()
com.facebook.cache.disk.DiskCacheConfig: long getDefaultSizeLimit()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
androidx.transition.ViewGroupOverlayApi18: void add(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: boolean isSecureText()
androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)
com.facebook.react.uimanager.ShadowNodeRegistry: ShadowNodeRegistry()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean isLayoutOnlyAndCollapsable(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
com.facebook.cache.common.NoOpCacheEventListener: void onWriteException(com.facebook.cache.common.CacheEvent)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okio.Buffer: long writeAll(okio.Source)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
com.facebook.react.animated.PropsAnimatedNode: void disconnectFromView(int)
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.react.views.text.ReactTextShadowNode$1: ReactTextShadowNode$1(com.facebook.react.views.text.ReactTextShadowNode)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.widget.AutoCompleteTextView access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.EditText)
androidx.fragment.app.FragmentManager: java.lang.String toString()
com.facebook.react.viewmanagers.SliderManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.recyclerview.widget.GridLayoutManager: int getSpanCount()
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Normalize(double[],double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,java.lang.String)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1: SwipeRefreshLayout$1(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
okio.Buffer: short readShort()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.horcrux.svg.GroupView: GroupView(com.facebook.react.bridge.ReactContext)
com.facebook.systrace.SystraceMessage: com.facebook.systrace.SystraceMessage$Builder beginSection(long,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.modules.storage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.cache.disk.DiskStorageCache: void clearAll()
androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getPostprocessorSequence(com.facebook.imagepipeline.producers.Producer)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void onNewResultImpl(java.lang.Object,int,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imageutils.TiffUtil: TiffUtil()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)
com.horcrux.svg.LineView: void setX1(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
com.facebook.react.views.text.ReactTextShadowNode: void initMeasureFunction()
okhttp3.CipherSuite: java.lang.String toString()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
androidx.appcompat.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.google.android.material.datepicker.CalendarConstraints$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: ImageRequest$RequestLevel(java.lang.String,int,int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener,java.lang.String)
com.facebook.imagepipeline.producers.WebpTranscodeProducer: WebpTranscodeProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer)
com.google.android.material.appbar.AppBarLayout: void onLayout(boolean,int,int,int,int)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleAspectRatio(float)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.imagepipeline.memory.GenericByteArrayPool: int getBucketedSizeForValue(java.lang.Object)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.common.executors.HandlerExecutorServiceImpl: void execute(java.lang.Runnable)
okhttp3.internal.http2.Http2Connection: boolean getClient$okhttp()
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
com.facebook.react.ReactActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.drawee.backends.pipeline.PipelineDraweeController internalCreateController(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.transition.TransitionSet: androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$100(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.uimanager.BaseViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.Dns$Companion: Dns$Companion()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.recyclerview.widget.RecyclerView$State: RecyclerView$State()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.bridge.ReactContext access$200(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputEvent: java.lang.String getEventName()
com.facebook.react.views.picker.ReactPickerManager: void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String)
androidx.appcompat.view.menu.MenuPopup: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void submitPostprocessing()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.imagepipeline.memory.FlexByteArrayPool$1: void release(byte[])
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.datepicker.MaterialCalendar$1: MaterialCalendar$1(com.google.android.material.datepicker.MaterialCalendar)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.imagepipeline.producers.ExperimentalThreadHandoffProducerQueueImpl: ExperimentalThreadHandoffProducerQueueImpl(java.util.concurrent.Executor)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF getBoundsAsRectF()
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
com.google.android.material.chip.ChipDrawable: float getCloseIconEndPadding()
com.facebook.react.uimanager.ShadowNodeRegistry: void addNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType toScaleType(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String toString()
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isProgressiveRenderingEnabled()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeNotifyExclusiveEntryRemoval(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.appcompat.widget.AppCompatDrawableManager: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.horcrux.svg.SymbolView: void setAlign(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float)
androidx.fragment.app.Fragment: void onDestroy()
com.facebook.imagepipeline.memory.PoolConfig: boolean isRegisterLruBitmapPoolAsMemoryTrimmable()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.imagepipeline.producers.BaseProducerContext: BaseProducerContext(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int clampViewPositionHorizontal(android.view.View,int,int)
com.facebook.react.views.textinput.ReactEditText: void onFinishTemporaryDetach()
okhttp3.HttpUrl$Companion: void toPathString$okhttp(java.util.List,java.lang.StringBuilder)
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker getCloseableReferenceLeakTracker()
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setResponsible(android.view.View,boolean)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.appcompat.view.menu.StandardMenuPopup: void setGravity(int)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object)
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipStrokeColor()
com.google.android.material.chip.Chip: void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)
com.google.android.material.datepicker.YearGridAdapter: com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: void run(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.transition.Transition: void captureValues(android.view.ViewGroup,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.facebook.imagepipeline.image.CloseableStaticBitmap: android.graphics.Bitmap getUnderlyingBitmap()
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
com.horcrux.svg.DefsView: DefsView(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void buildSpannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,android.text.SpannableStringBuilder,java.util.List,com.facebook.react.views.text.TextAttributes,boolean,java.util.Map,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.datepicker.MonthsPagerAdapter: int getItemCount()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener getOnSelectListener()
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isDiskCacheEnabled()
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: void release(android.graphics.Bitmap)
com.facebook.imagepipeline.cache.BufferedDiskCache$6: BufferedDiskCache$6(com.facebook.imagepipeline.cache.BufferedDiskCache,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)
androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
okhttp3.internal.HostnamesKt: java.lang.String inet6AddressToAscii(byte[])
okhttp3.internal.ws.WebSocketExtensions: boolean equals(java.lang.Object)
com.facebook.react.touch.JSResponderHandler: void setJSResponder(int,android.view.ViewParent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
com.facebook.react.shell.MainReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
androidx.recyclerview.widget.DefaultItemAnimator$7: DefaultItemAnimator$7(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence[] getTextArray(int)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.common.streams.LimitedInputStream: void reset()
androidx.lifecycle.SavedStateHandleController$OnRecreation: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
com.google.android.material.ripple.RippleDrawableCompat: void setTint(int)
androidx.fragment.app.FragmentManager: void dispatchDestroy()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
com.swmansion.rnscreens.events.StackFinishTransitioningEvent: short getCoalescingKey()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.horcrux.svg.EllipseView: void setRy(java.lang.String)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,okio.ByteString)
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
com.google.android.material.datepicker.MaterialDatePicker: void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)
com.google.android.material.datepicker.DateStrings: java.lang.String getMonthDayOfWeekDay(long)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getModuleName()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.android.material.chip.ChipDrawable: void updateCompatRippleColor()
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] $values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)
com.facebook.drawee.generic.WrappingUtils: com.facebook.drawee.drawable.DrawableParent findDrawableParentForLeaf(com.facebook.drawee.drawable.DrawableParent)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.horcrux.svg.ImageView: void tryRenderFromBitmapCache(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.imagepipeline.request.ImageRequest,android.graphics.Canvas,android.graphics.Paint,float)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
com.google.android.material.chip.Chip: boolean dispatchHoverEvent(android.view.MotionEvent)
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long runOnce()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void close()
com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.cache.disk.FileCache get(com.facebook.cache.disk.DiskCacheConfig)
okio.Segment: okio.Segment pop()
com.facebook.react.views.text.TextLayoutManager: android.text.Layout createLayout(android.text.Spannable,android.text.BoringLayout$Metrics,float,com.facebook.yoga.YogaMeasureMode,boolean,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
kotlin.ranges.IntRange: java.lang.Integer getStart()
com.facebook.imagepipeline.memory.Bucket: java.lang.Object pop()
androidx.transition.TransitionSet: void runAnimators()
com.facebook.datasource.AbstractDataSource: boolean close()
androidx.appcompat.view.menu.StandardMenuPopup: void setShowTitle(boolean)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.BytesRange getBytesRange()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.google.android.material.shape.ShapePath$PathArcOperation: float getRight()
com.facebook.react.jstasks.HeadlessJsTaskContext$3: void run()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
bolts.BoltsExecutors: java.util.concurrent.Executor immediate()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.app.AppCompatDelegateImpl: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
com.facebook.imagepipeline.cache.StagingArea: StagingArea()
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void setClosed(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1: void run()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updateIsIntermediateResultExpected()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
kotlin.collections.AbstractCollection: boolean isEmpty()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
com.google.android.material.appbar.AppBarLayout: void onOffsetChanged(int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer access$3700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.common.ResizeOptions: ResizeOptions(int,int,float,float)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.google.android.material.animation.MotionSpec: boolean hasTiming(java.lang.String)
com.horcrux.svg.PatternView: void setMinY(float)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.events.EventDispatcherImpl: void clearEventsToDispatch()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
androidx.fragment.app.FragmentManager: void handleOnBackPressed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
okio.-Util: short reverseBytes(short)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeBuildAndSetRetryManager(com.facebook.drawee.controller.AbstractDraweeController)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipRule(android.view.View,int)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
com.facebook.react.ReactActivityDelegate$2: void invoke(java.lang.Object[])
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: ImagePipelineConfig$DefaultImageRequestConfig(com.facebook.imagepipeline.core.ImagePipelineConfig$1)
com.horcrux.svg.SvgView: void onSizeChanged(int,int,int,int)
androidx.collection.LongSparseArray: void clear()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.SmoothCalendarLayoutManager: SmoothCalendarLayoutManager(android.content.Context,int,boolean)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getRightEdge()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
androidx.lifecycle.SavedStateHandleController$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.coordinatorlayout.widget.CoordinatorLayout: void prepareChildren()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
androidx.core.view.ViewCompat: float getZ(android.view.View)
com.facebook.drawee.controller.ForwardingControllerListener: void onFailure(java.lang.String,java.lang.Throwable)
com.facebook.react.views.textinput.ReactEditText: ReactEditText(android.content.Context)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.horcrux.svg.SvgView: void setMinX(float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: void execute()
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
okhttp3.Headers: java.util.List values(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory: SimpleImageTranscoderFactory(int)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.horcrux.svg.SvgView: void clearChildCache()
com.google.android.material.chip.ChipDrawable: void setChipEndPaddingResource(int)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: FloatingActionButtonImpl(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)
com.facebook.imagepipeline.cache.BoundedLinkedHashSet: boolean add(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionPause(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
okhttp3.Dns$Companion$DnsSystem: java.util.List lookup(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.Movie getMovie(int)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.recyclerview.widget.ViewInfoStore: void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.transition.TransitionSet$1: TransitionSet$1(androidx.transition.TransitionSet,androidx.transition.Transition)
com.google.android.material.internal.CheckableImageButton$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.ImageView: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable)
com.google.android.material.datepicker.YearGridAdapter: void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: boolean isSupported()
androidx.lifecycle.LifecycleRegistry: void sync()
com.facebook.react.fabric.Binding: Binding()
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
androidx.recyclerview.widget.DefaultItemAnimator$4: void onAnimationStart(android.animation.Animator)
com.google.android.material.bottomappbar.BottomAppBar$7: void onAnimationCancel(android.animation.Animator)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.horcrux.svg.EllipseView: void setRy(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIImplementation: void setJSResponder(int,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMask(android.view.View,java.lang.String)
androidx.recyclerview.widget.DefaultItemAnimator: void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: NativeAnimatedModule$UIThreadOperation(com.facebook.react.animated.NativeAnimatedModule)
androidx.transition.Transition: void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
com.facebook.common.executors.UiThreadImmediateExecutorService: UiThreadImmediateExecutorService()
com.facebook.react.animated.NativeAnimatedModule$17: NativeAnimatedModule$17(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.facebook.drawee.drawable.FadeDrawable: void endBatchMode()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType contentType()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: DropDownListView$ResolveHoverRunnable(androidx.appcompat.widget.DropDownListView)
com.google.android.material.chip.ChipDrawable: android.text.TextUtils$TruncateAt getEllipsize()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.bottomsheet.BottomSheetBehavior: void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int)
com.facebook.react.views.slider.ReactSliderManager$1: void onProgressChanged(android.widget.SeekBar,int,boolean)
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
com.facebook.react.ReactActivity: void onResume()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.TintTypedArray: TintTypedArray(android.content.Context,android.content.res.TypedArray)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.react.modules.core.JavaTimerManager: android.util.SparseArray access$800(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: EncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.cache.CacheKeyFactory,boolean,com.facebook.imagepipeline.producers.Producer)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.facebook.drawee.drawable.RoundedDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
androidx.fragment.app.FragmentState$1: FragmentState$1()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double readDoubleValue(int)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
com.google.android.material.shape.ShapeAppearancePathProvider: ShapeAppearancePathProvider()
com.horcrux.svg.GlyphContext: double nextRotation()
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
okio.Buffer: java.lang.String readUtf8()
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void resetPointsTimestamps()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
androidx.collection.ArraySet: boolean isEmpty()
com.horcrux.svg.RectView: void setHeight(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Response: okhttp3.Response priorResponse()
androidx.appcompat.widget.TintInfo: TintInfo()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.WebSocketExtensions: int hashCode()
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.DateSelector getDateSelector()
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: int calculateKind(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.Object findGeneratedSetter(java.lang.Class)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
androidx.recyclerview.widget.DefaultItemAnimator: void cancelAll(java.util.List)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)
com.facebook.drawee.drawable.RoundedDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)
com.facebook.drawee.drawable.RoundedNinePatchDrawable: void draw(android.graphics.Canvas)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int)
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)
androidx.recyclerview.widget.LinearSnapHelper: int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object[] newArray(int)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinecap(android.view.View,int)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
androidx.core.os.CancellationSignal: void cancel()
com.facebook.react.views.textinput.ReactEditText: boolean access$000(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.textfield.ClearTextEndIconDelegate: void initialize()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
com.horcrux.svg.PathElement: PathElement(com.horcrux.svg.ElementType,com.horcrux.svg.Point[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.soloader.DirectorySoSource: int loadLibraryFrom(java.lang.String,int,java.io.File,android.os.StrictMode$ThreadPolicy)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.coordinatorlayout.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void resolveShouldLayoutReverse()
com.facebook.imagepipeline.image.EncodedImage: void parseMetaData()
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
okhttp3.internal.concurrent.TaskQueue: void setCancelActiveTask$okhttp(boolean)
com.horcrux.svg.MarkerView: void setMinY(float)
com.facebook.systrace.SystraceMessage$NoopBuilder: com.facebook.systrace.SystraceMessage$Builder arg(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setResponsible(android.view.View,boolean)
com.facebook.imageutils.WebpUtil: int get2BytesAsInt(java.io.InputStream)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int)
com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber: BaseBitmapDataSubscriber()
androidx.core.provider.FontRequestWorker$2: void accept(java.lang.Object)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getFailureImage()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean isSupported()
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
com.facebook.yoga.YogaNodeJNIBase: void setMargin(com.facebook.yoga.YogaEdge,float)
okio.Buffer: okio.BufferedSink write(okio.ByteString)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()
androidx.appcompat.view.menu.MenuPopup: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.datepicker.MaterialDatePicker: void startPickerFragment()
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
com.facebook.react.PackageList: java.util.ArrayList getPackages()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void access$200(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource)
com.facebook.common.util.HashCodeUtil: int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: boolean onMenuItemClick(android.view.MenuItem)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.transformation.FabTransformationBehavior$3: void onAnimationStart(android.animation.Animator)
com.facebook.react.views.scroll.ReactScrollView$1: void run()
androidx.transition.Transition: java.util.List getTargetTypes()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeOpacity(android.view.View,float)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setUsewidth(android.view.View,java.lang.String)
androidx.appcompat.view.WindowCallbackWrapper: void onContentChanged()
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory()
androidx.transition.Transition$2: Transition$2(androidx.transition.Transition,androidx.collection.ArrayMap)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
bolts.Task$10: Task$10(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.swmansion.rnscreens.ScreenContainer$mFrameCallback$1: ScreenContainer$mFrameCallback$1(com.swmansion.rnscreens.ScreenContainer)
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetViewWithPointerEvents(float[],android.view.View)
com.google.android.material.shape.ShapePath$PathArcOperation: float getTop()
com.google.android.material.appbar.AppBarLayout$Behavior: boolean setTopAndBottomOffset(int)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: java.util.ArrayList trimExclusivelyOwnedEntries(int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(android.view.View,java.lang.String)
com.google.android.material.internal.CollapsingTextHelper: boolean calculateIsRtl(java.lang.CharSequence)
com.facebook.drawee.drawable.FadeDrawable: FadeDrawable(android.graphics.drawable.Drawable[],boolean,int)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: android.graphics.Rect access$500()
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.google.android.material.datepicker.MaterialTextInputPicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.views.text.ReactClickableSpan: void updateDrawState(android.text.TextPaint)
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isMeasureDefined()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall clone()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)
com.facebook.common.executors.StatefulRunnable: StatefulRunnable()
com.facebook.react.common.LongArray: int size()
androidx.transition.ViewUtils: float getTransitionAlpha(android.view.View)
com.google.android.material.datepicker.PickerFragment: PickerFragment()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onDetachedFromWindow()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: boolean access$000(bolts.Task)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
androidx.recyclerview.widget.GridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okhttp3.internal.cache.DiskLruCache: void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int)
com.facebook.imagepipeline.producers.BaseProducerContext: boolean isPrefetch()
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: boolean onForwardingStarted()
com.facebook.drawee.controller.BaseControllerListener: void onFailure(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
androidx.appcompat.widget.AppCompatImageHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: DefaultCacheKeyFactory()
com.horcrux.svg.SvgViewModule$1$2: void run()
com.facebook.imagepipeline.memory.GenericByteArrayPool: int getBucketedSizeForValue(byte[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.cache.common.CacheKey,boolean,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
kotlin.collections.ArrayAsCollection: boolean retainAll(java.util.Collection)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
com.facebook.systrace.SystraceMessage$Builder: SystraceMessage$Builder()
com.google.android.material.chip.ChipDrawable: boolean canShowCheckedIcon()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils: LocalExifThumbnailProducer$Api24Utils(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeOpacity(android.view.View,float)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges valueOf(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()
okhttp3.CertificatePinner$Pin: java.lang.String toString()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void sendFinalResultToConsumer(com.facebook.common.memory.PooledByteBufferOutputStream)
com.swmansion.rnscreens.ScreenContainer: void removeView(android.view.View)
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue(com.facebook.react.uimanager.LayoutShadowNode$1)
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: java.lang.Object get(java.lang.Object)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.internal.CollapsingTextHelper: void clearTexture()
com.facebook.react.bridge.ReactContext: void runOnJSQueueThread(java.lang.Runnable)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList getEmptyList()
androidx.recyclerview.widget.LinearSmoothScroller: int getHorizontalSnapPreference()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void insertIconView()
okhttp3.internal.platform.Platform$Companion: Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.CoreModulesPackage$2: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
androidx.recyclerview.widget.RecyclerView$State: int getTargetScrollPosition()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.horcrux.svg.DefinitionView: int hitTest(float[])
com.facebook.drawee.drawable.ArrayDrawable: boolean isStateful()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker,com.facebook.soloader.ExtractFromZipSoSource$1)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int)
okhttp3.internal.platform.Platform: Platform()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
kotlin.sequences.DropSequence$iterator$1: java.lang.Object next()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)
com.facebook.react.modules.i18nmanager.I18nUtil: void allowRTL(android.content.Context,boolean)
com.facebook.imagepipeline.core.ImagePipeline$5: boolean apply(com.facebook.cache.common.CacheKey)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.common.memory.PooledByteStreams: PooledByteStreams(com.facebook.common.memory.ByteArrayPool)
com.facebook.imagepipeline.producers.EncodedProbeProducer: java.lang.String getProducerName()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isPartialImageCachingEnabled()
okio.ForwardingSource: long read(okio.Buffer,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.ProducerContext getContext()
com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)
com.facebook.react.ReactRootView: void dispatchJSTouchEvent(android.view.MotionEvent)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getReactPackageTurboModuleManagerDelegateBuilder()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.ReactInstanceManager: ReactInstanceManager(android.content.Context,android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader,java.lang.String,java.util.List,boolean,com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener,com.facebook.react.common.LifecycleState,com.facebook.react.uimanager.UIImplementationProvider,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.devsupport.RedBoxHandler,boolean,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,int,com.facebook.react.bridge.JSIModulePackage,java.util.Map,com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void initHandler()
androidx.core.text.BidiFormatter$Builder: void initialize(boolean)
androidx.transition.ViewOverlayApi18: ViewOverlayApi18(android.view.View)
com.google.android.material.chip.ChipDrawable: void setCloseIconEndPadding(float)
com.facebook.react.uimanager.FabricViewStateManager: FabricViewStateManager()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)
okio.DeflaterSink: void finishDeflate$okio()
com.facebook.drawee.controller.AbstractDraweeController: boolean shouldRetryOnTap()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: java.util.List getOverlays()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,java.lang.String)
okhttp3.EventListener$Companion: EventListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
com.facebook.imagepipeline.request.ImageRequest: int getPreferredWidth()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.react.ReactInstanceManager: void detachRootView(com.facebook.react.uimanager.ReactRoot)
okhttp3.HttpUrl: java.lang.String encodedPassword()
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.modules.statusbar.StatusBarModule$1: void runGuarded()
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void onSuccess(com.facebook.common.references.CloseableReference)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getLayoutParent()
androidx.transition.ChangeBounds$10: void onAnimationEnd(android.animation.Animator)
okio.AsyncTimeout: okio.Source source(okio.Source)
okhttp3.Credentials: Credentials()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationStart(android.view.View)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.transition.Transition: void clearValues(boolean)
okhttp3.internal.http2.Http2Stream: void receiveHeaders(okhttp3.Headers,boolean)
com.facebook.react.DebugCorePackage: DebugCorePackage()
androidx.collection.SimpleArrayMap: int indexOfNull()
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()
com.google.android.material.resources.CancelableFontCallback: CancelableFontCallback(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.material.datepicker.CalendarConstraints: int getMonthSpan()
com.facebook.react.views.text.TextAttributeProps: void setTextShadowColor(int)
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: AppCompatDelegateImpl$ListMenuDecorView(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
com.google.android.material.chip.ChipGroup: void access$600(com.google.android.material.chip.ChipGroup,int,boolean)
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelOffset(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.material.bottomsheet.BottomSheetBehavior$1: BottomSheetBehavior$1(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.net.Uri getMainUri()
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getFocusedChild()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void onSlide(android.view.View,float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.google.android.material.transformation.ExpandableTransformationBehavior$1: void onAnimationEnd(android.animation.Animator)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion: ScreenStackHeaderSubviewManager$Companion()
androidx.recyclerview.widget.LinearLayoutManager: int convertFocusDirectionToLayoutDirection(int)
androidx.appcompat.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void draw(android.graphics.Canvas,android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
okhttp3.internal.connection.RealConnection: void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer newEncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.common.internal.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
androidx.collection.MapCollections$ValuesCollection: int size()
androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)
com.horcrux.svg.MarkerView: void setMarkerWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextShadowNode: boolean access$200(com.facebook.react.views.text.ReactTextShadowNode)
bolts.BoltsExecutors$ImmediateExecutor: BoltsExecutors$ImmediateExecutor(bolts.BoltsExecutors$1)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getStableInsets()
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
androidx.activity.ComponentActivity$1: void run()
okhttp3.internal.platform.Platform$Companion: boolean isAndroid()
com.facebook.imagepipeline.producers.DataFetchProducer: java.lang.String getProducerName()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)
com.facebook.react.modules.image.ImageLoaderModule$1: void onFailureImpl(com.facebook.datasource.DataSource)
com.facebook.yoga.YogaMeasureMode: YogaMeasureMode(java.lang.String,int,int)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem getFileSystem$okhttp()
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: boolean isHttpRedirect(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.uimanager.ShadowNodeRegistry: void removeNode(int)
com.horcrux.svg.PathParser: boolean is_cmd(char)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void setShowTitle(boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getOutgoingEdges(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List cancelNoCallbacks()
com.google.android.material.internal.NavigationMenuItemView: int[] onCreateDrawableState(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
androidx.recyclerview.widget.RecyclerView$4: RecyclerView$4(androidx.recyclerview.widget.RecyclerView)
androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$500(com.facebook.imagepipeline.memory.PoolConfig$Builder)
androidx.transition.TransitionSet: androidx.transition.TransitionSet addTarget(android.view.View)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setErrorThrowable(java.lang.Throwable)
com.google.android.material.radiobutton.MaterialRadioButton: MaterialRadioButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
okio.AsyncTimeout$source$1: long read(okio.Buffer,long)
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationCancel(android.animation.Animator)
androidx.fragment.app.FragmentContainer: FragmentContainer()
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.app.ToolbarActionBar$2: ToolbarActionBar$2(androidx.appcompat.app.ToolbarActionBar)
com.google.android.material.chip.Chip$ChipTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
kotlin.collections.AbstractList$ListIteratorImpl: boolean hasPrevious()
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
androidx.appcompat.widget.Toolbar: void ensureMenu()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void onDataSourceNewResult(com.facebook.datasource.DataSource)
okhttp3.Cache$Entry: boolean isHttps()
com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
com.facebook.react.modules.network.ReactCookieJarContainer: void removeCookieJar()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
com.facebook.react.views.view.ReactViewBackgroundDrawable: float getFullBorderWidth()
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.appcompat.widget.TooltipCompatHandler: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)
com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)
androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.RenderableViewManager$TextViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.blob.BlobModule$2: boolean supports(android.net.Uri,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillRule(android.view.View,int)
com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean hasJumpTarget()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: SimpleImageTranscoder(boolean,int)
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.disk.EntryEvictionComparatorSupplier access$800(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.horcrux.svg.UseView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenX()
androidx.appcompat.widget.ListPopupWindow: int buildDropDown()
com.facebook.react.views.text.ReactBackgroundColorSpan: ReactBackgroundColorSpan(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$1: CoordinatorLayout$1(androidx.coordinatorlayout.widget.CoordinatorLayout)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: OpacityAnimation$OpacityAnimationListener(android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)
com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getYearMonthFormat()
com.swmansion.rnscreens.ScreenStack: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: ImagePerfControllerListener2(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfNotifier,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier)
androidx.recyclerview.widget.FastScroller: void cancelHide()
okhttp3.internal.http.HttpHeaders: boolean startsWith(okio.Buffer,byte)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void disposeResult(java.lang.Object)
com.facebook.react.viewmanagers.RNSVGClipPathManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void findExpandedIndex()
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout(float,float)
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status[] values()
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean doesMarkerStartSegment(int)
com.facebook.systrace.Systrace: void startAsyncFlow(long,java.lang.String,int)
com.google.android.material.appbar.AppBarLayout: void draw(android.graphics.Canvas)
com.facebook.react.modules.core.DeviceEventManagerModule$1: DeviceEventManagerModule$1(com.facebook.react.modules.core.DeviceEventManagerModule,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.Util: boolean canParseAsIpAddress(java.lang.String)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DecodeProducer newDecodeProducer(com.facebook.imagepipeline.producers.Producer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
com.horcrux.svg.GroupView: void drawPath(android.graphics.Canvas,android.graphics.Paint,float)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void initAnimators()
com.facebook.common.executors.HandlerExecutorServiceImpl: boolean isHandlerThread()
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
okhttp3.ConnectionSpec: java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec)
com.google.android.material.shape.MaterialShapeDrawable: void setStrokeColor(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.google.android.material.resources.TextAppearance: android.graphics.Typeface getFallbackFont()
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.common.references.NoOpCloseableReference: java.lang.Object clone()
androidx.appcompat.app.AlertController: int getIconAttributeResId(int)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
okio.Timeout: Timeout()
okhttp3.Cookie: int hashCode()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
androidx.transition.Transition: java.lang.String toString(java.lang.String)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void doTransform(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.react.uimanager.MatrixMathHelper: double v3Dot(double[],double[])
com.facebook.yoga.YogaConfigJNIFinalizer: YogaConfigJNIFinalizer()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.image.ReactImageView$1: void onProgressChange(int,int)
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setCenterRadius(float)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
androidx.core.provider.FontRequest: java.util.List getCertificates()
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.collections.IntIterator: IntIterator()
androidx.transition.ViewUtilsBase: void setLeftTopRightBottom(android.view.View,int,int,int,int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.MemoryCache getEncodedMemoryCacheOverride()
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForTrue(java.lang.Integer)
com.google.android.material.shadow.ShadowRenderer: void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
androidx.customview.widget.ViewDragHelper: int getTouchSlop()
com.google.android.material.ripple.RippleDrawableCompat: boolean onStateChange(int[])
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
com.swmansion.rnscreens.events.StackFinishTransitioningEvent: java.lang.String getEventName()
okio.RealBufferedSink$outputStream$1: void flush()
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: com.facebook.imagepipeline.producers.Consumer createConsumer()
com.google.android.material.chip.ChipDrawable: void setTextStartPadding(float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
androidx.transition.Transition: androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToBitmapCacheSequence(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.uimanager.UIImplementation: void findSubviewIn(int,float,float,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.ChildHelper: int getOffset(int)
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
bolts.Task: void runContinuations()
kotlin.ranges.IntProgression: IntProgression(int,int,int)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: void cancelDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
androidx.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
com.google.android.material.bottomappbar.BottomAppBar: void access$1800(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.horcrux.svg.VirtualViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.ReactRootView: ReactRootView(android.content.Context)
com.google.android.material.chip.ChipDrawable: int getOpacity()
com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(android.net.Uri,com.facebook.imagepipeline.request.ImageRequest$CacheChoice)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String getEventName()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)
com.facebook.react.views.common.ContextUtils: java.lang.Object findContextOfType(android.content.Context,java.lang.Class)
com.facebook.imagepipeline.producers.FetchState: void setOnNewResultStatusFlags(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,int,java.lang.Throwable)
com.facebook.react.TurboReactPackage$1: TurboReactPackage$1(com.facebook.react.TurboReactPackage,java.util.Iterator,com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
com.facebook.react.uimanager.UIViewOperationQueue: void addRootView(int,android.view.View)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void write(int)
com.facebook.react.uimanager.UIImplementation: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.drawee.drawable.RoundedDrawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.TextAttributes: TextAttributes()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setAlpha(int)
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)
androidx.customview.widget.ExploreByTouchHelper: boolean requestAccessibilityFocus(int)
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldExpandBoundsForA11y()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: UIViewOperationQueue$DispatchUIFrameCallback(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
com.horcrux.svg.PathParser: void move(float,float)
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager: void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.facebook.drawee.view.DraweeView: void onVisibilityChanged(android.view.View,int)
com.facebook.imagepipeline.core.ImagePipelineFactory: void initialize(android.content.Context)
com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.google.android.material.shape.ShapePath: void setCurrentShadowAngle(float)
androidx.cardview.widget.CardViewApi21Impl: void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.imagepipeline.cache.ValueDescriptor wrapValueDescriptor(com.facebook.imagepipeline.cache.ValueDescriptor)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
com.facebook.react.views.text.TextAttributes: boolean getAllowFontScaling()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalVideoFileFetchSequence()
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri)
androidx.recyclerview.widget.DefaultItemAnimator: void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JavaScriptExecutorFactory getJsExecutorFactory()
com.facebook.drawee.view.DraweeHolder: void attachController()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
kotlin.ranges.IntProgression: java.util.Iterator iterator()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void invoke()
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: BitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
com.facebook.react.ReactPackageHelper$1$1: boolean hasNext()
com.google.android.material.datepicker.CalendarItemStyle: int getTopInset()
com.horcrux.svg.VirtualViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(android.view.View,java.lang.String)
androidx.appcompat.widget.TooltipCompatHandler: boolean onHover(android.view.View,android.view.MotionEvent)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.google.android.material.internal.DescendantOffsetUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean readBooleanValue(int)
kotlin.collections.EmptyMap: boolean isEmpty()
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForAdd(int,int)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setVectorEffect(android.view.View,int)
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
com.facebook.react.common.SingleThreadAsserter: SingleThreadAsserter()
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.recyclerview.widget.ChildHelper$Bucket: boolean remove(int)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.yoga.YogaAlign: YogaAlign(java.lang.String,int,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()
com.facebook.imagepipeline.decoder.DecodeException: com.facebook.imagepipeline.image.EncodedImage getEncodedImage()
com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()
com.google.android.material.shape.MaterialShapeDrawable$1: void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void update()
com.google.android.material.appbar.AppBarLayout: void resetPendingAction()
androidx.recyclerview.widget.RecyclerView$6: void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: AndroidPlatform$CustomTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
com.google.android.material.chip.Chip: void onAttachedToWindow()
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.drawerlayout.widget.DrawerLayout: void cancelChildViewTouch()
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: SimpleBitmapReleaser()
androidx.transition.TransitionSet: void pause(android.view.View)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: SwipeDismissBehavior$SettleRunnable(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList access$102(com.facebook.drawee.components.DeferredReleaserConcurrentImpl,java.util.ArrayList)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
com.facebook.imageutils.BitmapUtil: int getSizeInBytes(android.graphics.Bitmap)
com.google.android.material.button.MaterialButtonHelper: void setCheckable(boolean)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: void init(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList,com.facebook.common.internal.Supplier)
com.coinapp.MainApplication: MainApplication()
com.swmansion.rnscreens.ScreenStack: void startViewTransition(android.view.View)
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: PostprocessorProducer$SingleUsePostprocessorConsumer(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
com.facebook.react.TurboReactPackage$1$1: void findNext()
com.facebook.react.ReactFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onRequestCancellation(com.facebook.imagepipeline.producers.ProducerContext)
okhttp3.internal.Util: int and(short,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.jni.NativeRunnable: void run()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setDisplay(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.react.ReactInstanceManager$10: ReactInstanceManager$10(com.facebook.react.ReactInstanceManager)
okhttp3.HttpUrl: char[] access$getHEX_DIGITS$cp()
com.google.android.material.chip.Chip: void updatePaddingInternal()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
okhttp3.internal.connection.RealCall: boolean retryAfterFailure()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer newPostprocessorBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.facebook.imagepipeline.memory.BucketMap: void maybePrune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.google.android.material.datepicker.CalendarConstraints$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
com.facebook.react.jscexecutor.JSCExecutor: JSCExecutor(com.facebook.react.bridge.ReadableNativeMap)
androidx.recyclerview.widget.OrientationHelper$2: int getModeInOther()
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: RecyclerView$ItemAnimatorRestoreListener(androidx.recyclerview.widget.RecyclerView)
com.swmansion.rnscreens.ScreenContainerViewManager$Companion: ScreenContainerViewManager$Companion()
com.facebook.imagepipeline.memory.BucketMap: void release(int,java.lang.Object)
com.facebook.react.views.scroll.ScrollEvent: java.lang.String getEventName()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
com.facebook.react.module.model.ReactModuleInfo: boolean hasConstants()
androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()
com.facebook.react.animated.NativeAnimatedModule$5: NativeAnimatedModule$5(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.modules.datepicker.DatePickerDialogModule: DatePickerDialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)
kotlin.collections.EmptySet: EmptySet()
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.android.material.transformation.ExpandableBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.google.android.material.chip.Chip: void updateBackgroundDrawable()
com.facebook.drawee.drawable.ArrayDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onPreDraw()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Connection: java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.datepicker.MaterialDatePicker: long thisMonthInUtcMilliseconds()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getPlaceholderImage()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: DrawerLayout$AccessibilityDelegate(androidx.drawerlayout.widget.DrawerLayout)
com.google.android.material.animation.ChildrenAlphaProperty: java.lang.Object get(java.lang.Object)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: ReactOkHttpNetworkFetcher(okhttp3.OkHttpClient)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.google.android.material.textfield.ClearTextEndIconDelegate$6: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.appcompat.widget.ActionBarBackgroundDrawable: int getOpacity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen$onLayout$1: Screen$onLayout$1(com.facebook.react.bridge.ReactContext,com.swmansion.rnscreens.Screen,int,int)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
androidx.transition.TransitionSet: void resume(android.view.View)
com.facebook.imagepipeline.producers.MultiplexProducer: MultiplexProducer(com.facebook.imagepipeline.producers.Producer,java.lang.String,java.lang.String)
bolts.Task: Task()
com.google.android.material.card.MaterialCardView: boolean isChecked()
okio.AsyncTimeout$sink$1: void flush()
com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.common.streams.LimitedInputStream: int read()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
okio.Buffer: boolean isOpen()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerId(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()
com.google.android.material.shadow.ShadowRenderer: ShadowRenderer()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
okhttp3.Cache: int getWriteSuccessCount$okhttp()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipPath(android.view.View,java.lang.String)
kotlin.collections.EmptyIterator: java.lang.Object next()
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
com.facebook.cache.disk.DiskStorageCache$1: void run()
okhttp3.internal.connection.RealConnection$connectTls$2: java.util.List invoke()
androidx.transition.RectEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.facebook.react.views.scroll.OnScrollDispatchHelper: OnScrollDispatchHelper()
kotlin.ranges.IntRange: boolean isEmpty()
com.facebook.react.views.view.ReactViewBackgroundManager: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
androidx.fragment.app.FragmentManager: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
com.facebook.react.views.text.DefaultStyleValuesUtil: int getDefaultTextColorHighlight(android.content.Context)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.facebook.react.views.text.CustomLetterSpacingSpan: void updateDrawState(android.text.TextPaint)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: void onTranslationChanged()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.animated.NativeAnimatedNodesManager: void extractAnimatedNodeOffset(int)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.views.picker.ReactPicker: void setStagedItems(java.util.List)
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void onTextChanged(java.lang.CharSequence,int,int,int)
com.horcrux.svg.RenderableView: boolean setupStrokePaint(android.graphics.Paint,float)
androidx.recyclerview.widget.RecyclerView$3: float getInterpolation(float)
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.GlyphContext: void reset()
com.google.android.material.bottomappbar.BottomAppBar$SavedState: BottomAppBar$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.react.modules.core.ReactChoreographer: void maybeRemoveFrameCallback()
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem(android.os.Parcel)
androidx.core.app.ActivityRecreator$3: void run()
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.react.views.scroll.ReactScrollView: void getClippingRect(android.graphics.Rect)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion()
com.facebook.yoga.YogaNodeJNIFinalizer: YogaNodeJNIFinalizer(com.facebook.yoga.YogaConfig)
com.facebook.react.animated.NativeAnimatedNodesManager: void getValue(int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.react.views.picker.ReactPicker: void requestLayout()
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)
com.horcrux.svg.TextView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool getNativeMemoryChunkPool()
androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
com.facebook.react.views.picker.ReactPickerAdapter: void setBackgroundColor(java.lang.Integer)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean preferLastSpan(int)
okio.Buffer: void clear()
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.drawee.generic.RootDrawable: int getIntrinsicWidth()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentLayoutInflaterFactory: FragmentLayoutInflaterFactory(androidx.fragment.app.FragmentManager)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: MenuItemWrapperICS$ActionProviderWrapperJB(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
com.facebook.react.ReactInstanceManager: void onHostDestroy(android.app.Activity)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextShadowNode: java.lang.Iterable calculateLayoutOnChildren()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void cancelTransaction()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()
com.facebook.systrace.Systrace: void unregisterListener(com.facebook.systrace.TraceListener)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
com.google.android.material.datepicker.DaysOfWeekAdapter: int positionToDayOfWeek(int)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.common.references.DefaultCloseableReference: DefaultCloseableReference(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.google.android.material.behavior.SwipeDismissBehavior$1: int getViewHorizontalDragRange(android.view.View)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.facebook.drawee.drawable.FadeDrawable: int getAlpha()
okhttp3.internal.http.RealInterceptorChain: int getReadTimeoutMillis$okhttp()
com.facebook.imageutils.TiffUtil: int getOrientationFromTiffEntry(java.io.InputStream,int,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void setLine(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setJustifyContent(com.facebook.yoga.YogaJustify)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinecap(android.view.View,int)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willBindInTime(int,long,long)
okio.RealBufferedSink: java.io.OutputStream outputStream()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setUsewidth(com.horcrux.svg.UseView,java.lang.String)
com.facebook.drawee.drawable.ArrayDrawable: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)
com.facebook.react.modules.dialog.DialogModule: void initialize()
androidx.appcompat.widget.ActionBarOverlayLayout$2: void run()
androidx.appcompat.widget.LinearLayoutCompat: int measureNullChild(int)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setResourceId(java.lang.String)
androidx.transition.ViewUtils: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: ImageLoadingTimeControllerListener(com.facebook.drawee.debug.listener.ImageLoadingTimeListener)
com.google.android.material.transformation.ExpandableTransformationBehavior: android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
com.facebook.react.PackageList: PackageList(com.facebook.react.ReactNativeHost)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.android.material.internal.CheckableImageButton: android.os.Parcelable onSaveInstanceState()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
androidx.transition.ViewGroupUtilsApi14: void cancelLayoutTransition(android.animation.LayoutTransition)
com.facebook.drawee.view.AspectRatioMeasure: boolean shouldAdjust(int)
com.google.android.material.appbar.ViewOffsetHelper: int getTopAndBottomOffset()
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: JavaTimerManager$IdleFrameCallback(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1)
okhttp3.Headers: java.lang.String get(java.lang.String)
com.facebook.fresco.ui.common.BaseControllerListener2: void onIntermediateImageSet(java.lang.String,java.lang.Object)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
androidx.collection.SimpleArrayMap: int size()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.fragment.app.ListFragment: void onDestroyView()
com.facebook.imagepipeline.producers.LocalFileFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
com.facebook.imageformat.DefaultImageFormatChecker: boolean isGifHeader(byte[],int)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: BottomSheetBehavior$SettleRunnable(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.bridge.WritableMap getData()
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode(com.facebook.react.views.switchview.ReactSwitchManager$1)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
androidx.fragment.app.Fragment: void onLowMemory()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
okhttp3.internal.http2.Http2: Http2()
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1: void onAnimationStart(android.view.animation.Animation)
com.facebook.drawee.drawable.FadeDrawable: void finishTransitionImmediately()
okhttp3.internal.platform.OpenJSSEPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: boolean hasCoalescingKey(long)
androidx.transition.ChangeBounds: ChangeBounds()
okhttp3.internal.concurrent.TaskRunner$runnable$1: void run()
androidx.recyclerview.widget.FastScroller: boolean isPointInsideVerticalThumb(float,float)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.fragment.app.Fragment: boolean isHidden()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveGroup(int)
androidx.transition.Fade$FadeAnimatorListener: Fade$FadeAnimatorListener(android.view.View)
com.google.android.material.shape.MaterialShapeDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.widget.TintTypedArray: void recycle()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response: okhttp3.Response$Builder newBuilder()
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$2: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.imagepipeline.memory.BucketsBitmapPool: java.lang.Object alloc(int)
com.facebook.drawee.controller.AbstractDraweeController: void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object)
okio.ByteString$Companion: okio.ByteString of(byte[])
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: int getMaxSizeHardCap()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
com.facebook.react.uimanager.Spacing: Spacing()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
com.swmansion.rnscreens.events.ScreenWillAppearEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.drawee.drawable.MatrixDrawable: void configureBounds()
com.facebook.cache.disk.DefaultDiskStorage: boolean query(java.lang.String,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onFinalImageSet(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.google.android.material.chip.ChipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableArray: int getInt(int)
androidx.appcompat.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)
okio.Okio__JvmOkioKt: okio.Source source(java.io.InputStream)
com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.MonthAdapter getAdapter()
com.google.android.material.textfield.TextInputLayout: boolean isHelperTextEnabled()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.components.RetryManager getRetryManager()
okhttp3.internal.concurrent.TaskQueue: java.lang.String toString()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getInterpolation(float)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: ViewOverlayApi14$OverlayViewGroup(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
okio.ByteString$Companion: okio.ByteString of(byte[],int,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5: FloatingActionButtonImpl$5(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar getCookieJar$okhttp()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1: OkHttpNetworkFetcher$1$1(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.cardview.widget.RoundRectDrawable: android.content.res.ColorStateList getColor()
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
okio.AsyncTimeout$sink$1: void write(okio.Buffer,long)
com.facebook.common.executors.ScheduledFutureImpl: void run()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
androidx.appcompat.widget.TooltipPopup: void hide()
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void initMeasureFunction()
com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory()
com.zoontek.rnbootsplash.RNBootSplashModule$4: void run()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.ColorFilter getActualImageColorFilter()
androidx.appcompat.widget.SearchView$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
okhttp3.internal.cache.DiskLruCache: void processJournal()
com.facebook.common.streams.LimitedInputStream: int read(byte[],int,int)
okhttp3.RequestBody: boolean isDuplex()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int)
com.swmansion.rnscreens.ScreenFragment: com.swmansion.rnscreens.Screen getScreen()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.util.TriState access$700(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)
com.google.android.material.animation.DrawableAlphaProperty: java.lang.Object get(java.lang.Object)
com.facebook.react.fabric.ReactNativeConfig: int getInt64(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipDrawable: float getChipEndPadding()
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: void runGuarded()
com.facebook.react.uimanager.events.EventDispatcherImpl: boolean access$400(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setName(android.view.View,java.lang.String)
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
com.google.android.material.datepicker.MaterialTextInputPicker: void onCreate(android.os.Bundle)
com.horcrux.svg.CircleView: void setCy(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: FloatingActionButton$ShadowDelegateImpl(com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheErrorLogger getCacheErrorLogger()
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
com.google.android.material.shape.ShapePath$ShadowCompatOperation: void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getMax(com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.request.ImageRequest$RequestLevel)
com.google.android.material.chip.Chip: boolean isCheckable()
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void updateFromViewRotation()
com.facebook.react.animated.NativeAnimatedModule$3: NativeAnimatedModule$3(com.facebook.react.animated.NativeAnimatedModule,long)
com.facebook.react.animated.NativeAnimatedModule$3: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$600(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.react.viewmanagers.RNSVGRadialGradientManagerDelegate: RNSVGRadialGradientManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.horcrux.svg.GroupView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint,android.graphics.Region$Op)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
com.facebook.imagepipeline.producers.JobScheduler: void clearJob()
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void animateToExpansionFraction(float)
androidx.core.provider.RequestExecutor$ReplyRunnable: void run()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue getUIViewOperationQueue()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
bolts.BoltsExecutors$ImmediateExecutor: BoltsExecutors$ImmediateExecutor()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean shouldAnimateVisibilityChange()
com.google.android.material.transformation.FabTransformationBehavior: float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
com.google.android.material.datepicker.YearGridAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: MenuItemWrapperICS$CollapsibleActionViewWrapper(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollHorizontally()
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)
com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1: ChoreographerCompat$FrameCallback$1(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)
androidx.transition.Fade$1: Fade$1(androidx.transition.Fade,android.view.View)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getClosed()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightAuto()
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.TwilightManager: TwilightManager(android.content.Context,android.location.LocationManager)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: void close()
okhttp3.internal.concurrent.TaskRunner: void afterRun(okhttp3.internal.concurrent.Task,long)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.StatefulProducerRunnable: StatefulProducerRunnable(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,java.lang.String)
okio.Buffer: okio.ByteString snapshot()
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(int,int)
okhttp3.Cookie$Companion: Cookie$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.common.references.CloseableReference$1: CloseableReference$1()
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okio.Buffer$UnsafeCursor: int seek(long)
okhttp3.ResponseBody: byte[] bytes()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.content.Context)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.core.widget.NestedScrollView: void requestLayout()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean)
androidx.fragment.app.DialogFragment: void onStop()
com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)
com.facebook.imagepipeline.memory.BucketMap: void prune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void setAdditionalHiddenOffsetY(android.view.View,int)
androidx.recyclerview.widget.RecyclerView$Recycler: boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int calculateBoxBackgroundColor()
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
com.facebook.react.ReactInstanceManager: void createReactContextInBackground()
com.facebook.drawee.controller.BaseControllerListener: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onFailureImpl(java.lang.Throwable)
androidx.transition.ChangeBounds$3: ChangeBounds$3(java.lang.Class,java.lang.String)
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.facebook.react.views.text.TextLayoutManagerMapBuffer: boolean isRTL(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop: ScalingUtils$ScaleTypeCenterCrop()
com.facebook.react.views.text.ReactTypefaceUtils: int parseNumericFontWeight(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.DialogFragment$1: void run()
com.facebook.react.TurboReactPackage$ModuleHolderProvider: TurboReactPackage$ModuleHolderProvider(com.facebook.react.TurboReactPackage,java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)
com.swmansion.rnscreens.ScreenFragment: void onViewAnimationStart$lambda-6(com.swmansion.rnscreens.ScreenFragment)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.swmansion.rnscreens.Screen$Companion: Screen$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.behavior.SwipeDismissBehavior: void ensureViewDragHelper(android.view.ViewGroup)
androidx.recyclerview.widget.GridLayoutManager: void guessMeasurement(float,int)
com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String getStackTraceString(java.lang.Throwable)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController obtainController()
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.facebook.drawee.view.DraweeView: void onAttachedToWindow()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.picker.ReactDialogPickerManager: void setPrompt(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: NativeAnimatedModule$UIThreadOperation(com.facebook.react.animated.NativeAnimatedModule,com.facebook.react.animated.NativeAnimatedModule$1)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void getClippingRect(android.graphics.Rect)
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
com.facebook.imagepipeline.image.EncodedImage: int getRotationAngle()
com.facebook.react.uimanager.events.EventDispatcherImpl$2: void run()
com.facebook.react.modules.datepicker.DatePickerDialogFragment: void setOnDateSetListener(android.app.DatePickerDialog$OnDateSetListener)
androidx.appcompat.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.modules.datepicker.DatePickerDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
com.facebook.react.TurboReactPackage$1$1: void remove()
com.facebook.react.devsupport.LogBoxModule$1: LogBoxModule$1(com.facebook.react.devsupport.LogBoxModule)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
com.horcrux.svg.RenderableView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.google.android.material.datepicker.CalendarStyle: CalendarStyle(android.content.Context)
com.facebook.fresco.ui.common.ForwardingControllerListener2: ForwardingControllerListener2()
androidx.customview.widget.ExploreByTouchHelper$2: int size(java.lang.Object)
com.google.android.material.shadow.ShadowRenderer: void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)
androidx.appcompat.app.WindowDecorActionBar$3: void onAnimationUpdate(android.view.View)
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.facebook.react.modules.statusbar.StatusBarModule$1$1: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.drawee.drawable.FadeDrawable: void maybeOnImageShownImmediately()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)
okio.Buffer$outputStream$1: java.lang.String toString()
com.facebook.fresco.ui.common.ForwardingControllerListener2: void onSubmit(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View findViewByPosition(int)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.recyclerview.widget.OrientationHelper$1: int getMode()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
bolts.Task$10: java.lang.Object then(bolts.Task)
com.facebook.imagepipeline.producers.JobScheduler: JobScheduler(java.util.concurrent.Executor,com.facebook.imagepipeline.producers.JobScheduler$JobRunnable,int)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void doAfterTextChanged(android.widget.AutoCompleteTextView)
com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: ReactChoreographer$ReactChoreographerDispatcher(com.facebook.react.modules.core.ReactChoreographer)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
androidx.appcompat.app.AlertController$2: AlertController$2(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.recyclerview.widget.OpReorderer: OpReorderer(androidx.recyclerview.widget.OpReorderer$Callback)
com.facebook.imagepipeline.memory.Bucket: void addToFreeList(java.lang.Object)
com.facebook.react.animated.InterpolationAnimatedNode: void onAttachedToNode(com.facebook.react.animated.AnimatedNode)
com.facebook.cache.disk.DefaultDiskStorage: boolean contains(java.lang.String,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl: void onStop()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
androidx.fragment.app.FragmentManager: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
com.facebook.cache.disk.SettableCacheEvent: SettableCacheEvent()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChildWithAnchor(android.view.View,android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.widget.SearchView$2: void run()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
okio.Buffer: int hashCode()
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
com.horcrux.svg.EllipseView: void setCy(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.google.android.material.shape.ShapePath: void reset(float,float,float,float)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: BaseLayoutAnimation()
androidx.transition.ViewGroupOverlayApi14: ViewGroupOverlayApi14(android.content.Context,android.view.ViewGroup,android.view.View)
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
com.facebook.react.bridge.ReactContext: void destroy()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.SearchView: void forceSuggestionQuery()
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace: void beginSection(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)
com.facebook.drawee.drawable.RoundedColorDrawable: void setPaintFilterBitmap(boolean)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns)
com.facebook.react.animated.InterpolationAnimatedNode: double[] fromDoubleArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.AdapterHelper: boolean canFindInPreLayout(int)
com.facebook.drawee.drawable.RoundedBitmapDrawable: RoundedBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Paint)
com.facebook.react.modules.network.ProgressRequestBody$1: void sendProgressUpdate()
okhttp3.internal.http2.Http2Connection: void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long)
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.cardview.widget.CardViewApi21Impl: void initStatic()
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillOpacity(android.view.View,float)
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
com.facebook.react.uimanager.JSTouchDispatcher: int getSurfaceId()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: ReactModalHostView$DialogRootViewGroup(android.content.Context)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFlexibleChildInBothOrientations()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
okhttp3.internal.ws.MessageDeflater: void deflate(okio.Buffer)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void stop()
okhttp3.internal.http2.Http2Connection: void failConnection(java.io.IOException)
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstReferenceChildPosition(int)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
com.google.android.material.datepicker.MaterialCalendar$8: MaterialCalendar$8(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter)
okio.AsyncTimeout$source$1: java.lang.String toString()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedBounds(int,int,int,int)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager$1: ReactTextInputManager$1(com.facebook.react.views.textinput.ReactTextInputManager,boolean)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
com.facebook.common.internal.ImmutableSet: com.facebook.common.internal.ImmutableSet of(java.lang.Object[])
com.facebook.react.MemoryPressureRouter: void dispatchMemoryPressure(int)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.internal.cache.DiskLruCache: boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
com.google.android.material.datepicker.DaysOfWeekAdapter: long getItemId(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
com.facebook.react.views.view.ColorUtil: int getOpacityFromColor(int)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.facebook.soloader.ApkSoSource: ApkSoSource(android.content.Context,java.io.File,java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue: long access$2302(com.facebook.react.uimanager.UIViewOperationQueue,long)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.cache.DiskLruCache: boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setOnScreenWidth(int)
androidx.recyclerview.widget.FastScroller: void hide(int)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1: ResizeAndRotateProducer$TransformingConsumer$1(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer)
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object access$1000(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.imagepipeline.core.PriorityThreadFactory: int access$000(com.facebook.imagepipeline.core.PriorityThreadFactory)
com.google.android.material.animation.DrawableAlphaProperty: java.lang.Integer get(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.horcrux.svg.ForeignObjectView: void setHeight(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.Event[] access$1200(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: SimpleProgressiveJpegConfig$DefaultDynamicValueConfig(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$1)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getOpenAt()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
com.facebook.react.views.image.ScaleTypeStartInside: ScaleTypeStartInside()
com.facebook.common.statfs.StatFsHelper$StorageType: StatFsHelper$StorageType(java.lang.String,int)
com.facebook.react.views.textinput.ReactEditText: boolean showSoftKeyboard()
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.imagepipeline.image.CloseableImage: java.util.Map getExtras()
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.drawee.view.DraweeHolder: boolean isControllerValid()
com.facebook.react.animated.NativeAnimatedModule$4: NativeAnimatedModule$4(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)
com.facebook.imagepipeline.memory.BasePool: BasePool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPositionX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationsFinished()
com.facebook.cache.disk.DefaultDiskStorage: void clearAll()
com.facebook.imagepipeline.producers.BaseProducerContext: boolean isIntermediateResultExpected()
com.swmansion.rnscreens.ScreenContainer: void markUpdated()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.Producer newBackgroundThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue)
com.facebook.cache.disk.DiskStorageCache: com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback)
androidx.appcompat.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)
com.facebook.imagepipeline.transcoder.DownsampleUtil: float determineDownsampleRatio(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void maybeUpdateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage)
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.recyclerview.widget.DefaultItemAnimator: void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.animation.MotionSpec: void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])
androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner()
com.horcrux.svg.ImageView: void setHeight(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int)
com.facebook.fresco.ui.common.BaseControllerListener2: void onRelease(java.lang.String,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.horcrux.svg.MarkerView: void setMarkerWidth(java.lang.String)
androidx.transition.Transition: boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String)
androidx.recyclerview.widget.GridLayoutManager: boolean supportsPredictiveItemAnimations()
com.facebook.soloader.DirectorySoSource: java.lang.String[] getDependencies(java.io.File)
com.google.android.material.textfield.IndicatorViewController: void adjustIndicatorPadding()
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: CircularRevealWidget$CircularRevealEvaluator()
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
androidx.recyclerview.widget.GridLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.horcrux.svg.TextPathView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.google.android.material.internal.CollapsingTextHelper: boolean setExpandedTypefaceInternal(android.graphics.Typeface)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(android.view.View,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateStateOnScroll(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.material.textfield.TextInputLayout: void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.SimpleItemAnimator: void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
okio.Options: java.lang.Object get(int)
okio.RealBufferedSink: okio.BufferedSink writeDecimalLong(long)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout: com.swmansion.rnscreens.ScreenFragment access$getMFragment$p(com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)
com.facebook.react.devsupport.JSDevSupport: void onFailure(double,java.lang.String)
com.facebook.imagepipeline.cache.CountingLruMap: int getValueSizeInBytes(java.lang.Object)
androidx.transition.TransitionSet: androidx.transition.TransitionSet removeTarget(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: ActionMenuPresenter$OverflowPopup(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.facebook.imagepipeline.request.ImageRequest$1: ImageRequest$1()
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getAlpha()
com.horcrux.svg.PathParser: boolean parse_flag()
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignSelf(com.facebook.yoga.YogaAlign)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setLayoutStateDirection(int)
com.facebook.drawee.drawable.RoundedDrawable: void updateTransform()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)
com.facebook.react.modules.websocket.WebSocketModule$1: void onClosed(okhttp3.WebSocket,int,java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: TextDirectionHeuristicsCompat$FirstStrong()
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.facebook.fresco.ui.common.ForwardingControllerListener2: void onException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SearchView$3: void onFocusChange(android.view.View,boolean)
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.devsupport.HMRClient: void enable()
androidx.appcompat.widget.SearchView$10: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.producers.ProducerListener2 getProducerListener()
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
com.facebook.react.MemoryPressureRouter: void removeMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)
okhttp3.internal.cache.CacheStrategy: okhttp3.Request getNetworkRequest()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getThumbnail(com.facebook.imagepipeline.common.ResizeOptions,long)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.facebook.react.ReactActivityDelegate: android.app.Activity getPlainActivity()
androidx.recyclerview.widget.GridLayoutManager: void cachePreLayoutSpanMapping()
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean isRunning()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: ThreadHandoffProducerQueueImpl(java.util.concurrent.Executor)
com.google.android.material.animation.AnimationUtils: float lerp(float,float,float)
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: boolean hasTransformableRotationAngle(com.facebook.imagepipeline.image.CloseableStaticBitmap)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
com.facebook.react.ReactActivityDelegate$1: ReactActivityDelegate$1(com.facebook.react.ReactActivityDelegate,android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle)
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.common.references.FinalizerCloseableReference: void finalize()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
com.facebook.imagepipeline.platform.DefaultDecoder: android.graphics.BitmapFactory$Options getDecodeOptionsForStream(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config)
com.zoontek.rnbootsplash.RNBootSplashModule: int access$002(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.horcrux.svg.PathParser: void arcToBezier(float,float,float,float,float,float,boolean,float)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: BaseTransientBottomBar$BehaviorDelegate(com.google.android.material.behavior.SwipeDismissBehavior)
com.swmansion.rnscreens.events.ScreenDisappearEvent$Companion: ScreenDisappearEvent$Companion()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
com.facebook.soloader.DirectorySoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: PostprocessorProducer$RepeatedPostprocessorConsumer(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.util.Map obtainExtrasFromImage(java.lang.Object)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationEnd(android.view.animation.Animation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManager build()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setPadding(int)
okhttp3.OkHttpClient$Builder: java.util.List getConnectionSpecs$okhttp()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context)
com.facebook.imagepipeline.producers.DataFetchProducer: byte[] getData(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,int[])
com.facebook.imagepipeline.producers.JobScheduler$2: JobScheduler$2(com.facebook.imagepipeline.producers.JobScheduler)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion()
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient: okhttp3.Dns dns()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
kotlin.sequences.DropSequence: java.util.Iterator iterator()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void doPostprocessing(com.facebook.common.references.CloseableReference,int)
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.chip.ChipDrawable: boolean onStateChange(int[])
com.facebook.react.views.picker.ReactDropdownPickerManager: void setSelected(android.view.View,int)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
androidx.appcompat.view.menu.MenuWrapperICS: int size()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setSkipCollapsed(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
androidx.recyclerview.widget.GridLayoutManager: void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.datepicker.MaterialCalendar: void onCreate(android.os.Bundle)
androidx.appcompat.app.ActionBar: ActionBar()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.horcrux.svg.TSpanView: void applySpacingAndFeatures(android.graphics.Paint,com.horcrux.svg.FontData)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueFindTargetForTouch(int,float,float,com.facebook.react.bridge.Callback)
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean defaultIsRtl()
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String getName()
com.zoontek.rnbootsplash.RNBootSplashModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.zoontek.rnbootsplash.RNBootSplashModule)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.TSpanView: void clearCache()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isCreatingModule()
com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getSubdirectoryPath(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getNativeImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
okhttp3.internal.connection.RealCall: okhttp3.Request request()
com.facebook.react.animated.TransformAnimatedNode: java.lang.String prettyPrint()
okio.ByteString: byte[] toByteArray()
androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)
okio.Timeout: void throwIfReached()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
com.google.android.material.datepicker.MaterialDatePicker: void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)
okhttp3.internal.connection.RealCall: okhttp3.EventListener getEventListener$okhttp()
com.facebook.imagepipeline.cache.InstrumentedMemoryCache: void probe(java.lang.Object)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.SearchView: void onTextFocusChanged()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void appendViewToAllSpans(android.view.View)
com.facebook.react.modules.core.ChoreographerCompat: void removeFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
com.swmansion.rnscreens.ScreenContainer: void tryCommitTransaction$lambda-5(com.swmansion.rnscreens.ScreenContainer,androidx.fragment.app.FragmentTransaction)
com.facebook.common.references.SharedReference: void deleteReference()
com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable checkIconCache(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int)
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.modules.network.ProgressRequestBody$1: void write(byte[],int,int)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
okhttp3.HttpUrl$Builder$Companion: int portColonOffset(java.lang.String,int,int)
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForViewManagerClass(java.lang.Class)
okio.ForwardingTimeout: long deadlineNanoTime()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$3600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent(java.lang.String,int,int)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void close()
okhttp3.internal.http2.Http2Stream$FramingSource: void receive$okhttp(okio.BufferedSource,long)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
androidx.transition.FragmentTransitionSupport$2: void onTransitionPause(androidx.transition.Transition)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleUpAnimation(android.view.animation.Animation$AnimationListener)
com.horcrux.svg.PathParser: boolean is_number_start(char)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: LayoutUpdateAnimation()
com.horcrux.svg.MaskView: void setX(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
okhttp3.internal.Util: void addIfAbsent(java.util.List,java.lang.Object)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.Postprocessor getPostprocessor()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ThumbnailBranchProducer newThumbnailBranchProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[])
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.drawee.generic.WrappingUtils: void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayDeque access$2800(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void onSuccess(java.lang.Object)
com.swmansion.rnscreens.ScreenContainer: void tryCommitTransaction()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.SwallowResultProducer newSwallowResultProducer(com.facebook.imagepipeline.producers.Producer)
com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFullFormat(java.util.Locale)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionStart(android.transition.Transition)
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: android.media.ExifInterface getExifInterface(android.net.Uri)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.swmansion.rnscreens.ScreenStack: void access$performDraw(com.swmansion.rnscreens.ScreenStack,com.swmansion.rnscreens.ScreenStack$DrawingOp)
com.google.android.material.chip.Chip: void onRtlPropertiesChanged(int)
kotlin.collections.AbstractList$SubList: AbstractList$SubList(kotlin.collections.AbstractList,int,int)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
com.facebook.imagepipeline.common.ResizeOptions: ResizeOptions(int,int,float)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean hasStableIds()
com.facebook.react.uimanager.UIImplementationProvider: UIImplementationProvider()
com.facebook.react.modules.debug.DevSettingsModule$1: DevSettingsModule$1(com.facebook.react.modules.debug.DevSettingsModule)
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.collection.LongSparseArray: int size()
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
com.google.android.material.transformation.ExpandableTransformationBehavior$1: ExpandableTransformationBehavior$1(com.google.android.material.transformation.ExpandableTransformationBehavior)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
com.facebook.imagepipeline.image.EncodedImage: EncodedImage(com.facebook.common.references.CloseableReference)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float)
com.facebook.react.modules.debug.FpsDebugFrameCallback: double getFPS()
com.facebook.soloader.SysUtil: void deleteOrThrow(java.io.File)
com.facebook.react.views.text.ReactTextUpdate: int getTextAlign()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onEdgeDragStarted(int,int)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentManager: void moveToState(int,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
com.facebook.react.animated.NativeAnimatedModule$20: NativeAnimatedModule$20(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.TextAttributeProps: void setColor(java.lang.Integer)
com.facebook.react.views.scroll.ScrollEvent: void init(int,int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(byte[])
com.google.android.material.datepicker.MaterialCalendar$3: void onDayClick(long)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: AppCompatDelegateImpl$AppCompatWindowCallback(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
okhttp3.internal.connection.Exchange: okio.Sink createRequestBody(okhttp3.Request,boolean)
com.facebook.soloader.ApplicationSoSource: java.io.File unpackLibrary(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.google.android.material.textfield.IndicatorViewController: void setHelperTextViewTextColor(android.content.res.ColorStateList)
com.facebook.react.views.text.TextAttributeProps: void setAccessibilityRole(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
com.facebook.drawee.view.DraweeHolder: void setController(com.facebook.drawee.interfaces.DraweeController)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.os.Parcelable onSaveInstanceState()
com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$102(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
com.facebook.imagepipeline.image.CloseableStaticBitmap: CloseableStaticBitmap(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.transition.Transition: void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinecap(android.view.View,int)
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.view.menu.CascadingMenuPopup: void updateMenuView(boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(android.view.ViewGroup,boolean)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
okhttp3.internal.http.DatesKt: java.util.Date toHttpDateOrNull(java.lang.String)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.uimanager.BaseViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getDefaultThemeDrawable(android.content.Context)
androidx.fragment.app.FragmentManager: void makeActive(androidx.fragment.app.Fragment)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.UseView: void setY(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.facebook.datasource.DataSources: com.facebook.datasource.DataSource immediateFailedDataSource(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setVectorEffect(android.view.View,int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoderConfig getImageDecoderConfig()
com.facebook.common.executors.StatefulRunnable: void run()
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void onDataSourceFailed(int,com.facebook.datasource.DataSource)
com.facebook.imagepipeline.cache.CountingLruMap: java.util.ArrayList removeAll(com.facebook.common.internal.Predicate)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.animated.NativeAnimatedNodesManager: boolean access$202(com.facebook.react.animated.NativeAnimatedNodesManager,boolean)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.collections.AbstractList$ListIteratorImpl: AbstractList$ListIteratorImpl(kotlin.collections.AbstractList,int)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
okio.Buffer: okio.BufferedSink emit()
com.google.android.material.chip.Chip$ChipTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.imagepipeline.producers.MultiplexProducer: java.lang.String access$1000(com.facebook.imagepipeline.producers.MultiplexProducer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void invalidateSpanAssignments()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void invalidateAnchorPositionInfo()
com.facebook.soloader.SoSource: SoSource()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.animated.DiffClampAnimatedNode: DiffClampAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.google.android.material.internal.NavigationMenuItemView: boolean prefersCondensedTitle()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getFirstAvailableDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object[],boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp()
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void doFrameGuarded(long)
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateFirstChildView()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontWeight(android.view.View,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.soloader.SoSource: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence getHintText()
kotlin.collections.EmptySet: boolean add(java.lang.Object)
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
com.google.android.material.textfield.CutoutDrawable: boolean hasCutout()
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: void preVisitDirectory(java.io.File)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.io.Closeable)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
androidx.transition.Visibility$DisappearListener: void onAnimationStart(android.animation.Animator)
androidx.appcompat.view.menu.CascadingMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.shape.RoundedCornerTreatment: void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float)
com.google.android.material.chip.Chip: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)
okhttp3.internal.connection.RealConnectionPool: long cleanup(long)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void draw(android.graphics.Canvas)
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
androidx.transition.ViewUtilsBase: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.cache.common.CacheKeyUtil: java.lang.String getFirstResourceId(com.facebook.cache.common.CacheKey)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.google.android.material.resources.MaterialAttributes: android.util.TypedValue resolve(android.content.Context,int)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: NativeViewHierarchyManager$PopupMenuCallbackHandler(com.facebook.react.bridge.Callback,com.facebook.react.uimanager.NativeViewHierarchyManager$1)
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: TextInputLayout$AccessibilityDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()
androidx.recyclerview.widget.FastScroller: void show()
com.facebook.yoga.YogaNodeJNIBase: void setDisplay(com.facebook.yoga.YogaDisplay)
com.swmansion.rnscreens.events.ScreenDismissedEvent: java.lang.String getEventName()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
androidx.transition.ViewUtilsApi29: ViewUtilsApi29()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: CircularProgressDrawable$2(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring)
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.google.android.material.bottomappbar.BottomAppBar: void createFabTranslationXAnimation(int,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.facebook.imagepipeline.memory.BasePool$Counter: void increment(int)
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
com.facebook.soloader.DirectorySoSource: DirectorySoSource(java.io.File,int)
okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$102(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onMemoryCachePut(com.facebook.cache.common.CacheKey)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect)
com.horcrux.svg.GlyphPathBag: android.graphics.Path getOrCreateAndCache(char,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.imagepipeline.request.ImageRequest$RequestLevel convertCacheLevelToRequestLevel(com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)
com.facebook.react.views.scroll.ReactScrollView: void reactSmoothScrollTo(int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setUseheight(android.view.View,java.lang.String)
com.swmansion.rnscreens.events.ScreenWillAppearEvent: ScreenWillAppearEvent(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void onFailure(com.facebook.datasource.DataSource)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()
okhttp3.HttpUrl: java.lang.String scheme()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipRule(android.view.View,int)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.SnapHelper$1: SnapHelper$1(androidx.recyclerview.widget.SnapHelper)
androidx.fragment.app.FragmentManager: boolean isStateSaved()
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: RecyclerView$LayoutManager$Properties()
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
okhttp3.CacheControl: java.lang.String toString()
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.internal.NavigationMenuItemView: boolean shouldExpandActionArea()
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
androidx.lifecycle.ViewModel: void onCleared()
okhttp3.internal.connection.RouteSelector$Companion: java.lang.String getSocketHost(java.net.InetSocketAddress)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,float)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.references.CloseableReference referenceToClose(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.android.material.internal.NavigationMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.google.android.material.resources.TextAppearance: void createFallbackFont()
com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent(java.lang.String,int)
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
androidx.appcompat.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
com.horcrux.svg.LineView: LineView(com.facebook.react.bridge.ReactContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.button.MaterialButton: void updateIconPosition()
kotlin.jvm.internal.StringCompanionObject: StringCompanionObject()
okhttp3.ConnectionSpec: java.lang.String toString()
com.google.android.material.chip.Chip: void setCheckable(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void repositionToWrapContentIfNecessary()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderAlpha(int,float)
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
kotlin.collections.AbstractList: java.util.ListIterator listIterator(int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void releaseDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,java.lang.String)
com.facebook.yoga.YogaEdge: int intValue()
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager access$000(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.modules.network.ReactCookieJarContainer: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])
androidx.transition.TransitionListenerAdapter: void onTransitionPause(androidx.transition.Transition)
com.google.android.material.textfield.TextInputLayout: void applyStartIconTint()
com.facebook.react.ReactDelegate: ReactDelegate(android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle)
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.Dns getDns$okhttp()
com.zoontek.rnbootsplash.RNBootSplashModule: void show(boolean,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setCornersRadii(float,float,float,float)
com.facebook.binaryresource.FileBinaryResource: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView$State: boolean hasTargetScrollPosition()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
com.horcrux.svg.RNSVGMarkerType: RNSVGMarkerType(java.lang.String,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
com.facebook.imagepipeline.memory.BitmapCounter: boolean increase(android.graphics.Bitmap)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapPrepareProducer newBitmapPrepareProducer(com.facebook.imagepipeline.producers.Producer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
okhttp3.ResponseBody: java.io.InputStream byteStream()
com.swmansion.rnscreens.events.ScreenDisappearEvent: ScreenDisappearEvent(int)
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.appcompat.app.AlertController: void setMessage(java.lang.CharSequence)
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isContentSpecificHeader(java.lang.String)
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)
okio.-Util: void checkOffsetAndCount(long,long,long)
androidx.appcompat.widget.TintContextWrapper: TintContextWrapper(android.content.Context)
com.facebook.common.references.SharedReference$NullReferenceException: SharedReference$NullReferenceException()
com.swmansion.rnscreens.ScreenStack: void notifyContainerUpdate()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int readIntValue(int)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.recyclerview.widget.RecyclerView$SavedState: void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)
com.facebook.yoga.YogaNodeJNIBase: void setPaddingPercent(com.facebook.yoga.YogaEdge,float)
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prependViewToAllSpans(android.view.View)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.lang.Object getImageInfo(java.lang.Object)
okhttp3.Cache$Companion: Cache$Companion()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable applyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1: float calculateSpeedPerPixel(android.util.DisplayMetrics)
com.facebook.drawee.backends.pipeline.info.ImageOriginUtils: int mapProducerNameToImageOrigin(java.lang.String)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setInvisibilityEventTimeMs(long)
com.facebook.react.views.textinput.ReactEditText: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactEditText access$100(com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(java.util.EnumSet)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
okio.Options$Companion: void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$2: UIViewOperationQueue$2(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,java.lang.String)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.transition.ViewUtilsApi21: ViewUtilsApi21()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.facebook.react.uimanager.ReactRootViewTagGenerator: int getNextRootViewTag()
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: ReactContentSizeChangedEvent(int,int,float,float)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void i(java.lang.String,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior$3: int clampViewPositionHorizontal(android.view.View,int,int)
com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
com.facebook.imagepipeline.memory.LruBitmapPool: LruBitmapPool(int,int,com.facebook.imagepipeline.memory.PoolStatsTracker,com.facebook.common.memory.MemoryTrimmableRegistry)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okio.Buffer: okio.Buffer write(byte[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.RequestBody$Companion$toRequestBody$1: void writeTo(okio.BufferedSink)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: LinearLayoutManager$SavedState$1()
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()
com.facebook.cache.disk.DiskCacheConfig$Builder: java.lang.String access$400(com.facebook.cache.disk.DiskCacheConfig$Builder)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)
androidx.core.text.PrecomputedTextCompat: int length()
com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
com.facebook.common.util.UriUtil: boolean isNetworkUri(android.net.Uri)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.util.List invoke()
com.facebook.react.uimanager.ViewAtIndex: boolean equals(java.lang.Object)
com.facebook.imagepipeline.producers.MultiplexProducer: MultiplexProducer(com.facebook.imagepipeline.producers.Producer,java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.viewmanagers.RNSVGClipPathManagerDelegate: RNSVGClipPathManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.soloader.SoLoader: boolean isInitialized()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)
com.facebook.common.executors.HandlerExecutorServiceImpl: com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.util.concurrent.Callable)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.horcrux.svg.VirtualView: int saveAndSetupCanvas(android.graphics.Canvas,android.graphics.Matrix)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
okhttp3.internal.connection.RealCall: void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.picker.ReactDialogPickerManager: ReactDialogPickerManager()
androidx.collection.MapCollections: java.util.Set getEntrySet()
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.content.ContentResolver access$200(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer)
com.facebook.drawee.controller.AbstractDraweeController$1: AbstractDraweeController$1(com.facebook.drawee.controller.AbstractDraweeController)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
androidx.appcompat.app.AppCompatDelegateImpl$3: AppCompatDelegateImpl$3(androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: boolean canCoalesce()
androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getSmallByteArrayPoolParams()
com.facebook.react.MemoryPressureRouter: void onConfigurationChanged(android.content.res.Configuration)
androidx.transition.Transition: java.util.List getTargetIds()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)
com.swmansion.rnscreens.ScreenContainer: boolean hasScreen(com.swmansion.rnscreens.ScreenFragment)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.google.android.material.animation.ImageMatrixProperty: ImageMatrixProperty()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillRule(android.view.View,int)
com.facebook.react.ReactDelegate: void onHostDestroy()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.view.DraweeHolder: void attachOrDetachController()
androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)
androidx.fragment.app.FragmentStore: void resetActiveFragments()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate: AndroidProgressBarManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
okhttp3.Dispatcher: Dispatcher()
com.google.android.material.datepicker.MaterialCalendarGridView: void setSelection(int)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.animated.AnimatedNode: void onDetachedFromNode(com.facebook.react.animated.AnimatedNode)
com.facebook.imagepipeline.memory.Bucket: void release(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$2: AppCompatSpinner$2(androidx.appcompat.widget.AppCompatSpinner)
com.facebook.react.modules.network.NetworkingModule: void initialize()
okio.AsyncTimeout: long access$remainingNanos(okio.AsyncTimeout,long)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.transcoder.ImageTranscodeResult: ImageTranscodeResult(int)
com.google.android.material.datepicker.MaterialCalendar$4: MaterialCalendar$4(com.google.android.material.datepicker.MaterialCalendar)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.swmansion.rnscreens.ScreenStackFragment: boolean canNavigateBack()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: PartialDiskCacheProducer(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.Producer)
com.google.android.material.datepicker.MaterialTextInputPicker$1: MaterialTextInputPicker$1(com.google.android.material.datepicker.MaterialTextInputPicker)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
okio.Okio__JvmOkioKt: okio.Sink appendingSink(java.io.File)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.google.android.material.bottomappbar.BottomAppBar: android.os.Parcelable onSaveInstanceState()
androidx.transition.Transition: void start()
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
okio.Options$Companion: okio.Options of(okio.ByteString[])
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: FastScroller$AnimatorUpdater(androidx.recyclerview.widget.FastScroller)
com.google.android.material.appbar.AppBarLayout$2: void onAnimationUpdate(android.animation.ValueAnimator)
okio.RealBufferedSink: okio.BufferedSink emit()
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: SearchView$SearchAutoComplete$1(androidx.appcompat.widget.SearchView$SearchAutoComplete)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] $values()
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPosition(int)
com.facebook.react.LazyReactPackage$2$1: LazyReactPackage$2$1(com.facebook.react.LazyReactPackage$2)
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
androidx.transition.ChangeBounds$9: void onTransitionResume(androidx.transition.Transition)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.Adapter)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
okhttp3.internal.http1.Http1ExchangeCodec: void flushRequest()
com.facebook.imagepipeline.cache.BufferedDiskCache$6: java.lang.Object call()
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3: void applyTransformation(float,android.view.animation.Transformation)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory()
com.google.android.material.chip.ChipDrawable: void setChipMinHeightResource(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMask(android.view.View,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)
com.facebook.common.references.CloseableReference$1: void release(java.lang.Object)
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener create(okhttp3.Call)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
okhttp3.CipherSuite$Companion: java.util.Comparator getORDER_BY_NAME$okhttp()
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.zoontek.rnbootsplash.RNBootSplashModule: void hide(com.zoontek.rnbootsplash.RNBootSplashTask)
androidx.versionedparcelable.VersionedParcel: boolean isStream()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.datasource.DataSource getDataSourceWithResult()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator(float)
androidx.recyclerview.widget.ChildHelper: boolean removeViewIfHidden(android.view.View)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
com.facebook.react.ReactInstanceManager: java.lang.Thread access$1202(com.facebook.react.ReactInstanceManager,java.lang.Thread)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSIModulesPackage(com.facebook.react.bridge.JSIModulePackage)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.SearchView: void updateFocusedState()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void setImageExtras(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.CloseableImage)
com.facebook.drawee.view.AspectRatioMeasure: void updateMeasureSpec(com.facebook.drawee.view.AspectRatioMeasure$Spec,float,android.view.ViewGroup$LayoutParams,int,int)
okhttp3.Address: java.util.List protocols()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.common.util.UriUtil: android.net.Uri getUriForResourceId(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setPrefetch(boolean)
okhttp3.internal.http2.Settings: int getHeaderTableSize()
com.zoontek.rnbootsplash.RNBootSplashModule: void init(int,android.app.Activity)
com.facebook.drawee.controller.AbstractDraweeController$2: void onNewResultImpl(com.facebook.datasource.DataSource)
com.facebook.react.animated.NativeAnimatedModule$20: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int clamp(int,int,int)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,java.lang.String,short)
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode defaultTileMode()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
com.facebook.common.references.SharedReference: int decreaseRefCount()
com.facebook.imagepipeline.producers.SwallowResultProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.bottomsheet.BottomSheetBehavior$2: BottomSheetBehavior$2(com.google.android.material.bottomsheet.BottomSheetBehavior)
okhttp3.Cache: void close()
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.ByteArrayPool getSmallByteArrayPool()
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: OkHttpNetworkFetcher(okhttp3.OkHttpClient)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStarted()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.imagepipeline.cache.CountingLruMap: int getSizeInBytes()
com.horcrux.svg.RNSVGMarkerPosition: boolean isZero(com.horcrux.svg.Point)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.drawee.drawable.ForwardingDrawable: boolean getPadding(android.graphics.Rect)
com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnFailure(java.lang.Exception)
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$500()
com.facebook.imagepipeline.core.ImagePipelineExperiments: int getTrackedKeysSize()
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
com.facebook.drawee.controller.AbstractDraweeController: void setContentDescription(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.core.CloseableReferenceFactory access$1100(com.facebook.imagepipeline.producers.DecodeProducer)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
com.facebook.common.statfs.StatFsHelper: android.os.StatFs updateStatsHelper(android.os.StatFs,java.io.File)
com.facebook.drawee.controller.AbstractDraweeController: void reportIntermediateSet(java.lang.String,java.lang.Object)
com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.LazyReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: NativeJpegTranscoder(boolean,int,boolean,boolean)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(android.view.View,java.lang.String)
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,char[],boolean,int)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
com.facebook.cache.common.SimpleCacheKey: SimpleCacheKey(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPendingContentOffsets(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[])
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: boolean equals(java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
kotlin.comparisons.ReverseOrderComparator: java.util.Comparator reversed()
com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.common.webp.WebpSupportStatus: boolean matchBytePattern(byte[],int,byte[])
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.String,int)
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
androidx.cardview.widget.CardViewBaseImpl: void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
okhttp3.internal.http2.Huffman: Huffman()
androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)
com.horcrux.svg.SvgViewManager: void setBbHeight(android.view.View,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
com.horcrux.svg.UseView: void setWidth(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: void destruct()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.facebook.react.views.textinput.ReactTextInputManager$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)
com.google.android.material.bottomappbar.BottomAppBar: void access$1000(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColorHint(android.content.Context)
com.horcrux.svg.SegmentData: SegmentData()
androidx.appcompat.widget.SearchView$5: void onClick(android.view.View)
com.horcrux.svg.PatternView: void setMinX(float)
androidx.recyclerview.widget.ViewInfoStore: void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.internal.concurrent.Task: void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
com.facebook.drawee.controller.ForwardingControllerListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.ReactPackageHelper$1: java.util.Iterator iterator()
com.facebook.react.animated.NativeAnimatedNodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
okhttp3.Response: java.util.List challenges()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRectheight(com.horcrux.svg.RectView,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$1: ScrollingTabContainerView$1(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: java.lang.Object getItem(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
okio.RealBufferedSource: long readDecimalLong()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
okhttp3.internal.http2.Http2Connection: void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.drawee.controller.AbstractDraweeController$2: void onProgressUpdate(com.facebook.datasource.DataSource)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
okio.AsyncTimeout$Watchdog: AsyncTimeout$Watchdog()
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
androidx.appcompat.widget.ResourcesWrapper: float getDimension(int)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabCradleRoundedCornerRadius(float)
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl$okhttp(long)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updatePadding()
com.google.android.material.chip.ChipDrawable: void setChipIconTint(android.content.res.ColorStateList)
okhttp3.Response$Builder: void initExchange$okhttp(okhttp3.internal.connection.Exchange)
androidx.transition.TransitionSet: void setPathMotion(androidx.transition.PathMotion)
com.google.android.material.chip.Chip: boolean handleAccessibilityExit(android.view.MotionEvent)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.imagepipeline.producers.BaseConsumer: void onProgressUpdate(float)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: DefaultItemAnimator$MoveInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.facebook.react.jstasks.HeadlessJsTaskContext$1: HeadlessJsTaskContext$1(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void destroy()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)
com.horcrux.svg.ImageView: void setAlign(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.lang.String query()
okhttp3.internal.cache.DiskLruCache$Entry: void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.drawee.controller.AbstractDraweeController: void setControllerOverlay(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipDrawable: ChipDrawable(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.ReactInstanceManager$ReactContextInitParams: ReactInstanceManager$ReactContextInitParams(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)
androidx.appcompat.app.AppCompatDialog$1: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.Fragment: android.content.Context getContext()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
okhttp3.internal.connection.RealCall: java.io.IOException callDone(java.io.IOException)
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void onLayoutUpdate(int,int,int,int)
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean hasActiveTasks()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
com.facebook.react.uimanager.UIManagerModule: void preInitializeViewManagers(java.util.List)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry()
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
com.facebook.drawee.drawable.ScaleTypeDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)
kotlin.collections.EmptySet: java.lang.Object[] toArray()
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onFailureImpl(java.lang.Throwable)
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopRightCorner()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.google.android.material.floatingactionbutton.FloatingActionButton: void onMeasure(int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.th3rdwave.safeareacontext.SafeAreaProvider: void onDetachedFromWindow()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewReleased(android.view.View,float,float)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.horcrux.svg.GlyphContext: com.horcrux.svg.SVGLength[] getStringArrayFromReadableArray(java.util.ArrayList)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,int,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
com.facebook.react.uimanager.FabricViewStateManager: void setState(com.facebook.react.uimanager.FabricViewStateManager$StateUpdateCallback)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.concurrent.TaskRunner: void runTask(okhttp3.internal.concurrent.Task)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: boolean isTaskCancelled(bolts.Task)
com.facebook.react.views.scroll.ReactScrollView$3: void onAnimationStart(android.animation.Animator)
kotlin.collections.EmptyMap: java.util.Set getEntries()
com.facebook.imagepipeline.memory.MemoryChunkPool: int getBucketedSizeForValue(com.facebook.imagepipeline.memory.MemoryChunk)
okhttp3.internal.Util: boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
com.facebook.react.views.textinput.ReactTextChangedEvent: ReactTextChangedEvent(int,int,java.lang.String,int)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: PushObserver$Companion$PushObserverCancel()
com.coinapp.MainApplication: void onCreate()
com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String,java.lang.Object[])
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
okhttp3.internal.cache.DiskLruCache$Entry: void setReadable$okhttp(boolean)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
com.facebook.imagepipeline.producers.EncodedProbeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] $values()
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getParent()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void setSourceImageRef(com.facebook.common.references.CloseableReference)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void updateImageRequestData(com.facebook.drawee.controller.AbstractDraweeControllerBuilder)
com.facebook.react.views.picker.ReactPicker$1: void onNothingSelected(android.widget.AdapterView)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read(byte[],int,int)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ScrollEventType: ScrollEventType(java.lang.String,int)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
com.facebook.common.statfs.StatFsHelper: android.os.StatFs createStatFs(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.facebook.drawee.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: AccessibilityInfoModule$ReactTouchExplorationStateChangeListener(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinStart(int)
com.swmansion.rnscreens.Screen: void setLayerType(int,android.graphics.Paint)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVectorEffect(android.view.View,int)
com.facebook.react.modules.dialog.DialogModule$1: DialogModule$1(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper,android.os.Bundle,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(android.view.View,int)
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdates(int)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.io.Closeable,com.facebook.common.references.CloseableReference$LeakHandler)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void run()
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Combine(double[],double[],double,double)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.horcrux.svg.SvgViewManager: void setMinX(android.view.View,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(android.view.View,java.lang.String)
kotlin.ranges.IntProgressionIterator: boolean hasNext()
okhttp3.internal.http2.Hpack$Reader: int readByte()
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.disk.DiskTrimmableRegistry access$1100(com.facebook.cache.disk.DiskCacheConfig$Builder)
androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)
com.facebook.react.modules.statusbar.StatusBarModule$2: void runGuarded()
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen$ActivityState getActivityState(com.swmansion.rnscreens.ScreenFragment)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isExperimentalThreadHandoffQueueEnabled()
androidx.fragment.app.FragmentManager: void dispatchResume()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.os.MemoryFile copyToMemoryFile(com.facebook.common.references.CloseableReference,int,byte[])
com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnSuccess(java.lang.Object)
okhttp3.internal.Util: long toLongOrDefault(java.lang.String,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9: DropdownMenuEndIconDelegate$9(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.appcompat.view.menu.CascadingMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
kotlin.collections.AbstractList$IteratorImpl: AbstractList$IteratorImpl(kotlin.collections.AbstractList)
androidx.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)
com.google.android.material.datepicker.MonthAdapter: void initializeStyles(android.content.Context)
androidx.core.view.ViewCompat: android.graphics.Rect getEmptyTempRect()
com.horcrux.svg.PathParser: void arc(float,float,float,boolean,boolean,float,float)
com.google.android.material.shape.ShapeAppearanceModel$Builder: ShapeAppearanceModel$Builder()
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2: void run()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: long runOnce()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)
androidx.transition.Transition: void animate(android.animation.Animator)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidthPercent(float)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void close()
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall)
com.google.android.material.datepicker.MaterialCalendar$2: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])
com.facebook.common.util.UriUtil: boolean isLocalContentUri(android.net.Uri)
androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(int)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.UIImplementation: void onCatalystInstanceDestroyed()
androidx.recyclerview.widget.FastScroller$AnimatorListener: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,int,boolean)
com.facebook.imageformat.ImageFormatCheckerUtils: boolean hasPatternAt(byte[],byte[],int)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.soloader.NativeLoaderToSoLoaderDelegate: NativeLoaderToSoLoaderDelegate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
okio.RealBufferedSink: RealBufferedSink(okio.Sink)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: OpacityAnimation(android.view.View,float,float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.horcrux.svg.TextProperties$FontWeight: java.lang.String toString()
okhttp3.Cache: void setWriteAbortCount$okhttp(int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ExecutorSupplier getExecutorSupplier()
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.views.text.ReactVirtualTextShadowNode: boolean isVirtual()
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackFragment: void setToolbar(androidx.appcompat.widget.Toolbar)
com.facebook.imageformat.ImageFormatChecker: int readHeaderFromStream(int,java.io.InputStream,byte[])
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onBitmapCachePut(com.facebook.cache.common.CacheKey)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleHeight()
okio.ByteString: okio.ByteString digest$okio(java.lang.String)
com.facebook.imagepipeline.cache.BufferedDiskCache: boolean containsSync(com.facebook.cache.common.CacheKey)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
okio.RealBufferedSink: okio.BufferedSink write(byte[],int,int)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)
com.google.android.material.behavior.SwipeDismissBehavior$1: void onViewDragStateChanged(int)
com.google.android.material.datepicker.YearGridAdapter: android.view.View$OnClickListener createYearClickListener(int)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: BottomSheetDialogFragment$BottomSheetDismissCallback(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
okhttp3.CipherSuite: java.util.Comparator access$getORDER_BY_NAME$cp()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
okio.ByteString$Companion: okio.ByteString decodeBase64(java.lang.String)
androidx.cardview.widget.RoundRectDrawable: void setColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: void run()
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int getBestScanNumber()
com.facebook.react.common.futures.SimpleSettableFuture: void setException(java.lang.Exception)
bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
okhttp3.internal.http2.Huffman$Node: int getTerminalBitCount()
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: MemoryPooledByteBufferOutputStream(com.facebook.imagepipeline.memory.MemoryChunkPool,int)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout$2: AppBarLayout$2(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.List shutdownNow()
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getDirectEventTypeConstants()
com.facebook.common.internal.ImmutableMap: ImmutableMap(java.util.Map)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean getChangedAfterNestedScroll()
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.lang.Runnable)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: ForwardingImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener[])
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void responseBodyComplete()
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
com.facebook.cache.disk.DiskStorageCache: boolean access$100(com.facebook.cache.disk.DiskStorageCache)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.drawee.backends.pipeline.info.ImagePerfData snapshot()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: void onAnimationEnd(android.animation.Animator)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: ImagePipelineConfig$Builder(android.content.Context)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.ProducerContext access$000(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
okhttp3.internal.connection.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)
com.google.android.material.chip.ChipDrawable: boolean isCheckable()
okio.Buffer: okio.Buffer writeByte(int)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String getMsg(java.lang.String,java.lang.Throwable)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.google.android.material.appbar.ViewOffsetHelper: void onViewLayout()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean deleteSurroundingText(int,int)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
androidx.collection.ArraySet: void ensureCapacity(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.drawee.generic.WrappingUtils: void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams)
okhttp3.internal.connection.RealCall: java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall)
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(double)
com.facebook.react.modules.network.RequestBodyUtil$1: void writeTo(okio.BufferedSink)
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewAttachedToWindow(android.view.View)
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)
com.facebook.common.file.FileTree: void walkFileTree(java.io.File,com.facebook.common.file.FileTreeVisitor)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void runIfNecessary(androidx.recyclerview.widget.RecyclerView)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.Util: java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset)
com.facebook.react.common.MapBuilder$Builder: com.facebook.react.common.MapBuilder$Builder put(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: int getValue()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveToStart(float)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskStart(int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.react.views.textinput.ReactTextInputShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
okio.Options: int lastIndexOf(okio.ByteString)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.recyclerview.widget.AdapterHelper: boolean hasUpdates()
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.transition.TransitionSet$TransitionSetListener: TransitionSet$TransitionSetListener(androidx.transition.TransitionSet)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_CONNECTION_SPECS$okhttp()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void startListening()
com.facebook.react.perflogger.NativeModulePerfLogger: NativeModulePerfLogger()
com.facebook.react.animated.NativeAnimatedNodesManager: void dropAnimatedNode(int)
com.google.android.material.chip.ChipDrawable: int getAlpha()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.fragment.app.FragmentAnim$1: void onCancel()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPadding(int,float)
com.facebook.react.views.image.ReactImageView: boolean isTiled()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.modules.statusbar.StatusBarModule$1$1: StatusBarModule$1$1(com.facebook.react.modules.statusbar.StatusBarModule$1)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void registerBitmapMemoryCache(com.facebook.imagepipeline.cache.MemoryCache)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
androidx.transition.ViewGroupOverlayApi18: ViewGroupOverlayApi18(android.view.ViewGroup)
androidx.recyclerview.widget.ChildHelper: boolean unhideViewInternal(android.view.View)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderRadius(float,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextUpdate: int getSelectionStart()
androidx.appcompat.widget.AppCompatProgressBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.horcrux.svg.MaskView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: StateListDrawable$StateListState(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: ReactTextInputManager$ReactTextInputTextWatcher(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
com.facebook.drawee.components.RetryManager: boolean shouldRetryOnTap()
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5: boolean onPreDraw()
com.facebook.soloader.UnpackingSoSource: UnpackingSoSource(android.content.Context,java.lang.String)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontStyle(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenWidth()
okhttp3.internal.http2.Http2Connection: void start(boolean,okhttp3.internal.concurrent.TaskRunner)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.TooltipCompatHandler: void hide()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.cache.disk.DiskCacheConfig: android.content.Context access$200(com.facebook.cache.disk.DiskCacheConfig)
com.facebook.react.views.text.CustomLetterSpacingSpan: CustomLetterSpacingSpan(float)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)
com.facebook.soloader.UnpackingSoSource$DsoManifest: void write(java.io.DataOutput)
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
androidx.appcompat.widget.AppCompatHintHelper: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View)
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,java.lang.String)
com.facebook.imagepipeline.memory.PoolConfig$Builder: PoolConfig$Builder()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long runOnce()
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void onFailureImpl(java.lang.Throwable)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
androidx.collection.LruCache: void trimToSize(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.coordinatorlayout.widget.CoordinatorLayout: void ensurePreDrawListener()
androidx.appcompat.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)
com.horcrux.svg.SymbolView: void setVbWidth(float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
okhttp3.Cookie$Companion: Cookie$Companion()
com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])
androidx.transition.Transition: long getDuration()
com.google.android.material.button.MaterialButton: boolean isCheckable()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollView$3: void onAnimationEnd(android.animation.Animator)
com.facebook.imageutils.BitmapUtil: android.util.Pair decodeDimensions(java.io.InputStream)
com.horcrux.svg.PathParser: android.graphics.Path parse(java.lang.String)
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void add(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
okhttp3.internal.cache.DiskLruCache: void delete()
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.drawee.controller.ForwardingControllerListener: void addListener(com.facebook.drawee.controller.ControllerListener)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
com.facebook.cache.disk.DefaultDiskStorage: java.util.List getEntries()
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
okhttp3.internal.ws.RealWebSocket: void loopReader()
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAllNativeChildren()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.facebook.react.uimanager.events.Event: void init(int,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.cardview.widget.CardViewBaseImpl: float getRadius(androidx.cardview.widget.CardViewDelegate)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.views.textinput.ReactEditText: void updateImeOptions()
androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)
androidx.appcompat.view.menu.CascadingMenuPopup: int getInitialMenuPosition()
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: AndroidSwitchManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
bolts.AndroidExecutors: void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean)
com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
com.google.android.material.appbar.AppBarLayout: android.view.View findLiftOnScrollTargetView(android.view.View)
androidx.fragment.app.FragmentManager$PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
com.facebook.react.uimanager.ThemedReactContext: boolean hasCurrentActivity()
androidx.collection.LongSparseArray: java.lang.Object get(long)
androidx.transition.TransitionSet: androidx.transition.TransitionSet addTransition(androidx.transition.Transition)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: DeferredReleaserConcurrentImpl()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.ReactInstanceManager: void onHostDestroy()
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy getRetryPolicy()
com.facebook.imagepipeline.platform.ArtDecoder: ArtDecoder(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)
com.facebook.drawee.controller.AbstractDraweeController$2: void onFailureImpl(com.facebook.datasource.DataSource)
okhttp3.Response: java.lang.String message()
com.facebook.react.views.slider.ReactSlider: void setValue(double)
okhttp3.internal.cache.DiskLruCache$Entry: long getSequenceNumber$okhttp()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.horcrux.svg.PathParser: void setPenDown()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onFinishTemporaryDetach()
com.facebook.drawee.controller.AbstractDraweeController$1: void onShownImmediately()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float getStartingStartTrim()
com.facebook.drawee.controller.AbstractDraweeController$2: AbstractDraweeController$2(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,boolean)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4: void onClick(android.view.View)
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext)
androidx.core.content.res.ResourcesCompat$FontCallback$2: void run()
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.horcrux.svg.TSpanView: double getTextAnchorOffset(com.horcrux.svg.TextProperties$TextAnchor,double)
com.facebook.react.animated.NativeAnimatedModule$19: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.bridge.ReactSoftException: void clearListeners()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
androidx.recyclerview.widget.OrientationHelper$1: int getEnd()
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getRotationAngle(java.lang.String)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.react.uimanager.events.TouchEvent: float getViewY()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void setCustomDrawableFactories(com.facebook.common.internal.ImmutableList)
com.facebook.drawee.drawable.DrawableUtils: int multiplyColorAlpha(int,int)
com.facebook.imagepipeline.producers.InternalProducerListener: void onProducerFinishWithSuccess(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.util.Map)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)
okhttp3.Request: java.lang.String header(java.lang.String)
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onTrimMemory(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int getBestScanEndOffset()
androidx.transition.ViewUtils$2: android.graphics.Rect get(android.view.View)
com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String,java.lang.Throwable)
com.google.android.material.chip.ChipDrawable: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
androidx.transition.WindowIdApi18: int hashCode()
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed$okhttp()
androidx.appcompat.widget.ActionBarOverlayLayout$3: ActionBarOverlayLayout$3(androidx.appcompat.widget.ActionBarOverlayLayout)
com.facebook.common.internal.Closeables: void close(java.io.Closeable,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: int getMaxCacheSize()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getScrollRangeForDragFling(android.view.View)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okhttp3.Request: java.lang.Object tag()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: boolean isSupported()
com.facebook.react.views.scroll.ReactScrollView: void smoothScrollAndSnap(int)
com.facebook.drawee.controller.ForwardingControllerListener: void clearListeners()
com.google.android.material.shape.ShapeAppearanceModel$Builder: float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment)
com.facebook.common.statfs.StatFsHelper: long getAvailableStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.bridge.NativeModule: void initialize()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void clearRunningAndStartIfDirty()
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
com.google.android.material.shape.ShapeAppearancePathProvider: float angleOfEdge(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.internal.CollapsingTextHelper: float getExpandedTextHeight()
androidx.cardview.widget.CardViewApi21Impl: androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()
okio.RealBufferedSink: okio.Buffer getBuffer()
com.facebook.react.uimanager.OnLayoutEvent: void init(int,int,int,int,int,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String prefixTag(java.lang.String)
com.facebook.react.modules.blob.BlobModule$2: com.facebook.react.bridge.WritableMap fetch(android.net.Uri)
com.facebook.soloader.UnpackingSoSource: java.io.File getSoStorePath(android.content.Context,java.lang.String)
androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerEvent(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostPause()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPadding(int,float)
androidx.recyclerview.widget.AdapterHelper: void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
okhttp3.internal.cache.DiskLruCache: void readJournal()
androidx.recyclerview.widget.GapWorker: androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long)
com.facebook.react.views.modal.RequestCloseEvent: java.lang.String getEventName()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int updateSpecWithExtra(int,int,int)
androidx.transition.ViewUtils: androidx.transition.WindowIdImpl getWindowId(android.view.View)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.facebook.react.uimanager.UIViewOperationQueue: java.util.Map getProfiledBatchPerfCounters()
okio.RealBufferedSource: okio.Timeout timeout()
androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: int getMaxDimensionPx()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.shape.MaterialShapeDrawable: float getBottomRightCornerResolvedSize()
okhttp3.Cookie: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.facebook.common.executors.HandlerExecutorServiceImpl: void shutdown()
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout$1: ActionBarOverlayLayout$1(androidx.appcompat.widget.ActionBarOverlayLayout)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipeline createImagePipeline()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
androidx.transition.FragmentTransitionSupport$3: void onTransitionStart(androidx.transition.Transition)
kotlin.collections.AbstractList: boolean addAll(int,java.util.Collection)
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: AppCompatSpinner$DropdownPopup$2(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.facebook.react.modules.core.JavaTimerManager: JavaTimerManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.JavaScriptTimerManager,com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.common.executors.HandlerExecutorServiceImpl: com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.lang.Runnable,java.lang.Object)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion()
com.facebook.common.executors.HandlerExecutorServiceImpl: boolean isShutdown()
com.facebook.imagepipeline.producers.BitmapProbeProducer: BitmapProbeProducer(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.producers.Producer)
com.facebook.datasource.AbstractDataSource: void notifyDataSubscriber(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor,boolean,boolean)
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getHelperText()
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
com.horcrux.svg.PatternView: void setVbHeight(float)
com.facebook.react.viewmanagers.RNSVGEllipseManagerDelegate: RNSVGEllipseManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
okio.Okio__JvmOkioKt: okio.Sink sink(java.net.Socket)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
androidx.fragment.app.FragmentTransition$1: void run()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(android.view.View,java.lang.String)
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
com.facebook.react.views.slider.ReactSlider: void updateAll()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isWebpSupportEnabled()
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getLastChildRect(android.view.View,android.graphics.Rect)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipRule(android.view.View,int)
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2: ThreadHandoffProducer$2(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)
androidx.transition.ChangeBounds$6: void set(android.view.View,android.graphics.PointF)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.bridge.JSIModule: void initialize()
com.horcrux.svg.MarkerView: void setMarkerHeight(com.facebook.react.bridge.Dynamic)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.google.android.material.card.MaterialCardView: float getProgress()
com.facebook.react.views.text.TextAttributes: void setAllowFontScaling(boolean)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setFadeDuration(int)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.facebook.yoga.YogaPositionType: int intValue()
com.google.android.material.internal.ThemeEnforcement: int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)
com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.CornerTreatment createCornerTreatment(int)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
androidx.transition.Transition: androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getVerticalOffset()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onEdgeTouched(int,int)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.Executor forDecode()
com.horcrux.svg.RectView: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)
com.facebook.datasource.DataSources: com.facebook.common.internal.Supplier getFailedDataSourceSupplier(java.lang.Throwable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onSizeChanged(int,int,int,int)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference cloneOrNull()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(android.view.View,java.lang.String)
androidx.recyclerview.widget.ChildHelper$Bucket: void ensureNext()
okhttp3.internal.concurrent.Task: java.lang.String toString()
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.facebook.react.ReactActivityDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDy(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(android.view.View,float)
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void onSuccess(java.lang.Object)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: boolean isFinished()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
kotlin.collections.EmptyList: java.util.List subList(int,int)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
com.google.android.material.chip.ChipGroup: void clearCheck()
com.facebook.drawee.generic.RoundingParams: int hashCode()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.switchview.ReactSwitchManager$1: void onCheckedChanged(android.widget.CompoundButton,boolean)
androidx.recyclerview.widget.SnapHelper$2: SnapHelper$2(androidx.recyclerview.widget.SnapHelper,android.content.Context)
com.facebook.datasource.AbstractDataSource: com.facebook.datasource.AbstractDataSource$DataSourceInstrumenter getDataSourceInstrumenter()
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.facebook.common.util.TriState: TriState(java.lang.String,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDefaultPadding(int,float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[])
com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(android.view.View,float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
okio.SegmentedByteString: SegmentedByteString(byte[][],int[])
okio.SegmentedByteString: okio.ByteString toByteString()
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater$okhttp()
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
androidx.core.provider.FontProvider$1: int compare(byte[],byte[])
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void jumpTo(int)
com.facebook.react.views.drawer.events.DrawerClosedEvent: DrawerClosedEvent(int,int)
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
com.google.android.material.resources.TextAppearance: android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)
com.facebook.react.uimanager.events.TouchEvent: void init(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.google.android.material.chip.ChipDrawable: void unapplyChildDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void recursiveMerge(java.util.Map,java.util.Map)
com.horcrux.svg.RenderableViewManager$MaskManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void run()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.modules.i18nmanager.I18nUtil: void setPref(android.content.Context,java.lang.String,boolean)
com.google.android.material.internal.TextDrawableHelper: float calculateTextWidth(java.lang.CharSequence)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.drawee.drawable.RoundedColorDrawable: void onBoundsChange(android.graphics.Rect)
com.google.android.material.chip.ChipDrawable: void setCloseIconStartPaddingResource(int)
com.google.android.material.datepicker.MaterialCalendar$10: void run()
com.facebook.react.uimanager.UIViewOperationQueue: long access$2100(com.facebook.react.uimanager.UIViewOperationQueue)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1(okhttp3.internal.cache.DiskLruCache$Editor,int)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.facebook.react.modules.network.CountingOutputStream: void write(int)
com.facebook.yoga.YogaEdge: YogaEdge(java.lang.String,int,int)
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.horcrux.svg.PathParser: void close()
androidx.transition.ViewUtils: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: java.lang.Object getItem(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setVectorEffect(android.view.View,int)
kotlin.collections.EmptyIterator: java.lang.Void next()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.transition.FragmentTransitionSupport: java.lang.Object cloneTransition(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setHorizontalOffset(float)
com.facebook.imagepipeline.image.ImmutableQualityInfo: ImmutableQualityInfo(int,boolean,boolean)
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(androidx.cursoradapter.widget.CursorAdapter)
com.swmansion.rnscreens.events.ScreenDismissedEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
com.google.android.material.bottomsheet.BottomSheetDialog$3: BottomSheetDialog$3(com.google.android.material.bottomsheet.BottomSheetDialog)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: boolean isCompatPaddingEnabled()
com.zoontek.rnbootsplash.RNBootSplashModule: android.widget.LinearLayout access$200(android.app.Activity,android.widget.LinearLayout$LayoutParams)
com.facebook.react.views.text.TextLayoutManagerMapBuffer$SetSpanOperation: TextLayoutManagerMapBuffer$SetSpanOperation(int,int,com.facebook.react.views.text.ReactSpan)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object[] getFirstAvailableImageRequests()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int,java.lang.Object[])
com.facebook.react.views.scroll.ReactScrollView$2: ReactScrollView$2(com.facebook.react.views.scroll.ReactScrollView)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationCancel(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory: com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry)
com.facebook.react.views.slider.ReactSlider: double toRealProgress(int)
com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.drawee.drawable.ArrayDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.transition.ViewUtilsApi21: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.facebook.react.animated.NativeAnimatedNodesManager: boolean hasActiveAnimations()
com.facebook.react.modules.core.ReactChoreographer: void access$100(com.facebook.react.modules.core.ReactChoreographer)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.facebook.react.ReactRootView: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.OrientationHelper$2: int getEnd()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: ViewGroupDrawingOrderHelper(android.view.ViewGroup)
androidx.transition.TransitionManager$MultiListener: void removeListeners()
com.facebook.react.modules.image.ImageLoaderModule$3: ImageLoaderModule$3(com.facebook.react.modules.image.ImageLoaderModule,int,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setImageheight(android.view.View,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onAttachedToWindow()
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList access$1500(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$202(com.facebook.react.devsupport.LogBoxModule,com.facebook.react.devsupport.LogBoxDialog)
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.imagepipeline.listener.BaseRequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextHelper: AppCompatTextHelper(android.widget.TextView)
com.zoontek.rnbootsplash.RNBootSplashModule: java.lang.String getName()
com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String,java.lang.Object[])
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderRadius(float)
com.swmansion.rnscreens.ScreenWindowTraits: void setTranslucent$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity,com.facebook.react.bridge.ReactContext)
okio.Buffer: okio.Buffer getBuffer()
com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updateIsPrefetch()
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: void onScaleChanged()
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int extractOrientationFromMetadata(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setCircle(boolean)
androidx.core.text.BidiFormatter: boolean getStereoReset()
androidx.recyclerview.widget.ViewInfoStore: void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.app.ToolbarActionBar: boolean closeOptionsMenu()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onRequestStart(com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.ReactStylesDiffMap: ReactStylesDiffMap(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.producers.BaseConsumer: int turnOffStatusFlag(int,int)
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,java.lang.String)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion()
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newKnownLengthSink()
com.horcrux.svg.EllipseView: void setCx(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabCradleMargin(float)
androidx.appcompat.widget.ActionMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void storeOriginals()
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
com.horcrux.svg.PathParser: void moveTo(float,float)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()
com.google.android.material.bottomappbar.BottomAppBar: void dispatchAnimationEnd()
okhttp3.internal.concurrent.Task: void setNextExecuteNanoTime$okhttp(long)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: java.util.List toHeaderList(okhttp3.Headers)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: DecodeProducer$LocalImagesProgressiveDecoder(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.Future submit(java.util.concurrent.Callable)
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
okio.Options$Companion: long getIntCount(okio.Buffer)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)
okhttp3.internal.platform.BouncyCastlePlatform: boolean access$isSupported$cp()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)
okio.Okio: okio.Source source(java.io.InputStream)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueRemoveRootView(int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.drawee.view.DraweeHolder: void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback)
com.facebook.react.fabric.FabricSoLoader: void staticInit()
androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)
com.facebook.common.internal.ImmutableList: com.facebook.common.internal.ImmutableList of(java.lang.Object[])
com.google.android.material.stateful.ExtendableSavedState: ExtendableSavedState(android.os.Parcelable)
com.facebook.react.modules.dialog.AlertFragment: android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
okio.-Util: int reverseBytes(int)
com.facebook.imagepipeline.producers.BaseConsumer: void onUnhandledException(java.lang.Exception)
com.facebook.imageutils.HeifExifUtil: int getOrientation(java.io.InputStream)
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.cardview.widget.CardViewApi17Impl$1: CardViewApi17Impl$1(androidx.cardview.widget.CardViewApi17Impl)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.animated.DecayAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imageformat.ImageFormat getImageFormat()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RadialGradientView: void setCy(com.facebook.react.bridge.Dynamic)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int,android.view.animation.Interpolator)
com.facebook.react.views.text.CustomStyleSpan: void apply(android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.common.executors.CallerThreadExecutor: com.facebook.common.executors.CallerThreadExecutor getInstance()
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
okio.ByteString: byte[] getData$okio()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.google.android.material.chip.ChipDrawable: void setTextEndPadding(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: android.graphics.drawable.Drawable newDrawable()
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: NativeViewHierarchyManager$PopupMenuCallbackHandler(com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void transcodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
androidx.cardview.widget.CardView: void setPadding(int,int,int,int)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
com.horcrux.svg.UseView: int hitTest(float[])
com.google.android.material.appbar.HeaderBehavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
com.facebook.react.views.view.ReactViewGroup: void dispatchOverflowDraw(android.graphics.Canvas)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasUpdates()
com.google.android.material.textfield.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)
com.facebook.drawee.components.DraweeEventTracker: void recordEvent(com.facebook.drawee.components.DraweeEventTracker$Event)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder fromRequest(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: ReactHorizontalScrollView$1(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.react.ReactFragment: void onCreate(android.os.Bundle)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setAutoPlayAnimations(boolean)
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
com.google.android.material.bottomappbar.BottomAppBar: void access$600(com.google.android.material.bottomappbar.BottomAppBar)
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.google.android.material.chip.ChipDrawable: void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$2: AppCompatDelegateImpl$2(androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.imagepipeline.image.EncodedImage: int getWidth()
com.facebook.soloader.UnpackingSoSource: boolean refreshLocked(com.facebook.soloader.FileLocker,int,byte[])
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundResource(int)
kotlin.collections.EmptyList: boolean isEmpty()
androidx.fragment.app.DialogFragment$3: void onDismiss(android.content.DialogInterface)
com.facebook.common.util.TriState: boolean isSet()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
androidx.appcompat.app.ToolbarActionBar: int getDisplayOptions()
com.google.android.material.datepicker.MaterialCalendar$5: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.horcrux.svg.LinearGradientView: void setX2(java.lang.String)
com.google.android.material.shape.AbsoluteCornerSize: int hashCode()
com.zoontek.rnbootsplash.RNBootSplashActivity: java.lang.Class getMainActivityClass()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void write(okio.Buffer,long)
com.facebook.drawee.view.DraweeHolder: java.lang.String toString()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBackgroundLocalFileFetchToEncodeMemorySequence()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.memory.BitmapCounter: BitmapCounter(int,int)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
com.facebook.imagepipeline.producers.SwallowResultProducer$1: SwallowResultProducer$1(com.facebook.imagepipeline.producers.SwallowResultProducer,com.facebook.imagepipeline.producers.Consumer)
androidx.transition.Transition: void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostView: void onHostDestroy()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
com.google.android.material.datepicker.Month: void writeToParcel(android.os.Parcel,int)
com.facebook.react.ReactInstanceManager: void invokeDefaultOnBackPressed()
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
okio.Buffer: long indexOfElement(okio.ByteString,long)
com.google.android.material.bottomsheet.BottomSheetDialog$4: void onSlide(android.view.View,float)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
com.horcrux.svg.ViewBox: android.graphics.Matrix getTransform(android.graphics.RectF,android.graphics.RectF,java.lang.String,int)
androidx.appcompat.widget.SearchView$8: SearchView$8(androidx.appcompat.widget.SearchView)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setArrowDimensions(float,float)
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)
androidx.core.view.WindowInsetsCompat: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.HttpUrl$Builder: void setEncodedFragment$okhttp(java.lang.String)
androidx.recyclerview.widget.FastScroller: void onRequestDisallowInterceptTouchEvent(boolean)
com.facebook.react.views.image.ReactImageView$1: void onFailure(java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.google.android.material.animation.MotionTiming: boolean equals(java.lang.Object)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
okhttp3.ConnectionSpec: ConnectionSpec(boolean,boolean,java.lang.String[],java.lang.String[])
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.collection.MapCollections$ValuesCollection: void clear()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
okhttp3.internal.connection.RealCall: java.io.IOException timeoutExit(java.io.IOException)
com.google.android.material.button.MaterialButton: boolean isChecked()
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setOpacity(android.view.View,float)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.facebook.drawee.drawable.ForwardingDrawable: ForwardingDrawable(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.imagepipeline.image.EncodedImage buildEncodedImage(com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
okhttp3.internal.ws.RealWebSocket$Streams: boolean getClient()
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.imagepipeline.image.EncodedImage getByteBufferBackedEncodedImage(java.io.InputStream,int)
androidx.appcompat.widget.SearchView: boolean isSubmitAreaEnabled()
com.facebook.react.modules.core.JavaTimerManager: void setChoreographerIdleCallback()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
com.facebook.cache.common.NoOpCacheEventListener: void onReadException(com.facebook.cache.common.CacheEvent)
okio.internal.HashFunctionKt: okio.internal.HashFunction newHashFunction(java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.SearchView: void onVoiceClicked()
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: AppBarLayout$BaseBehavior$SavedState$1()
com.facebook.jni.HybridData$Destructor: void destruct()
com.swmansion.rnscreens.ScreenStack$Companion: ScreenStack$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
okhttp3.OkHttpClient$Builder: int getWriteTimeout$okhttp()
androidx.collection.ArraySet: int indexOf(java.lang.Object)
okio.-Platform: byte[] asUtf8ToByteArray(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)
okhttp3.CertificatePinner$Pin: int hashCode()
okhttp3.internal.platform.android.DeferredSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Headers$Companion: java.lang.String get(java.lang.String[],java.lang.String)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.binaryresource.FileBinaryResource: int hashCode()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation: FloatingActionButtonImpl$DisabledElevationAnimation(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.facebook.imagepipeline.producers.NetworkFetchProducer: boolean shouldPropagateIntermediateResults(com.facebook.imagepipeline.producers.FetchState)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.facebook.imagepipeline.producers.DelegatingConsumer: DelegatingConsumer(com.facebook.imagepipeline.producers.Consumer)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.fragment.app.FragmentManager: void cleanupExec()
androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.Fragment)
com.facebook.imagepipeline.producers.DelayProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout ensureContainerAndBehavior()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
androidx.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)
androidx.recyclerview.widget.DefaultItemAnimator: void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.Protocol: java.lang.String toString()
com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillRule(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.systrace.Systrace$EventScope: Systrace$EventScope(java.lang.String,int,char)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,float)
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.react.animated.AnimatedNode: AnimatedNode()
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.recyclerview.widget.FastScroller: boolean isPointInsideHorizontalThumb(float,float)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void clear()
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory getEventListenerFactory$okhttp()
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
com.facebook.imagepipeline.image.EncodedImageOrigin: EncodedImageOrigin(java.lang.String,int,java.lang.String)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
okio.ForwardingSource: java.lang.String toString()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: void close()
okhttp3.internal.connection.RealConnection$connectTls$1: java.lang.Object invoke()
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource getBestResult()
com.facebook.react.views.picker.events.PickerItemSelectEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.Consumer getConsumer()
com.facebook.react.views.image.MultiPostprocessor: java.lang.String getName()
com.facebook.react.ReactAndroidHWInputDeviceHelper: ReactAndroidHWInputDeviceHelper(com.facebook.react.ReactRootView)
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
androidx.appcompat.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
okhttp3.internal.http2.Http2Stream: java.io.IOException getErrorException$okhttp()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.uimanager.PixelUtil: float toSPFromPixel(float)
okhttp3.internal.Util: int toNonNegativeInt(java.lang.String,int)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Object then(bolts.Task)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.imagepipeline.producers.InternalRequestListener: void onRequestSuccess(com.facebook.imagepipeline.producers.ProducerContext)
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.radiobutton.MaterialRadioButton: void onAttachedToWindow()
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentTransition$6: FragmentTransition$6(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isEndToEnd(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean isSupported()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
com.horcrux.svg.PatternView: void setX(java.lang.String)
okio.AsyncTimeout: AsyncTimeout()
androidx.appcompat.view.menu.StandardMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.swmansion.rnscreens.ScreenContainer: void updateIfNeeded()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.ReactDelegate: void loadApp(java.lang.String)
com.facebook.soloader.UnpackingSoSource: java.lang.Object getLibraryLock(java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean shouldDownscaleFrameToDrawableDimensions()
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
com.facebook.react.modules.network.ResponseUtil: void onRequestError(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,java.lang.Throwable)
com.facebook.common.internal.ImmutableMap: com.facebook.common.internal.ImmutableMap copyOf(java.util.Map)
androidx.fragment.app.Fragment: boolean isRemoving()
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket getBucket(int)
com.facebook.datasource.DataSources$1: DataSources$1(java.lang.Throwable)
okio.Buffer$inputStream$1: int read(byte[],int,int)
androidx.fragment.app.FragmentManager: void removeFragment(androidx.fragment.app.Fragment)
com.facebook.imagepipeline.core.PriorityThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.facebook.common.executors.HandlerExecutorServiceImpl: HandlerExecutorServiceImpl(android.os.Handler)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: boolean isReverse()
androidx.transition.FragmentTransitionSupport: boolean hasSimpleTarget(androidx.transition.Transition)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
androidx.transition.ViewOverlayApi14: void remove(android.graphics.drawable.Drawable)
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker)
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.view.animation.Animation)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object getCallerContext()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleCancellation()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController)
com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)
com.google.android.material.textfield.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addGrandchildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions)
androidx.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.image.CloseableImage internalDecode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
okhttp3.internal.ws.WebSocketReader: void readMessage()
androidx.core.view.OneShotPreDrawListener: void removeListener()
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
com.facebook.react.views.text.TextLayoutManager: void deleteCachedSpannableForTag(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setReactPackageTurboModuleManagerDelegateBuilder(com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.views.text.ReactTextView: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.transition.TransitionManager: void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void addConfigSubview(com.swmansion.rnscreens.ScreenStackHeaderSubview,int)
com.facebook.drawee.drawable.FadeDrawable: void drawDrawableWithAlpha(android.graphics.Canvas,android.graphics.drawable.Drawable,int)
com.facebook.react.shell.MainReactPackage$1: java.util.Map getReactModuleInfos()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: long runOnce()
androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)
okio.SegmentedByteString: void write$okio(okio.Buffer,int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequestEndTimeMs(long)
androidx.appcompat.widget.AppCompatPopupWindow: void setSupportOverlapAnchor(boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewExpanded()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)
com.facebook.react.uimanager.ViewAtIndex: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(android.view.View,float)
com.facebook.datasource.AbstractDataSource: boolean setResultInternal(java.lang.Object,boolean)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void onActionProviderVisibilityChanged(boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint()
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)
androidx.transition.ChangeBounds$8: void onAnimationCancel(android.animation.Animator)
androidx.fragment.app.FragmentManager: void detachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
com.facebook.react.uimanager.JSTouchDispatcher: void onChildStartedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
okio.InflaterSource: long read(okio.Buffer,long)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean tryDismissWithAnimation(boolean)
com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.imagepipeline.common.RotationOptions: java.lang.String toString()
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
okhttp3.internal.connection.Exchange$RequestBodySink: void write(okio.Buffer,long)
com.horcrux.svg.RNSVGMarkerPosition: double SlopeAngleRadians(com.horcrux.svg.Point)
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int)
com.google.android.material.chip.Chip: void ensureChipDrawableHasCallback()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalExifThumbnailProducer newLocalExifThumbnailProducer()
com.horcrux.svg.TextProperties$TextLengthAdjust: TextProperties$TextLengthAdjust(java.lang.String,int)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory access$300(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.yoga.YogaNodeJNIBase: void setWidth(float)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
androidx.transition.Transition: void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer getPrimaryTextColor()
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedStartWithDecoration(android.view.View)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
com.facebook.react.ReactPackageHelper$1$1: void remove()
kotlin.jvm.internal.ArrayIterator: boolean hasNext()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.TextView: void setMethod(java.lang.String)
com.facebook.imagepipeline.listener.ForwardingRequestListener: boolean requiresExtraMap(java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
okhttp3.CacheControl: boolean isPublic()
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.horcrux.svg.TextView: com.horcrux.svg.TextProperties$AlignmentBaseline getAlignmentBaseline()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.facebook.drawee.drawable.RoundedCornersDrawable: void updatePath()
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForShadowNodeClass(java.lang.Class)
okhttp3.Request: okhttp3.Headers headers()
okhttp3.internal.connection.RealConnection: boolean routeMatchesAny(java.util.List)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerStart(android.view.View,java.lang.String)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
com.google.android.material.bottomsheet.BottomSheetDialog: void onStart()
com.facebook.drawee.drawable.DrawableProperties: void applyTo(android.graphics.drawable.Drawable)
androidx.transition.ChangeBounds$ViewBounds: void setLeftTopRightBottom()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.app.ToolbarActionBar$1: void run()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean hasKey(short)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: long getItemId(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.transition.ChangeBounds$4: android.graphics.PointF get(android.view.View)
androidx.fragment.app.FragmentManager: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
com.facebook.imageformat.DefaultImageFormatChecker: boolean isBmpHeader(byte[],int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getPeerSettings()
androidx.recyclerview.widget.DefaultItemAnimator: boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6: SwipeRefreshLayout$6(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
com.facebook.react.views.switchview.ReactSwitchEvent: ReactSwitchEvent(int,int,boolean)
androidx.collection.ArraySet: void allocArrays(int)
bolts.Task: boolean isCompleted()
androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)
okhttp3.internal.ws.RealWebSocket: boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
okhttp3.EventListener: void cacheMiss(okhttp3.Call)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onFailureImpl(java.lang.Throwable)
com.facebook.cache.disk.DiskStorageCache$CacheStats: void increment(long,long)
com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd: java.lang.String toString()
androidx.recyclerview.widget.ChildHelper$Bucket: java.lang.String toString()
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: void execute()
com.horcrux.svg.TextProperties$AlignmentBaseline: java.lang.String toString()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart: ScalingUtils$ScaleTypeFitStart()
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
okhttp3.internal.platform.android.AndroidSocketAdapter: AndroidSocketAdapter(java.lang.Class)
com.facebook.react.modules.network.HeaderUtil: java.lang.String stripHeaderValue(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
com.horcrux.svg.ImageView: void loadBitmap(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.imagepipeline.request.ImageRequest)
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void onImageLoaded(java.lang.String,int,boolean,java.lang.String)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void access$400(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage,int)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
com.facebook.soloader.UnpackingSoSource$DsoManifest: com.facebook.soloader.UnpackingSoSource$DsoManifest read(java.io.DataInput)
okhttp3.Request: okhttp3.HttpUrl url()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.fragment.app.FragmentContainerView: void removeAllViewsInLayout()
bolts.Task: bolts.Task$UnobservedExceptionHandler getUnobservedExceptionHandler()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)
com.facebook.common.logging.FLogDefaultLoggingDelegate: com.facebook.common.logging.FLogDefaultLoggingDelegate getInstance()
com.facebook.react.module.model.ReactModuleInfo: ReactModuleInfo(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory()
com.facebook.hermes.reactexecutor.HermesExecutorFactory: HermesExecutorFactory()
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.facebook.imagepipeline.core.ImagePipelineExperiments: ImagePipelineExperiments(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments$1)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short access$200(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.google.android.material.appbar.MaterialToolbar: void onAttachedToWindow()
com.google.android.material.textfield.ClearTextEndIconDelegate: android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
okio.SegmentedByteString: boolean rangeEquals(int,byte[],int,int)
okhttp3.internal.connection.Exchange: void responseHeadersEnd(okhttp3.Response)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.scroll.ReactScrollView: void draw(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context)
com.facebook.cache.disk.DiskStorageCache: boolean hasKey(com.facebook.cache.common.CacheKey)
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
androidx.recyclerview.widget.AdapterHelper: AdapterHelper(androidx.recyclerview.widget.AdapterHelper$Callback)
com.facebook.drawee.drawable.ForwardingDrawable: boolean setVisible(boolean,boolean)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,java.lang.String)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newLocalThumbnailProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[])
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstance: void initialize()
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.common.LongArray: void add(long)
com.facebook.react.modules.core.JavaTimerManager: boolean access$1400(com.facebook.react.modules.core.JavaTimerManager)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
com.facebook.react.views.switchview.ReactSwitchEvent: boolean getIsChecked()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
com.facebook.common.internal.Suppliers$2: java.lang.Object get()
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void clearImagePerfDataListeners()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: RecyclerView$ItemAnimator()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
com.facebook.yoga.YogaNodeJNIBase: void setMinHeightPercent(float)
com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber: void onNewResultImpl(com.facebook.datasource.DataSource)
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.facebook.react.modules.storage.AsyncLocalStorageUtil: void deepMergeInto(org.json.JSONObject,org.json.JSONObject)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: java.lang.String toString()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.BytesRange getBytesRange()
androidx.recyclerview.widget.RecyclerView$5: RecyclerView$5(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
androidx.customview.widget.ViewDragHelper$1: ViewDragHelper$1()
okhttp3.Cookie: java.lang.String value()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isValid()
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
okhttp3.Headers$Builder: java.util.List getNamesAndValues$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.Timeout timeout()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.customview.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)
androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateShadowNodeProp(com.facebook.react.uimanager.ReactShadowNode,java.lang.Object)
androidx.core.provider.FontRequest: java.lang.String getId()
com.google.android.material.datepicker.MonthsPagerAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.facebook.common.references.SharedReference: boolean isValid(com.facebook.common.references.SharedReference)
com.horcrux.svg.RenderableView: boolean hasOwnProperty(java.lang.String)
androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.appcompat.widget.ListPopupWindow: void removePromptView()
com.facebook.fresco.ui.common.ForwardingControllerListener2: void onFinalImageSet(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.core.provider.RequestExecutor$ReplyRunnable$1: void run()
com.facebook.drawee.gestures.GestureDetector: void init()
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: java.lang.String getProducerName()
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void closeResult(com.facebook.common.references.CloseableReference)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.imagehelper.ImageSource: boolean isResource()
com.facebook.react.ReactRootView: void updateRootLayoutSpecs(boolean,int,int)
okhttp3.MediaType: java.util.regex.Pattern access$getTYPE_SUBTYPE$cp()
com.facebook.react.views.text.ReactTextUpdate: float getPaddingRight()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeMiterlimit(android.view.View,float)
androidx.customview.widget.ViewDragHelper: int getEdgeSize()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,int,java.lang.String,int,int)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: void showOrUpdate()
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void doBeforeTextChanged(android.widget.AutoCompleteTextView)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener,java.lang.String)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
com.facebook.imagepipeline.producers.DelegatingConsumer: void onFailureImpl(java.lang.Throwable)
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: java.util.Map getHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.views.modal.ReactModalHostView: void addView(android.view.View,int)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList access$100(com.facebook.drawee.components.DeferredReleaserConcurrentImpl)
androidx.recyclerview.widget.GridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor()
androidx.fragment.app.FragmentActivity: void onResume()
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onIntermediateImageSet(java.lang.String,java.lang.Object)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
com.zoontek.rnbootsplash.RNBootSplashActivity: void forwardIntentToMainActivity(android.content.Intent)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
androidx.appcompat.widget.SearchView: void updateVoiceButton(boolean)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$1100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
com.google.android.material.bottomappbar.BottomAppBar: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setLocalData(java.lang.Object)
com.google.android.material.internal.FlowLayout: int getMeasuredDimension(int,int,int)
com.swmansion.rnscreens.ScreenFragment$Companion: ScreenFragment$Companion()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
com.facebook.react.perflogger.NativeModulePerfLogger: void maybeLoadSoLibrary()
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody create(okhttp3.MediaType,java.io.InputStream)
com.google.android.material.textview.MaterialTextView: void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int)
com.horcrux.svg.VirtualViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY: ScalingUtils$ScaleTypeFitXY()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.appcompat.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
com.th3rdwave.safeareacontext.SafeAreaProvider: void maybeUpdateInsets()
com.facebook.react.views.picker.ReactPicker$2: ReactPicker$2(com.facebook.react.views.picker.ReactPicker)
com.google.android.material.shape.MaterialShapeDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
okhttp3.internal.Internal: java.lang.String cookieToString(okhttp3.Cookie,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: RealConnection$newWebSocketStreams$1(okhttp3.internal.connection.Exchange,okio.BufferedSource,okio.BufferedSink,boolean,okio.BufferedSource,okio.BufferedSink)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.views.progressbar.ProgressBarContainerView: ProgressBarContainerView(android.content.Context)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void draw(android.graphics.Canvas)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(android.view.View,float)
okhttp3.internal.cache.DiskLruCache: boolean getClosed$okhttp()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
okio.Buffer: okio.BufferedSink write(byte[],int,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: DrawerLayout$SavedState$1()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontWeight(android.view.View,java.lang.String)
okhttp3.Address: boolean equalsNonHost$okhttp(okhttp3.Address)
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer: com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean)
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: LruBucketsPoolBackend()
okhttp3.ConnectionSpec: boolean isTls()
com.google.android.material.transformation.FabTransformationScrimBehavior$1: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
com.google.android.material.shape.ShapePath$PathArcOperation: float getStartAngle()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureSpecs(int,int)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.ForeignObjectView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean isVisible()
okhttp3.Challenge: boolean equals(java.lang.Object)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.google.android.material.datepicker.SmoothCalendarLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
com.facebook.react.modules.network.CountingOutputStream: CountingOutputStream(java.io.OutputStream)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: ExploreByTouchHelper$MyNodeProvider(androidx.customview.widget.ExploreByTouchHelper)
com.facebook.imagepipeline.producers.BaseConsumer: void onCancellation()
androidx.appcompat.widget.ActionBarContextView$1: ActionBarContextView$1(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.fragment.app.FragmentManager: void noteStateNotSaved()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: StaggeredGridLayoutManager$Span(androidx.recyclerview.widget.StaggeredGridLayoutManager,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.lang.Object pop()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
androidx.appcompat.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
com.swmansion.rnscreens.ScreenStack: void onViewAppearTransitionEnd()
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: FloatingActionButton$OnVisibilityChangedListener()
com.google.android.material.datepicker.CalendarConstraints$1: com.google.android.material.datepicker.CalendarConstraints[] newArray(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.ChipDrawable: float getIconStartPadding()
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.datepicker.MaterialCalendar$9: void onClick(android.view.View)
com.facebook.imagepipeline.producers.InternalProducerListener: void onProducerFinishWithCancellation(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.util.Map)
com.google.android.material.animation.MotionSpec: java.lang.String toString()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: void scheduleNext()
androidx.recyclerview.widget.AdapterHelper: void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.facebook.yoga.YogaNodeJNIBase: void markLayoutSeen()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getWidthMeasureSpec()
com.facebook.react.devsupport.DisabledDevSupportManager: void hideRedboxDialog()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: com.facebook.common.references.CloseableReference generate(short,short)
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
okio.OutputStreamSink: OutputStreamSink(java.io.OutputStream,okio.Timeout)
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: UIViewOperationQueue$FindTargetForTouchOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: void collapseActionView()
com.swmansion.rnscreens.ScreenContainerViewManager$Companion: ScreenContainerViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(android.view.View,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCacheHit(com.facebook.cache.common.CacheKey)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.uimanager.Spacing: float get(int)
okhttp3.internal.connection.RealCall: okhttp3.Address createAddress(okhttp3.HttpUrl)
bolts.TaskCompletionSource: void setCancelled()
com.horcrux.svg.SvgView: void invalidate()
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
okio.Buffer$outputStream$1: Buffer$outputStream$1(okio.Buffer)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean parseMoreData(com.facebook.imagepipeline.image.EncodedImage)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
com.google.android.material.textfield.IndicatorViewController: void hideError()
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.platform.PlatformDecoder getPlatformDecoder()
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String)
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(float)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.RtlSpacingHelper: int getLeft()
okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)
com.google.android.material.appbar.AppBarLayout$1: AppBarLayout$1(com.google.android.material.appbar.AppBarLayout)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isPrefSet(android.content.Context,java.lang.String,boolean)
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.drawee.generic.RoundingParams: boolean equals(java.lang.Object)
com.facebook.imagepipeline.core.CloseableReferenceFactory: com.facebook.common.references.CloseableReference create(java.lang.Object,com.facebook.common.references.ResourceReleaser)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
com.facebook.react.views.view.ReactViewBackgroundDrawable: int getResolvedLayoutDirection()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void forwardNewResult(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imageformat.ImageFormat)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(java.lang.Object[])
com.facebook.common.references.CloseableReference$2: void reportLeak(com.facebook.common.references.SharedReference,java.lang.Throwable)
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
okhttp3.Route: java.net.InetSocketAddress socketAddress()
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4: DropdownMenuEndIconDelegate$4(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.google.android.material.textfield.CutoutDrawable: CutoutDrawable()
okhttp3.CertificatePinner$check$1: CertificatePinner$check$1(okhttp3.CertificatePinner,java.util.List,java.lang.String)
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
com.facebook.react.views.modal.ReactModalHostManager$2: void onShow(android.content.DialogInterface)
okhttp3.internal.connection.RealCall$timeout$1: void timedOut()
com.facebook.jni.DestructorThread: DestructorThread()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.swmansion.rnscreens.ScreenStackFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void onDetachedFromWindow()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawRoundedBackgroundWithBorders(android.graphics.Canvas)
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
com.facebook.react.views.view.ViewGroupClickEvent: ViewGroupClickEvent(int,int)
com.facebook.yoga.YogaNodeJNIBase: void setFlexBasisPercent(float)
androidx.appcompat.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$600(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference,int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
okio.RealBufferedSource: boolean request(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
okhttp3.internal.Util: java.lang.String toHexString(long)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1: PostprocessorProducer$PostprocessorConsumer$1(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer)
okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
androidx.coordinatorlayout.widget.ViewGroupUtils: void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.google.android.material.textfield.TextInputLayout: void drawBoxUnderline(android.graphics.Canvas)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
com.google.android.material.datepicker.MaterialDatePicker: void onStop()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.facebook.react.devsupport.JSDevSupport: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.ButtonBarLayout: boolean isStacked()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
kotlin.collections.EmptyIterator: boolean hasNext()
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int,boolean)
com.google.android.material.textfield.TextInputLayout: void drawHint(android.graphics.Canvas)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)
com.facebook.imagepipeline.image.CloseableBitmap: CloseableBitmap()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Source source(java.io.File)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.core.provider.CallbackWithHandler$2: CallbackWithHandler$2(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int)
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenFragment: java.util.List getChildScreenContainers()
com.horcrux.svg.RenderableViewManager$MaskManager: void setVectorEffect(android.view.View,int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
com.horcrux.svg.VirtualView: VirtualView(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.scroll.ReactScrollView: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.horcrux.svg.VirtualViewManager: void resetTransformProperty(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.views.text.ReactTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAddPadding()
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$4: void onAnimationEnd(android.animation.Animator)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.zoontek.rnbootsplash.RNBootSplashModule$Status: com.zoontek.rnbootsplash.RNBootSplashModule$Status valueOf(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.appcompat.widget.SuggestionsAdapter: void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void access$200(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder)
com.facebook.react.views.scroll.ReactScrollView: void updateClippingRect()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getRootTag()
androidx.transition.ChangeBounds$2: android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.google.android.material.appbar.HeaderBehavior: int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter findManagerSetter(java.lang.Class)
com.facebook.react.views.text.ReactFontManager: ReactFontManager()
com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeValue(int,double)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
androidx.core.provider.FontRequest: java.lang.String toString()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool getMemoryChunkPool(int)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)
com.facebook.react.views.view.ViewGroupClickEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: java.lang.String getProducerName()
com.facebook.imagepipeline.common.TooManyBitmapsException: TooManyBitmapsException(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeightPercent(float)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)
com.google.android.material.textfield.TextInputLayout$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onData(int,okio.BufferedSource,int,boolean)
bolts.TaskCompletionSource: boolean trySetCancelled()
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: int size()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: long getNativePtr()
androidx.core.util.Pair: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
com.facebook.react.ReactNativeHost: java.lang.String getJSBundleFile()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()
com.facebook.imagepipeline.image.CloseableStaticBitmap: CloseableStaticBitmap(com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.image.QualityInfo,int,int)
com.facebook.react.views.text.TextAttributeProps: int getJustificationMode(com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.recyclerview.widget.DefaultItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
com.horcrux.svg.PropHelper: double fromRelative(java.lang.String,double,double,double)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
okio.RealBufferedSource: boolean exhausted()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.th3rdwave.safeareacontext.SafeAreaView: void onAttachedToWindow()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.drawee.backends.pipeline.info.ImageOriginUtils: java.lang.String toString(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void scrollTo(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
bolts.TaskCompletionSource: bolts.Task getTask()
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.soloader.SysUtil: int findAbiScore(java.lang.String[],java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isResizeAndRotateEnabledForNetwork()
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map)
com.facebook.imagepipeline.memory.AshmemMemoryChunk: int getSize()
com.facebook.react.modules.network.ProgressRequestBody: okhttp3.MediaType contentType()
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)
com.google.android.material.bottomappbar.BottomAppBar: void access$1900(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.react.modules.datepicker.DismissableDatePickerDialog: DismissableDatePickerDialog(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int roundNumerator(float,float)
com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(android.view.View,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
okhttp3.internal.connection.RealCall: void exitNetworkInterceptorExchange$okhttp(boolean)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerFactory getProducerFactory()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
okhttp3.internal.ws.RealWebSocket$connect$1: void onResponse(okhttp3.Call,okhttp3.Response)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newChunkedSource(okhttp3.HttpUrl)
com.swmansion.rnscreens.ScreenStack$mLifecycleCallbacks$1: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.modules.permissions.PermissionsModule$2: PermissionsModule$2(com.facebook.react.modules.permissions.PermissionsModule,java.util.ArrayList,com.facebook.react.bridge.WritableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.app.AppCompatDelegateImpl$4: AppCompatDelegateImpl$4(androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
com.google.android.material.animation.ArgbEvaluatorCompat: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
kotlin.collections.ArrayAsCollection: int getSize()
androidx.viewpager2.adapter.FragmentStateAdapter$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.appcompat.app.ToolbarActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
com.facebook.drawee.view.DraweeView: void onStartTemporaryDetach()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void draw(android.graphics.Canvas)
okhttp3.internal.connection.Exchange: void noNewExchangesOnConnection()
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
com.google.android.material.button.MaterialButton: void onLayout(boolean,int,int,int,int)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
com.horcrux.svg.SvgView: void setMinY(float)
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue getQueue$okhttp()
com.horcrux.svg.RenderableView: void renderMarkers(android.graphics.Canvas,android.graphics.Paint,float)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getEnd()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short getCount()
com.facebook.react.animated.NativeAnimatedModule$1: NativeAnimatedModule$1(com.facebook.react.animated.NativeAnimatedModule,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.ReactActivityDelegate: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.modules.network.ProgressiveStringDecoder: java.lang.String decodeNext(byte[],int)
okio.RealBufferedSource: java.io.InputStream inputStream()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)
androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int access$902(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.react.uimanager.events.Event: int getViewTag()
com.facebook.react.animated.NativeAnimatedModule$18: NativeAnimatedModule$18(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.facebook.imagepipeline.memory.PoolParams: PoolParams(int,int,android.util.SparseIntArray)
com.facebook.react.views.text.TextAttributeProps: int getTextAlignment(com.facebook.react.uimanager.ReactStylesDiffMap,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthAuto()
okhttp3.Headers: boolean equals(java.lang.Object)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object getImageRequest()
com.google.android.material.transformation.FabTransformationScrimBehavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
com.facebook.cache.disk.DynamicDefaultDiskStorage: void createStorage()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
com.facebook.react.uimanager.UIImplementation$1: UIImplementation$1(com.facebook.react.uimanager.UIImplementation,com.facebook.react.uimanager.ReactShadowNode)
com.swmansion.rnscreens.ScreenWindowTraits: void applyDidSetStatusBarAppearance$react_native_screens_release()
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.google.android.material.internal.ForegroundLinearLayout: void jumpDrawablesToCurrentState()
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int compare(int,int)
com.horcrux.svg.VirtualView: void onLayout(boolean,int,int,int,int)
okio.ForwardingTimeout: void throwIfReached()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startDragging(float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int findLargestTextSizeWhichFits(android.graphics.RectF)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.HttpUrl$Companion: java.util.List toQueryNamesAndValues$okhttp(java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setDisplay(android.view.View,java.lang.String)
androidx.customview.widget.FocusStrategy$SequentialComparator: int compare(java.lang.Object,java.lang.Object)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onException(java.lang.String,java.lang.Throwable)
okhttp3.internal.platform.AndroidPlatform$Companion: boolean isSupported()
androidx.recyclerview.widget.ViewInfoStore: void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.soloader.MinElf: short getu8(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2: PostprocessorProducer$PostprocessorConsumer$2(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource$FileDso[] access$100(com.facebook.soloader.ExoSoSource$ExoUnpacker)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)
com.facebook.react.views.modal.ReactModalHostView: void onDetachedFromWindow()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.imagepipeline.systrace.FrescoSystrace: boolean isTracing()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.memory.PoolFactory getPoolFactory()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.datepicker.YearGridAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
com.facebook.imagepipeline.memory.BasePool: void fillBuckets(android.util.SparseIntArray)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage)
androidx.recyclerview.widget.RecyclerView$5: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder: FrescoSystrace$NoOpArgsBuilder()
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$100(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)
androidx.transition.ViewUtilsBase: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
com.facebook.react.uimanager.TouchTargetHelper: boolean isTransformedTouchPointInView(float,float,android.view.ViewGroup,android.view.View,android.graphics.PointF)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.facebook.common.references.CloseableReference: java.lang.Object get()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy computeCandidate()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
okio.Okio: okio.Sink sink(java.io.OutputStream)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int findFirstKeyLessThan(android.util.SparseIntArray,int)
androidx.transition.WindowIdApi18: boolean equals(java.lang.Object)
com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker: NoOpCloseableReferenceLeakTracker()
com.google.android.material.textfield.ClearTextEndIconDelegate$1: ClearTextEndIconDelegate$1(com.google.android.material.textfield.ClearTextEndIconDelegate)
com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String repeat(java.lang.CharSequence,int)
com.facebook.imagepipeline.core.ImagePipeline$8: ImagePipeline$8(com.facebook.imagepipeline.core.ImagePipeline,android.net.Uri)
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
com.google.android.material.card.MaterialCardView: void onMeasure(int,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.facebook.react.views.scroll.OnScrollDispatchHelper: boolean onScrollChanged(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.fragment.app.FragmentState: int describeContents()
com.horcrux.svg.TextView: com.horcrux.svg.TextView getTextAnchorRoot()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
com.google.android.material.chip.ChipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: boolean isRunningOnGenymotion()
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.facebook.imageformat.DefaultImageFormatChecker: int getHeaderSize()
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: int access$100(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setState(int)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setOnScreenHeight(int)
com.facebook.imagepipeline.memory.MemoryChunkUtil: void checkBounds(int,int,int,int,int)
com.facebook.cache.common.NoOpCacheErrorLogger: NoOpCacheErrorLogger()
com.horcrux.svg.VirtualViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.appcompat.widget.ListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isHideable()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.producers.BaseProducerContext access$200(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void jumpDrawableToCurrentState()
androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: DrawerLayout$ViewDragCallback(androidx.drawerlayout.widget.DrawerLayout,int)
com.facebook.cache.disk.DefaultDiskStorage: void purgeUnexpectedResources()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getCurrent()
androidx.fragment.app.Fragment: void performDestroy()
com.facebook.imagepipeline.decoder.DefaultImageDecoder$1: DefaultImageDecoder$1(com.facebook.imagepipeline.decoder.DefaultImageDecoder)
androidx.core.content.res.ResourcesCompat$FontCallback: android.os.Handler getHandler(android.os.Handler)
com.google.android.material.internal.BaselineLayout: void onLayout(boolean,int,int,int,int)
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIImplementation: void setViewLocalData(int,java.lang.Object)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
androidx.cardview.widget.CardViewApi21Impl: void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
androidx.recyclerview.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgView: void defineClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.views.modal.ModalHostShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)
com.google.android.material.bottomsheet.BottomSheetBehavior$3: void onViewReleased(android.view.View,float,float)
androidx.recyclerview.widget.GridLayoutManager: int[] calculateItemBorders(int[],int,int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void stopFrameCallback()
okio.-Util: boolean arrayRangeEquals(byte[],int,byte[],int,int)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()
com.horcrux.svg.RNSVGMarkerPosition: com.horcrux.svg.SegmentData ExtractPathElementFeatures(com.horcrux.svg.PathElement)
com.google.android.material.datepicker.MaterialDatePicker$2: MaterialDatePicker$2(com.google.android.material.datepicker.MaterialDatePicker)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean didBlockInteraction()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.chip.ChipDrawable: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.transition.ViewGroupOverlayApi14: void add(android.view.View)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String getEventName()
androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getCheckedIcon()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.cardview.widget.RoundRectDrawableWithShadow: void drawShadow(android.graphics.Canvas)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule$3: void onProgress(long,long,boolean)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()
com.facebook.datasource.FirstAvailableDataSourceSupplier: java.util.List access$100(com.facebook.datasource.FirstAvailableDataSourceSupplier)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setInlineSize(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isYogaLeafNode()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: void offsetChildAsNeeded(android.view.View,android.view.View)
kotlin.collections.AbstractCollection: boolean addAll(java.util.Collection)
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
com.facebook.fresco.ui.common.ControllerListener2$Extras: ControllerListener2$Extras()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
okio.SegmentedByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.swmansion.rnscreens.events.StackFinishTransitioningEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()
com.facebook.react.animated.AnimatedNode: void addChild(com.facebook.react.animated.AnimatedNode)
com.facebook.react.modules.blob.BlobModule$2: BlobModule$2(com.facebook.react.modules.blob.BlobModule)
com.horcrux.svg.FontData$AbsoluteFontWeight: int from(com.horcrux.svg.TextProperties$FontWeight,com.horcrux.svg.FontData)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
okio.GzipSource: GzipSource(okio.Source)
com.facebook.react.views.scroll.ReactScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.memory.BasePool: boolean canAllocate(int)
com.facebook.common.memory.PooledByteBufferInputStream: int read(byte[])
com.facebook.react.LazyReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean,com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy)
androidx.appcompat.app.ToolbarActionBar: boolean collapseActionView()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: ReactHorizontalScrollContainerView(android.content.Context)
okhttp3.Cache$RealCacheRequest$1: void close()
com.horcrux.svg.PatternView: void setPatternUnits(int)
com.facebook.react.jstasks.HeadlessJsTaskContext$2: void run()
okhttp3.ConnectionPool: ConnectionPool()
com.facebook.react.views.picker.ReactPickerItem: java.util.List createFromJsArrayMap(com.facebook.react.bridge.ReadableArray)
androidx.collection.LruCache: LruCache(int)
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: long runOnce()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void close()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startProgressAlphaMaxAnimation()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri getUri()
com.horcrux.svg.Brush: void setContentUnits(com.horcrux.svg.Brush$BrushUnits)
com.horcrux.svg.SvgView: int hitTest(float,float)
com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float)
com.facebook.react.modules.network.ForwardingCookieHandler$2: ForwardingCookieHandler$2(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.ReactContext,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInBindTime(int,long)
com.facebook.datasource.SimpleDataSource: SimpleDataSource()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Http2Writer: void flush()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: void remove(java.lang.Runnable)
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.facebook.imagepipeline.common.BytesRange: java.lang.String toString()
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
androidx.collection.ArraySet$1: int colGetSize()
com.swmansion.rnscreens.ScreenStackFragment: void dismiss()
androidx.core.util.Pair: boolean equals(java.lang.Object)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void maybeClose(java.util.ArrayList)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.internal.CheckableImageButton: boolean isCheckable()
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View)
com.th3rdwave.safeareacontext.Rect: Rect(float,float,float,float)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDy(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.internal.DescendantOffsetUtils: void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams: com.facebook.imagepipeline.memory.PoolParams get()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: CacheInterceptor$cacheWritingResponse$cacheWritingSource$1(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
androidx.transition.Fade: android.animation.Animator createAnimation(android.view.View,float,float)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: MaterialCalendar$CalendarSelector(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)
okhttp3.internal.http1.Http1ExchangeCodec: void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
androidx.cardview.widget.RoundRectDrawable: boolean isStateful()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: int getChangingConfigurations()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map)
com.horcrux.svg.ImageView$1: void onNewResultImpl(android.graphics.Bitmap)
com.facebook.cache.common.SimpleCacheKey: boolean containsUri(android.net.Uri)
com.facebook.react.animated.NativeAnimatedNodesManager: boolean access$102(com.facebook.react.animated.NativeAnimatedNodesManager,boolean)
com.swmansion.rnscreens.Screen$Companion$sShowSoftKeyboardOnAttach$1: void onViewDetachedFromWindow(android.view.View)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColor(android.content.Context)
com.facebook.imagepipeline.producers.InternalRequestListener: InternalRequestListener(com.facebook.imagepipeline.listener.RequestListener,com.facebook.imagepipeline.listener.RequestListener2)
okhttp3.internal.Util$threadFactory$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.drawee.drawable.ArrayDrawable$1: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetChanged()
com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ThrottlingProducer)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
com.horcrux.svg.VirtualView: float getCanvasHeight()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.BackStackState: int describeContents()
com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.util.TriState access$000(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean access$000(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: void run()
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
com.facebook.imagepipeline.common.ImageDecodeOptions: int hashCode()
com.swmansion.rnscreens.ScreenFragment: void onViewAnimationStart()
com.facebook.react.animated.SubtractionAnimatedNode: java.lang.String prettyPrint()
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: int getGoodEnoughScanNumber()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
com.google.android.material.textfield.TextInputLayout: void onMeasure(int,int)
com.facebook.react.uimanager.UIViewOperationQueue: boolean isEmpty()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.fragment.app.FragmentTransition$2: void run()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater getMenuInflater()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.recyclerview.widget.LayoutState: LayoutState()
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.RealWebSocket: boolean isValid(okhttp3.internal.ws.WebSocketExtensions)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.VirtualViewManager: boolean isZero(double)
androidx.recyclerview.widget.LinearLayoutManager: boolean isAutoMeasureEnabled()
com.facebook.drawee.drawable.RoundedDrawable: void setScaleDownInsideBorders(boolean)
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
com.google.android.material.chip.Chip: void onChipDrawableSizeChange()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: ConscryptPlatform$DisabledHostnameVerifier()
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
com.google.android.material.textfield.TextInputLayout: void updateCounter()
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
com.facebook.react.uimanager.UIViewOperationQueue: void profileNextBatch()
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactScrollView: void enableFpsListener()
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenStack$DrawingOp obtainDrawingOp()
androidx.transition.TransitionManager$MultiListener: TransitionManager$MultiListener(androidx.transition.Transition,android.view.ViewGroup)
com.facebook.react.modules.datepicker.DismissableDatePickerDialog: DismissableDatePickerDialog(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer newBitmapMemoryCacheGetProducer(com.facebook.imagepipeline.producers.Producer)
com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()
com.facebook.drawee.generic.RoundingParams: int getOverlayColor()
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onIntermediateImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(android.net.Uri)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$200(com.facebook.react.devsupport.LogBoxModule)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion()
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.horcrux.svg.SvgView: void setTintColor(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.TextAttributeProps: int getIntProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,int)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void decreaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
androidx.appcompat.widget.SearchView: void adjustDropDownSizeAndPosition()
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.fragment.app.ListFragment: void setListShown(boolean,boolean)
com.facebook.react.ReactInstanceManager$8: ReactInstanceManager$8(com.facebook.react.ReactInstanceManager)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void clear()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void saveOldPosition()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.react.modules.datepicker.DismissableDatePickerDialog: void fixSpinner(android.content.Context,int,int,int)
okhttp3.internal.Util: java.lang.String toHostHeader(okhttp3.HttpUrl,boolean)
androidx.recyclerview.widget.DefaultItemAnimator: void dispatchFinishedWhenDone()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object getCallerContext()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
androidx.core.app.ActivityCompat$2: void run()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: long runOnce()
com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(java.io.InputStream,int)
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: ReactTextInputManager$ReactContentSizeWatcher(com.facebook.react.views.textinput.ReactEditText)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)
com.facebook.imagepipeline.common.RotationOptions: int getForcedAngle()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.uimanager.UIViewOperationQueue: boolean access$1600(com.facebook.react.uimanager.UIViewOperationQueue)
com.horcrux.svg.ImageView: java.util.concurrent.atomic.AtomicBoolean access$000(com.horcrux.svg.ImageView)
androidx.recyclerview.widget.LinearLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: boolean onMenuItemClick(android.view.MenuItem)
com.facebook.drawee.components.RetryManager: RetryManager()
okhttp3.OkHttpClient: int writeTimeoutMillis()
com.facebook.drawee.generic.GenericDraweeHierarchy: boolean hasScaleTypeDrawableAtIndex(int)
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.imagepipeline.producers.BitmapPrepareProducer: BitmapPrepareProducer(com.facebook.imagepipeline.producers.Producer,int,int,boolean)
com.facebook.soloader.ExoSoSource$FileDso: ExoSoSource$FileDso(java.lang.String,java.lang.String,java.io.File)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityBackward()
androidx.transition.ChangeBounds$4: java.lang.Object get(java.lang.Object)
com.facebook.common.references.CloseableReference: void finalize()
androidx.fragment.app.FragmentManager: boolean isDestroyed()
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void onCookiesModified()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.uimanager.UIViewOperationQueue: long access$2902(com.facebook.react.uimanager.UIViewOperationQueue,long)
com.facebook.react.modules.toast.ToastModule$3: void run()
okhttp3.internal.http2.Http2Connection: int getNextStreamId$okhttp()
com.google.android.material.datepicker.MaterialDatePicker: void initHeaderToggle(android.content.Context)
com.facebook.common.util.UriUtil: boolean isLocalResourceUri(android.net.Uri)
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
okhttp3.RequestBody$Companion$toRequestBody$2: long contentLength()
com.facebook.react.uimanager.events.TouchEvent: java.lang.String getEventName()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.imagepipeline.memory.GenericByteArrayPool: int getBucketedSize(int)
com.facebook.react.bridge.ReactSoftException: void logSoftException(java.lang.String,java.lang.Throwable)
com.google.android.material.datepicker.MaterialCalendarGridView: boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: void onSelectionChanged(int,int)
androidx.recyclerview.widget.FastScroller$1: void run()
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
com.facebook.common.internal.CountingOutputStream: void write(int)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean clearCurrentDataSource(com.facebook.datasource.DataSource)
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isVirtualAnchor()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()
androidx.appcompat.app.ToolbarActionBar: void setTitle(java.lang.CharSequence)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void access$300(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.cache.common.CacheEventListener$EvictionReason: CacheEventListener$EvictionReason(java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$1: void onHidden()
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.facebook.react.common.ClearableSynchronizedPool: boolean release(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: void set(android.view.View,java.lang.Float)
com.facebook.common.memory.PooledByteBufferInputStream: int available()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer: java.lang.String getOriginSubcategory()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.google.android.material.shape.ShapePath$PathArcOperation: void setTop(float)
okhttp3.internal.platform.android.DeferredSocketAdapter: DeferredSocketAdapter(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory)
com.facebook.react.modules.network.ForwardingCookieHandler$1: void onReceiveValue(java.lang.Boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
androidx.transition.Transition$1: Transition$1()
com.google.android.material.bottomappbar.BottomAppBar: boolean isFabVisibleOrWillBeShown()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
androidx.recyclerview.widget.AdapterHelper: void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void incrementCoalescingKey(long)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: ActionMenuItemView$ActionMenuItemForwardingListener(androidx.appcompat.view.menu.ActionMenuItemView)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: com.google.android.material.ripple.RippleDrawableCompat newDrawable()
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheEventListener access$1000(com.facebook.cache.disk.DiskCacheConfig$Builder)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependents(android.view.View)
androidx.appcompat.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,java.lang.String)
com.facebook.imagepipeline.image.EncodedImage: boolean isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.facebook.react.ReactNativeHost: ReactNativeHost(android.app.Application)
okio.internal.ByteStringKt: okio.ByteString commonDigest(okio.ByteString,java.lang.String)
com.facebook.react.devsupport.DisabledDevSupportManager: void setDevSupportEnabled(boolean)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: ViewManagerPropertyUpdater$FallbackViewManagerSetter(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: ImageStoreManager$GetBase64Task(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.PathParser: void skip_spaces()
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,short,short)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean flagActionItems()
com.horcrux.svg.VirtualView: boolean isResponsible()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
com.facebook.react.devsupport.LogBoxModule: android.app.Activity access$300(com.facebook.react.devsupport.LogBoxModule)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
com.facebook.common.memory.PooledByteBufferInputStream: void mark(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1: void onCancellationRequested()
com.swmansion.rnscreens.events.ScreenAppearEvent$Companion: ScreenAppearEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType()
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.common.MapBuilder: com.facebook.react.common.MapBuilder$Builder builder()
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setDisplay(android.view.View,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.common.streams.TailAppendingInputStream: TailAppendingInputStream(java.io.InputStream,byte[])
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: EncodedMemoryCacheProducer(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
com.google.android.material.card.MaterialCardView: float getRadius()
com.facebook.react.views.scroll.ReactScrollView: boolean access$002(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanSize(int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void transitionLayoutOnlyViewToNativeView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.view.menu.CascadingMenuPopup: void setHorizontalOffset(int)
com.zoontek.rnbootsplash.RNBootSplashModule$2: RNBootSplashModule$2(com.zoontek.rnbootsplash.RNBootSplashModule,java.util.Timer)
com.facebook.react.modules.debug.DevSettingsModule$1: void run()
com.horcrux.svg.DefinitionView: boolean isResponsible()
com.facebook.react.modules.network.ForwardingCookieHandler$2: void doInBackgroundGuarded(java.lang.Void[])
com.horcrux.svg.SymbolView: void setVbHeight(float)
com.facebook.react.bridge.NativeModule: void invalidate()
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
androidx.fragment.app.FragmentManager: void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.imagepipeline.cache.BufferedDiskCache$5: java.lang.Object call()
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] access$100(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)
com.facebook.react.views.text.TextAttributeProps: void setFontSize(float)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.facebook.react.modules.storage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.views.textinput.ReactTextInputLocalData: ReactTextInputLocalData(android.widget.EditText)
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(android.view.View)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
com.google.android.material.chip.ChipGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.swmansion.rnscreens.Screen: void dispatchSaveInstanceState(android.util.SparseArray)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void onClick(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactFontManager$FontFamily: android.graphics.Typeface getTypeface(int)
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long getNativePtr()
com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.graphics.Bitmap access$300(android.content.ContentResolver,android.net.Uri)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar$5$1: void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton)
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow$3: ListPopupWindow$3(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)
com.facebook.common.util.UriUtil: java.net.URL uriToUrl(android.net.Uri)
com.facebook.common.media.MediaUtils: java.lang.String extractExtension(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: java.lang.Object getResult()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.uimanager.events.TouchEvent: float getViewX()
com.facebook.imagepipeline.cache.BufferedDiskCache$4: BufferedDiskCache$4(com.facebook.imagepipeline.cache.BufferedDiskCache,java.lang.Object,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.datasource.AbstractDataSource: java.util.Map getExtras()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()
com.facebook.react.modules.image.ImageLoaderModule$4: void doInBackgroundGuarded(java.lang.Void[])
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: AppCompatSpinner$DropdownPopup$1(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.horcrux.svg.ImageView: void setY(java.lang.String)
com.google.android.material.chip.ChipDrawable: boolean isStateful(com.google.android.material.resources.TextAppearance)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: ExtractFromZipSoSource$ZipUnpacker(com.facebook.soloader.ExtractFromZipSoSource,com.facebook.soloader.UnpackingSoSource)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
androidx.transition.ChangeBounds$5: ChangeBounds$5(java.lang.Class,java.lang.String)
androidx.appcompat.app.ToolbarActionBar: void setDisplayOptions(int,int)
okio.Buffer: okio.Buffer clone()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4: StringsKt__StringsKt$rangesDelimitedBy$4(java.util.List,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
okhttp3.internal.http2.Http2Connection: void pushRequestLater$okhttp(int,java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
okhttp3.internal.ws.RealWebSocket: void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.imagehelper.ImageSource: int hashCode()
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory buildPlatformBitmapFactory(com.facebook.imagepipeline.memory.PoolFactory,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory)
com.google.android.material.floatingactionbutton.FloatingActionButton: void getMeasuredContentRect(android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
com.facebook.datasource.AbstractDataSource: float getProgress()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: MultiSourceHelper$MultiSourceResult(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource)
okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)
androidx.transition.ViewGroupOverlayApi14: androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.text.ReactTextView: boolean hasOverlappingRendering()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void maybeIncreaseSampleSize(com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.bottomappbar.BottomAppBar: int access$1600(com.google.android.material.bottomappbar.BottomAppBar)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getProxyAuthenticator$okhttp()
okhttp3.internal.platform.android.Android10SocketAdapter: Android10SocketAdapter()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
androidx.recyclerview.widget.FastScroller$1: FastScroller$1(androidx.recyclerview.widget.FastScroller)
com.google.android.material.animation.MotionTiming: MotionTiming(long,long,android.animation.TimeInterpolator)
com.google.android.material.shape.MaterialShapeDrawable: void drawFillShape(android.graphics.Canvas)
com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8: SwipeRefreshLayout$8(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
com.horcrux.svg.MarkerView: void setMarkerHeight(java.lang.String)
androidx.appcompat.app.AlertController$AlertParams$4: AlertController$AlertParams$4(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.button.MaterialButton: boolean performClick()
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2: PasswordToggleEndIconDelegate$2(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
com.facebook.yoga.YogaNodeJNIBase: void setMinWidthPercent(float)
com.facebook.common.streams.LimitedInputStream: long skip(long)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.facebook.common.references.CloseableReference: boolean isValid(com.facebook.common.references.CloseableReference)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.ReactActivityDelegate$2: ReactActivityDelegate$2(com.facebook.react.ReactActivityDelegate,int,java.lang.String[],int[])
com.google.android.material.chip.ChipDrawable: void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)
androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: UIViewOperationQueue$DismissPopupMenuOperation(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.drawee.gestures.GestureDetector: com.facebook.drawee.gestures.GestureDetector newInstance(android.content.Context)
com.facebook.common.webp.WebpSupportStatus: boolean isAnimatedWebpHeader(byte[],int)
com.facebook.soloader.ApplicationSoSource: boolean checkAndMaybeUpdate()
androidx.transition.ViewUtilsBase: float getTransitionAlpha(android.view.View)
com.facebook.imagepipeline.memory.BitmapCounter$1: BitmapCounter$1(com.facebook.imagepipeline.memory.BitmapCounter)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.horcrux.svg.RenderableViewManager$PatternManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
kotlin.Pair: java.lang.String toString()
com.google.android.material.behavior.SwipeDismissBehavior$1: void onViewPositionChanged(android.view.View,int,int,int,int)
com.facebook.react.views.drawer.events.DrawerClosedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.ReactInstanceManager$5$2: void run()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationStart(android.view.animation.Animation)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void removeCoalescingKey(long)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: void execute()
com.google.android.material.behavior.SwipeDismissBehavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: void applyCutoutPadding(android.graphics.RectF)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.lang.Object initialValue()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: void stopListeningToAnimatedNodeValue(int)
com.facebook.react.views.scroll.ReactScrollView: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache getBitmapCountingMemoryCache()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect getLastChildRect()
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean setCurrentDataSource(com.facebook.datasource.DataSource)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,java.lang.String)
com.facebook.soloader.MinElf$ISA: java.lang.String toString()
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
androidx.appcompat.widget.SearchView: void launchIntent(android.content.Intent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
com.google.android.material.animation.MotionTiming: com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
androidx.transition.FragmentTransitionSupport: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
com.facebook.imagepipeline.producers.SettableProducerContext: SettableProducerContext(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener2,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
com.horcrux.svg.TextView: void clearCache()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()
com.facebook.react.animated.InterpolationAnimatedNode: void update()
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface createTypeface(java.lang.String,int,android.content.res.AssetManager)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMask(android.view.View,java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: boolean tryShow()
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
okhttp3.internal.ws.RealWebSocket: void cancel()
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
com.google.android.material.datepicker.DateValidatorPointForward$1: com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNodeToNode(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
androidx.core.widget.NestedScrollView: boolean canScroll()
com.th3rdwave.safeareacontext.SafeAreaContextPackage: SafeAreaContextPackage()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry access$1600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillOpacity(android.view.View,float)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.cache.disk.DiskStorageCache: void maybeEvictFilesInCacheDir()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setReverseLayout(boolean)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.JobScheduler access$600(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: void onRequestCancellation(java.lang.String)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.imagepipeline.memory.NativeMemoryChunk: boolean isClosed()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void onDetachedFromWindow()
okhttp3.OkHttpClient: int pingIntervalMillis()
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()
androidx.cardview.widget.CardViewApi21Impl: float getRadius(androidx.cardview.widget.CardViewDelegate)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.cache.disk.DiskStorageCache: DiskStorageCache(com.facebook.cache.disk.DiskStorage,com.facebook.cache.disk.EntryEvictionComparatorSupplier,com.facebook.cache.disk.DiskStorageCache$Params,com.facebook.cache.common.CacheEventListener,com.facebook.cache.common.CacheErrorLogger,com.facebook.common.disk.DiskTrimmableRegistry,java.util.concurrent.Executor,boolean)
okhttp3.internal.concurrent.TaskRunner$Companion: java.util.logging.Logger getLogger()
androidx.appcompat.view.SupportActionModeWrapper: void finish()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.facebook.react.uimanager.TransformHelper$1: TransformHelper$1()
com.horcrux.svg.Brush: void setGradientColors(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.os.Parcelable onSaveInstanceState()
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
okio.AsyncTimeout: boolean exit()
com.google.android.material.datepicker.MaterialDatePicker: void access$200(com.google.android.material.datepicker.MaterialDatePicker)
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
okio.Segment: void writeTo(okio.Segment,int)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void wtf(java.lang.String,java.lang.String)
com.facebook.imagepipeline.memory.Bucket: int getFreeListSize()
com.facebook.react.animated.NativeAnimatedNodesManager$1: void run()
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
com.facebook.react.uimanager.UIImplementation: void measureInWindow(int,com.facebook.react.bridge.Callback)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.facebook.react.uimanager.UIImplementation: void applyUpdatesRecursive(com.facebook.react.uimanager.ReactShadowNode,float,float)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationEnd(android.view.animation.Animation)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.appbar.AppBarLayout: boolean setLiftableState(boolean)
com.facebook.cache.common.MultiCacheKey: int hashCode()
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7: SwipeRefreshLayout$7(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
kotlin.collections.ArrayAsCollection: boolean contains(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()
com.google.android.material.resources.CancelableFontCallback: void updateIfNotCancelled(android.graphics.Typeface)
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.imageformat.ImageFormat: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipRule(android.view.View,int)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
com.google.android.material.animation.DrawableAlphaProperty: DrawableAlphaProperty()
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: void onProgressUpdateImpl(float)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void fling(int,int)
androidx.transition.ChangeBounds$2: ChangeBounds$2(java.lang.Class,java.lang.String)
com.facebook.soloader.FileLocker: com.facebook.soloader.FileLocker lock(java.io.File)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer newEncodedMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$000()
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float,float)
com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String)
com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.react.modules.network.RequestBodyUtil$1: okhttp3.MediaType contentType()
androidx.appcompat.view.menu.MenuWrapperICS: void close()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: DefaultDiskStorage$EntryImpl(java.lang.String,java.io.File,com.facebook.cache.disk.DefaultDiskStorage$1)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
com.facebook.imagepipeline.producers.BaseNetworkFetcher: BaseNetworkFetcher()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.String access$200()
com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace)
androidx.customview.widget.ViewDragHelper: int getViewDragState()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.google.android.material.chip.ChipDrawable: boolean onStateChange(int[],int[])
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
okio.ForwardingSource: ForwardingSource(okio.Source)
okhttp3.internal.http2.Http2Reader$Companion: int lengthWithoutPadding(int,int,int)
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1: int getSizeInBytes(com.facebook.common.memory.PooledByteBuffer)
com.facebook.infer.annotation.Assertions: java.lang.Object assumeNotNull(java.lang.Object)
bolts.Task$4: Task$4(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.DefaultItemAnimator: void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
androidx.core.provider.FontProvider$1: FontProvider$1()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.drawee.drawable.ArrayDrawable: int getNumberOfLayers()
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
androidx.appcompat.view.menu.MenuBuilder: void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.app.TwilightManager: boolean isStateValid()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.google.android.material.shape.AdjustedCornerSize: float getCornerSize(android.graphics.RectF)
com.google.android.material.appbar.AppBarLayout$LayoutParams: void setScrollFlags(int)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setImageMatrixScale(float)
com.facebook.react.modules.core.ReactChoreographer: java.lang.Object access$300(com.facebook.react.modules.core.ReactChoreographer)
okhttp3.internal.http1.Http1ExchangeCodec: void skipConnectBody(okhttp3.Response)
com.facebook.react.animated.NativeAnimatedModule$2: NativeAnimatedModule$2(com.facebook.react.animated.NativeAnimatedModule,long)
com.facebook.react.ReactRootView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.android.material.chip.ChipGroup: boolean access$500(com.google.android.material.chip.ChipGroup)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
okhttp3.internal.platform.AndroidPlatform: boolean access$isSupported$cp()
com.facebook.react.modules.core.TimingModule$BridgeTimerManager: TimingModule$BridgeTimerManager(com.facebook.react.modules.core.TimingModule)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.cursoradapter.widget.CursorAdapter: int getCount()
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: AppBarLayout$BaseBehavior$SavedState(android.os.Parcel,java.lang.ClassLoader)
okhttp3.internal.http2.Settings: int get(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)
com.google.android.material.chip.ChipDrawable: void setRippleColorResource(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetDialog: void removeDefaultCallback()
okhttp3.internal.http2.Http2Connection: void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: DefaultItemAnimator$ChangeInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void removeNodeFromParent(com.facebook.react.uimanager.ReactShadowNode,boolean)
com.facebook.react.views.image.ReactImageView: boolean hasMultipleSources()
com.google.android.material.chip.ChipDrawable: boolean isStateful(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNonNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(android.view.View,java.lang.String)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1: void doFrame(long)
com.facebook.imagepipeline.producers.BaseProducerContext: void putOriginExtra(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentAnim$1: FragmentAnim$1(androidx.fragment.app.Fragment)
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager getInstance()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.dialog.AlertFragment: void onDismiss(android.content.DialogInterface)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String access$600(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: java.lang.Object get()
okhttp3.MediaType$Companion: MediaType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
bolts.BoltsExecutors: boolean isAndroidRuntime()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer getWriter()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: ToolbarWidgetWrapper$1(androidx.appcompat.widget.ToolbarWidgetWrapper)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.SearchView$10: SearchView$10(androidx.appcompat.widget.SearchView)
com.google.android.material.chip.ChipDrawable: void onTextSizeChange()
okhttp3.internal.concurrent.Task: java.lang.String getName()
com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToState(android.view.View,int)
com.facebook.imageformat.ImageFormatCheckerUtils: byte[] asciiBytes(java.lang.String)
androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.drawee.drawable.RoundedDrawable: void setPadding(float)
com.facebook.common.internal.Suppliers$2: Suppliers$2()
androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
kotlin.collections.EmptyIterator: void remove()
com.facebook.imagepipeline.listener.BaseRequestListener: void onProducerEvent(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.google.android.material.textfield.CutoutDrawable: CutoutDrawable(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.google.android.material.shape.ShapePath$PathArcOperation: float access$900(com.google.android.material.shape.ShapePath$PathArcOperation)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.recyclerview.widget.SnapHelper: boolean onFling(int,int)
com.facebook.react.uimanager.UIManagerModule$2: void runGuarded()
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
okio.ByteString: int getSize$okio()
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
com.facebook.imagepipeline.memory.BufferMemoryChunk: void close()
com.horcrux.svg.VirtualViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence getHintText()
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.facebook.react.uimanager.events.Event: boolean isInitialized()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedStart()
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.cache.common.CacheKey getPostprocessedBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
kotlin.comparisons.ReverseOrderComparator: ReverseOrderComparator()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2: void onCancellationRequested()
com.facebook.imagepipeline.common.BytesRange: boolean equals(java.lang.Object)
androidx.fragment.app.BackStackState$1: BackStackState$1()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.cursoradapter.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void onCancellation(com.facebook.datasource.DataSource)
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: UIViewOperationQueue$FindTargetForTouchOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.react.modules.fresco.SystraceRequestListener: SystraceRequestListener()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.core.ImagePipelineConfigInterface getImagePipelineConfig()
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcelable)
com.facebook.react.modules.network.ResponseUtil: void onDataReceivedProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short readKey(int)
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.google.android.material.button.MaterialButton: void toggle()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String getEventName()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(java.lang.Object[])
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onDraw(android.graphics.Canvas)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion()
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.imagepipeline.memory.DummyBitmapPool: DummyBitmapPool()
com.facebook.react.views.text.CustomLetterSpacingSpan: void updateMeasureState(android.text.TextPaint)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: boolean canCoalesce()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
androidx.core.provider.FontRequestWorker$2: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void afterTextChanged(android.text.Editable)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSMainModulePath(java.lang.String)
androidx.core.text.BidiFormatter$DirectionalityEstimator: BidiFormatter$DirectionalityEstimator(java.lang.CharSequence,boolean)
com.facebook.drawee.drawable.OrientedDrawable: void draw(android.graphics.Canvas)
okhttp3.Response: java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
com.facebook.imagepipeline.image.EncodedImage: int getExifOrientation()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskwidth(com.horcrux.svg.MaskView,java.lang.String)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.facebook.react.bridge.DynamicFromMap: int asInt()
okhttp3.Request$Builder: okhttp3.Request build()
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: void close()
androidx.recyclerview.widget.RecyclerView$Recycler: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
okio.AsyncTimeout: void timedOut()
androidx.collection.MapCollections: MapCollections()
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.facebook.react.viewmanagers.RNSVGUseManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.shell.MainReactPackage: MainReactPackage(com.facebook.react.shell.MainPackageConfig)
com.facebook.react.uimanager.events.Event: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.animation.MotionTiming: int getRepeatMode()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable)
okio.RealBufferedSource: byte readByte()
okhttp3.Handshake$Companion$get$1: Handshake$Companion$get$1(java.util.List)
com.facebook.react.uimanager.UIViewOperationQueue: long access$2002(com.facebook.react.uimanager.UIViewOperationQueue,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setVectorEffect(android.view.View,int)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.imagepipeline.producers.BaseProducerContext: void cancel()
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory: GingerbreadBitmapFactory()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
okhttp3.OkHttpClient: boolean followSslRedirects()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBackgroundNetworkFetchToEncodedMemorySequence()
com.facebook.common.references.FinalizerCloseableReference: java.lang.Object clone()
com.facebook.react.views.scroll.ReactScrollView: boolean access$000(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int,com.facebook.react.uimanager.ViewManagersPropertyCache$1)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1: DropdownMenuEndIconDelegate$1$1(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView)
com.facebook.imagepipeline.core.ImagePipelineConfig: java.util.Set getRequestListeners()
com.facebook.react.viewmanagers.RNSVGMarkerManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.TextAttributes: float getLineHeight()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getXFlingVelocity()
com.facebook.drawee.drawable.RoundedColorDrawable: void setAlpha(int)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
androidx.recyclerview.widget.AdapterHelper: void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.DefaultItemAnimator$8: DefaultItemAnimator$8(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
com.horcrux.svg.RNSVGMarkerPosition: RNSVGMarkerPosition(com.horcrux.svg.RNSVGMarkerType,com.horcrux.svg.Point,double)
com.horcrux.svg.VirtualView: void setClipRule(int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(android.net.Uri)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: CircularRevealWidget$CircularRevealProperty(java.lang.String)
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: void draw(android.graphics.Canvas,android.graphics.Paint)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getBitmapWidth(android.graphics.Bitmap)
androidx.transition.Transition: void cancel()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
androidx.fragment.app.FragmentAnim$2: FragmentAnim$2(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
com.facebook.react.ReactFragment: com.facebook.react.ReactNativeHost getReactNativeHost()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
com.google.android.material.bottomsheet.BottomSheetDialog: boolean getDismissWithAnimation()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(double)
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.horcrux.svg.GroupView: com.horcrux.svg.GlyphContext getTextRootGlyphContext()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.cache.disk.DiskStorageCache: java.util.Collection getSortedEntries(java.util.Collection)
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.facebook.react.viewmanagers.RNSVGTextPathManagerDelegate: RNSVGTextPathManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
com.swmansion.rnscreens.ScreenWindowTraits: com.swmansion.rnscreens.Screen findScreenForTrait(com.swmansion.rnscreens.Screen,com.swmansion.rnscreens.Screen$WindowTraits)
androidx.appcompat.widget.Toolbar$3: void onClick(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
okio.Okio__JvmOkioKt: java.util.logging.Logger access$getLogger$p()
androidx.transition.Transition: java.lang.String toString()
com.google.android.material.datepicker.MaterialDatePicker$4: MaterialDatePicker$4(com.google.android.material.datepicker.MaterialDatePicker)
androidx.transition.TransitionSet: androidx.transition.Transition setDuration(long)
com.facebook.fresco.ui.common.ForwardingControllerListener2: void onRelease(java.lang.String,com.facebook.fresco.ui.common.ControllerListener2$Extras)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.horcrux.svg.Brush$BrushUnits: Brush$BrushUnits(java.lang.String,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: AccessibilityInfoModule$1(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,android.os.Handler)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$Recycler: int getScrapCount()
com.google.android.material.transformation.ExpandableBehavior: com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.facebook.common.streams.TailAppendingInputStream: int read()
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: long runOnce()
com.facebook.imagepipeline.listener.ForwardingRequestListener: ForwardingRequestListener(com.facebook.imagepipeline.listener.RequestListener[])
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)
bolts.AndroidExecutors: java.util.concurrent.ExecutorService newCachedThreadPool()
com.horcrux.svg.RadialGradientView: void setRx(java.lang.String)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRectwidth(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.facebook.react.views.slider.ReactSlidingCompleteEvent: double getValue()
com.facebook.common.references.RefCountCloseableReference: RefCountCloseableReference(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: boolean canCoalesce()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float,int)
com.facebook.react.uimanager.events.EventDispatcherImpl: EventDispatcherImpl(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.android.material.internal.TextDrawableHelper: void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)
com.facebook.react.animated.FrameBasedAnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: HttpUrlConnectionNetworkFetcher(int)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: ThumbnailBranchProducer$ThumbnailConsumer(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,int)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void applyTransformation(float,android.view.animation.Transformation)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onAttachedToWindow()
com.facebook.react.animated.NativeAnimatedModule$21: NativeAnimatedModule$21(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,int)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)
androidx.appcompat.widget.AppCompatImageHelper: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.text.CustomLetterSpacingSpan: void apply(android.text.TextPaint)
com.google.android.material.card.MaterialCardView: void forceRippleRedrawIfNeeded()
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks: void onIsPrefetchChanged()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.horcrux.svg.ClipPathView: void resetProperties()
okio.Buffer: int readIntLe()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
bolts.Task: boolean isCancelled()
com.facebook.imagepipeline.listener.BaseRequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)
androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,boolean)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getSmallByteArrayPoolStatsTracker()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1: void onAnimationRepeat(android.view.animation.Animation)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()
okio.RealBufferedSource: void readFully(byte[])
androidx.fragment.app.FragmentManager$3: FragmentManager$3(androidx.fragment.app.FragmentManager)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
com.facebook.react.ReactInstanceManager$3$1: ReactInstanceManager$3$1(com.facebook.react.ReactInstanceManager$3,boolean)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowScale(float)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
okhttp3.internal.Util: java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List)
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getScreenDisplayMetrics()
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
kotlin.collections.EmptyList: int hashCode()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.view.ReactViewBackgroundDrawable: int getColor()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.lang.String toString()
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
com.facebook.react.modules.blob.BlobModule$1: void onMessage(java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet,int)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,java.lang.String)
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
okhttp3.Cookie$Companion: okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()
com.facebook.imagepipeline.core.DiskStorageCacheFactory: DiskStorageCacheFactory(com.facebook.imagepipeline.core.DiskStorageFactory)
androidx.appcompat.view.menu.StandardMenuPopup: void setHorizontalOffset(int)
com.facebook.common.references.NoOpCloseableReference: NoOpCloseableReference(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.facebook.imagepipeline.producers.InternalProducerListener: void onProducerStart(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String)
com.facebook.cache.disk.DiskCacheConfig$Builder: long access$600(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.fragment.app.DialogFragment: void dismiss()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5: DropdownMenuEndIconDelegate$5(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
com.facebook.react.uimanager.UIImplementationProvider: com.facebook.react.uimanager.UIImplementation createUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
com.google.android.material.datepicker.MaterialDatePicker$3: MaterialDatePicker$3(com.google.android.material.datepicker.MaterialDatePicker)
com.google.android.material.chip.ChipGroup$LayoutParams: ChipGroup$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.google.android.material.textfield.CutoutDrawable: void postDraw(android.graphics.Canvas)
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.drawee.drawable.ArrayDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String getSystemFontFamilyName()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean shouldUseCombinedNetworkAndCacheProducer()
okio.SegmentedByteString: byte[] internalArray$okio()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.imagepipeline.memory.BasePool: void legacyInitBuckets(android.util.SparseIntArray)
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ChoreographerCompat access$200(com.facebook.react.modules.core.ReactChoreographer)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: android.net.Uri createUriForPartialCacheKey(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.datasource.AbstractDataSource: java.lang.Object getResult()
com.swmansion.rnscreens.Screen: boolean hasWebView(android.view.ViewGroup)
okhttp3.OkHttpClient: boolean followRedirects()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
com.facebook.react.uimanager.UIViewOperationQueue: long access$2000(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.yoga.YogaOverflow: int intValue()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.facebook.react.viewmanagers.RNSVGSymbolManagerDelegate: RNSVGSymbolManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
androidx.lifecycle.ReportFragment: void onStop()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()
com.facebook.imagepipeline.producers.BaseNetworkFetcher: boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: void run()
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
androidx.transition.ViewUtilsApi22: void setLeftTopRightBottom(android.view.View,int,int,int,int)
com.swmansion.rnscreens.ScreenWindowTraits: void setStyle$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity,com.facebook.react.bridge.ReactContext)
okio.SegmentPool: void recycle(okio.Segment)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
com.facebook.react.views.picker.ReactPickerManager: void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean)
com.facebook.soloader.DirectorySoSource: java.lang.String toString()
androidx.appcompat.view.menu.MenuDialogHelper: void dismiss()
androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)
com.horcrux.svg.LinearGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.google.android.material.transformation.FabTransformationBehavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void addRequestListener(com.facebook.imagepipeline.listener.RequestListener)
com.facebook.drawee.controller.AbstractDraweeController$1: void onFadeFinished()
com.facebook.react.PackageList: PackageList(com.facebook.react.ReactNativeHost,com.facebook.react.shell.MainPackageConfig)
com.facebook.react.viewmanagers.RNSVGPathManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
com.facebook.react.ReactRootView: int getUIManagerType()
okio.RealBufferedSource$inputStream$1: RealBufferedSource$inputStream$1(okio.RealBufferedSource)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.facebook.soloader.SoLoader: boolean loadLibraryBySoName(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void doFrame(long)
okio.Timeout: okio.Timeout clearTimeout()
com.facebook.imagepipeline.producers.JobScheduler$2: void run()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
androidx.customview.widget.ViewDragHelper: android.view.View getCapturedView()
androidx.transition.Visibility: java.lang.String[] getTransitionProperties()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.cache.disk.DiskCacheConfig: boolean getIndexPopulateAtStartupEnabled()
kotlin.collections.EmptyList: void clear()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig access$2500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: void scheduleDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoderConfig access$2600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.facebook.react.animated.NativeAnimatedNodesManager: void restoreDefaultValues(int)
androidx.recyclerview.widget.GapWorker$1: int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.imagepipeline.cache.BufferedDiskCache$7: BufferedDiskCache$7(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateStateOnScroll()
com.facebook.react.uimanager.UIImplementation: void updateNodeSize(int,int,int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.facebook.imagepipeline.core.ImagePipelineExperiments: int getBitmapPrepareToDrawMaxSizeBytes()
okhttp3.internal.cache.DiskLruCache: boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache)
androidx.cardview.widget.CardViewBaseImpl: CardViewBaseImpl()
androidx.fragment.app.FragmentStore: FragmentStore()
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
okhttp3.internal.http2.Http2ExchangeCodec: void flushRequest()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLayoutDirectionChanged(int)
com.google.android.material.animation.MotionSpec: MotionSpec()
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: java.lang.String getIdentifier()
androidx.transition.ViewUtilsApi19: float getTransitionAlpha(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.SnapHelper$1: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
okhttp3.EventListener: void requestFailed(okhttp3.Call,java.io.IOException)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(android.view.View,java.lang.String)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onHeaders(int,java.util.List,boolean)
com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
com.facebook.react.bridge.JavaJSExecutor: void close()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getChildAt(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void getProperties(java.util.Map)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ExecutorSupplier access$2700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
androidx.transition.Transition: void pause(android.view.View)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: ThrottlingProducer$ThrottlerConsumer$1(com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer,android.util.Pair)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.transition.ViewUtilsBase: void setTransitionVisibility(android.view.View,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
okhttp3.RequestBody$Companion$toRequestBody$1: long contentLength()
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary$okhttp()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Animatable getAnimatable()
com.facebook.imagepipeline.producers.JobScheduler$1: void run()
com.facebook.imagepipeline.request.ImageRequest: ImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.views.text.TextAttributes: float getEffectiveLineHeight()
com.facebook.react.modules.dialog.DialogModule: void invalidate()
androidx.appcompat.widget.SwitchCompat$1: java.lang.Float get(androidx.appcompat.widget.SwitchCompat)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)
okio.Okio__OkioKt: okio.BufferedSource buffer(okio.Source)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.datasource.AbstractDataSource: boolean setFailure(java.lang.Throwable,java.util.Map)
com.facebook.drawee.controller.BaseControllerListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewCollapsed()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
com.facebook.imagepipeline.core.ImagePipelineConfig: java.lang.Integer getImageTranscoderType()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: com.facebook.common.references.CloseableReference getResult()
com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getChipIcon()
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.String toString()
com.facebook.common.memory.PooledByteBufferInputStream: long skip(long)
com.facebook.react.views.picker.ReactPickerManager: void setSelected(com.facebook.react.views.picker.ReactPicker,int)
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set access$100(com.facebook.react.jstasks.HeadlessJsTaskContext)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.facebook.react.modules.blob.BlobModule$3: boolean supports(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onDiskCachePut(com.facebook.cache.common.CacheKey)
com.coinapp.MainApplication$1: java.lang.String getJSMainModuleName()
okhttp3.internal.platform.android.CloseGuard: boolean warnIfOpen(java.lang.Object)
com.facebook.imagepipeline.core.ImagePipelineExperiments: int getMaxBitmapSize()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.google.android.material.button.MaterialButtonHelper: int getCornerRadius()
androidx.cardview.widget.CardViewApi21Impl: float getElevation(androidx.cardview.widget.CardViewDelegate)
com.facebook.imagepipeline.core.ImagePipelineConfig$1: java.lang.Object get()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
com.facebook.react.views.image.MultiPostprocessor: MultiPostprocessor(java.util.List)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void registerEncodedMemoryCache(com.facebook.imagepipeline.cache.MemoryCache)
com.facebook.drawee.drawable.ScaleTypeDrawable: void draw(android.graphics.Canvas)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)
okhttp3.internal.platform.OpenJSSEPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int)
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: ToolbarActionBar$ToolbarCallbackWrapper(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback)
okhttp3.internal.connection.RealCall$CallReference: RealCall$CallReference(okhttp3.internal.connection.RealCall,java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)
com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getDBError(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec: FabTransformationBehavior$FabTransformationSpec()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
androidx.fragment.app.FragmentManager: void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.transition.ChangeBounds: void captureStartValues(androidx.transition.TransitionValues)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(android.view.View,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetForRemoval(int,int)
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
com.swmansion.rnscreens.events.ScreenWillAppearEvent$Companion: ScreenWillAppearEvent$Companion()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket getBucketIfPresent(int)
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule)
com.facebook.react.uimanager.UIImplementation: void dismissPopupMenu()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean getEnsureMinTouchTargetSize()
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.react.viewmanagers.RNSVGUseManagerDelegate: RNSVGUseManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void afterTextChanged(android.text.Editable)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDownsampleEnabled(boolean)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
androidx.transition.ChangeBounds$6: ChangeBounds$6(java.lang.Class,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean onPerformDefaultAction()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.callercontext.CallerContextVerifier access$2900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.core.content.res.ResourcesCompat$FontCallback$1: ResourcesCompat$FontCallback$1(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)
com.facebook.imagepipeline.core.ImagePipelineConfig$1: java.lang.Boolean get()
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
com.google.android.material.chip.ChipDrawable: void setChipCornerRadius(float)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.recyclerview.widget.SnapHelper: int[] calculateScrollDistance(int,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPositionY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.ModulusAnimatedNode: void update()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.util.Map obtainExtrasFromImage(com.facebook.imagepipeline.image.ImageInfo)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)
com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task foundPinnedImage(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
androidx.cardview.widget.RoundRectDrawable: void setAlpha(int)
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
androidx.transition.TransitionValues: java.lang.String toString()
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
com.facebook.imagepipeline.memory.BitmapPoolBackend: void put(java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: LinearLayoutManager$AnchorInfo()
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()
okhttp3.internal.connection.Exchange: void finishRequest()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: PooledByteArrayBufferedInputStream(java.io.InputStream,byte[],com.facebook.common.references.ResourceReleaser)
androidx.recyclerview.widget.LinearLayoutManager: boolean resolveIsInfinite()
androidx.core.app.ActivityRecreator$1: void run()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findClosestReactAncestor(android.view.View)
okio.Okio: okio.Source source(java.net.Socket)
okhttp3.HttpUrl: java.net.URL url()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
com.google.android.material.chip.ChipDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void removeConfigSubview(int)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: UIManagerModule$MemoryTrimCallback(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.uimanager.UIManagerModule$1)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.facebook.react.devsupport.DisabledDevSupportManager: void handleException(java.lang.Exception)
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
okhttp3.internal.connection.RealCall: java.lang.Object clone()
com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)
com.google.android.material.transformation.FabTransformationBehavior: int getBackgroundTint(android.view.View)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.ControllerViewportVisibilityListener getControllerViewportVisibilityListener()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
com.facebook.react.modules.i18nmanager.I18nUtil: void swapLeftAndRightInRTL(android.content.Context,boolean)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
androidx.transition.Fade$FadeAnimatorListener: void onAnimationStart(android.animation.Animator)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight get(java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
com.facebook.drawee.controller.AbstractDraweeController: void addControllerListener2(com.facebook.fresco.ui.common.ControllerListener2)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.transition.ViewUtilsBase: void setTransitionAlpha(android.view.View,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
com.facebook.yoga.YogaNodeJNIBase: void setPositionType(com.facebook.yoga.YogaPositionType)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy: BitmapMemoryCacheTrimStrategy()
com.facebook.imagepipeline.systrace.FrescoSystrace: FrescoSystrace()
com.google.android.material.chip.ChipGroup$LayoutParams: ChipGroup$LayoutParams(int,int)
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory: com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
okhttp3.internal.http.RealInterceptorChain: int getWriteTimeoutMillis$okhttp()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: long runOnce()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setLowResImageRequest(java.lang.Object)
com.facebook.drawee.controller.AbstractDraweeController: void reportSubmit(com.facebook.datasource.DataSource,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: AppCompatDelegateImpl$AutoTimeNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1: OkHttpNetworkFetcher$1(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$300(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.customview.widget.ExploreByTouchHelper: int keyToDirection(int)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getForceRotatedInvertedExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.imagepipeline.producers.LocalFileFetchProducer: LocalFileFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitUpdateDimensionsEvent()
androidx.transition.ViewGroupOverlayApi18: void remove(android.view.View)
com.facebook.common.references.SharedReference: SharedReference(java.lang.Object,com.facebook.common.references.ResourceReleaser)
com.facebook.react.views.scroll.ReactHorizontalScrollView$5: com.facebook.react.bridge.WritableMap getStateUpdate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker access$3000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.ReactInstanceManager: void onBackPressed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation startAlphaAnimation(int,int)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.soloader.DirectorySoSource: java.io.File unpackLibrary(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()
com.facebook.cache.common.NoOpCacheEventListener: void onCleared()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DiskCacheReadProducer newDiskCacheReadProducer(com.facebook.imagepipeline.producers.Producer)
kotlin.collections.AbstractList: int lastIndexOf(java.lang.Object)
com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
androidx.recyclerview.widget.AdapterHelper: int updatePositionWithPostponed(int,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onValueRelease(int)
androidx.fragment.app.FragmentStore: java.util.List getFragments()
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.common.BytesRange getBytesRange()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.google.android.material.textfield.TextInputLayout$SavedState$1: TextInputLayout$SavedState$1()
com.facebook.react.views.picker.ReactPicker: void setStagedSelection(int)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.ThreadHandoffProducer)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinecap(android.view.View,int)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnCancellation()
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onProducerEvent(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean isReady()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.material.transformation.FabTransformationBehavior: void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.app.ToolbarActionBar: void onDestroy()
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.facebook.imagepipeline.image.EncodedImage: EncodedImage(com.facebook.common.internal.Supplier,int)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: TouchEventCoalescingKeyHelper()
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: AddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.viewmanagers.RNSVGGroupManagerDelegate: RNSVGGroupManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable access$600(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.google.android.material.chip.Chip: void removeBackgroundInset()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyVisibleChild(int,int,boolean)
androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.SvgViewModule$1$1: void run()
com.facebook.drawee.view.DraweeView: void init(android.content.Context)
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableNativeMap getPhysicalPixelsNativeMap(android.util.DisplayMetrics,double)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RectView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactInstanceManager$4: ReactInstanceManager$4(com.facebook.react.ReactInstanceManager,android.view.View)
com.google.android.material.textfield.ClearTextEndIconDelegate: boolean access$000(android.text.Editable)
androidx.transition.ChangeBounds$7: ChangeBounds$7(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
com.facebook.react.modules.core.TimingModule$BridgeTimerManager: void callTimers(com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1: ForwardingCookieHandler$CookieSaver$1(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver,com.facebook.react.modules.network.ForwardingCookieHandler)
com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(java.nio.channels.FileChannel)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()
com.google.android.material.animation.MotionTiming: int getRepeatCount()
com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
com.google.android.material.shape.ShapePath$ArcShadowOperation: ShapePath$ArcShadowOperation(com.google.android.material.shape.ShapePath$PathArcOperation)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveKeylineGravity(int)
com.horcrux.svg.PathParser: void arcTo(float,float,float,boolean,boolean,float,float)
androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.ViewInfoStore: void clear()
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: AndroidSwipeRefreshLayoutManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
okio.Buffer: long readHexadecimalUnsignedLong()
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void assertNotDisposed()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.Priority getPriority()
androidx.customview.widget.ExploreByTouchHelper: boolean clickKeyboardFocusedVirtualView()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop: ScalingUtils$ScaleTypeFocusCrop()
com.facebook.imagepipeline.producers.BitmapProbeProducer$ProbeConsumer: BitmapProbeProducer$ProbeConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.cache.BoundedLinkedHashSet,com.facebook.imagepipeline.cache.BoundedLinkedHashSet)
com.horcrux.svg.RadialGradientView: void setFy(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.memory.BufferMemoryChunk: int write(int,byte[],int,int)
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
com.google.android.material.ripple.RippleDrawableCompat: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
com.horcrux.svg.VirtualView: void saveDefinition()
com.google.android.material.datepicker.MaterialDatePicker$3: void onSelectionChanged(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.google.android.material.shape.MaterialShapeDrawable: void calculatePathForSize(android.graphics.RectF,android.graphics.Path)
androidx.lifecycle.SavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
com.facebook.react.modules.network.ProgressRequestBody: okio.Sink outputStreamSink(okio.BufferedSink)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String getId()
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener access$000(com.facebook.react.views.picker.ReactPicker)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.cache.disk.DiskStorageCache: void updateFileCacheSizeLimit()
com.horcrux.svg.CircleView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.swmansion.rnscreens.ScreenStack: void removeScreenAt(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedStart(android.view.View)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void initialize()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: int getChangingConfigurations()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getFileInputStream(android.content.Context,java.lang.String)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewModule$1$2: SvgViewModule$1$2(com.horcrux.svg.SvgViewModule$1)
com.facebook.drawee.drawable.ForwardingDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()
com.google.android.material.shape.CutCornerTreatment: void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode()
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
androidx.appcompat.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)
androidx.fragment.app.FragmentManager$1: FragmentManager$1(androidx.fragment.app.FragmentManager,boolean)
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)
com.horcrux.svg.VirtualView: void setResponsible(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequestWorker$TypefaceResult call()
androidx.core.view.ActionProvider: void reset()
com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()
com.facebook.react.uimanager.MatrixMathHelper: double determinant(double[])
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void handleUpdate(int,int,int)
com.horcrux.svg.VirtualViewManager: java.lang.Class getShadowNodeClass()
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void addPosition(int,int)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumBeginEvent(android.view.ViewGroup,int,int)
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.ChildHelper: void unhide(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.google.android.material.chip.Chip$ChipTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
com.facebook.imagepipeline.core.ImagePipeline: ImagePipeline(com.facebook.imagepipeline.core.ProducerSequenceFactory,java.util.Set,java.util.Set,com.facebook.common.internal.Supplier,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier,com.facebook.callercontext.CallerContextVerifier,com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)
okhttp3.CacheControl$Builder: int clampToInt(long)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
androidx.appcompat.view.menu.MenuPopupHelper$1: MenuPopupHelper$1(androidx.appcompat.view.menu.MenuPopupHelper)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.util.concurrent.Callable)
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: void markFailure(java.lang.Object,java.lang.Throwable)
com.facebook.imagepipeline.image.EncodedImage: java.io.InputStream getInputStream()
com.zoontek.rnbootsplash.RNBootSplashTask: com.facebook.react.bridge.Promise getPromise()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void onNewResultImpl(java.lang.Object,int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewFromScrapList()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.horcrux.svg.DefinitionView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setPressedTranslationZ(float)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
com.facebook.react.common.ClearableSynchronizedPool: ClearableSynchronizedPool(int)
androidx.fragment.app.Fragment: android.view.View getView()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
androidx.collection.MapCollections: java.util.Set getKeySet()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: void validate()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
com.facebook.drawee.drawable.ForwardingDrawable: void getParentTransform(android.graphics.Matrix)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.disk.DefaultDiskStorage$FileInfo getShardFileInfo(java.io.File)
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace: void endSection()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.common.executors.ScheduledFutureImpl: int compareTo(java.util.concurrent.Delayed)
com.swmansion.rnscreens.Screen$onLayout$1: void runGuarded()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findJvmPlatform()
com.google.android.material.shape.MaterialShapeDrawable: void drawStrokeShape(android.graphics.Canvas)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
com.google.android.material.chip.ChipDrawable: void setChipStartPadding(float)
com.facebook.react.modules.dialog.AlertFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(int,android.os.Bundle)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.request.ImageRequestBuilder: void validate()
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
androidx.fragment.app.FragmentManager: void dispatchStateChange(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
androidx.cardview.widget.RoundRectDrawableWithShadow: void setAddPaddingForCorners(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(android.view.View,float)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: UIViewOperationQueue$LayoutUpdateFinishedOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleResult(com.facebook.imagepipeline.image.CloseableImage,int)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.common.references.RefCountCloseableReference: RefCountCloseableReference(com.facebook.common.references.SharedReference,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$002(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.google.android.material.card.MaterialCardView: int[] onCreateDrawableState(int)
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
com.facebook.common.logging.FLog: void d(java.lang.Class,java.lang.String,java.lang.Object)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBufferAllocateDirect()
com.facebook.common.memory.PooledByteArrayBufferedInputStream: void close()
com.google.android.material.internal.ForegroundLinearLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
okhttp3.internal.http2.Http2Connection: java.lang.String getConnectionName$okhttp()
com.google.android.material.chip.Chip: void updateTextPaintDrawState()
okhttp3.internal.connection.ExchangeFinder: ExchangeFinder(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener)
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.facebook.react.views.text.ReactForegroundColorSpan: ReactForegroundColorSpan(int)
androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: SafeAreaViewLocalData(com.th3rdwave.safeareacontext.EdgeInsets,com.th3rdwave.safeareacontext.SafeAreaViewMode,java.util.EnumSet)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getSystemFontFamily(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.facebook.imagepipeline.producers.DiskCacheReadProducer: boolean access$000(bolts.Task)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()
com.facebook.drawee.drawable.RoundedDrawable: void setRadius(float)
com.google.android.material.textfield.TextInputLayout: void draw(android.graphics.Canvas)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
com.facebook.imagepipeline.transformation.TransformationUtils: boolean maybeApplyTransformation(com.facebook.imagepipeline.transformation.BitmapTransformation,com.facebook.common.references.CloseableReference)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: java.lang.String getValue(com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk(int)
androidx.collection.SimpleArrayMap: java.lang.String toString()
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: DatesKt$STANDARD_DATE_FORMAT$1()
com.facebook.drawee.drawable.ScaleTypeDrawable: com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleType()
com.google.android.material.chip.ChipDrawable: void setCloseIconContentDescription(java.lang.CharSequence)
com.horcrux.svg.FabricEnabledViewGroup: FabricEnabledViewGroup(com.facebook.react.bridge.ReactContext)
okio.Timeout: boolean hasDeadline()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
okhttp3.OkHttpClient: void verifyClientState()
androidx.collection.ArrayMap$1: void colRemoveAt(int)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.google.android.material.appbar.AppBarLayout: void updateWillNotDraw()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: void invoke(java.io.IOException)
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipIconTint()
androidx.appcompat.widget.ResourcesWrapper: float getFraction(int,int,int)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
com.facebook.react.views.textinput.ReactEditText: void onSelectionChanged(int,int)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderStyle(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
okio.SegmentPool: SegmentPool()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.drawee.view.SimpleDraweeView: void initialize(com.facebook.common.internal.Supplier)
com.facebook.imagepipeline.memory.BasePool: void release(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$5: BottomAppBar$5(com.google.android.material.bottomappbar.BottomAppBar,int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowRadius(float)
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
com.google.android.material.internal.CheckableImageButton$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMargin(int,float)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
com.google.android.material.snackbar.SnackbarManager$1: boolean handleMessage(android.os.Message)
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions autoRotate()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.animated.NativeAnimatedModule$14: NativeAnimatedModule$14(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.yoga.YogaNodeJNIBase: void setMaxWidth(float)
com.facebook.drawee.view.DraweeView: void onFinishTemporaryDetach()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setRedBoxHandler(com.facebook.react.devsupport.RedBoxHandler)
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
bolts.Task: Task(java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar: void setCurrentMonth(com.google.android.material.datepicker.Month)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
androidx.lifecycle.ViewModelStore: void clear()
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace)
com.google.android.material.shape.MaterialShapeDrawable: void drawCompatShadow(android.graphics.Canvas)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.common.internal.Objects$ToStringHelper toStringHelper()
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(java.lang.Object)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePost()
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()
com.google.android.material.internal.ThemeEnforcement: boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.swmansion.rnscreens.ScreenStack: void removeView(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: ActionMenuPresenter$ActionMenuPopupCallback(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.textfield.TextInputLayout: void dispatchOnEndIconChanged(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.facebook.imagepipeline.memory.GenericByteArrayPool: void free(java.lang.Object)
okhttp3.internal.Util: long and(int,long)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.th3rdwave.safeareacontext.SafeAreaProvider: boolean onPreDraw()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void updateInternal()
com.horcrux.svg.TextView: void pushGlyphContext()
okhttp3.internal.http2.Hpack$Writer: void resizeHeaderTable(int)
okhttp3.internal.concurrent.TaskQueue: java.lang.String getName$okhttp()
androidx.appcompat.app.AlertController$AlertParams$3: AlertController$AlertParams$3(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.react.modules.network.NetworkingModule: void invalidate()
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: SimpleProgressiveJpegConfig$DefaultDynamicValueConfig()
com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: ResizeAndRotateProducer$TransformingConsumer$2(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer)
com.google.android.material.chip.ChipDrawable: boolean isStateful(android.content.res.ColorStateList)
androidx.recyclerview.widget.DefaultItemAnimator$3: void run()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.views.slider.ReactSliderEvent: boolean isFromUser()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onProducerEvent(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: RecyclerViewAccessibilityDelegate$ItemDelegate(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
com.facebook.react.modules.network.ResponseUtil: void onRequestSuccess(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)
com.google.android.material.button.MaterialButtonHelper: boolean isBackgroundOverwritten()
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.google.android.material.behavior.SwipeDismissBehavior$1: void onViewCaptured(android.view.View,int)
com.facebook.drawee.view.DraweeView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
okhttp3.internal.connection.Exchange$ResponseBodySource: Exchange$ResponseBodySource(okhttp3.internal.connection.Exchange,okio.Source,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.savedstate.Recreator$SavedStateProvider: void add(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaScriptTimerManager access$900(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
okhttp3.internal.platform.android.AndroidLog: void enableLogging(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.google.android.material.chip.ChipDrawable: void setMaxWidth(int)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
com.facebook.imagepipeline.producers.DelayProducer: com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.DelayProducer)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String getEventName()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.RotationOptions getRotationOptions()
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void onAnimationsEnded()
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: boolean hasTransformableExifOrientation(com.facebook.imagepipeline.image.CloseableStaticBitmap)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$1000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
okhttp3.internal.http2.Http2ExchangeCodec: void cancel()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(android.view.View,java.lang.String)
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: DefaultDiskStorage$FileInfo(java.lang.String,java.lang.String,com.facebook.cache.disk.DefaultDiskStorage$1)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger access$getLogger$cp()
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void draw(android.graphics.Canvas)
okhttp3.CipherSuite$Companion: java.lang.String secondaryName(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.uimanager.RootViewUtil: android.graphics.Point getViewportOffset(android.view.View)
androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)
com.facebook.drawee.drawable.ForwardingDrawable: void getRootBounds(android.graphics.RectF)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void createOrientationHelpers()
com.google.android.material.card.MaterialCardView: void toggle()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
okhttp3.internal.platform.ConscryptPlatform: boolean access$isSupported$cp()
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion()
com.horcrux.svg.SvgView: SvgView(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.events.ScreenWillDisappearEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void d(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onDiskCacheHit(com.facebook.cache.common.CacheKey)
com.google.android.material.shape.MaterialShapeDrawable: int getShadowRadius()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.imagepipeline.image.EncodedImage: int getSampleSize()
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setVectorEffect(android.view.View,int)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable getContentBackground()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
okhttp3.Route: java.net.Proxy proxy()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationStart(android.animation.Animator)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String toString()
androidx.collection.ArrayMap: ArrayMap(int)
okhttp3.internal.Util: int indexOfNonWhitespace(java.lang.String,int)
com.horcrux.svg.TextView: void setBaselineShift(java.lang.String)
com.facebook.react.bridge.Arguments: Arguments()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagBackward()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
com.google.android.material.textfield.TextInputLayout$1: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
com.facebook.react.views.picker.ReactPicker: void setStagedBackgroundColor(java.lang.Integer)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCacheMiss(java.lang.Object)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
com.horcrux.svg.SvgView: void setRemovedFromReactViewHierarchy()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity)
com.facebook.imagepipeline.memory.PoolConfig: boolean isIgnoreBitmapPoolHardCap()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.drawee.drawable.AutoRotateDrawable: void scheduleNextFrame()
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleAndClearCachedViews()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void post()
androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)
androidx.collection.ArraySet: ArraySet(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object getCallerContext()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.GapWorker$Task: void clear()
com.facebook.drawee.controller.AbstractDraweeController: void setGestureDetector(com.facebook.drawee.gestures.GestureDetector)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillRule(android.view.View,int)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
okhttp3.internal.ws.RealWebSocket$connect$1: void onFailure(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void closeSafely(com.facebook.datasource.DataSource)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
com.facebook.drawee.generic.GenericDraweeHierarchy: void resetFade()
com.facebook.yoga.YogaNodeJNIBase: void setWidthPercent(float)
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: DefaultDiskStorage$EntriesCollector(com.facebook.cache.disk.DefaultDiskStorage)
com.facebook.soloader.MergedSoMapping: java.lang.String mapLibName(java.lang.String)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: com.facebook.imagepipeline.memory.MemoryChunk alloc(int)
androidx.recyclerview.widget.RecyclerView$3: RecyclerView$3()
com.facebook.yoga.YogaNodeJNIBase: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateError(int)
androidx.recyclerview.widget.ChildHelper: void removeAllViewsUnfiltered()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.react.views.view.ReactViewGroup: void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void initTempTextPaint(int)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: int getOverlapPixelsForOffset(android.view.View)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: java.lang.Object getResult()
com.horcrux.svg.GlyphContext: double getFontSize()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
com.facebook.react.common.network.OkHttpCallUtil: void cancelTag(okhttp3.OkHttpClient,java.lang.Object)
androidx.transition.ChangeBounds$5: void set(android.view.View,android.graphics.PointF)
com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()
com.google.android.material.resources.TextAppearance$2: void onFontRetrievalFailed(int)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.ReactInstanceManager: void access$200(com.facebook.react.ReactInstanceManager)
androidx.recyclerview.widget.RecyclerView$Recycler: void viewRangeUpdate(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.chip.ChipDrawable: void setCheckable(boolean)
com.facebook.react.animated.NativeAnimatedModule$22: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.facebook.soloader.SoLoader$WrongAbiError: SoLoader$WrongAbiError(java.lang.Throwable,java.lang.String)
com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderRadiusOrDefaultTo(float,com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation)
com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimationsForNode(com.facebook.react.animated.AnimatedNode)
kotlin.SynchronizedLazyImpl: java.lang.String toString()
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getThumbnailKind(com.facebook.imagepipeline.common.ResizeOptions)
okhttp3.internal.http2.Huffman: void decode(okio.BufferedSource,long,okio.BufferedSink)
com.google.android.material.transformation.FabTransformationBehavior$4: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.facebook.soloader.ExoSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: float getTargetShadowSize()
com.facebook.imagepipeline.memory.PoolConfig: PoolConfig(com.facebook.imagepipeline.memory.PoolConfig$Builder,com.facebook.imagepipeline.memory.PoolConfig$1)
androidx.transition.RectEvaluator: android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate createReactActivityDelegate()
androidx.recyclerview.widget.LinearSmoothScroller: void onStop()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
okio.DeflaterSink: void close()
okhttp3.Headers$Companion: java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String)
com.facebook.imagepipeline.common.ResizeOptions: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$1900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setVerticalOffset(int)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
androidx.cardview.widget.RoundRectDrawable: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean shouldNotifyOnLayout()
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: FpsDebugFrameCallback$FpsInfo(int,int,int,int,double,double,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
androidx.transition.Transition$3: Transition$3(androidx.transition.Transition)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactFontManager$FontFamily: ReactFontManager$FontFamily()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
androidx.recyclerview.widget.GridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.PathParser: void smoothQuadraticBezierCurve(float,float)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int)
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onConfigurationChanged(android.content.res.Configuration)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: com.th3rdwave.safeareacontext.SafeAreaViewMode getMode()
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextAttribute(android.content.Context,int)
com.facebook.imagepipeline.producers.JobScheduler$JobState: JobScheduler$JobState(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setResponsible(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onProgressUpdateImpl(float)
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: int access$702(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5: boolean onTouch(android.view.View,android.view.MotionEvent)
com.facebook.imageformat.DefaultImageFormats: boolean isWebpFormat(com.facebook.imageformat.ImageFormat)
okhttp3.internal.platform.BouncyCastlePlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void addRequestListener(com.facebook.imagepipeline.listener.RequestListener)
com.google.android.material.behavior.SwipeDismissBehavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
com.facebook.imagepipeline.request.ImageRequest$1: android.net.Uri apply(com.facebook.imagepipeline.request.ImageRequest)
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.UIImplementation: void sendAccessibilityEvent(int,int)
com.facebook.soloader.MinElf$ElfError: MinElf$ElfError(java.lang.String)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: DropdownMenuEndIconDelegate(com.google.android.material.textfield.TextInputLayout)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean)
com.facebook.react.views.view.ReactViewGroup: void onRtlPropertiesChanged(int)
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable getText()
com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage)
com.horcrux.svg.TextView: void setLengthAdjust(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDirty()
com.facebook.react.views.scroll.ScrollEvent: void onDispose()
androidx.core.provider.FontRequestWorker$4: void accept(java.lang.Object)
com.facebook.soloader.SysUtil: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: UIViewOperationQueue$DismissPopupMenuOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIViewOperationQueue$1)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object)
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: void updateSearchAutoComplete()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)
com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeOutBranches()
com.horcrux.svg.TextPathView: void setHref(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeController: void initialize(java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)
com.facebook.yoga.YogaNodeJNIBase: float getLayoutX()
com.facebook.imagepipeline.memory.BitmapCounter$1: void release(java.lang.Object)
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerIfExists(java.lang.String)
com.facebook.react.ReactInstanceManager$9: ReactInstanceManager$9(com.facebook.react.ReactInstanceManager,int,com.facebook.react.uimanager.ReactRoot)
com.facebook.drawee.controller.AbstractDraweeController: void releaseFetch()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkForGaps()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
com.horcrux.svg.RadialGradientView: void setCx(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$100(com.facebook.imagepipeline.memory.PoolConfig$Builder)
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
com.google.android.material.floatingactionbutton.FloatingActionButton: void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
okio.ByteString$Companion: okio.ByteString encodeUtf8(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.animated.NativeAnimatedModule$21: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getUri()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
com.horcrux.svg.SvgView: void setVbHeight(float)
okhttp3.Response: java.lang.String header(java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
okhttp3.HttpUrl$Builder: java.util.List getEncodedPathSegments$okhttp()
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
com.facebook.drawee.controller.ForwardingControllerListener: void onException(java.lang.String,java.lang.Throwable)
androidx.fragment.app.FragmentAnim$2$1: FragmentAnim$2$1(androidx.fragment.app.FragmentAnim$2)
com.facebook.drawee.controller.AbstractDraweeController: void setRetainImageOnFailure(boolean)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void addImagePerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener)
okhttp3.internal.http2.Http2Connection: void close()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerSubmitTimeMs(long)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.facebook.common.util.UriUtil: boolean isLocalContactUri(android.net.Uri)
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: void set(java.lang.Object,java.lang.Object)
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: DefaultBitmapMemoryCacheParamsSupplier(android.app.ActivityManager)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: java.lang.String getString()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,double)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getBottomEdge()
okhttp3.Handshake: java.util.List localCertificates()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)
com.facebook.react.views.textinput.ReactEditText: void clearFocus()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
okhttp3.internal.connection.RealCall: java.lang.String redactedUrl$okhttp()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)
androidx.core.view.ActionProvider: boolean hasSubMenu()
com.horcrux.svg.RenderableViewManager$MarkerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.UIImplementation: void onHostPause()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
androidx.appcompat.widget.TooltipCompatHandler$1: void run()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: UIViewOperationQueue$UpdateLayoutOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,int,int,int,int)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener: ImagePerfImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()
androidx.collection.MapCollections$KeySet: boolean isEmpty()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
com.facebook.imagepipeline.producers.JobScheduler: void submitJob()
okio.Okio: okio.Sink sink(java.io.File,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
com.horcrux.svg.RenderableView: void setStrokeWidth(java.lang.String)
com.horcrux.svg.LinearGradientView: void setGradientUnits(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean access$500(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: ToolbarActionBar$ActionMenuPresenterCallback(androidx.appcompat.app.ToolbarActionBar)
com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaValue getWidth()
okhttp3.HttpUrl: HttpUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String)
com.google.android.material.shape.AdjustedCornerSize: int hashCode()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
com.facebook.imagepipeline.image.EncodedImage: void setWidth(int)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onTransitionToBridgeIdle()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
bolts.Task: bolts.Task continueWith(bolts.Continuation)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManager,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: AppCompatSpinner$DropDownAdapter(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
okhttp3.HttpUrl$Builder$Companion: int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: void execute()
okhttp3.internal.http2.Settings$Companion: Settings$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getCloneWithRotationApplied(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: ReactTextInputBlurEvent(int,int)
com.facebook.imageutils.WebpUtil: java.lang.String getHeader(byte[])
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.zoontek.rnbootsplash.RNBootSplashPackage: RNBootSplashPackage()
com.google.android.material.chip.Chip: void setMinLines(int)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void onNewResultImpl(java.lang.Object,int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)
androidx.appcompat.widget.ResourcesWrapper: int[] getIntArray(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.internal.Supplier getSuppressBitmapPrefetchingSupplier()
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
androidx.appcompat.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
okio.Buffer: okio.BufferedSink write(byte[])
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.ChipDrawable: android.graphics.ColorFilter getTintColorFilter()
androidx.transition.ChangeBounds$5: void set(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void onReceive(android.content.Context,android.content.Intent)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.imagepipeline.producers.NetworkFetchProducer: void onResponse(com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int)
androidx.recyclerview.widget.DefaultItemAnimator$2: void run()
okhttp3.Response: okhttp3.Response cacheResponse()
okhttp3.CacheControl: int maxStaleSeconds()
okhttp3.Address: boolean equals(java.lang.Object)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void onFailureImpl(java.lang.Throwable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: PartialDiskCacheProducer$PartialDiskCacheConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)
com.facebook.react.views.text.TextAttributeProps: void setLetterSpacing(float)
com.google.android.material.textview.MaterialTextView: boolean canApplyTextAppearanceLineHeight(android.content.Context)
com.horcrux.svg.VirtualView: float getCanvasWidth()
androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)
androidx.recyclerview.widget.LinearLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
com.facebook.soloader.SoLoader: boolean checkIfSystemApp(android.content.Context,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: void run()
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,int[])
androidx.transition.ChangeBounds$2: void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
androidx.appcompat.widget.SwitchCompat$1: SwitchCompat$1(java.lang.Class,java.lang.String)
okio.RealBufferedSink: int write(java.nio.ByteBuffer)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: OkHttpNetworkFetcher$2(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.shape.ShapePath: void setStartY(float)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: java.lang.Object get()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.shape.ShapePath$PathArcOperation: void setStartAngle(float)
com.facebook.drawee.drawable.RoundedDrawable: int getOpacity()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.fresco.ui.common.BaseControllerListener2: void onSubmit(java.lang.String,java.lang.Object,com.facebook.fresco.ui.common.ControllerListener2$Extras)
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
okhttp3.internal.connection.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.horcrux.svg.TSpanView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2: void applyTransformation(float,android.view.animation.Transformation)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newDiskCacheSequence(com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMaxTextSize()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
okhttp3.internal.http2.Http2Connection: void setPeerSettings(okhttp3.internal.http2.Settings)
okhttp3.internal.http1.Http1ExchangeCodec: void cancel()
com.facebook.common.internal.Preconditions: void checkState(boolean)
androidx.appcompat.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.drawee.drawable.RoundedDrawable: android.graphics.ColorFilter getColorFilter()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getCleanFiles$okhttp()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: TextLayoutManagerMapBuffer()
androidx.appcompat.view.menu.StandardMenuPopup: boolean isShowing()
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper$ValueHolder addHolder()
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String getName()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1: AbstractDraweeControllerBuilder$1()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactActivityDelegate: boolean onKeyUp(int,android.view.KeyEvent)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void cleanUp(com.facebook.react.common.LongArray,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.core.view.ViewCompat: float getElevation(android.view.View)
androidx.fragment.app.FragmentTransitionCompat21$5: FragmentTransitionCompat21$5(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.core.view.WindowInsetsCompat: int hashCode()
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubview: ScreenStackHeaderSubview(com.facebook.react.bridge.ReactContext)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)
com.facebook.react.views.text.TextAttributes: float getEffectiveLetterSpacing()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getUseLastFrameForPreview()
com.horcrux.svg.SvgPackage: SvgPackage()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,float,float)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(android.content.Context)
com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpSupported()
com.google.android.material.behavior.SwipeDismissBehavior: void setEndAlphaSwipeDistance(float)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()
com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)
com.facebook.react.uimanager.UIImplementation: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
com.google.android.material.shape.MaterialShapeDrawable: void updateZ()
com.google.android.material.datepicker.MaterialCalendarGridView$1: MaterialCalendarGridView$1(com.google.android.material.datepicker.MaterialCalendarGridView)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getFriendlyDeviceName()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
okhttp3.internal.http2.Http2: java.lang.String formatFlags(int,int)
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: boolean maybeAddToExclusives(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap,android.graphics.Bitmap)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside: ScalingUtils$ScaleTypeCenterInside()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void closeSafely(java.io.Closeable)
okio.Options$Companion: Options$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.google.android.material.resources.MaterialResources: com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: LayoutAnimationController$3(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.common.references.CloseableReference createFallbackBitmap(int,int,android.graphics.Bitmap$Config)
androidx.collection.LongSparseArray: LongSparseArray()
com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeInLayer(int)
com.google.android.material.ripple.RippleDrawableCompat: com.google.android.material.ripple.RippleDrawableCompat mutate()
com.facebook.imagepipeline.cache.BufferedDiskCache$7: void write(java.io.OutputStream)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ScrollingTabContainerView: boolean performExpand()
com.facebook.soloader.MinElf: int getu16(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
androidx.cardview.widget.RoundRectDrawableWithShadow: void getMaxShadowAndCornerPadding(android.graphics.Rect)
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()
okhttp3.internal.connection.RealConnection: void incrementSuccessCount$okhttp()
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF)
androidx.appcompat.widget.ActionMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
com.facebook.react.uimanager.UIImplementation: int resolveRootTagFromReactTag(int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: android.view.View onCreateActionView(android.view.MenuItem)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View,int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean shouldDecodePrefetches()
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationEnd(android.animation.Animator)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillRule(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
okio.GzipSource: void consumeTrailer()
okio.AsyncTimeout$sink$1: okio.Timeout timeout()
com.facebook.react.ReactActivityDelegate$1: com.facebook.react.ReactRootView createRootView()
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentById(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.imagepipeline.memory.BasePool: void trimToSize(int)
com.google.android.material.shape.ShapePath$PathLineOperation: float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)
okhttp3.Cache: Cache(java.io.File,long)
okhttp3.EventListener: void responseFailed(okhttp3.Call,java.io.IOException)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.disk.DiskCacheConfig$Builder newBuilder(android.content.Context)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.ClearTextEndIconDelegate$3: void onClick(android.view.View)
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams: com.facebook.imagepipeline.memory.PoolParams get()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView$5: void removeViewAt(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isLayoutOnly()
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getNetworkFetchToEncodedMemoryPrefetchSequence()
com.facebook.react.views.view.ReactViewBackgroundManager: ReactViewBackgroundManager(android.view.View)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void releaseImage(com.facebook.common.references.CloseableReference)
okhttp3.Cookie: java.util.regex.Pattern access$getYEAR_PATTERN$cp()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String binarySearch(byte[],byte[][],int)
okhttp3.internal.platform.android.AndroidLog: void enable()
okhttp3.internal.Util$threadFactory$1: Util$threadFactory$1(java.lang.String,boolean)
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
androidx.appcompat.app.ToolbarActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getValueOffsetForKey(short)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void persistCookies()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView: boolean hasVoiceSearch()
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: BitmapMemoryCacheKey(java.lang.String,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.cache.common.CacheKey,java.lang.String,java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.react.views.modal.RequestCloseEvent: RequestCloseEvent(int,int)
com.facebook.react.ReactInstanceManager: void access$1500(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat getImageFormat_WrapIOException(java.io.InputStream)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
androidx.cardview.widget.CardViewApi21Impl: CardViewApi21Impl()
com.facebook.imagepipeline.listener.BaseRequestListener: void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.recyclerview.widget.OrientationHelper$2: int getEndPadding()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.facebook.cache.disk.DiskStorageCache: boolean probe(com.facebook.cache.common.CacheKey)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
androidx.fragment.app.FragmentActivity: void onStop()
okhttp3.internal.http.HttpHeaders: void readChallengeHeader(okio.Buffer,java.util.List)
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.imagepipeline.platform.ArtDecoder: int getBitmapSize(int,int,android.graphics.BitmapFactory$Options)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRotationOptions(com.facebook.imagepipeline.common.RotationOptions)
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: void postVisitDirectory(java.io.File)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeWidth(android.view.View,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.google.android.material.datepicker.MaterialCalendar$6: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.facebook.imagepipeline.producers.NetworkFetchProducer: void handleFinalResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void offsetRectWithShadow(android.graphics.Rect)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: ActionMenuView$MenuBuilderCallback(androidx.appcompat.widget.ActionMenuView)
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
com.horcrux.svg.VirtualViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
androidx.customview.widget.ExploreByTouchHelper$2: java.lang.Object get(java.lang.Object,int)
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.color.MaterialColors: int layer(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
androidx.arch.core.internal.SafeIterableMap: int size()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean,boolean)
com.google.android.material.button.MaterialButtonHelper: void updateMaskBounds(int,int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object getCachedImage()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: EventDispatcherImpl$DispatchEventsRunnable(com.facebook.react.uimanager.events.EventDispatcherImpl,com.facebook.react.uimanager.events.EventDispatcherImpl$1)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache$CacheTrimStrategy access$400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.modules.core.ReactChoreographer: void removeFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)
com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isDiskCacheEnabled()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: void onNewResultImpl(java.lang.Object,int)
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
com.facebook.react.DebugCorePackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.facebook.imagepipeline.producers.NetworkFetchProducer: long getSystemUptime()
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.GapWorker$1: GapWorker$1()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onChanged()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setColor(int)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void start()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.GroupView: void setFont(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter: ProducerToDataSourceAdapter(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener2)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.rnscreens.ScreenContainer: void addScreen(com.swmansion.rnscreens.Screen,int)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinecap(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setEditTextBoxBackground()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.util.Set access$2300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.core.content.res.ResourcesCompat$FontCallback$1: void run()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ForwardingListener: void onLongPress()
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage)
com.google.android.material.transformation.FabTransformationSheetBehavior: boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean)
com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.UIImplementation: void notifyOnBeforeLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dispose()
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions)
com.facebook.react.jstasks.HeadlessJsTaskContext: void finishTask(int)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
com.horcrux.svg.MarkerView: void setMinX(float)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config)
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl: void addToQueueOrExecute(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.Headers: java.lang.String name(int)
okhttp3.HttpUrl: java.lang.String encodedPath()
com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)
com.swmansion.rnscreens.ScreenWindowTraits: void setColor$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity,com.facebook.react.bridge.ReactContext)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1: boolean onTouch(android.view.View,android.view.MotionEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void handlePostTouchScrolling(int,int)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion(int,int,int)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void animateThumbToCheckedState(boolean)
okhttp3.internal.platform.Jdk9Platform: boolean access$isAvailable$cp()
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
com.facebook.drawee.drawable.ForwardingDrawable: int getOpacity()
com.facebook.react.uimanager.events.TouchEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void incrementRetries()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
okhttp3.internal.connection.Exchange: void webSocketUpgradeFailed()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: java.lang.String getEventName()
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: long getTimestamp()
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.components.DraweeEventTracker: com.facebook.drawee.components.DraweeEventTracker newInstance()
com.google.android.material.stateful.ExtendableSavedState: void writeToParcel(android.os.Parcel,int)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
com.facebook.drawee.drawable.ScaleTypeDrawable: void configureBoundsIfUnderlyingChanged()
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.google.android.material.animation.MotionTiming: android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
kotlin.collections.EmptyList: int size()
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$800(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)
androidx.swiperefreshlayout.widget.CircleImageView: void setBackgroundColor(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasObservers()
com.facebook.react.modules.blob.BlobModule$3: okhttp3.RequestBody toRequestBody(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.transition.ChangeBounds$1: ChangeBounds$1(java.lang.Class,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,android.content.res.ColorStateList)
androidx.transition.FragmentTransitionSupport: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: PostprocessorProducer$SingleUsePostprocessorConsumer(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer$1)
com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object get(java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp()
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
okhttp3.internal.concurrent.TaskQueue: boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean)
com.facebook.imagepipeline.memory.BucketsBitmapPool: void free(android.graphics.Bitmap)
com.facebook.react.views.text.ReactTypefaceUtils: android.graphics.Typeface applyStyles(android.graphics.Typeface,int,int,java.lang.String,android.content.res.AssetManager)
androidx.appcompat.view.menu.MenuBuilder: void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(int)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.Bitmap$Config getBitmapConfig()
com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)
com.facebook.react.views.text.TextLayoutManager: long measureText(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,com.facebook.react.views.text.ReactTextViewManagerCallback,float[])
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateZ(double[],double)
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
com.horcrux.svg.ClipPathView: boolean isResponsible()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.facebook.imagepipeline.memory.BitmapCounter: int getMaxSize()
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: DiskLruCache$Entry$newSource$1(okhttp3.internal.cache.DiskLruCache$Entry,okio.Source,okio.Source)
com.facebook.react.animated.TransformAnimatedNode: TransformAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,char,int,int)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.animated.StyleAnimatedNode: java.lang.String prettyPrint()
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
com.google.android.material.datepicker.MaterialCalendar$7: MaterialCalendar$7(com.google.android.material.datepicker.MaterialCalendar)
androidx.appcompat.app.AppCompatDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context)
com.facebook.react.ReactFragment: void onActivityResult(int,int,android.content.Intent)
okio.Buffer: void require(long)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1: PostprocessorProducer$RepeatedPostprocessorConsumer$1(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
com.facebook.react.views.textinput.ReactEditText: void updateCachedSpannable(boolean)
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
com.horcrux.svg.RectView: void setY(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Header$Companion: Header$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.bridge.ReactContext getReactContext()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.horcrux.svg.MarkerView: void setOrient(java.lang.String)
com.facebook.react.uimanager.events.TouchesHelper: void sendTouchEvent(com.facebook.react.uimanager.events.RCTEventEmitter,com.facebook.react.uimanager.events.TouchEventType,int,int,com.facebook.react.uimanager.events.TouchEvent)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setCallerContext(java.lang.Object)
com.horcrux.svg.RenderableViewManager$MaskManager: void setOpacity(android.view.View,float)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
com.google.android.material.chip.ChipDrawable: void setChipStartPaddingResource(int)
com.swmansion.rnscreens.ScreenWindowTraits: com.swmansion.rnscreens.Screen findParentWithTraitSet(com.swmansion.rnscreens.Screen,com.swmansion.rnscreens.Screen$WindowTraits)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: LayoutAnimationController()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.react.views.drawer.events.DrawerSlideEvent: float getOffset()
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)
kotlin.collections.AbstractCollection: boolean contains(java.lang.Object)
com.horcrux.svg.EllipseView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheSize(int)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.horcrux.svg.DefinitionView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Dynamic: boolean isNull()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
com.facebook.yoga.YogaConstants: boolean isUndefined(float)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: ReactChoreographer$CallbackType(java.lang.String,int,int)
androidx.core.provider.CallbackWithHandler$1: CallbackWithHandler$1(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateClippingRect()
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForRemovingInvisible(int,int)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: java.lang.String toString()
androidx.appcompat.view.menu.StandardMenuPopup: void setVerticalOffset(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
com.facebook.react.views.text.TextAttributes: void setLineHeight(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.drawee.controller.AbstractDraweeController: void access$100(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.material.circularreveal.CircularRevealCompat$1: void onAnimationStart(android.animation.Animator)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer newAddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.views.scroll.VelocityHelper: float getYVelocity()
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean,com.facebook.imagepipeline.cache.MemoryCache,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet,int)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: com.facebook.datasource.DataSource get()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
androidx.recyclerview.widget.RecyclerView$State: int getItemCount()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setImageheight(com.horcrux.svg.ImageView,java.lang.String)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.imagepipeline.image.EncodedImage: void setRotationAngle(int)
androidx.appcompat.view.menu.StandardMenuPopup: void show()
com.facebook.react.uimanager.UIViewOperationQueue: void access$2600(com.facebook.react.uimanager.UIViewOperationQueue)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setResponsible(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,int,android.view.animation.Interpolator)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: WebpTranscodeProducer$WebpTranscodeConsumer(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
kotlin.ranges.IntProgression: int getLast()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.facebook.react.modules.core.JavaTimerManager$Timer: boolean access$600(com.facebook.react.modules.core.JavaTimerManager$Timer)
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
com.google.android.material.chip.Chip: android.graphics.Rect access$400(com.google.android.material.chip.Chip)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: boolean shouldEnableCustomDrawingOrder()
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getYFlingVelocity()
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String getStyle()
com.google.android.material.bottomsheet.BottomSheetDialog$2: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.internal.http2.Http2Writer: void dataFrame(int,int,okio.Buffer,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
okhttp3.internal.Util: java.lang.String toHexString(int)
com.horcrux.svg.RadialGradientView: void setFx(com.facebook.react.bridge.Dynamic)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getSpringDamping(com.facebook.react.bridge.ReadableMap)
okio.ByteString: okio.ByteString sha256()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.internal.TextDrawableHelper: TextDrawableHelper(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: MultiSourceHelper$MultiSourceResult(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.MultiSourceHelper$1)
androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,java.lang.Integer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getDecodePreviewFrame()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setTextBreakStrategy(java.lang.String)
kotlin.collections.EmptyMap: java.util.Set entrySet()
okio.DeflaterSink: okio.Timeout timeout()
androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)
androidx.appcompat.widget.RtlSpacingHelper: int getStart()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getReactTag()
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
com.horcrux.svg.VirtualView: double relativeOnWidth(com.horcrux.svg.SVGLength)
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onUltimateProducerReached(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void normalize(android.graphics.PointF)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
okio.Buffer$inputStream$1: int read()
androidx.core.graphics.Insets: androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets)
com.facebook.react.modules.network.ForwardingCookieHandler$1: ForwardingCookieHandler$1(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: NativeViewHierarchyOptimizer$NodeIndexPair(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.imageformat.ImageFormatChecker: ImageFormatChecker()
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.facebook.react.bridge.WritableArray: void pushNull()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.google.android.material.chip.Chip: float getChipIconSize()
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(com.facebook.common.references.CloseableReference)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinecap(android.view.View,int)
androidx.fragment.app.Fragment$4: boolean onHasView()
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.textinput.ReactEditText: void applyTextAttributes()
com.facebook.react.ReactActivityDelegate: java.lang.String getMainComponentName()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.Toolbar: boolean shouldCollapse()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.facebook.imageutils.BitmapUtil: int getPixelSizeForBitmapConfig(android.graphics.Bitmap$Config)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.appcompat.view.menu.StandardMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
androidx.appcompat.widget.Toolbar$3: Toolbar$3(androidx.appcompat.widget.Toolbar)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setRippleColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCacheHit(java.lang.Object)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.drawee.controller.AbstractDraweeController: void reportSuccess(java.lang.String,java.lang.Object,com.facebook.datasource.DataSource)
androidx.fragment.app.FragmentManager$2: FragmentManager$2(androidx.fragment.app.FragmentManager)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onCancellationImpl()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: long getUniqueId()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
com.facebook.react.ReactRootView: void attachToReactInstanceManager()
com.facebook.soloader.FileLocker: FileLocker(java.io.File)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void closeResult(java.lang.Object)
com.facebook.common.references.CloseableReference: boolean useGc()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: PostprocessedBitmapMemoryCacheProducer(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.swmansion.rnscreens.events.ScreenWillDisappearEvent$Companion: ScreenWillDisappearEvent$Companion()
okhttp3.internal.cache.DiskLruCache$Editor: void detach$okhttp()
okhttp3.Address: okhttp3.Dns dns()
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
kotlin.Unit: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getErrorText()
com.facebook.imagepipeline.producers.BaseProducerContext: void putOriginExtra(java.lang.String)
com.facebook.drawee.drawable.FadeDrawable: void fadeOutLayer(int)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToStart(boolean)
okhttp3.internal.http2.Http2Connection: void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
kotlin.collections.EmptyList: EmptyList()
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.appbar.ViewOffsetHelper: void applyOffsets()
com.horcrux.svg.LinearGradientView: void setY2(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getStringProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: DoubleTapReloadRecognizer$1(com.facebook.react.devsupport.DoubleTapReloadRecognizer)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.text.ReactBaseTextShadowNode: android.text.Spannable spannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,java.lang.String,boolean,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodeFromView(int,int)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: RecyclerView$ItemAnimator$ItemHolderInfo()
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform access$getPlatform$cp()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: boolean close()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
kotlin.text.Charsets: Charsets()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.facebook.react.TurboReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.OkHttpClient$Builder: java.util.List getNetworkInterceptors$okhttp()
com.google.android.material.transformation.FabTransformationBehavior: float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: AnimatedStateListDrawableCompat$FrameInterpolator(android.graphics.drawable.AnimationDrawable,boolean)
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedStartWithDecoration(android.view.View)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinejoin(android.view.View,int)
androidx.transition.Transition: boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.appcompat.widget.ActionBarOverlayLayout$3: void run()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.google.android.material.textfield.ClearTextEndIconDelegate$1: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean supportsPredictiveItemAnimations()
com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month getCurrentMonth()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: void assertKeyExists(short,int)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.fragment.app.FragmentManager: boolean dispatchContextItemSelected(android.view.MenuItem)
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.views.textinput.ReactEditText: java.util.ArrayList access$200(com.facebook.react.views.textinput.ReactEditText)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.producers.NetworkFetcher access$1800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCachePut(com.facebook.cache.common.CacheKey)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheSize(long)
com.facebook.imagepipeline.core.DefaultExecutorSupplier: java.util.concurrent.ScheduledExecutorService scheduledExecutorServiceForBackgroundTasks()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setSource(android.net.Uri)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.views.text.ReactTextView: void onFinishTemporaryDetach()
androidx.cardview.widget.CardViewApi17Impl$1: void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.drawee.drawable.DrawableProperties: void setFilterBitmap(boolean)
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
com.horcrux.svg.GroupView: void drawGroup(android.graphics.Canvas,android.graphics.Paint,float)
androidx.appcompat.widget.SwitchCompat: float constrain(float,float,float)
com.facebook.react.uimanager.MatrixMathHelper: void multiplyVectorByMatrix(double[],double[],double[])
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
androidx.fragment.app.FragmentManager$4: FragmentManager$4(androidx.fragment.app.FragmentManager)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
androidx.cardview.widget.CardViewBaseImpl: float getMinWidth(androidx.cardview.widget.CardViewDelegate)
com.facebook.react.uimanager.ViewManagersPropertyCache: void createPropSetters(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,java.lang.Class,java.util.Map)
com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodeToView(int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.views.textinput.ReactEditText$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.modules.debug.FpsDebugFrameCallback$1: void run()
okhttp3.internal.concurrent.TaskQueue: void schedule(okhttp3.internal.concurrent.Task,long)
androidx.recyclerview.widget.LinearSmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.facebook.react.views.scroll.ReactScrollView: void access$500(com.facebook.react.views.scroll.ReactScrollView)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
kotlin.text.Charsets: java.nio.charset.Charset UTF32_BE()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.transition.ChangeBounds$9: void onTransitionPause(androidx.transition.Transition)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setVectorEffect(android.view.View,int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.listener.RequestListener getRequestListener()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setResponsible(android.view.View,boolean)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: int findFirstProducerForSize(int,com.facebook.imagepipeline.common.ResizeOptions)
com.google.android.material.datepicker.MonthAdapter: android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
com.swmansion.rnscreens.ScreenWindowTraits: void setOrientation$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity)
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
androidx.lifecycle.ViewModelStore: java.util.Set keys()
com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String,int)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object[] newArray(int)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.google.android.material.transformation.ExpandableTransformationBehavior: boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions()
androidx.recyclerview.widget.AdapterHelper: int applyPendingUpdatesToPosition(int)
kotlin.collections.EmptyIterator: int previousIndex()
okio.ForwardingSource: okio.Timeout timeout()
com.facebook.react.modules.debug.FpsDebugFrameCallback: FpsDebugFrameCallback(com.facebook.react.bridge.ReactContext)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
com.facebook.react.views.text.ReactTextView: void onDetachedFromWindow()
com.facebook.cache.disk.DiskStorageCache: java.util.concurrent.CountDownLatch access$300(com.facebook.cache.disk.DiskStorageCache)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchy build()
com.facebook.react.ReactInstanceManager$8: void run()
okhttp3.internal.platform.android.AndroidLogHandler: void close()
com.google.android.material.chip.Chip: float getTextEndPadding()
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollToNextPage(int)
com.horcrux.svg.VirtualView: void setOnLayout(boolean)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(boolean)
com.horcrux.svg.MarkerView: void saveDefinition()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1: ReactModalHostView$DialogRootViewGroup$1(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.bridge.ReactContext,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)
com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.google.android.material.chip.ChipDrawable: float getChipCornerRadius()
com.google.android.material.textfield.TextInputLayout: void openCutout()
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener: CoordinatorLayout$HierarchyChangeListener(androidx.coordinatorlayout.widget.CoordinatorLayout)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
com.horcrux.svg.ImageView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getIsPrefetchEnabledSupplier()
com.horcrux.svg.GlyphContext: void pushContext(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
okio.RealBufferedSource: long indexOf(byte,long,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.platform.Android10Platform: Android10Platform()
okhttp3.Response: okhttp3.Handshake handshake()
com.facebook.imagepipeline.memory.NativeMemoryChunk: int getSize()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
okio.Options: okio.ByteString[] getByteStrings$okio()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void clearImageOriginListeners()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: AppCompatSpinner$SavedState$1()
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentAnim: androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.shape.MaterialShapeDrawable: boolean getPadding(android.graphics.Rect)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: java.lang.String getOriginSubcategory()
com.facebook.common.file.FileUtils$ParentDirNotFoundException: FileUtils$ParentDirNotFoundException(java.lang.String)
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.OnLayoutEvent: java.lang.String getEventName()
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.transition.FragmentTransitionSupport: void setEpicenter(java.lang.Object,android.view.View)
com.horcrux.svg.RadialGradientView: void setRy(com.facebook.react.bridge.Dynamic)
com.google.android.material.transformation.FabTransformationBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()
com.facebook.imagepipeline.producers.DelegatingConsumer: void onProgressUpdateImpl(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5: void onAnimationRepeat(android.view.animation.Animation)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder(androidx.core.view.WindowInsetsCompat)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: ExtendedFloatingActionButton$3(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeWidth(android.view.View,java.lang.String)
bolts.BoltsExecutors$ImmediateExecutor: int decrementDepth()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.facebook.drawee.backends.pipeline.Fresco: void initializeDrawee(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
kotlin.jvm.internal.Ref$IntRef: java.lang.String toString()
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
okhttp3.internal.Util: java.util.Map toImmutableMap(java.util.Map)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: java.lang.String getProducerName()
androidx.drawerlayout.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1: void runGuarded()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.Producer newNetworkFetchProducer(com.facebook.imagepipeline.producers.NetworkFetcher)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void getProperties(java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.imagepipeline.core.ImagePipelineExperiments: ImagePipelineExperiments(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRequestFailed(int)
com.facebook.react.views.scroll.ReactScrollView$3: void onAnimationRepeat(android.animation.Animator)
com.facebook.react.uimanager.events.Event: void init(int)
com.google.android.material.ripple.RippleDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerStart(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout: boolean hasScrollableChildren()
com.google.android.material.transformation.FabTransformationBehavior: void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
com.facebook.yoga.YogaWrap: int intValue()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
androidx.appcompat.app.AlertController: AlertController(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window)
androidx.transition.FragmentTransitionSupport: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
okhttp3.internal.connection.RealConnection: boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake)
androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)
com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter: com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener2)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNotNull(java.lang.Object[])
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getNewResultsForJpegOrHeif(com.facebook.imagepipeline.image.EncodedImage)
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForRemovingLaidOutOrNewView(int,int)
androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()
com.google.android.material.shape.ShapePath$PathArcOperation: float access$800(com.google.android.material.shape.ShapePath$PathArcOperation)
com.facebook.react.ReactActivityDelegate: boolean onNewIntent(android.content.Intent)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
com.facebook.react.views.picker.ReactPickerManager: void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase(long)
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.views.text.ReactTagSpan: int getReactTag()
com.facebook.react.ReactRootView: void removeOnGlobalLayoutListener()
androidx.recyclerview.widget.RecyclerView$Recycler: void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.Bitmap$Config getAnimatedBitmapConfig()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
androidx.lifecycle.LiveData: LiveData()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeMiterlimit(android.view.View,float)
com.google.android.material.chip.ChipDrawable: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
okhttp3.HttpUrl$Builder$Companion: int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
kotlin.collections.ArrayAsCollection: java.util.Iterator iterator()
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.fragment.app.BackStackRecord: void commitNow()
androidx.transition.Visibility: void setMode(int)
androidx.transition.Visibility$DisappearListener: Visibility$DisappearListener(android.view.View,int,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.facebook.imageutils.ImageMetaData: ImageMetaData(int,int,android.graphics.ColorSpace)
com.facebook.infer.annotation.Assertions: void assertCondition(boolean,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.shape.RelativeCornerSize: RelativeCornerSize(float)
androidx.fragment.app.FragmentManager: void checkStateLoss()
com.zoontek.rnbootsplash.RNBootSplashTask$Type: RNBootSplashTask$Type(java.lang.String,int)
com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String)
com.facebook.yoga.YogaValue: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String getEventName()
androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
com.google.android.material.bottomsheet.BottomSheetDialog: int getThemeResId(android.content.Context,int)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.graphics.drawable.DrawableContainer: DrawableContainer()
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.imagepipeline.request.BasePostprocessor: void internalCopyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void cancel()
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.shape.MaterialShapeDrawable: boolean onStateChange(int[])
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams fromCornersRadius(float)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.facebook.common.internal.Ints: int max(int[])
androidx.collection.ArraySet$1: java.util.Map colGetMap()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
com.facebook.react.views.picker.ReactPicker: void commitStagedData()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveItem(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
androidx.fragment.app.FragmentTransition$4: void run()
com.facebook.react.animated.AnimatedNode: java.lang.String prettyPrintWithChildren()
androidx.recyclerview.widget.GridLayoutManager: void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: double getDouble(double)
androidx.transition.ViewUtils$1: ViewUtils$1(java.lang.Class,java.lang.String)
okio.Timeout$Companion$NONE$1: okio.Timeout deadlineNanoTime(long)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String getEventName()
okhttp3.Cookie: java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp()
com.facebook.react.devsupport.DisabledDevSupportManager: void setRemoteJSDebugEnabled(boolean)
com.facebook.yoga.YogaConfigJNIBase: void setPointScaleFactor(float)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer access$700(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
okhttp3.HttpUrl$Builder: java.lang.String toString()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageOrigin(int)
okio.ByteString: okio.ByteString sha1()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.CoreModulesPackage$1: java.util.Map getReactModuleInfos()
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean isStateful()
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
com.facebook.imagepipeline.memory.BitmapCounter: com.facebook.common.references.ResourceReleaser getReleaser()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: void onFailureImpl(java.lang.Throwable)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getPadding(int)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
com.google.android.material.animation.Positioning: Positioning(int,float,float)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setBytesRange(com.facebook.imagepipeline.common.BytesRange)
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
com.facebook.react.uimanager.UIImplementation: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setPositionX(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator()
com.google.android.material.datepicker.MonthAdapter: java.lang.Long getItem(int)
androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: NativeJSDevSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.transition.Transition: void captureHierarchy(android.view.View,boolean)
okhttp3.internal.connection.RealConnection: void noCoalescedConnections$okhttp()
com.google.android.material.resources.TextAppearance: void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface)
bolts.Task$10: java.lang.Void then(bolts.Task)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
okhttp3.MultipartBody$Companion: MultipartBody$Companion()
com.facebook.react.animated.InterpolationAnimatedNode: double interpolate(double,double[],double[],java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setUseheight(com.horcrux.svg.UseView,java.lang.String)
androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.facebook.react.modules.core.ChoreographerCompat: void choreographerPostFrameCallback(android.view.Choreographer$FrameCallback)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
com.horcrux.svg.TSpanView: void drawWrappedText(android.graphics.Canvas,android.graphics.Paint)
androidx.transition.ViewUtilsApi29: void setTransitionVisibility(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(android.view.View,int)
okhttp3.internal.http2.Http2Connection: void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: void set(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()
com.google.android.material.datepicker.MaterialCalendar$7: void onClick(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.core.widget.NestedScrollView: void endDrag()
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1300(com.facebook.react.ReactInstanceManager)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1200(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpHeader(byte[],int,int)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1: boolean handleMessage(android.os.Message)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
androidx.transition.ViewOverlayApi18: void remove(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void stop()
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.google.android.material.internal.NavigationMenuItemView: void adjustAppearance()
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
androidx.transition.ViewUtils$2: void set(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.events.EventDispatcherImpl: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.ProgressResponseBody: long contentLength()
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.ChildHelper$Bucket: boolean get(int)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: DecodeProducer$ProgressiveDecoder$2(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,boolean)
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
com.facebook.react.modules.core.ChoreographerCompat: com.facebook.react.modules.core.ChoreographerCompat getInstance()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setForeignObjectwidth(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.google.android.material.internal.CheckableImageButton$SavedState: CheckableImageButton$SavedState(android.os.Parcelable)
com.facebook.react.common.SystemClock: long currentTimeMillis()
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString getData()
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getSourceUrl()
com.horcrux.svg.ForeignObjectView: void setY(java.lang.String)
com.facebook.common.references.CloseableReference: int getValueHash()
androidx.fragment.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.material.textfield.IndicatorViewController: int access$002(com.google.android.material.textfield.IndicatorViewController,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: boolean shouldAddPadding()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromShadowNodeClassDefinition(java.lang.Class,java.util.Map)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: ResizeAndRotateProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: boolean produceResultsFromThumbnailProducer(int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setOnFadeListener(com.facebook.drawee.drawable.FadeDrawable$OnFadeListener)
com.facebook.react.modules.core.JavaTimerManager$Timer: long access$402(com.facebook.react.modules.core.JavaTimerManager$Timer,long)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
androidx.recyclerview.widget.ViewInfoStore: void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.material.ripple.RippleDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.recyclerview.widget.RecyclerView$1: void run()
com.facebook.react.modules.core.TimingModule$BridgeTimerManager: void callIdleCallbacks(double)
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer getInstance()
androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
com.facebook.imagepipeline.transcoder.DownsampleUtil: int determineSampleSizeJPEG(com.facebook.imagepipeline.image.EncodedImage,int,int)
com.horcrux.svg.TextView: void setTextLength(java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$1400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationStart(android.animation.Animator)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
com.facebook.react.views.scroll.ReactHorizontalScrollView$5: ReactHorizontalScrollView$5(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,int)
okhttp3.Headers: int size()
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.recyclerview.widget.SimpleItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)
com.facebook.soloader.SysUtil: int copyBytes(java.io.RandomAccessFile,java.io.InputStream,int,byte[])
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
com.google.android.material.datepicker.CalendarConstraints$Builder: CalendarConstraints$Builder(com.google.android.material.datepicker.CalendarConstraints)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDetachedFromLayoutParams()
com.facebook.imagepipeline.memory.MemoryChunkPool: boolean isReusable(java.lang.Object)
com.facebook.common.references.NoOpCloseableReference: void close()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxStart(int)
com.horcrux.svg.MarkerView: void setMarkerUnits(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()
androidx.customview.view.AbsSavedState: int describeContents()
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.google.android.material.internal.CollapsingTextHelper: void getTextPaintCollapsed(android.text.TextPaint)
okhttp3.internal.connection.RealCall: boolean getForWebSocket()
com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.drawee.components.DeferredReleaser: boolean isOnUiThread()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
com.horcrux.svg.RectView: void setRy(com.facebook.react.bridge.Dynamic)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getDownloadedJSBundleFile()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceOrientationChanges()
com.facebook.imagepipeline.memory.GenericByteArrayPool: int getSizeInBytes(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(android.view.View,int)
androidx.fragment.app.FragmentManager: boolean executePendingTransactions()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcelable)
com.facebook.imagepipeline.memory.MemoryChunkPool: int getBucketedSize(int)
com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)
androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)
com.google.android.material.animation.MotionSpec: int hashCode()
bolts.BoltsExecutors: BoltsExecutors()
com.horcrux.svg.SvgPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
com.google.android.material.shape.MaterialShapeDrawable: boolean updateColorsForState(int[])
androidx.recyclerview.widget.AdapterHelper: AdapterHelper(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
com.swmansion.rnscreens.ScreenContainer: void setupFragmentManager()
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.ClearTextEndIconDelegate$6: ClearTextEndIconDelegate$6(com.google.android.material.textfield.ClearTextEndIconDelegate)
com.google.android.material.shape.ShapePath$1: void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: void onTextChanged(java.lang.CharSequence,int,int,int)
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation: float getTargetShadowSize()
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
com.google.android.material.internal.TextDrawableHelper: float getTextWidth(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitY: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.facebook.imagepipeline.cache.StagingArea: boolean remove(com.facebook.cache.common.CacheKey)
com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidKeyError(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: BottomAppBar$SavedState$1()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.google.android.material.textfield.IndicatorViewController$1: IndicatorViewController$1(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void dispatchPendingNonBatchedOperations(long)
com.horcrux.svg.SVGLength: com.horcrux.svg.SVGLength from(com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: BouncyCastleSocketAdapter()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onChildViewsChanged(int)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.datepicker.MaterialDatePicker: java.lang.String getHeaderText()
com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool getConnectionPool$okhttp()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
okhttp3.internal.http2.Http2Connection: void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.swmansion.rnscreens.Screen$WindowTraits: Screen$WindowTraits(java.lang.String,int)
com.facebook.drawee.drawable.RoundedDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.animated.NativeAnimatedModule$16: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,java.lang.Object)
com.facebook.soloader.MinElf: void read(java.nio.channels.FileChannel,java.nio.ByteBuffer,int,long)
com.facebook.react.views.text.ShadowStyleSpan: ShadowStyleSpan(float,float,float,int)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: long size(java.io.File)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
kotlin.collections.AbstractList$ListIteratorImpl: void set(java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager$1: ReactSliderManager$1()
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.ReactEventEmitter access$900(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.recyclerview.widget.LinearLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ResizeAndRotateProducer newResizeAndRotateProducer(com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)
com.facebook.react.modules.network.RequestBodyUtil$1: long contentLength()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
com.google.android.material.behavior.SwipeDismissBehavior: float fraction(float,float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
com.google.android.material.chip.ChipGroup$CheckedStateTracker: ChipGroup$CheckedStateTracker(com.google.android.material.chip.ChipGroup)
com.google.android.material.chip.ChipDrawable: java.lang.CharSequence getCloseIconContentDescription()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.drawee.drawable.ArrayDrawable: void setFilterBitmap(boolean)
com.facebook.soloader.MinElf: long getu32(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodes(int,int)
androidx.appcompat.widget.SearchView$SavedState: java.lang.String toString()
com.google.android.material.textfield.IndicatorViewController: boolean isCaptionView(int)
okio.Buffer: short readShortLe()
com.facebook.drawee.drawable.OrientedDrawable: void getTransform(android.graphics.Matrix)
com.facebook.react.modules.fresco.SystraceRequestListener: boolean requiresExtraMap(java.lang.String)
com.facebook.yoga.YogaFlexDirection: YogaFlexDirection(java.lang.String,int,int)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
com.facebook.react.views.text.ReactTextShadowNode: android.text.TextPaint access$300()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean access$502(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,boolean)
com.facebook.imagepipeline.producers.ThumbnailSizeChecker: boolean isImageBigEnough(int,int,com.facebook.imagepipeline.common.ResizeOptions)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleRemoveView(android.view.View)
okio.RealBufferedSource: int readIntLe()
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.uimanager.UIManagerModule$2: UIManagerModule$2(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,java.lang.Object)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] $values()
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.ws.RealWebSocket$connect$1: RealWebSocket$connect$1(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.button.MaterialButton: boolean isLayoutRTL()
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetrics(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)
com.facebook.cache.disk.DiskCacheConfig$Builder: DiskCacheConfig$Builder(android.content.Context,com.facebook.cache.disk.DiskCacheConfig$1)
com.facebook.imagepipeline.cache.LruCountingMemoryCache$1: LruCountingMemoryCache$1(com.facebook.imagepipeline.cache.LruCountingMemoryCache,com.facebook.imagepipeline.cache.ValueDescriptor)
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
okio.InputStreamSource: void close()
com.google.android.material.internal.CheckableImageButton$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaView$1: void run()
com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable mutate()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
com.swmansion.rnscreens.ScreenStack: void drawAndRelease()
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
com.facebook.react.views.image.ReactImageView$TilePostprocessor: ReactImageView$TilePostprocessor(com.facebook.react.views.image.ReactImageView)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: java.util.Map getExtraMap(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.transcoder.ImageTranscodeResult,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationEnd(android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: void onRefresh()
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate: ReactSliderManager$ReactSliderAccessibilityDelegate()
com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)
com.swmansion.rnscreens.ScreenStack$DrawingOp: android.view.View getChild()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: void onFailure(com.facebook.datasource.DataSource)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.views.image.ImageResizeMethod: ImageResizeMethod(java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: void execute()
com.facebook.yoga.YogaValue: YogaValue(float,com.facebook.yoga.YogaUnit)
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.RecyclerView$Recycler: boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.devsupport.DisabledDevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.imagepipeline.memory.BucketsBitmapPool: void free(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void createProgressView()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.facebook.react.devsupport.DisabledDevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
androidx.appcompat.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
androidx.fragment.app.FragmentManager: void scheduleCommit()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: DrawerLayout$ViewDragCallback$1(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
com.facebook.react.uimanager.ReactClippingViewGroupHelper: void calculateClippingRect(android.view.View,android.graphics.Rect)
com.google.android.material.shape.ShapePath$PathArcOperation: void setBottom(float)
androidx.recyclerview.widget.OrientationHelper$2: OrientationHelper$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okhttp3.CacheControl$Companion: CacheControl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: java.lang.String getProducerName()
androidx.appcompat.widget.ActionBarBackgroundDrawable: ActionBarBackgroundDrawable(androidx.appcompat.widget.ActionBarContainer)
androidx.cardview.widget.RoundRectDrawable: float getRadius()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer: bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void dismiss()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToChild(android.view.View)
com.swmansion.rnscreens.ScreenStack$mLifecycleCallbacks$1: ScreenStack$mLifecycleCallbacks$1(com.swmansion.rnscreens.ScreenStack)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.MemoryCache access$3100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.transformation.BitmapTransformation getBitmapTransformation()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator)
okhttp3.HttpUrl$Builder$Companion: int parsePort(java.lang.String,int,int)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
okhttp3.MediaType: int hashCode()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllEndsEqual()
com.zoontek.rnbootsplash.RNBootSplashActivity: RNBootSplashActivity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: Jdk8WithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory: com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: void run()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingLeft()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference access$300(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
com.facebook.drawee.controller.AbstractDraweeController: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int)
com.facebook.react.LazyReactPackage$2$1: void remove()
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableView: void setFillRule(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.imagepipeline.memory.BucketsBitmapPool: int getBucketedSize(int)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.Protocol$Companion: Protocol$Companion()
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14(androidx.core.view.ViewPropertyAnimatorCompat)
okhttp3.internal.connection.RealCall: java.net.Socket releaseConnectionNoEvents$okhttp()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.CascadingMenuPopup: void showMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
okio.internal.ByteStringKt: int decodeHexDigit(char)
androidx.coordinatorlayout.widget.CoordinatorLayout: void dispatchDependentViewsChanged(android.view.View)
com.facebook.drawee.generic.RoundingParams: float getBorderWidth()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDx(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.JSCHeapCapture$CaptureException: JSCHeapCapture$CaptureException(java.lang.String)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.internal.connection.Exchange: void detachWithViolence()
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.google.android.material.bottomsheet.BottomSheetBehavior$4: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
com.facebook.react.viewmanagers.RNSVGForeignObjectManagerDelegate: RNSVGForeignObjectManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
okio.AsyncTimeout$Companion: boolean cancelScheduledTimeout(okio.AsyncTimeout)
com.facebook.soloader.MinElf: java.lang.String getSz(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
com.facebook.imagepipeline.core.ImagePipeline$8: boolean apply(com.facebook.cache.common.CacheKey)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLeft(int)
com.facebook.react.uimanager.UIImplementation: void removeRootShadowNode(int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onCancellationImpl()
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: void preVisitDirectory(java.io.File)
okio.Okio: okio.Sink appendingSink(java.io.File)
okhttp3.internal.Util: okhttp3.EventListener$Factory asFactory(okhttp3.EventListener)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.drawee.drawable.ArrayDrawable: boolean onStateChange(int[])
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AlertController$AlertParams$2: AlertController$AlertParams$2(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.image.ImageInfo getImageInfo(com.facebook.common.references.CloseableReference)
androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)
com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: void execute()
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedEnd(android.view.View)
androidx.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: long read(okio.Buffer,long)
com.facebook.react.ReactRootView: void onMeasure(int,int)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.google.android.material.textfield.TextInputLayout: void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
androidx.transition.ChangeBounds$10: ChangeBounds$10(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float)
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9: void onAnimationUpdate(android.animation.ValueAnimator)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildStart(android.view.View)
com.facebook.imagepipeline.listener.ForwardingRequestListener: ForwardingRequestListener(java.util.Set)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1302(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf(java.lang.Object[])
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: PipelineDraweeController(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange getExchange$okhttp()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setEnabled(boolean)
com.facebook.imagepipeline.common.BytesRange: BytesRange(int,int)
androidx.transition.ViewUtils$1: java.lang.Object get(java.lang.Object)
com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
okhttp3.EventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
com.google.android.material.internal.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)
kotlin.collections.EmptySet: void clear()
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
androidx.recyclerview.widget.LinearLayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isMostlyScrolledInView(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()
com.facebook.common.util.ExceptionWithNoStacktrace: ExceptionWithNoStacktrace(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.modules.storage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Void[])
com.horcrux.svg.RenderableViewManager$UseViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
okhttp3.internal.Util: java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.react.animated.NativeAnimatedModule$8: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.google.android.material.appbar.AppBarLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.collections.AbstractCollection$toString$1: AbstractCollection$toString$1(kotlin.collections.AbstractCollection)
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer: QualifiedResourceFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)
com.facebook.imagepipeline.producers.DecodeProducer: boolean access$100(com.facebook.imagepipeline.producers.DecodeProducer)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setBaselineShift(android.view.View,java.lang.String)
com.facebook.cache.common.MultiCacheKey: MultiCacheKey(java.util.List)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
com.facebook.systrace.Systrace: void endAsyncFlow(long,java.lang.String,int)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.drawee.view.DraweeView: void maybeOverrideVisibilityHandling()
androidx.appcompat.view.SupportMenuInflater: java.lang.Object getRealOwner()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
com.facebook.cache.common.CacheKeyUtil: java.util.List getResourceIds(com.facebook.cache.common.CacheKey)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: java.util.Map getExtraMap(com.facebook.imagepipeline.image.CloseableImage,long,com.facebook.imagepipeline.image.QualityInfo,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
okhttp3.OkHttpClient: java.util.List interceptors()
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.Fragment)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void doFrame(long)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: void putEOI(byte[],int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: boolean isAutoSizeEnabled()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setName(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView$Recycler: void markItemDecorInsetsDirty()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.horcrux.svg.PathParser: void curve(float,float,float,float,float,float)
com.google.android.material.datepicker.UtcDates: java.util.Calendar getTodayCalendar()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.facebook.react.devsupport.DisabledDevSupportManager: void handleReloadJS()
com.google.android.material.internal.CollapsingTextHelper: void recalculate()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findLastReferenceChildPosition(int)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onScaleChanged()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)
com.facebook.imagepipeline.memory.FlexByteArrayPool: com.facebook.common.references.CloseableReference get(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.uimanager.UIImplementation: void replaceExistingNonRootView(int,int)
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void onCancellationImpl()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setHorizontalOriginalOffset(int)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.behavior.SwipeDismissBehavior$1: SwipeDismissBehavior$1(com.google.android.material.behavior.SwipeDismissBehavior)
okio.AsyncTimeout$Companion: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.ReactActivity: void onDestroy()
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int,int)
com.facebook.react.views.text.TextAttributes: float getMaxFontSizeMultiplier()
com.facebook.common.references.SharedReference: void addReference()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.RoundingParams getRoundingParams()
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.common.Priority computePriority()
com.facebook.systrace.SystraceMessage: com.facebook.systrace.SystraceMessage$Builder endSection(long)
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.memory.BufferMemoryChunk: void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter: ScalingUtils$ScaleTypeCenter()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStrokeWidth(float)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
androidx.recyclerview.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
okio.Buffer: okio.Segment writableSegment$okio(int)
androidx.appcompat.widget.AppCompatProgressBarHelper: AppCompatProgressBarHelper(android.widget.ProgressBar)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.text.DateFormat initialValue()
com.facebook.drawee.controller.AbstractDraweeController: void reportIntermediateFailure(java.lang.Throwable)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.memory.BitmapPoolBackend: android.graphics.Bitmap get(int)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
com.facebook.drawee.backends.pipeline.info.ImagePerfState: int getImageLoadStatus()
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdatesIfNeeded()
com.facebook.common.media.MediaUtils: boolean isVideo(java.lang.String)
com.facebook.drawee.drawable.DrawableUtils: void copyProperties(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.drawee.drawable.AutoRotateDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideDown(android.view.View)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: long runOnce()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.horcrux.svg.TextPathView: void setStartOffset(java.lang.String)
com.facebook.imagepipeline.producers.ThrottlingProducer: int access$210(com.facebook.imagepipeline.producers.ThrottlingProducer)
com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)
okio.RealBufferedSink: boolean isOpen()
com.facebook.systrace.SystraceMessage$NoopBuilder: void flush()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.drawee.view.DraweeView: void onMeasure(int,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
okhttp3.internal.platform.Platform$Companion: byte[] concatLengthPrefixed(java.util.List)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.modal.ReactModalHostView: void updateProperties()
com.google.android.material.bottomsheet.BottomSheetDialog$2: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$102(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShadowPaddingEnabled(boolean)
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: ImageOriginRequestListener(java.lang.String,com.facebook.drawee.backends.pipeline.info.ImageOriginListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: TextLayoutManager$SetSpanOperation(int,int,com.facebook.react.views.text.ReactSpan)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$500(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenFragment adapt(com.swmansion.rnscreens.Screen)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskFinish(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)
okhttp3.internal.http.RequestLine: RequestLine()
com.facebook.cache.disk.DynamicDefaultDiskStorage: boolean isExternal()
com.facebook.drawee.controller.AbstractDraweeController: void access$300(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,float,boolean)
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
com.facebook.imagepipeline.request.ImageRequest: java.lang.String toString()
com.facebook.common.webp.WebpSupportStatus: com.facebook.common.webp.WebpBitmapFactory loadWebpBitmapFactoryIfExists()
okio.Segment: okio.Segment unsharedCopy()
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.animated.DivisionAnimatedNode: DivisionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
androidx.appcompat.widget.AppCompatImageHelper: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.producers.PostprocessorProducer: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$900(com.facebook.imagepipeline.producers.PostprocessorProducer)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
okhttp3.internal.ws.RealWebSocket$Message: int getFormatOpcode()
com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void internalPostOnAnimation()
com.google.android.material.internal.CheckableImageButton$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourcePackageName(int)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildEnd(android.view.View)
androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.facebook.imagepipeline.producers.MultiplexProducer: boolean access$600(com.facebook.imagepipeline.producers.MultiplexProducer)
com.facebook.drawee.controller.AbstractDraweeController: void access$200(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean)
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
com.swmansion.rnscreens.ScreenWindowTraits$setColor$1: void runGuarded$lambda-0(android.app.Activity,android.animation.ValueAnimator)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: boolean equals(java.lang.Object)
com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getBitmapPoolStatsTracker()
androidx.fragment.app.FragmentManager: FragmentManager()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: void insetChipBackgroundDrawable(int,int,int,int)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,java.lang.String)
com.horcrux.svg.Brush: Brush(com.horcrux.svg.Brush$BrushType,com.horcrux.svg.SVGLength[],com.horcrux.svg.Brush$BrushUnits)
com.facebook.react.modules.network.NetworkingModule$1$1: NetworkingModule$1$1(com.facebook.react.modules.network.NetworkingModule$1)
com.google.android.material.internal.FlowLayout: void onMeasure(int,int)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheKey(com.facebook.cache.common.CacheKey)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
com.facebook.drawee.view.DraweeHolder: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.react.animated.ValueAnimatedNode: java.lang.String prettyPrint()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerIntermediateImageSetTimeMs(long)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.google.android.material.button.MaterialButton: void resetIconDrawable(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: void visitFile(java.io.File)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge fromInt(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: int getCompoundPaddingLeft(int)
okhttp3.Cache$Companion: Cache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.InputStreamSource: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.react.animated.SpringAnimation: double getDisplacementDistanceForState(com.facebook.react.animated.SpringAnimation$PhysicsState)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
com.facebook.drawee.drawable.OrientedDrawable: int getIntrinsicHeight()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.swmansion.rnscreens.ScreenContainer: void attachScreen(com.swmansion.rnscreens.ScreenFragment)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void delete(java.io.File)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
okhttp3.internal.connection.Exchange: void cancel()
com.facebook.soloader.Api18TraceUtils: void beginTraceSection(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.app.ToolbarActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
com.facebook.react.views.picker.ReactPicker: void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)
okhttp3.Cache: void flush()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.chip.ChipDrawable: void setShouldDrawText(boolean)
com.google.android.material.chip.ChipDrawable: int[] getCloseIconState()
com.google.android.material.datepicker.MonthAdapter: MonthAdapter(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: boolean hasStartIcon()
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: AsyncStorageModule$SerialExecutor(com.facebook.react.modules.storage.AsyncStorageModule,java.util.concurrent.Executor)
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLForced(android.content.Context)
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void dismissExisting()
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ResizeAndRotateProducer)
okio.Buffer: okio.BufferedSink emitCompleteSegments()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imagepipeline.producers.MultiplexProducer: void removeMultiplexer(java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: ActionMenuPresenter$PopupPresenterCallback(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory()
okio.AsyncTimeout: void access$setHead$cp(okio.AsyncTimeout)
com.facebook.yoga.YogaNodeJNIBase: void setFlexBasis(float)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
com.horcrux.svg.PatternView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.TextProperties$AlignmentBaseline: TextProperties$AlignmentBaseline(java.lang.String,int,java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setApplication(android.app.Application)
kotlin.jvm.internal.ArrayIteratorKt: java.util.Iterator iterator(java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1: BottomAppBar$Behavior$1(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.common.internal.Sets: java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet()
com.google.android.material.appbar.HeaderBehavior: void ensureVelocityTracker()
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.decoder.ImageDecoder getCustomImageDecoder()
com.swmansion.rnscreens.ScreenContainer: void notifyChildUpdate()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.appcompat.widget.SearchView$9: void onNothingSelected(android.widget.AdapterView)
okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldBeKeptAsChild()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
androidx.appcompat.widget.SearchView: void onCloseClicked()
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
com.google.android.material.datepicker.MaterialCalendarGridView$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForMove(int,int)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
com.facebook.react.views.slider.ReactSliderManager$1: void onStopTrackingTouch(android.widget.SeekBar)
com.facebook.react.views.textinput.ReactEditText: void hideSoftKeyboard()
com.facebook.imagepipeline.core.ImagePipeline: void clearCaches()
com.swmansion.rnscreens.Screen: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.transition.ViewUtilsBase: ViewUtilsBase()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
okio.InputStreamSource: long read(okio.Buffer,long)
okhttp3.internal.http2.Http2Connection: int getLastGoodStreamId$okhttp()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int,int)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int)
okhttp3.EventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.cache.common.CacheKeyUtil: java.lang.String secureHashKey(com.facebook.cache.common.CacheKey)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response stripBody(okhttp3.Response)
com.facebook.imagepipeline.memory.BucketMap: java.lang.Object acquire(int)
okhttp3.internal.connection.Exchange$ResponseBodySource: java.io.IOException complete(java.io.IOException)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void poolList(java.util.ArrayList)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskheight(com.horcrux.svg.MaskView,java.lang.String)
okhttp3.Handshake$Companion: Handshake$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getHeightMeasureSpec()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.PatternView: void setX(com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.util.ArrayList)
com.facebook.react.animated.NativeAnimatedNodesManager$2: NativeAnimatedNodesManager$2(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void finishSpinner(float)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.facebook.common.references.CloseableReference: java.lang.Object clone()
com.swmansion.rnscreens.ScreenContainer: void access$setMLayoutEnqueued$p(com.swmansion.rnscreens.ScreenContainer,boolean)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.components.RetryManager: void reset()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
okio.RealBufferedSource: long readLong()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2: void onCancellationRequested()
com.horcrux.svg.PathParser: void skip_digits()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
okhttp3.Cache$RealCacheRequest$1: Cache$RealCacheRequest$1(okhttp3.Cache$RealCacheRequest,okio.Sink)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePostFromNonUI()
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnCancellation()
com.google.android.material.chip.ChipDrawable: void setChipStrokeColorResource(int)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void realloc(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateNativeChildrenCountInParent(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.material.shape.ShapePath: void lineTo(float,float)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.drawee.drawable.ArrayDrawable: void draw(android.graphics.Canvas)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket)
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.StagingArea access$200(com.facebook.imagepipeline.cache.BufferedDiskCache)
androidx.core.provider.FontRequestWorker$4: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.imagepipeline.memory.GenericByteArrayPool: byte[] alloc(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(android.view.View,float)
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationStart(android.view.View)
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: ToolbarActionBar$MenuBuilderCallback(androidx.appcompat.app.ToolbarActionBar)
com.facebook.imagepipeline.cache.StagingArea: com.facebook.imagepipeline.image.EncodedImage get(com.facebook.cache.common.CacheKey)
com.th3rdwave.safeareacontext.SafeAreaView: SafeAreaView(android.content.Context)
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
androidx.cardview.widget.RoundRectDrawable: int getOpacity()
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
com.th3rdwave.safeareacontext.SafeAreaContextPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.common.RotationOptions: boolean canDeferUntilRendered()
androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)
androidx.fragment.app.FragmentFactory: FragmentFactory()
com.facebook.react.modules.image.ImageLoaderModule$3: void onFailureImpl(com.facebook.datasource.DataSource)
okio.AsyncTimeout$source$1: void close()
com.horcrux.svg.ImageView: void doRender(android.graphics.Canvas,android.graphics.Paint,android.graphics.Bitmap,float)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int calculateDownsampleNumerator(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.react.uimanager.MatrixMathHelper: void applyPerspective(double[],double)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: long access$1102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.ScreenFragment adapt(com.swmansion.rnscreens.Screen)
androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)
com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)
androidx.recyclerview.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: ActionMenuPresenter$OpenOverflowRunnable(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.collection.ArrayMap: java.util.Set keySet()
com.facebook.drawee.drawable.FadeDrawable: void fadeInLayer(int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.floatingactionbutton.FloatingActionButton: void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: void execute()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: java.lang.Object[] newArray(int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.facebook.react.devsupport.DisabledDevSupportManager: void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: MemoryPooledByteBufferFactory(com.facebook.imagepipeline.memory.MemoryChunkPool,com.facebook.common.memory.PooledByteStreams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
okhttp3.internal.Util: int readMedium(okio.BufferedSource)
com.horcrux.svg.ElementType: ElementType(java.lang.String,int)
com.google.android.material.shape.MaterialShapeDrawable: boolean updateTintFilter()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundFromBundleLoader()
androidx.fragment.app.FragmentActivity: void onPostResume()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.horcrux.svg.VirtualViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
androidx.recyclerview.widget.DefaultItemAnimator$1: DefaultItemAnimator$1(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
androidx.appcompat.widget.DropDownListView: void positionSelectorCompat(int,android.view.View)
androidx.appcompat.widget.Toolbar: void ensureMenuView()
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.common.references.RefCountCloseableReference: java.lang.Object clone()
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: void handleMessage(android.os.Message)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer newBranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer)
kotlin.jvm.internal.TypeIntrinsics: java.util.List castToList(java.lang.Object)
com.facebook.imagepipeline.image.ImmutableQualityInfo: int hashCode()
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.CascadingMenuPopup$2: CascadingMenuPopup$2(androidx.appcompat.view.menu.CascadingMenuPopup)
androidx.transition.Transition: Transition()
com.google.android.material.bottomsheet.BottomSheetDialog$3: boolean onTouch(android.view.View,android.view.MotionEvent)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.statusbar.StatusBarModule$3: void run()
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet,int)
com.facebook.yoga.YogaDisplay: YogaDisplay(java.lang.String,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isAutoMeasureEnabled()
androidx.transition.FragmentTransitionSupport: boolean canHandle(java.lang.Object)
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
com.facebook.react.uimanager.UIViewOperationQueue: void pauseFrameCallback()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
okio.Okio: okio.BufferedSource buffer(okio.Source)
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getDataSource(int)
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.bridge.ReadableMap getHeaders()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: AnimatedPropertyType(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object getOrThrow()
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
com.facebook.imagepipeline.common.BytesRange: boolean contains(com.facebook.imagepipeline.common.BytesRange)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.executors.SerialExecutorService access$3400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setOverflow(com.facebook.yoga.YogaOverflow)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: void onAnimationStart(android.animation.Animator)
com.facebook.react.uimanager.UIImplementation: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int)
okhttp3.internal.http2.Header: java.lang.String toString()
com.facebook.imagepipeline.producers.DiskCacheReadProducer: DiskCacheReadProducer(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)
com.swmansion.rnscreens.ScreenContainer: androidx.fragment.app.FragmentTransaction getOrCreateTransaction()
androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef)
okhttp3.internal.http2.Http2Connection$Companion: okhttp3.internal.http2.Settings getDEFAULT_SETTINGS()
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getWidth()
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder getFinder$okhttp()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
androidx.appcompat.widget.SearchView: int getInputType()
com.horcrux.svg.UseView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
okio.Options: boolean contains(java.lang.Object)
com.facebook.react.devsupport.DisabledDevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths$okhttp(okio.BufferedSink)
androidx.fragment.app.FragmentActivity: void onPause()
com.facebook.imagepipeline.memory.MemoryChunkPool: int getBucketedSizeForValue(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
androidx.customview.widget.ExploreByTouchHelper: ExploreByTouchHelper(android.view.View)
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.yoga.YogaValue: YogaValue(float,int)
com.facebook.cache.disk.DefaultDiskStorage: boolean isExternal()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String,java.lang.Object)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList getSortedList()
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: TransformAnimatedNode$StaticTransformConfig(com.facebook.react.animated.TransformAnimatedNode)
com.horcrux.svg.PatternView: void setWidth(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.facebook.react.views.text.TextAttributes: void setHeightOfTallestInlineViewOrImage(float)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.ReactDelegate: void loadApp()
com.google.android.material.bottomsheet.BottomSheetBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: com.facebook.imagepipeline.memory.MemoryChunk alloc(int)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
com.facebook.imagepipeline.memory.BitmapPoolBackend: BitmapPoolBackend()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()
androidx.appcompat.widget.DropDownListView: void updateSelectorStateCompat()
com.swmansion.rnscreens.events.StackFinishTransitioningEvent$Companion: StackFinishTransitioningEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.bridge.WritableArray getFontMetrics(java.lang.CharSequence,android.text.Layout,android.text.TextPaint,android.content.Context)
okio.Buffer: Buffer()
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.customview.widget.FocusStrategy: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.collection.LongSparseArray: long keyAt(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.material.datepicker.MaterialCalendarGridView: void onAttachedToWindow()
com.facebook.datasource.IncreasingQualityDataSourceSupplier: IncreasingQualityDataSourceSupplier(java.util.List,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: DefaultDiskStorage$InserterImpl(com.facebook.cache.disk.DefaultDiskStorage,java.lang.String,java.io.File)
androidx.cardview.widget.CardViewApi21Impl: float getMinHeight(androidx.cardview.widget.CardViewDelegate)
com.facebook.drawee.generic.RoundingParams: float[] getOrCreateRoundedCornersRadii()
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: CloseableProducerToDataSourceAdapter(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener2)
okhttp3.internal.http2.Http2Connection: void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode)
androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions)
androidx.fragment.app.FragmentActivity: void onDestroy()
com.facebook.imagepipeline.request.ImageRequest: boolean getProgressiveRenderingEnabled()
androidx.fragment.app.FragmentManagerViewModel: boolean addRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
okhttp3.internal.http2.Huffman: void addCode(int,int,int)
com.zoontek.rnbootsplash.RNBootSplashModule: void shiftNextTask()
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
kotlin.collections.AbstractList: AbstractList()
okhttp3.internal.http2.ErrorCode$Companion: okhttp3.internal.http2.ErrorCode fromHttp2(int)
okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest build()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void draw(android.graphics.Canvas)
com.facebook.react.views.text.TextAttributeProps: void setTextTransform(java.lang.String)
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: void init(java.lang.String)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketWriter,okio.ByteString,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
androidx.appcompat.widget.TooltipPopup: TooltipPopup(android.content.Context)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.facebook.yoga.YogaDirection: int intValue()
androidx.fragment.app.FragmentManager: void popBackStack(java.lang.String,int)
androidx.cardview.widget.RoundRectDrawableWithShadow: void draw(android.graphics.Canvas)
com.facebook.drawee.gestures.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion()
com.google.android.material.bottomsheet.BottomSheetBehavior$3: int getViewVerticalDragRange(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: java.util.Map getCommandsMap()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onFailure(double,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()
com.google.android.material.bottomsheet.BottomSheetBehavior: void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
com.facebook.react.animated.NativeAnimatedModule$14: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.recyclerview.widget.RecyclerView$5: void onLeftHiddenState(android.view.View)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()
com.facebook.common.util.UriUtil: boolean isLocalCameraUri(android.net.Uri)
com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: void doFrame(long)
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback access$800(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.facebook.common.references.CloseableReference: void closeSafely(com.facebook.common.references.CloseableReference)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: void close()
com.facebook.react.uimanager.MeasureSpecAssertions: void assertExplicitMeasureSpec(int,int)
androidx.transition.ViewUtils$1: java.lang.Float get(android.view.View)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: int getInUseSizeInBytes()
com.horcrux.svg.GlyphContext: void pushNodeAndFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient: java.lang.Object clone()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.datasource.FirstAvailableDataSourceSupplier: com.facebook.datasource.FirstAvailableDataSourceSupplier create(java.util.List)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.google.android.material.snackbar.SnackbarContentLayout: void updateTopBottomPadding(android.view.View,int,int)
com.google.android.material.bottomappbar.BottomAppBar: android.view.View access$1700(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.react.views.slider.ReactSlidingCompleteEvent: java.lang.String getEventName()
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
com.facebook.common.media.MediaUtils: java.lang.String extractMime(java.lang.String)
com.facebook.imagepipeline.memory.PoolConfig$Builder: int access$900(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: JavaTimerManager$IdleCallbackRunnable(com.facebook.react.modules.core.JavaTimerManager,long)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.facebook.drawee.controller.AbstractDraweeController: java.lang.String getImageClass(java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: SuggestionsAdapter$ChildViewCache(android.view.View)
androidx.fragment.app.ListFragment$1: void run()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)
com.horcrux.svg.LinearGradientView: void setY2(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveAnchoredChildGravity(int)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
com.horcrux.svg.RenderableView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: java.util.List http2HeadersList(okhttp3.Request)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int getCount()
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void onSuccess(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: AbstractProducerToDataSourceAdapter$1(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapProbeProducer newBitmapProbeProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.common.executors.CallerThreadExecutor: void shutdown()
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcel)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.react.views.scroll.ReactScrollView: boolean access$400(com.facebook.react.views.scroll.ReactScrollView)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.MenuItem getItem()
com.facebook.react.module.model.ReactModuleInfo: boolean canOverrideExistingModule()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
com.google.android.material.transformation.ExpandableBehavior$1: boolean onPreDraw()
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSeekBarHelper: void jumpDrawablesToCurrentState()
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: void execute()
androidx.recyclerview.widget.GapWorker: void run()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean supportsAutoSizeText()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.ScreenStackFragment adapt(com.swmansion.rnscreens.Screen)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
com.google.android.material.chip.ChipDrawable: void setCloseIconEndPaddingResource(int)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int getDrawerState()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void stop()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentStore: void burpActive()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.views.picker.ReactDialogPickerManager: void setEnabled(android.view.View,boolean)
okio.ByteString: byte internalGet$okio(int)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetForAddition(int,int)
androidx.appcompat.graphics.drawable.DrawableContainer$1: void run()
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
com.facebook.imagepipeline.producers.ThreadHandoffProducer: java.lang.String getInstrumentationTag(com.facebook.imagepipeline.producers.ProducerContext)
okhttp3.CertificatePinner$Pin: boolean matchesHostname(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
androidx.appcompat.widget.ActionBarOverlayLayout$2: ActionBarOverlayLayout$2(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: void put(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState$1: Toolbar$SavedState$1()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
okhttp3.Headers: Headers(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.common.references.OOMSoftReference: void clear()
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
com.facebook.common.streams.TailAppendingInputStream: int readNextTailByte()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
com.facebook.common.memory.NoOpMemoryTrimmableRegistry: com.facebook.common.memory.NoOpMemoryTrimmableRegistry getInstance()
com.facebook.systrace.Systrace: void traceInstant(long,java.lang.String,com.facebook.systrace.Systrace$EventScope)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.common.util.UriUtil: boolean isLocalAssetUri(android.net.Uri)
com.facebook.react.animated.NativeAnimatedModule$11: NativeAnimatedModule$11(com.facebook.react.animated.NativeAnimatedModule,int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setColorFilter(android.graphics.ColorFilter)
com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object remove(java.lang.Object)
com.facebook.common.internal.CountingOutputStream: long getCount()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationEnd(android.view.View)
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void setModule(com.facebook.react.turbomodule.core.interfaces.TurboModule)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void onSoftCapReached()
com.facebook.react.uimanager.UIImplementation: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.google.android.material.chip.ChipGroup: void setCheckedStateForView(int,boolean)
androidx.cardview.widget.RoundRectDrawable: void setPadding(float,boolean,boolean)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.facebook.react.views.slider.ReactSliderEvent: ReactSliderEvent(int,double,boolean)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
com.swmansion.rnscreens.events.ScreenAppearEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.TurboReactPackage$ModuleHolderProvider: java.lang.Object get()
com.facebook.imagepipeline.memory.BasePool: void logStats()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: java.lang.reflect.Method getFileDescriptorMethod()
com.facebook.react.modules.debug.FpsDebugFrameCallback: double getJSFPS()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerImageRequests(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest[])
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: java.util.Map getExtras(com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setShouldNotifyOnLayout(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.uimanager.UIImplementation: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.react.animated.ModulusAnimatedNode: java.lang.String prettyPrint()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.modules.datepicker.DatePickerDialogFragment: android.app.Dialog createDialog(android.os.Bundle,android.content.Context,android.app.DatePickerDialog$OnDateSetListener)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
com.google.android.material.chip.Chip: void setMaxLines(int)
androidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.imagepipeline.cache.StagingArea: com.facebook.imagepipeline.cache.StagingArea getInstance()
okio.Timeout: long timeoutNanos()
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
com.google.android.material.chip.Chip$ChipTouchHelper: Chip$ChipTouchHelper(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip)
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
com.facebook.soloader.UnpackingSoSource$DsoManifest: UnpackingSoSource$DsoManifest(com.facebook.soloader.UnpackingSoSource$Dso[])
com.facebook.imagepipeline.memory.Bucket: java.lang.Object get()
okhttp3.internal.http2.Http2: java.lang.String formattedType$okhttp(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void reactSmoothScrollTo(int,int)
com.facebook.drawee.drawable.ForwardingDrawable: void getTransform(android.graphics.Matrix)
com.facebook.common.util.TriState: boolean asBoolean()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateMeasureSpecs(int)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior()
androidx.core.view.ViewCompat: void tickleInvalidationFlag(android.view.View)
com.facebook.react.uimanager.UIImplementation: void updateRootView(com.facebook.react.uimanager.ReactShadowNode,int,int)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: RecyclerView$EdgeEffectFactory()
androidx.appcompat.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)
com.google.android.material.ripple.RippleDrawableCompat: int getOpacity()
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.PatternView: void saveDefinition()
okio.ByteString: java.lang.String toString()
com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)
okio.Buffer: long completeSegmentByteCount()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.horcrux.svg.GlyphContext: double nextY()
androidx.recyclerview.widget.DefaultItemAnimator$6: DefaultItemAnimator$6(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator)
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.appcompat.app.ToolbarActionBar: ToolbarActionBar(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
com.facebook.react.ReactRootView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.android.material.shape.MaterialShapeDrawable: void setAlpha(int)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onMemoryCacheHit(com.facebook.cache.common.CacheKey)
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
com.facebook.common.references.OOMSoftReference: void set(java.lang.Object)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.Handshake: java.util.List peerCertificates()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForKeyboardEvents()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
com.horcrux.svg.VirtualViewManager: void decomposeMatrix()
com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.common.BytesRange getResponseBytesRange()
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
com.facebook.react.uimanager.UIImplementation: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalAssetFetchSequence()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
androidx.appcompat.app.AlertController$4: AlertController$4(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.facebook.react.common.SystemClock: long uptimeMillis()
com.swmansion.rnscreens.ScreenStack: void performUpdate()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
androidx.appcompat.widget.SearchView: boolean isIconified()
androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: void removeChildrenForExpandedActionView()
com.facebook.react.modules.storage.ReactDatabaseSupplier: void closeDatabase()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
okhttp3.internal.http2.Http2ExchangeCodec: Http2ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
androidx.transition.Transition: void playTransition(android.view.ViewGroup)
okio.Timeout$Companion$NONE$1: Timeout$Companion$NONE$1()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean isOrWillBeHidden()
androidx.transition.Visibility$1: void onTransitionPause(androidx.transition.Transition)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
com.facebook.imagepipeline.request.ImageRequest: boolean getLocalThumbnailPreviewsEnabled()
com.facebook.imagepipeline.request.ImageRequestBuilder: ImageRequestBuilder()
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeController getController()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNodeJNIBase: boolean hasNewLayout()
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void ensureSize(int)
androidx.transition.TransitionUtils: android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtual()
kotlin.text.Regex$Companion: Regex$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.Exchange: void responseHeadersStart()
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1: void onAnimationEnd(android.view.animation.Animation)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearPayload()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
com.facebook.common.logging.FLogDefaultLoggingDelegate: boolean isLoggable(int)
androidx.appcompat.app.WindowDecorActionBar$1: void onAnimationEnd(android.view.View)
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
androidx.transition.TransitionSet$TransitionSetListener: void onTransitionEnd(androidx.transition.Transition)
com.facebook.imagepipeline.memory.BitmapPoolBackend: void put(android.graphics.Bitmap)
com.facebook.cache.disk.DefaultDiskStorage: boolean isExternal(java.io.File,com.facebook.cache.common.CacheErrorLogger)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
okhttp3.internal.http2.Http2Connection: boolean pushedStream$okhttp(int)
androidx.recyclerview.widget.RecyclerView$6: void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.facebook.react.modules.core.ReactChoreographer$1: void run()
com.facebook.react.uimanager.events.EventDispatcherImpl: int access$1100(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.google.android.material.chip.ChipDrawable: float calculateChipIconWidth()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
com.facebook.common.internal.Throwables: void propagateIfPossible(java.lang.Throwable)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getPlaceholder()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: StaggeredGridLayoutManager$SavedState$1()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
androidx.customview.widget.ViewDragHelper: int clampMag(int,int,int)
com.facebook.soloader.SysUtil: void fsyncRecursive(java.io.File)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
androidx.recyclerview.widget.ViewInfoStore: boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.animated.MultiplicationAnimatedNode: java.lang.String prettyPrint()
com.facebook.react.uimanager.ThemedReactContext: int getSurfaceId()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.UIViewOperationQueue: boolean access$2500(com.facebook.react.uimanager.UIViewOperationQueue)
okhttp3.internal.http2.Http2Connection: long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
okio.Buffer: long indexOf(byte,long,long)
androidx.recyclerview.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
androidx.transition.Transition$1: android.graphics.Path getPath(float,float,float,float)
okhttp3.internal.cache.DiskLruCache: void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean)
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
com.facebook.drawee.generic.RootDrawable: void draw(android.graphics.Canvas)
com.facebook.imagepipeline.memory.FlexByteArrayPool: void release(byte[])
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
androidx.appcompat.widget.AlertDialogLayout: boolean tryOnMeasure(int,int)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.SymbolView: SymbolView(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.transition.Transition: androidx.transition.PathMotion getPathMotion()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setResponsible(android.view.View,boolean)
com.facebook.yoga.YogaConfigJNIBase: void setUseLegacyStretchBehaviour(boolean)
androidx.fragment.app.FragmentContainerView: void dispatchDraw(android.graphics.Canvas)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
okio.RealBufferedSource: void readFully(okio.Buffer,long)
com.facebook.imagepipeline.memory.FlexByteArrayPool$1: FlexByteArrayPool$1(com.facebook.imagepipeline.memory.FlexByteArrayPool)
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
com.facebook.react.views.text.TextAttributes: int getEffectiveFontSize()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: StandardAndroidSocketAdapter(java.lang.Class,java.lang.Class,java.lang.Class)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
com.facebook.imagepipeline.cache.BufferedDiskCache$5: java.lang.Void call()
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
com.facebook.soloader.SoLoader: void initSoLoader(com.facebook.soloader.SoFileLoader)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1: AsyncStorageModule$SerialExecutor$1(com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor,java.lang.Runnable)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSendAccessibilityEvent(int,int)
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getRotationAngle()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getConstants()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5: SwipeRefreshLayout$5(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
com.facebook.binaryresource.FileBinaryResource: java.io.File getFile()
com.facebook.react.ReactRootView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
okio.RealBufferedSource: byte[] readByteArray(long)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeight(float)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener access$000(com.facebook.react.ReactActivityDelegate)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isGingerbreadDecoderEnabled()
com.facebook.imagepipeline.memory.BasePool: java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
com.facebook.systrace.Systrace: boolean isTracing(long)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setShowArrow(boolean)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void onStateChanged(android.view.View,int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getMask(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: ScrollingTabContainerView$TabView(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setDelegate(android.view.View)
com.facebook.react.uimanager.events.EventDispatcherImpl: boolean access$402(com.facebook.react.uimanager.events.EventDispatcherImpl,boolean)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.facebook.yoga.YogaNodeJNIBase: void setData(java.lang.Object)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: UIViewOperationQueue$ConfigureLayoutAnimationOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinecap(android.view.View,int)
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: ScreenWindowTraits$setTranslucent$1(android.app.Activity,boolean,com.facebook.react.bridge.ReactContext)
okhttp3.Address: javax.net.SocketFactory socketFactory()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(android.view.View,java.lang.String)
com.facebook.react.jstasks.HeadlessJsTaskConfig: long getTimeout()
com.google.android.material.shape.MaterialShapeDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.facebook.react.CoreModulesPackage: void startProcessPackage()
androidx.appcompat.view.menu.MenuItemImpl: void setCheckedInt(boolean)
okio.OutputStreamSink: void close()
com.facebook.react.ReactActivityDelegate: void loadApp(java.lang.String)
androidx.collection.MapCollections: java.util.Collection getValues()
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler$1: JobScheduler$1(com.facebook.imagepipeline.producers.JobScheduler)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMutableMap(java.util.Map)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.horcrux.svg.MaskView: void setHeight(java.lang.String)
com.facebook.react.views.slider.ReactSlidingCompleteEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.transition.ViewUtilsBase: void fetchSetFrame()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.SubMenu getSubMenuWrapper(android.view.SubMenu)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
androidx.fragment.app.FragmentManager: void hideFragment(androidx.fragment.app.Fragment)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,int)
androidx.appcompat.widget.AppCompatTextHelper: void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.cardview.widget.CardViewBaseImpl: float getMinHeight(androidx.cardview.widget.CardViewDelegate)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
androidx.core.provider.FontRequestWorker$1: FontRequestWorker$1(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
com.facebook.datasource.AbstractDataSource: java.lang.Throwable getFailureCause()
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceDimensionsChanges()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()
okhttp3.CipherSuite: java.util.Map access$getINSTANCES$cp()
com.facebook.imagepipeline.memory.MemoryChunkPool: int getSizeInBytes(int)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$2: void run()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder access$100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine(int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: GridLayoutManager$SpanSizeLookup()
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.MenuBuilder: boolean getOptionalIconsVisible()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactTextView$1: ReactTextView$1(com.facebook.react.views.text.ReactTextView)
com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.recyclerview.widget.AdapterHelper: void consumePostponedUpdates()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: AppCompatDelegateImpl$PanelFeatureState(int)
okio.Timeout$Companion$NONE$1: void throwIfReached()
okio.GzipSource: long read(okio.Buffer,long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.imageformat.ImageFormatChecker: void updateMaxHeaderLength()
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()
com.horcrux.svg.VirtualViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
androidx.fragment.app.FragmentManager: void dispatchPause()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
androidx.appcompat.app.AppCompatDialog$1: AppCompatDialog$1(androidx.appcompat.app.AppCompatDialog)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.references.CloseableReference get(java.lang.Object)
okhttp3.internal.platform.android.Android10SocketAdapter: boolean isSupported()
com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.google.android.material.transformation.FabTransformationBehavior$1: FabTransformationBehavior$1(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View)
com.facebook.common.disk.NoOpDiskTrimmableRegistry: void registerDiskTrimmable(com.facebook.common.disk.DiskTrimmable)
okhttp3.internal.connection.RealCall: void timeoutEarlyExit()
androidx.fragment.app.FragmentController: void dispatchDestroy()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheEventListener getCacheEventListener()
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void onCancellation()
com.google.android.material.appbar.AppBarLayout: void drawableStateChanged()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.util.TriState shouldTransform(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.facebook.imagepipeline.memory.BasePool: void initBuckets()
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.common.references.CloseableReference: CloseableReference(com.facebook.common.references.SharedReference,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: AppBarLayout$BaseBehavior$SavedState(android.os.Parcelable)
com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path)
com.facebook.drawee.drawable.ScaleTypeDrawable: android.graphics.PointF getFocusPoint()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(android.view.View,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isAnimationRunning(android.view.animation.Animation)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: UIViewOperationQueue$DispatchCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskwidth(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMark(android.graphics.drawable.Drawable)
com.google.android.material.resources.TextAppearance$2: TextAppearance$2(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipRule(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: ReactImageDownloadListener$EmptyDrawable(com.facebook.react.views.image.ReactImageDownloadListener$1)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
com.facebook.react.ReactActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
okio.Buffer: byte[] readByteArray()
okio.Buffer: boolean exhausted()
androidx.recyclerview.widget.GridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(android.view.View,java.lang.String)
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int getNextColor()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void endCreatingModule()
androidx.appcompat.app.AppCompatActivity: void onPostResume()
okio.AsyncTimeout$Companion: boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactBridge: ReactBridge()
androidx.appcompat.widget.AppCompatSpinner$2: void onGlobalLayout()
com.facebook.react.views.modal.ReactModalHostView: ReactModalHostView(android.content.Context)
com.facebook.react.common.LongArray: long get(int)
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$9: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.datasource.AbstractDataSource: boolean setProgress(float)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
androidx.appcompat.widget.ForwardingListener: void clearCallbacks()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
com.google.android.material.resources.TextAppearance$1: void onFontRetrievalFailed(int)
com.facebook.react.views.scroll.ReactScrollView: void updateStateOnScroll()
com.facebook.react.views.text.TextLayoutManager: boolean isRTL(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerWidth(int)
androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void maybeSetExtrasFromCloseableImage(com.facebook.imagepipeline.image.HasImageMetadata,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.drawable.ForwardingDrawable: void setAlpha(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)
okhttp3.HttpUrl: java.lang.String host()
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
com.facebook.react.uimanager.ShadowNodeRegistry: void addRootNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.drawee.drawable.RoundedBitmapDrawable: void setAlpha(int)
com.facebook.react.ReactInstanceManager: void onHostPause(android.app.Activity)
androidx.core.provider.CallbackWithHandler$1: void run()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: AbstractDraweeController$InternalForwardingListener()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.devsupport.ViewHierarchyUtil: android.util.Pair getDeepestLeaf(android.view.View)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache getBitmapMemoryCache()
com.facebook.react.modules.core.ReactChoreographer: int access$610(com.facebook.react.modules.core.ReactChoreographer)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: PipelineDraweeControllerBuilderSupplier(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,com.facebook.drawee.backends.pipeline.DraweeConfig)
com.facebook.imagepipeline.memory.PoolConfig$Builder: java.lang.String access$800(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.drawee.controller.AbstractDraweeController: com.facebook.fresco.ui.common.ControllerListener2$Extras obtainExtras(java.util.Map,java.util.Map,android.net.Uri)
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void internalPrepareBitmap(com.facebook.common.references.CloseableReference)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
okhttp3.Cache: void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy)
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void reset()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onSizeChanged(int,int,int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath)
com.facebook.yoga.YogaNodeJNIBase: void setWrap(com.facebook.yoga.YogaWrap)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int access$400(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.modules.image.ImageLoaderModule$4: ImageLoaderModule$4(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.LogBoxModule: android.view.View access$002(com.facebook.react.devsupport.LogBoxModule,android.view.View)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
androidx.customview.widget.ViewDragHelper: void cancel()
com.google.android.material.appbar.HeaderScrollingViewBehavior: int getVerticalLayoutGap()
androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void onOffset(int)
com.facebook.cache.disk.DiskCacheConfig: int getVersion()
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer: java.lang.String getProducerName()
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
androidx.transition.ViewGroupUtilsApi14: void suppressLayout(android.view.ViewGroup,boolean)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils: LocalExifThumbnailProducer$Api24Utils(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager access$000(com.facebook.react.ReactRootView)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: ActionMenuPresenter$OverflowMenuButton$1(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
okio.internal.SegmentedByteStringKt: int binarySearch(int[],int,int,int)
androidx.appcompat.widget.TintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.collection.ArrayMap$1: int colGetSize()
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
okhttp3.internal.ws.RealWebSocket$Close: long getCancelAfterCloseMillis()
com.facebook.react.views.text.TextAttributeProps: void setIncludeFontPadding(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
com.facebook.drawee.view.AspectRatioMeasure$Spec: AspectRatioMeasure$Spec()
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.Shapeable getMaskDrawable()
com.facebook.common.media.MimeTypeMapWrapper: java.lang.String getMimeTypeFromExtension(java.lang.String)
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.react.util.JSStackTrace: java.lang.String format(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: ReactScrollViewCommandHelper$ScrollToCommandData(int,int,boolean)
com.horcrux.svg.PathParser: void smoothCurveTo(float,float,float,float)
com.facebook.soloader.ApplicationSoSource: android.content.Context getUpdatedContext()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: DropdownMenuEndIconDelegate$3(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.horcrux.svg.GlyphContext: void pushIndices()
com.facebook.react.views.picker.ReactPicker$2: void run()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(android.view.View,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
kotlin.collections.AbstractCollection$toString$1: java.lang.Object invoke(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.horcrux.svg.TSpanView: java.lang.String visualToLogical(java.lang.String)
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,int,int)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.cache.disk.DiskStorageCache: void remove(com.facebook.cache.common.CacheKey)
com.facebook.imagepipeline.common.ImageDecodeOptions: ImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder)
okio.OutputStreamSink: java.lang.String toString()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
com.google.android.material.bottomsheet.BottomSheetDialog: void onCreate(android.os.Bundle)
androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void access$700(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
okhttp3.internal.platform.Android10Platform$Companion: boolean isSupported()
com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: CascadingMenuPopup$3$1(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: long skip(long)
androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
okio.Buffer: byte getByte(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.views.text.ReactTextView: ReactTextView(android.content.Context)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode(com.facebook.react.views.slider.ReactSliderManager$1)
com.swmansion.rnscreens.ScreenFragment: void dispatchOnAppear()
androidx.appcompat.widget.SwitchCompat: void stopDrag(android.view.MotionEvent)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getLayoutDirection()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setResponsible(android.view.View,boolean)
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: DefaultEntryEvictionComparatorSupplier$1(com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier)
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object[])
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.horcrux.svg.SvgViewManager: void setVbHeight(android.view.View,float)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
com.google.android.material.shape.MaterialShapeDrawable: int compositeElevationOverlayIfNeeded(int)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void bindTab(androidx.appcompat.app.ActionBar$Tab)
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p()
com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.animated.StyleAnimatedNode: StyleAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.MultipartBody: java.lang.String boundary()
androidx.transition.ViewUtils$1: void set(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.react.devsupport.LogBoxModule$2: LogBoxModule$2(com.facebook.react.devsupport.LogBoxModule)
androidx.core.provider.FontRequestWorker$2: FontRequestWorker$2(androidx.core.provider.CallbackWithHandler)
com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String,java.lang.Throwable)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: void afterTextChanged(android.text.Editable)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton)
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.google.android.material.internal.ThemeEnforcement: void checkMaterialTheme(android.content.Context)
com.google.android.material.appbar.AppBarLayout: boolean hasChildWithInterpolator()
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
okio.SocketAsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: boolean isVirtual()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setVectorEffect(android.view.View,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
androidx.recyclerview.widget.GridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean shouldPostprocess(com.facebook.imagepipeline.image.CloseableImage)
androidx.transition.ViewUtils: void setLeftTopRightBottom(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostResume()
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(android.widget.ProgressBar)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion: ScreenStackHeaderConfigViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.common.executors.UiThreadImmediateExecutorService: com.facebook.common.executors.UiThreadImmediateExecutorService getInstance()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
com.google.android.material.datepicker.MaterialCalendar$3: MaterialCalendar$3(com.google.android.material.datepicker.MaterialCalendar)
com.facebook.react.ReactDelegate: void onHostPause()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setRole(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole,android.content.Context)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()
androidx.recyclerview.widget.ChildHelper: void removeView(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEnabled(int)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: int read()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.coinapp.MainApplication$1: MainApplication$1(com.coinapp.MainApplication,android.app.Application)
com.facebook.react.animated.NativeAnimatedNodesManager$1: NativeAnimatedNodesManager$1(com.facebook.react.animated.NativeAnimatedNodesManager,int,com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
com.facebook.soloader.SysUtil: void dumbDeleteRecursive(java.io.File)
com.facebook.react.modules.core.ReactChoreographer$1: ReactChoreographer$1(com.facebook.react.modules.core.ReactChoreographer)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.lang.Object maybeRemoveFromCurrentItems(java.lang.Object)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2: void onFailure(java.lang.String,java.lang.Throwable,com.facebook.fresco.ui.common.ControllerListener2$Extras)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http1.Http1ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: PipelineDraweeControllerBuilder(android.content.Context,com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory,com.facebook.imagepipeline.core.ImagePipeline,java.util.Set,java.util.Set)
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
okhttp3.TlsVersion$Companion: TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,java.lang.String)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
com.facebook.soloader.ApkSoSource: int access$000(com.facebook.soloader.ApkSoSource)
com.facebook.react.modules.core.JavaTimerManager$1: int compare(com.facebook.react.modules.core.JavaTimerManager$Timer,com.facebook.react.modules.core.JavaTimerManager$Timer)
com.google.android.material.datepicker.CalendarConstraints: CalendarConstraints(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)
androidx.transition.Transition: androidx.transition.TransitionPropagation getPropagation()
com.google.android.material.shape.MaterialShapeDrawable: float getParentAbsoluteElevation()
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map getDefaultExportableEventTypes()
com.facebook.common.references.FinalizerCloseableReference: com.facebook.common.references.CloseableReference clone()
androidx.transition.ChangeBounds$4: void set(android.view.View,android.graphics.PointF)
com.facebook.systrace.Systrace: void traceCounter(long,java.lang.String,int)
androidx.appcompat.widget.AlertDialogLayout: void setChildFrame(android.view.View,int,int,int,int)
com.facebook.react.modules.core.ReactChoreographer: void initializeChoreographer(java.lang.Runnable)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: int getInUseCount()
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: ReadableMapBuffer$MapBufferEntry(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.views.picker.ReactPickerItem: ReactPickerItem(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
okio.Buffer: okio.Buffer writeInt(int)
com.facebook.common.util.HashCodeUtil: int hashCode(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: SearchView$UpdatableTouchDelegate(android.graphics.Rect,android.graphics.Rect,android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
com.facebook.systrace.Systrace: void endAsyncSection(long,java.lang.String,int,long)
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: ListPopupWindow$PopupScrollListener(androidx.appcompat.widget.ListPopupWindow)
bolts.UnobservedErrorNotifier: UnobservedErrorNotifier(bolts.Task)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean isSupported()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void saveOriginalDelegate(android.view.View)
okio.ForwardingSource: okio.Source delegate()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer newQualifiedResourceFetchProducer()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.datepicker.DaysOfWeekAdapter: int getCount()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void validate()
com.facebook.react.modules.network.ProgressResponseBody: okio.Source source(okio.Source)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: LinearLayoutManager$LayoutChunkResult()
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.google.android.material.animation.ArgbEvaluatorCompat: com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
androidx.customview.widget.ViewDragHelper: ViewDragHelper(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.common.executors.ScheduledFutureImpl: boolean isDone()
com.horcrux.svg.RenderableView: void mergeProperties(com.horcrux.svg.RenderableView)
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
com.facebook.common.statfs.StatFsHelper: void updateStats()
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: void setBatchNumber(long)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: boolean tryCaptureView(android.view.View,int)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: void applyTransformation(float,android.view.animation.Transformation)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.horcrux.svg.ForeignObjectView: void setX(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
com.facebook.imagepipeline.memory.LruBitmapPool: void trimTo(int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffect(android.widget.AutoCompleteTextView)
com.swmansion.rnscreens.events.ScreenDisappearEvent$Companion: ScreenDisappearEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnection()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.soloader.SysUtil: java.lang.String[] getSupportedAbis()
com.facebook.imagepipeline.image.EncodedImage: void setHeight(int)
androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.react.views.scroll.ReactScrollView: boolean executeKeyEvent(android.view.KeyEvent)
okio.-Base64: byte[] decodeBase64ToArray(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getLastChildPosition()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory access$3200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
kotlin.jvm.internal.Ref$ObjectRef: java.lang.String toString()
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: void set(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
okio.DeflaterSink: DeflaterSink(okio.BufferedSink,java.util.zip.Deflater)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: ReactTextInputSubmitEditingEvent(int,int,java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.facebook.react.modules.core.JavaTimerManager$1: JavaTimerManager$1(com.facebook.react.modules.core.JavaTimerManager)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipRule(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner getCertificatePinner$okhttp()
androidx.appcompat.widget.SwitchCompat: void applyThumbTint()
com.google.android.material.chip.ChipGroup: boolean isSingleLine()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.lang.String toString()
com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()
androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()
androidx.appcompat.widget.AppCompatTextHelper: void setTextSize(int,float)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.imagepipeline.core.ImagePipelineFactory: void initialize(com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
com.facebook.react.uimanager.ThemedReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.drawee.drawable.MatrixDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4: SwipeRefreshLayout$4(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int)
com.facebook.drawee.drawable.ArrayDrawable$1: ArrayDrawable$1(com.facebook.drawee.drawable.ArrayDrawable,int)
com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.horcrux.svg.RNSVGRenderableManager: float getTotalLength(int)
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
okhttp3.internal.http2.Http2Connection: long getWriteBytesMaximum()
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
com.facebook.common.internal.Objects: int hashCode(java.lang.Object[])
com.horcrux.svg.TextView: void setInlineSize(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RadialGradientView: void setRx(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.GapWorker: void prefetch(long)
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.Cache)
okio.GzipSource: void consumeHeader()
com.facebook.imageformat.DefaultImageFormatChecker: boolean isIcoHeader(byte[],int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetDialog: void cancel()
com.google.android.material.datepicker.MonthAdapter: boolean isFirstInRow(int)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setSizeParameters(float,float,float,float)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createRootShadowNode()
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
androidx.appcompat.view.menu.MenuPopupHelper: void show()
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
androidx.appcompat.widget.DropDownListView: boolean touchModeDrawsInPressedStateCompat()
okhttp3.internal.cache.CacheStrategy: okhttp3.Response getCacheResponse()
com.facebook.imageutils.WebpUtil: boolean compare(byte[],java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void draw(android.graphics.Canvas)
com.facebook.imagepipeline.cache.LruCountingMemoryCache: com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference)
androidx.recyclerview.widget.RecyclerView$Adapter: void setHasStableIds(boolean)
com.google.android.material.textfield.TextInputLayout$SavedState: TextInputLayout$SavedState(android.os.Parcelable)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
androidx.appcompat.widget.SwitchCompat$1: void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float)
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
com.facebook.imageformat.DefaultImageFormatChecker: boolean isHeifHeader(byte[],int)
androidx.recyclerview.widget.DefaultItemAnimator: DefaultItemAnimator()
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isDevicePreferredLanguageRTL()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
okio.Buffer: void flush()
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void execute()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()
com.swmansion.rnscreens.ScreenStack$Companion: boolean isTransparent(com.swmansion.rnscreens.ScreenStackFragment)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: DirectedAcyclicGraph()
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerSlide(android.view.View,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1: void onAnimationEnd(android.view.animation.Animation)
androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
okhttp3.CacheControl: boolean mustRevalidate()
bolts.Task: bolts.Task forResult(java.lang.Object)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,java.lang.String)
androidx.appcompat.widget.SearchView: void updateCloseButton()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.recyclerview.widget.RecyclerView$4: void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.react.animated.NativeAnimatedModule$18: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void addCoalescingKey(long)
com.facebook.imagepipeline.core.ImagePipelineConfig: void setWebpBitmapFactory(com.facebook.common.webp.WebpBitmapFactory,com.facebook.imagepipeline.core.ImagePipelineExperiments,com.facebook.common.webp.BitmapCreator)
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.cache.disk.FileCache access$100(com.facebook.imagepipeline.cache.BufferedDiskCache)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall getCall$okhttp()
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.facebook.react.ReactInstanceManager$5$2: ReactInstanceManager$5$2(com.facebook.react.ReactInstanceManager$5,com.facebook.react.bridge.ReactApplicationContext)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: CoordinatorLayout$SavedState$1()
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
androidx.cardview.widget.CardViewApi21Impl: android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
com.google.android.material.datepicker.YearGridAdapter$ViewHolder: YearGridAdapter$ViewHolder(android.widget.TextView)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: RenderableViewManager$GroupViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: FloatingActionButtonImplLollipop(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)
com.horcrux.svg.VirtualView: void clip(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.LazyReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.FastScroller: int[] getVerticalRange()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: UIViewOperationQueue$UpdateViewExtraData(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.textinput.ReactTextInputManager$2: ReactTextInputManager$2(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.facebook.datasource.AbstractDataSource: void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: int size()
com.facebook.imagepipeline.producers.NetworkFetchProducer: void access$000(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
androidx.core.provider.RequestExecutor$DefaultThreadFactory: RequestExecutor$DefaultThreadFactory(java.lang.String,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void startSettlingAnimation(android.view.View,int,int,boolean)
com.facebook.react.views.view.ReactViewBackgroundDrawable: int getOpacity()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List splitDomain(java.lang.String)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean shouldTintIconOnError()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.common.memory.PooledByteBufferInputStream: int read(byte[],int,int)
androidx.appcompat.widget.SwitchCompat$1: java.lang.Object get(java.lang.Object)
androidx.transition.AutoTransition: void init()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void destroyCircularRevealCache()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void addTransformationCallback(com.google.android.material.animation.TransformationCallback)
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$1100(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.facebook.systrace.Systrace: void endSection(long)
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
com.google.android.material.datepicker.MonthAdapter: int lastPositionInMonth()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int describeContents()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: PostprocessorProducer$RepeatedPostprocessorConsumer(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.PostprocessorProducer$1)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleSetChildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableArray)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Iterable asIterable(kotlin.sequences.Sequence)
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean allowDelay()
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.views.picker.ReactPickerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.material.transformation.FabTransformationScrimBehavior$1: void onAnimationStart(android.animation.Animator)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setColor(int)
okhttp3.Response: int code()
com.google.android.material.resources.MaterialResources: int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)
okhttp3.HttpUrl$Builder$Companion: int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.ReactInstanceDevHelper createDevHelperInterface()
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
com.google.android.material.datepicker.MaterialCalendar: android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)
com.th3rdwave.safeareacontext.InsetsChangeEvent: InsetsChangeEvent(int,com.th3rdwave.safeareacontext.EdgeInsets,com.th3rdwave.safeareacontext.Rect)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMask(android.view.View,java.lang.String)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: DiskLruCache$newJournalWriter$faultHidingSink$1(okhttp3.internal.cache.DiskLruCache)
com.facebook.drawee.controller.AbstractDraweeController: void onFailureInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean)
com.facebook.react.ReactInstanceManager: void onWindowFocusChange(boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.chip.ChipDrawable: void setIconEndPaddingResource(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setBorder(int,float)
androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
com.facebook.react.modules.toast.ToastModule$1: void run()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.common.memory.PooledByteBufferInputStream: void reset()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
kotlin.collections.CollectionsKt__CollectionsKt: void rangeCheck$CollectionsKt__CollectionsKt(int,int,int)
com.facebook.react.viewmanagers.RNSVGPathManagerDelegate: RNSVGPathManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
com.facebook.react.modules.storage.AsyncStorageModule$5: AsyncStorageModule$5(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.facebook.common.statfs.StatFsHelper: void maybeUpdateStats()
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
okhttp3.HttpUrl: java.lang.String encodedQuery()
androidx.transition.Transition: void end()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout: void startAnimation(android.view.animation.Animation)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)
com.horcrux.svg.MarkerView: void renderMarker(android.graphics.Canvas,android.graphics.Paint,float,com.horcrux.svg.RNSVGMarkerPosition,float)
okhttp3.ResponseBody: ResponseBody()
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
com.horcrux.svg.SymbolView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.th3rdwave.safeareacontext.SafeAreaViewLocalData: com.th3rdwave.safeareacontext.EdgeInsets getInsets()
androidx.appcompat.app.WindowDecorActionBar: void completeDeferredDestroyActionMode()
com.horcrux.svg.PatternView: PatternView(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.facebook.react.uimanager.events.EventDispatcherImpl: void access$300(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int getRetries()
com.facebook.react.modules.dialog.DialogModule$1: void run()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.textinput.ReactEditText: boolean isLayoutRequested()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool getAshmemMemoryChunkPool()
kotlin.internal.ProgressionUtilKt: int mod(int,int)
androidx.transition.ChangeBounds: boolean parentMatches(android.view.View,android.view.View)
com.google.android.material.datepicker.DateValidatorPointForward$1: DateValidatorPointForward$1()
androidx.fragment.app.FragmentManager$5: FragmentManager$5(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
okhttp3.internal.http1.HeadersReader: okhttp3.Headers readHeaders()
com.horcrux.svg.GlyphContext: double nextX(double)
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.uimanager.ReactAccessibilityDelegate: ReactAccessibilityDelegate()
androidx.transition.FragmentTransitionSupport$2: void onTransitionEnd(androidx.transition.Transition)
com.google.android.material.datepicker.MonthAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Entry: void setZombie$okhttp(boolean)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
androidx.fragment.app.DialogFragment: void onDetach()
com.facebook.yoga.YogaNodeJNIBase: void setMinWidth(float)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: LocalResourceFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.Resources)
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedStart(android.view.View)
com.google.android.material.behavior.SwipeDismissBehavior$1: boolean shouldDismiss(android.view.View,float)
okhttp3.Handshake: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
okio.ByteString: int hashCode()
com.facebook.react.animated.NativeAnimatedModule$6: NativeAnimatedModule$6(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.animated.AnimatedNodeValueListener)
com.google.android.material.bottomappbar.BottomAppBar$5$1: BottomAppBar$5$1(com.google.android.material.bottomappbar.BottomAppBar$5)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.TextPathView: void setSide(java.lang.String)
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])
com.swmansion.rnscreens.ScreenFragment: void onContainerUpdate()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: int access$1700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.google.android.material.datepicker.MonthsPagerAdapter: int getPosition(com.google.android.material.datepicker.Month)
com.facebook.cache.disk.DefaultDiskStorage: DefaultDiskStorage(java.io.File,int,com.facebook.cache.common.CacheErrorLogger)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
com.horcrux.svg.TextPathView: TextPathView(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.th3rdwave.safeareacontext.InsetsChangeEvent: java.lang.String getEventName()
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollVertically()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.google.android.material.datepicker.Month$1: com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void access$700(com.google.android.material.bottomappbar.BottomAppBar)
com.facebook.react.views.text.TextAttributeProps: float getFloatProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource getBestResultInCache()
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)
androidx.appcompat.app.AlertController: void setupView()
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
androidx.appcompat.widget.ListPopupWindow: void setPopupClipToScreenEnabled(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)
com.facebook.react.uimanager.events.TouchEvent: void onDispose()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setChildDrawableAtIndex(int,android.graphics.drawable.Drawable)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: ListPopupWindow$PopupDataSetObserver(androidx.appcompat.widget.ListPopupWindow)
com.google.android.material.chip.ChipDrawable: void setHideMotionSpecResource(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Field getTextViewField(java.lang.String)
com.swmansion.rnscreens.ScreenWindowTraits: void setHidden$react_native_screens_release(com.swmansion.rnscreens.Screen,android.app.Activity)
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getTotalTimeMS()
androidx.core.text.ICUCompat: java.lang.String getScript(java.lang.String)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MaterialDatePicker: int getPaddedPickerWidth(android.content.Context)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: void clearCache()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeOffset(int,double)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
com.facebook.react.modules.network.ProgressRequestBody: void writeTo(okio.BufferedSink)
com.horcrux.svg.ClipPathView: void mergeProperties(com.horcrux.svg.RenderableView)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.horcrux.svg.CircleView: void setR(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeStepGranularity()
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$1)
com.facebook.datasource.AbstractDataSource$2: void run()
com.google.android.material.textview.MaterialTextView: int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()
okhttp3.internal.platform.Platform: void log(java.lang.String,int,java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.shadow.ShadowRenderer: void setShadowColor(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void executeWithExceptions()
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
com.facebook.imagepipeline.producers.LocalResourceFetchProducer: int getLength(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String,int)
okio.Segment: okio.Segment split(int)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void onLayout(boolean,int,int,int,int)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_PROTOCOLS$cp()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: boolean isVisibleToUser(android.view.View)
androidx.recyclerview.widget.AdapterHelper: void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.swmansion.rnscreens.Screen$Companion$sShowSoftKeyboardOnAttach$1: Screen$Companion$sShowSoftKeyboardOnAttach$1()
com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setPopupBackground(android.widget.AutoCompleteTextView)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.google.android.material.appbar.AppBarLayout: void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
com.google.android.material.snackbar.SnackbarManager: void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])
com.google.android.material.bottomsheet.BottomSheetBehavior$3: int clampViewPositionVertical(android.view.View,int,int)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: long getSize()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
androidx.fragment.app.FragmentStateManager: void resume()
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource source()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleRemoveNode(com.facebook.react.uimanager.ReactShadowNode)
okio.Buffer: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.animated.ModulusAnimatedNode: ModulusAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.animated.PropsAnimatedNode: void updateView()
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
com.facebook.imageutils.JfifUtil: boolean isSOFn(int)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: SafeAreaViewShadowNode()
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
com.facebook.yoga.YogaNodeJNIBase: void setMaxHeight(float)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment(com.swmansion.rnscreens.Screen)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler: void addCookieAsync(java.lang.String,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int,int)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout$SavedState: java.lang.String toString()
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int hashCode()
androidx.transition.Visibility$1: void onTransitionResume(androidx.transition.Transition)
androidx.core.provider.CallbackWithHandler: CallbackWithHandler(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
com.facebook.yoga.YogaJustify: int intValue()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipRule(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
com.google.android.material.appbar.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()
okio.RealBufferedSource$inputStream$1: java.lang.String toString()
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.google.android.material.chip.ChipDrawable: void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: com.facebook.common.memory.PooledByteBuffer toByteBuffer()
com.google.android.material.appbar.HeaderScrollingViewBehavior: int getScrollRange(android.view.View)
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
okhttp3.ConnectionSpec: int hashCode()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$200(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.react.ReactInstanceManager$5: void run()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams$RoundingMethod getRoundingMethod()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: ReactEditText$InternalKeyListener()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: ScalingUtils$AbstractScaleType()
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
com.facebook.react.views.text.TextAttributeProps: void setFontFamily(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.Month getPageMonth(int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: Http1ExchangeCodec$AbstractSource(okhttp3.internal.http1.Http1ExchangeCodec)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.th3rdwave.safeareacontext.SafeAreaProvider: SafeAreaProvider(android.content.Context)
com.facebook.soloader.UnpackingSoSource: void extractDso(com.facebook.soloader.UnpackingSoSource$InputDso,byte[])
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopLeftCorner()
androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.horcrux.svg.VirtualView: void onMeasure(int,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
okio.-Base64: java.lang.String encodeBase64$default(byte[],byte[],int,java.lang.Object)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: android.graphics.Bitmap get(int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.horcrux.svg.LineView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.uimanager.events.Event: Event()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void handleException(java.lang.Throwable)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationStart(android.view.View)
com.facebook.cache.disk.DiskCacheConfig: long getMinimumSizeLimit()
kotlin.collections.ArrayAsCollection: boolean addAll(java.util.Collection)
com.facebook.common.references.CloseableReference: void close()
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map)
com.google.android.material.chip.ChipGroup$CheckedStateTracker: ChipGroup$CheckedStateTracker(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1)
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
com.facebook.cache.disk.DynamicDefaultDiskStorage: boolean shouldCreateNewStorage()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.facebook.react.ReactActivityDelegate: void onDestroy()
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.coinapp.MainActivity: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
androidx.recyclerview.widget.LinearLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
com.google.android.material.textfield.PasswordToggleEndIconDelegate: boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
com.facebook.drawee.generic.RoundingParams: boolean getScaleDownInsideBorders()
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.button.MaterialButton: int[] onCreateDrawableState(int)
com.facebook.react.views.textinput.ReactEditText: boolean isMultiline()
okhttp3.ConnectionPool: ConnectionPool(okhttp3.internal.connection.RealConnectionPool)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: ReactAccessibilityDelegate$2(com.facebook.react.uimanager.ReactAccessibilityDelegate,int,int,com.facebook.react.bridge.WritableMap)
androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String)
com.facebook.react.ReactRootView: void finalize()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.appbar.AppBarLayout: int[] onCreateDrawableState(int)
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: TransformAnimatedNode$TransformConfig(com.facebook.react.animated.TransformAnimatedNode)
okhttp3.internal.http2.Http2Stream: long getWriteBytesMaximum()
com.swmansion.rnscreens.ScreenFragment: void dispatchOnWillAppear()
com.facebook.react.common.ClearableSynchronizedPool: java.lang.Object acquire()
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
com.google.android.material.shape.ShapeAppearancePathProvider: void setEdgePathAndTransform(int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getEncodedMemoryCacheParamsSupplier()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.recyclerview.widget.FastScroller$2: FastScroller$2(androidx.recyclerview.widget.FastScroller)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.appbar.AppBarLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)
com.facebook.drawee.generic.WrappingUtils: void resetRoundingParams(com.facebook.drawee.drawable.Rounded)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
androidx.appcompat.app.ToolbarActionBar: void setShowHideAnimationEnabled(boolean)
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
com.google.android.material.datepicker.MonthsPagerAdapter: MonthsPagerAdapter(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener)
com.facebook.imagepipeline.producers.DelegatingConsumer: com.facebook.imagepipeline.producers.Consumer getConsumer()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace: DefaultFrescoSystrace()
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
com.facebook.react.modules.core.ReactChoreographer: void postFrameCallbackOnChoreographer()
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: void close()
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.zoontek.rnbootsplash.RNBootSplashModule$2: void run()
com.facebook.react.views.scroll.ReactScrollView: void onAttachedToWindow()
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void manageSpans(android.text.SpannableStringBuilder,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: java.util.List getEntries()
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)
com.facebook.react.views.text.ReactTextView: void setBorderWidth(int,float)
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
okhttp3.Cache$Companion: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
androidx.transition.Transition: java.lang.String getName()
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
com.horcrux.svg.RNSVGMarkerPosition: void PathIsDone()
com.facebook.imagepipeline.cache.StagingArea: boolean remove(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: ReactImageView$RoundedCornerPostprocessor(com.facebook.react.views.image.ReactImageView)
com.coinapp.MainApplication: void initializeFlipper(android.content.Context,com.facebook.react.ReactInstanceManager)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
androidx.lifecycle.ReportFragment: ReportFragment()
okhttp3.internal.http2.ErrorCode: int getHttpCode()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.disk.DiskCacheConfig build()
androidx.fragment.app.DialogFragment: int getTheme()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.horcrux.svg.ForeignObjectView: void drawGroup(android.graphics.Canvas,android.graphics.Paint,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
com.google.android.material.datepicker.CalendarItemStyle: void styleItem(android.widget.TextView)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.soloader.UnpackingSoSource$Dso: UnpackingSoSource$Dso(java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: AppBarLayout$BaseBehavior$1(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean onStateChanged(int[])
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)
com.facebook.react.uimanager.util.ReactFindViewUtil: java.lang.String getNativeId(android.view.View)
com.google.android.material.transformation.FabTransformationScrimBehavior: void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
androidx.appcompat.widget.AppCompatPopupWindow: void update(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()
okio.Options: int indexOf(okio.ByteString)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: void writeToParcel(android.os.Parcel,int)
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.drawee.generic.RootDrawable: RootDrawable(android.graphics.drawable.Drawable)
com.facebook.common.references.SharedReference: boolean isValid()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.statusbar.StatusBarModule$2$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.Pair: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.OrientationHelper$2: int getMode()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.imagepipeline.request.BasePostprocessor: BasePostprocessor()
okhttp3.Request: boolean isHttps()
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener access$2400(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okio.Buffer: long size()
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
com.facebook.imagepipeline.memory.BitmapPoolBackend: int getSize(android.graphics.Bitmap)
com.facebook.react.views.text.ReactTextView: void onAttachedToWindow()
com.facebook.react.views.slider.ReactSlider: ReactSlider(android.content.Context,android.util.AttributeSet,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginPercent(int,float)
com.facebook.react.animated.FrameBasedAnimationDriver: void runAnimationStep(long)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
okhttp3.internal.platform.Android10Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.transition.RectEvaluator: RectEvaluator()
okhttp3.internal.connection.RealCall: void setConnectionToCancel(okhttp3.internal.connection.RealConnection)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener access$500()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
com.facebook.yoga.YogaNodeFactory: com.facebook.yoga.YogaNode create(com.facebook.yoga.YogaConfig)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.facebook.react.uimanager.MatrixMathHelper: void applySkewX(double[],double)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setName(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean)
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.view.menu.CascadingMenuPopup: CascadingMenuPopup(android.content.Context,android.view.View,int,int,boolean)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int getAlpha()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontSize(android.view.View,java.lang.String)
com.google.android.material.shape.ShapePath: float getStartY()
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
com.facebook.react.ReactActivity: void onPause()
com.facebook.imagepipeline.memory.PoolConfig$Builder: int access$1000(com.facebook.imagepipeline.memory.PoolConfig$Builder)
okhttp3.ResponseBody$Companion$asResponseBody$1: long contentLength()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedBounds(android.graphics.Rect)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: int getImageHash(com.facebook.common.references.CloseableReference)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
com.facebook.common.memory.PooledByteStreams: PooledByteStreams(com.facebook.common.memory.ByteArrayPool,int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
com.google.android.material.chip.ChipGroup$LayoutParams: ChipGroup$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.textfield.TextInputLayout: void dispatchOnEditTextAttached()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenVertical(int)
androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)
com.facebook.react.modules.core.JavaTimerManager: boolean isTimerInRange(com.facebook.react.modules.core.JavaTimerManager$Timer,long)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean doLeftAndRightSwapInRTL(android.content.Context)
com.google.android.material.internal.BaselineLayout: void onMeasure(int,int)
com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootView getRootView(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.SwitchCompat: void cancelSuperTouch(android.view.MotionEvent)
com.facebook.soloader.ApplicationSoSource: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3: PasswordToggleEndIconDelegate$3(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
androidx.collection.ArraySet: java.util.Iterator iterator()
bolts.Task: java.lang.Object getResult()
androidx.appcompat.view.menu.MenuItemImpl$1: MenuItemImpl$1(androidx.appcompat.view.menu.MenuItemImpl)
com.facebook.imagepipeline.memory.BasePool: boolean isMaxSizeSoftCapExceeded()
com.facebook.infer.annotation.Assertions: java.lang.Object assertNotNull(java.lang.Object)
com.google.android.material.shape.ShapePath$PathArcOperation: float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation)
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator getScaleAnimator()
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.viewmanagers.RNSVGLinearGradientManagerDelegate: RNSVGLinearGradientManagerDelegate(com.facebook.react.uimanager.BaseViewManagerInterface)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollView: void onSizeChanged(int,int,int,int)
com.horcrux.svg.EllipseView: void setCy(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgView: boolean isResponsible()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleFile(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.view.menu.StandardMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.common.references.CloseableReference: java.lang.Class access$000()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.facebook.react.uimanager.UIViewOperationQueue: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
okio.Buffer: okio.BufferedSink writeByte(int)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority getHigherPriority(com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.common.Priority)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)
com.swmansion.rnscreens.ScreenFragment: android.app.Activity tryGetActivity()
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
com.google.android.material.chip.Chip: boolean access$100(com.google.android.material.chip.Chip)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
com.swmansion.rnscreens.RNScreensPackage: RNScreensPackage()
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)
com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookiesAsync(com.facebook.react.bridge.Callback)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromValue(java.lang.String)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasis(float)
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
androidx.core.widget.NestedScrollView: void computeScroll()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.facebook.drawee.drawable.ArrayDrawable: boolean onLevelChange(int)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()
com.facebook.imageutils.ImageMetaData: android.util.Pair getDimensions()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestCancellation(java.lang.String)
kotlin.collections.EmptyMap: java.util.Collection getValues()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.common.internal.CountingOutputStream: void write(byte[],int,int)
androidx.fragment.app.FragmentManager: void addAddedFragments(androidx.collection.ArraySet)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: VectorDrawableCompat$VectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
com.facebook.drawee.drawable.RoundedDrawable: void updatePath()
com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule)
androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)
kotlin.text.Regex: Regex(java.util.regex.Pattern)
com.google.android.material.chip.ChipDrawable: void updateFrameworkCloseIconRipple()
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.datasource.BaseDataSubscriber: void onCancellation(com.facebook.datasource.DataSource)
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.drawee.generic.RootDrawable: void setControllerOverlay(android.graphics.drawable.Drawable)
com.google.android.material.bottomsheet.BottomSheetDialog$4: void onStateChanged(android.view.View,int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
androidx.core.widget.NestedScrollView: void addView(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference pinBitmap(android.graphics.Bitmap)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: float getEndTrim()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.imagepipeline.transcoder.DownsampleUtil: int ratioToSampleSizeJPEG(float)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostDestroy()
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
androidx.appcompat.view.StandaloneActionMode: void finish()
com.google.android.material.chip.Chip: boolean performCloseIconClick()
com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: void access$300(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.cardview.widget.RoundRectDrawableWithShadow: void setCornerRadius(float)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: ResourceManagerInternal$VdcInflateDelegate()
okhttp3.HttpUrl: int port()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.Unit: Unit()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.android.material.textfield.IndicatorViewController: void setHelperTextAppearance(int)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)
com.google.android.material.shape.MaterialShapeDrawable: int getShadowOffsetY()
com.facebook.react.viewmanagers.RNSVGLinearGradientManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[],int[])
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: void onAnimationEnd(android.animation.Animator)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.horcrux.svg.MarkerView: void setMeetOrSlice(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory: CountingLruBitmapMemoryCacheFactory()
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.uimanager.DisplayMetricsHolder: java.util.Map getDisplayMetricsMap(double)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.graphics.drawable.Drawable maybeCreateDrawableFromFactories(com.facebook.common.internal.ImmutableList,com.facebook.imagepipeline.image.CloseableImage)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeController obtainController()
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: void onDismiss(android.widget.PopupMenu)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.facebook.react.modules.network.ForwardingCookieHandler: void addCookies(java.lang.String,java.util.List)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: ActionMenuView$ActionMenuPresenterCallback()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeChildCount()
okhttp3.internal.platform.android.CloseGuard$Companion: okhttp3.internal.platform.android.CloseGuard get()
com.google.android.material.textfield.TextInputLayout: boolean updateIconDummyDrawables()
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder: FrescoSystrace$NoOpArgsBuilder(com.facebook.imagepipeline.systrace.FrescoSystrace$1)
com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)
kotlin.collections.EmptyIterator: EmptyIterator()
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2: void onCancellationRequested()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)
okhttp3.Address: java.util.List connectionSpecs()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderView(android.view.View)
com.google.android.material.shape.MaterialShapeDrawable: float getStrokeInsetLength()
com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getFileTypefromExtension(java.lang.String)
com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerEnd(android.view.View,java.lang.String)
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
com.facebook.imagepipeline.memory.PoolConfig$Builder: PoolConfig$Builder(com.facebook.imagepipeline.memory.PoolConfig$1)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setCallerContext(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: short getCoalescingKey()
com.zoontek.rnbootsplash.RNBootSplashTask$Type: com.zoontek.rnbootsplash.RNBootSplashTask$Type valueOf(java.lang.String)
com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.view.View,int)
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onChanged()
com.google.android.material.transformation.FabTransformationBehavior: android.view.ViewGroup toViewGroupOrNull(android.view.View)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
com.google.android.material.chip.ChipDrawable: void setIconStartPaddingResource(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
okio.Timeout: okio.Timeout clearDeadline()
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
com.facebook.imagepipeline.listener.ForwardingRequestListener2: void onProducerFinishWithSuccess(com.facebook.imagepipeline.producers.ProducerContext,java.lang.String,java.util.Map)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setVisibilityEventTimeMs(long)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.facebook.yoga.YogaNodeJNIBase: void setMarginAuto(com.facebook.yoga.YogaEdge)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite init(java.lang.String,int)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.internal.cache.DiskLruCache: void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeOpacity(android.view.View,float)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator getInterpolator(com.facebook.react.uimanager.layoutanimation.InterpolatorType,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.ClipPathView: void saveDefinition()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
androidx.appcompat.app.TwilightManager: boolean isNight()
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
okhttp3.HttpUrl$Builder: void pop()
com.facebook.imagepipeline.image.EncodedImage: void setBytesRange(com.facebook.imagepipeline.common.BytesRange)
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
androidx.transition.ChangeBounds$ViewBounds: ChangeBounds$ViewBounds(android.view.View)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
androidx.core.widget.NestedScrollView: void ensureGlows()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
okhttp3.CipherSuite: java.lang.String javaName()
androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension(int)
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.modules.network.ProgressResponseBody: long access$002(com.facebook.react.modules.network.ProgressResponseBody,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableNativeMap getDisplayMetricsNativeMap(double)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void computeContentWidth()
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
okhttp3.Handshake$Companion$get$1: java.lang.Object invoke()
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimations()
okio.Buffer$inputStream$1: Buffer$inputStream$1(okio.Buffer)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.facebook.imagepipeline.memory.BucketsBitmapPool: boolean isReusable(java.lang.Object)
com.google.android.material.internal.ThemeEnforcement: void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int)
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator getAlphaAnimator(int,float[])
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
okhttp3.internal.ws.MessageDeflater: MessageDeflater(boolean)
androidx.recyclerview.widget.RecyclerView$6: RecyclerView$6(androidx.recyclerview.widget.RecyclerView)
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient getClient()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: android.animation.Animator createElevationAnimator(float,float)
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
androidx.transition.TransitionListenerAdapter: void onTransitionCancel(androidx.transition.Transition)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object)
com.facebook.react.modules.core.DeviceEventManagerModule$1: void run()
okio.RealBufferedSink: java.lang.String toString()
kotlin.collections.AbstractList$IteratorImpl: int getIndex()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
androidx.cardview.widget.CardViewBaseImpl: float getMaxElevation(androidx.cardview.widget.CardViewDelegate)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setCacheChoice(com.facebook.imagepipeline.request.ImageRequest$CacheChoice)
kotlin.collections.AbstractList$Companion: int orderedHashCode$kotlin_stdlib(java.util.Collection)
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: java.lang.Void then(bolts.Task)
com.facebook.react.animated.AnimatedNode: void update()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.ReactActivityDelegate: android.content.Context getContext()
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: int getFadeDuration()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void increaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: long runOnce()
okio.ByteString$Companion: ByteString$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.TransitionSet: androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
com.facebook.drawee.controller.AbstractDraweeController: void setControllerViewportVisibilityListener(com.facebook.drawee.controller.ControllerViewportVisibilityListener)
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: MaterialShapeDrawable$MaterialShapeDrawableState(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState)
okhttp3.internal.concurrent.TaskQueue: boolean getCancelActiveTask$okhttp()
com.facebook.react.views.textinput.ReactEditText: boolean onKeyUp(int,android.view.KeyEvent)
com.google.android.material.transformation.FabTransformationBehavior: void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])
com.facebook.react.views.textinput.ReactEditText: void clearFocusFromJS()
androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: boolean isClipPath()
com.facebook.imagepipeline.producers.DecodeProducer: DecodeProducer(com.facebook.common.memory.ByteArrayPool,java.util.concurrent.Executor,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.producers.Producer,int,com.facebook.imagepipeline.core.CloseableReferenceFactory,java.lang.Runnable,com.facebook.common.internal.Supplier)
okio.InflaterSource: InflaterSource(okio.BufferedSource,java.util.zip.Inflater)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink getSink()
okhttp3.Handshake: int hashCode()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod: ImagePipelineExperiments$DefaultProducerFactoryMethod()
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.appcompat.app.AlertController: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: void ensureNotClosed()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.imagepipeline.memory.BasePool: void initialize()
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: DummyTrackingInUseBitmapPool()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.transition.TransitionSet: androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
kotlin.sequences.DropSequence$iterator$1: void drop()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAllRemainingSpans(int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
okhttp3.Cookie$Companion: java.lang.String parseDomain(java.lang.String)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient(android.content.Context)
okio.Buffer$inputStream$1: void close()
androidx.core.graphics.Insets: int hashCode()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideable(boolean)
androidx.appcompat.widget.AppCompatTextHelper: int[] getAutoSizeTextAvailableSizes()
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
kotlin.sequences.DropSequence$iterator$1: void remove()
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: PartialDiskCacheProducer$1(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey)
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: void release(java.lang.Object)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int)
com.horcrux.svg.TextView: java.lang.String getBaselineShift()
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: void onNewResult(com.facebook.datasource.DataSource)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void access$200(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setIndeterminate(boolean)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable createDrawableFromJSDescription(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isLayoutRTL()
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.lang.Runnable,java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: ReactBaseTextShadowNode$SetSpanOperation(int,int,com.facebook.react.views.text.ReactSpan)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
okhttp3.OkHttpClient$Builder: int getReadTimeout$okhttp()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void setDrawDebugOverlay(boolean)
com.facebook.binaryresource.FileBinaryResource: com.facebook.binaryresource.FileBinaryResource createOrNull(java.io.File)
androidx.fragment.app.FragmentAnim$2$1: void run()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.fragment.app.ListFragment: ListFragment()
com.facebook.react.uimanager.UIViewOperationQueue: void dispatchViewUpdates(int,long,long)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.devsupport.DisabledDevSupportManager: void destroyRootView(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.drawee.controller.AbstractDraweeController: void addControllerListener(com.facebook.drawee.controller.ControllerListener)
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
androidx.transition.AnimatorUtils: void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
com.facebook.react.uimanager.ViewManagersPropertyCache: com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter createPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,java.lang.Class)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionType(com.facebook.yoga.YogaPositionType)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.SearchView$6: SearchView$6(androidx.appcompat.widget.SearchView)
com.horcrux.svg.RectView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
okhttp3.Headers: java.util.Iterator iterator()
okhttp3.internal.concurrent.TaskQueue: boolean getShutdown$okhttp()
com.facebook.drawee.drawable.ForwardingDrawable: boolean onStateChange(int[])
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.FlexByteArrayPool getFlexByteArrayPool()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
com.coinapp.MainApplication$1: boolean getUseDeveloperSupport()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.devsupport.DisabledDevSupportManager: android.view.View createRootView(java.lang.String)
bolts.BoltsExecutors: java.util.concurrent.ExecutorService background()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: TransformAnimatedNode$TransformConfig(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void handleException(okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$100(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object)
com.google.android.material.transformation.FabTransformationBehavior$3: void onAnimationEnd(android.animation.Animator)
okhttp3.CacheControl: boolean isPrivate()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.google.android.material.datepicker.MaterialDatePicker: boolean isFullscreen(android.content.Context)
okio.RealBufferedSource: okio.ByteString readByteString(long)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: boolean canCoalesce()
androidx.transition.Visibility: Visibility()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.GlyphContext: GlyphContext(float,float,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.customview.widget.ViewDragHelper: void dragTo(int,int,int,int)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(android.view.View,java.lang.String)
com.facebook.imagepipeline.memory.BucketsBitmapPool: int getBucketedSizeForValue(java.lang.Object)
kotlin.collections.EmptySet: java.lang.String toString()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeAttachListeners(com.facebook.drawee.controller.AbstractDraweeController)
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: DiskCacheReadProducer$1(com.facebook.imagepipeline.producers.DiskCacheReadProducer,com.facebook.imagepipeline.producers.ProducerListener2,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.Consumer)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.Producer newCombinedNetworkAndCacheProducer(com.facebook.imagepipeline.producers.NetworkFetcher)
com.horcrux.svg.SvgView: void defineMarker(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.PathParser: void cubicTo(float,float,float,float,float,float)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.th3rdwave.safeareacontext.SafeAreaView: android.view.View findProvider()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
okhttp3.OkHttpClient: int callTimeoutMillis()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleForceViewToBeNonLayoutOnly(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$000(com.facebook.imagepipeline.memory.PoolConfig$Builder)
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
com.facebook.imagepipeline.producers.LocalFileFetchProducer: java.lang.String getProducerName()
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.WritableNativeArray)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,boolean)
com.facebook.react.modules.toast.ToastModule$2: ToastModule$2(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setCornersRadius(float)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: boolean access$000(com.facebook.datasource.IncreasingQualityDataSourceSupplier)
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object)
com.facebook.react.devsupport.DisabledDevSupportManager: void startInspector()
com.facebook.react.views.text.TextAttributes: float getEffectiveMaxFontSizeMultiplier()
androidx.recyclerview.widget.OrientationHelper$1: int getEndAfterPadding()
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.datepicker.YearGridAdapter: YearGridAdapter(com.google.android.material.datepicker.MaterialCalendar)
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.Map getExtras()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.react.ReactActivityDelegate: boolean onKeyDown(int,android.view.KeyEvent)
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
okhttp3.internal.platform.Platform: java.lang.String toString()
com.facebook.drawee.generic.GenericDraweeHierarchy: void setFailure(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemCount()
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinejoin(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onCompatShadowChanged()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: java.lang.Object next()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.react.uimanager.JSTouchDispatcher: int findTargetTagAndSetCoordinates(android.view.MotionEvent)
com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions autoRotateAtRenderTime()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: AppCompatSpinner$DropdownPopup(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod access$1100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: android.graphics.BitmapFactory$Options getBitmapFactoryOptions(int,android.graphics.Bitmap$Config)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void getOutline(android.graphics.Outline)
com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle access$200(com.facebook.react.modules.datepicker.DatePickerDialogModule,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenContainer: void onUpdate()
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
com.google.android.material.datepicker.MonthAdapter: boolean withinMonth(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding(int)
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2: ForwardingCookieHandler$CookieSaver$2(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver)
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener: CoordinatorLayout$OnPreDrawListener(androidx.coordinatorlayout.widget.CoordinatorLayout)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean flagActionItems()
androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.shape.MaterialShapeDrawable$2: MaterialShapeDrawable$2(com.google.android.material.shape.MaterialShapeDrawable,float)
com.facebook.drawee.view.DraweeView: void doDetach()
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.Timeout timeout()
com.facebook.react.animated.SpringAnimation$PhysicsState: SpringAnimation$PhysicsState()
okhttp3.internal.Util: void writeMedium(okio.BufferedSink,int)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall getCall$okhttp()
androidx.collection.MapCollections$KeySet: void clear()
com.facebook.react.LazyReactPackage: LazyReactPackage()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.imagepipeline.request.ImageRequest: boolean equals(java.lang.Object)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
androidx.recyclerview.widget.SnapHelper$2: float calculateSpeedPerPixel(android.util.DisplayMetrics)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.bridge.ReadableArray getArrayProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
okhttp3.internal.concurrent.TaskRunner: TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend)
com.facebook.common.references.CloseableReference: boolean isValid()
com.facebook.yoga.YogaDirection: YogaDirection(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView$1: SearchView$1(androidx.appcompat.widget.SearchView)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void fling(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2: void onAnimationRepeat(android.animation.Animator)
com.facebook.imagepipeline.image.CloseableStaticBitmap: int getExifOrientation()
com.facebook.imagepipeline.producers.DecodeProducer: java.util.concurrent.Executor access$500(com.facebook.imagepipeline.producers.DecodeProducer)
com.facebook.drawee.components.RetryManager: void notifyTapToRetry()
com.facebook.react.animated.NativeAnimatedModule: void initialize()
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
okhttp3.Headers$Companion: void checkValue(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()
com.horcrux.svg.FontData: void handleNumericWeight(com.horcrux.svg.FontData,double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurement(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.Priority getRequestPriority()
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser getInstance()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDashoffset(android.view.View,float)
okhttp3.Request$Builder: Request$Builder()
androidx.collection.ArraySet: java.lang.Object valueAt(int)
com.google.android.material.ripple.RippleDrawableCompat: RippleDrawableCompat(com.google.android.material.shape.ShapeAppearanceModel)
androidx.collection.LongSparseArray: void removeAt(int)
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString getReason()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice()
com.facebook.react.modules.core.JavaTimerManager: void access$1800(com.facebook.react.modules.core.JavaTimerManager)
androidx.appcompat.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.swmansion.rnscreens.ScreenFragment: void dispatchEventInChildContainers(com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.datepicker.DatePickerDialogFragment: void onDismiss(android.content.DialogInterface)
androidx.transition.FragmentTransitionSupport: void addTarget(java.lang.Object,android.view.View)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()
com.google.android.material.appbar.AppBarLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.DiskLruCache: int getValueCount$okhttp()
com.google.android.material.datepicker.Month: int describeContents()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
androidx.fragment.app.DialogFragment$2: void onCancel(android.content.DialogInterface)
com.facebook.imagepipeline.memory.BufferMemoryChunk: java.nio.ByteBuffer getByteBuffer()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
com.zoontek.rnbootsplash.RNBootSplashModule: void access$300(com.zoontek.rnbootsplash.RNBootSplashModule)
com.google.android.material.datepicker.MonthsPagerAdapter: long getItemId(int)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void recordLastChildRect(android.view.View,android.graphics.Rect)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.cache.common.SimpleCacheKey: boolean isResourceIdForDebugging()
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: DiskCacheWriteProducer$DiskCacheWriteConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory)
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.Fragment: void onStart()
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.shapes.Shape getDrawableShape()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
kotlin.collections.ArraysKt___ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer newLocalContentUriThumbnailFetchProducer()
com.facebook.react.views.swiperefresh.RefreshEvent: java.lang.String getEventName()
androidx.transition.Transition$3: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.google.android.material.chip.Chip: void setGravity(int)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.rnscreens.ScreenStack$Companion: boolean isSystemAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: ThrottlingProducer$ThrottlerConsumer(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer)
com.facebook.react.common.futures.SimpleSettableFuture: boolean isCancelled()
com.facebook.imagepipeline.memory.GenericByteArrayPool: void free(byte[])
com.facebook.react.ReactInstanceManager: void onJSBundleLoadedFromServer()
kotlin.collections.AbstractList$Companion: void checkPositionIndex$kotlin_stdlib(int,int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: IterativeBoxBlurPostProcessor(int,int)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setExtraData(com.facebook.fresco.ui.common.ControllerListener2$Extras)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int getNextColorIndex()
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
com.facebook.imagepipeline.core.CloseableReferenceFactory: java.lang.String access$000(java.lang.Throwable)
com.facebook.common.logging.FLog: void v(java.lang.String,java.lang.String,java.lang.Object[])
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void initialize()
com.facebook.imagepipeline.memory.BitmapCounter: long getSize()
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$6: void run()
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList access$200(com.facebook.drawee.components.DeferredReleaserConcurrentImpl)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean requirePreDrawListener()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()
androidx.cardview.widget.RoundRectDrawableWithShadow: boolean isStateful()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry next()
com.facebook.imagepipeline.producers.NetworkFetchProducer: void notifyConsumer(com.facebook.common.memory.PooledByteBufferOutputStream,int,com.facebook.imagepipeline.common.BytesRange,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.jstasks.HeadlessJsTaskContext: void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig,int)
com.facebook.react.animated.NativeAnimatedModule$7: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.google.android.material.circularreveal.CircularRevealCompat$1: void onAnimationEnd(android.animation.Animator)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: int getOrientation(java.io.InputStream)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
com.google.android.material.datepicker.PickerFragment: boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.google.android.material.internal.StateListAnimator$1: StateListAnimator$1(com.google.android.material.internal.StateListAnimator)
androidx.drawerlayout.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
com.swmansion.rnscreens.ScreenContainer: void requestLayout()
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
okhttp3.Response: okhttp3.Request request()
okio.InflaterSource: InflaterSource(okio.Source,java.util.zip.Inflater)
com.facebook.react.common.LongArray: void dropTail(int)
androidx.appcompat.widget.AppCompatSpinner: void showPopup()
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setName(android.view.View,java.lang.String)
com.google.android.material.shape.MaterialShapeDrawable: int modulateAlpha(int,int)
com.facebook.common.util.UriUtil: java.lang.String getSchemeOrNull(android.net.Uri)
okhttp3.internal.Util: int indexOf(java.lang.String[],java.lang.String,java.util.Comparator)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeChildAt(int)
okhttp3.HttpUrl$Builder$Companion: int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForHost(int,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
com.facebook.react.uimanager.UIViewOperationQueue: long access$1800(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.recyclerview.widget.GridLayoutManager: int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.cache.LruCountingMemoryCache$2: LruCountingMemoryCache$2(com.facebook.imagepipeline.cache.LruCountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.imagepipeline.image.CloseableImage: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()
com.google.android.material.shape.AdjustedCornerSize: boolean equals(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: ViewManagersPropertyCache$ArrayPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextHeight()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: void execute()
androidx.appcompat.app.WindowDecorActionBar$2: WindowDecorActionBar$2(androidx.appcompat.app.WindowDecorActionBar)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArrayAsCollection: boolean isEmpty()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
com.facebook.soloader.SoLoader: void init(android.content.Context,boolean)
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
okhttp3.RequestBody$Companion$toRequestBody$1: RequestBody$Companion$toRequestBody$1(okio.ByteString,okhttp3.MediaType)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: UIViewOperationQueue$DispatchUIFrameCallback(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.horcrux.svg.PatternView: void setHeight(java.lang.String)
androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
androidx.fragment.app.DialogFragment$2: DialogFragment$2(androidx.fragment.app.DialogFragment)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.AssetFileDescriptor openRawResourceFd(int)
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.modules.i18nmanager.I18nUtil: void forceRTL(android.content.Context,boolean)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: void runGuarded()
okhttp3.internal.platform.android.ConscryptSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.modules.network.ProgressRequestBody: com.facebook.react.modules.network.ProgressListener access$000(com.facebook.react.modules.network.ProgressRequestBody)
com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setIsIntermediateResultExpectedNoCallbacks(boolean)
com.facebook.react.views.textinput.ReactEditText: boolean sameTextForSpan(android.text.Editable,android.text.SpannableStringBuilder,int,int)
com.facebook.react.views.text.ReactTextView: int reactTagForTouch(float,float)
com.facebook.react.views.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()
com.facebook.react.animated.NativeAnimatedModule$5: void onValueUpdate(double)
com.facebook.drawee.drawable.RoundedColorDrawable: void updatePath()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.producers.BaseProducerContext: void setEncodedImageOrigin(com.facebook.imagepipeline.image.EncodedImageOrigin)
okio.Options: int indexOf(java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$MenuState: SupportMenuInflater$MenuState(androidx.appcompat.view.SupportMenuInflater,android.view.Menu)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeMiterlimit(android.view.View,float)
okhttp3.HttpUrl$Builder: void setEncodedUsername$okhttp(java.lang.String)
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
androidx.transition.Visibility$DisappearListener: void onTransitionResume(androidx.transition.Transition)
com.horcrux.svg.SvgViewManager: void setTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet,int)
com.facebook.imagepipeline.listener.BaseRequestListener: void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map)
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: void run()
com.facebook.systrace.Systrace: void beginAsyncSection(long,java.lang.String,int,long)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelTop(android.graphics.Rect,float)
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateLayout(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.horcrux.svg.LinearGradientView: LinearGradientView(com.facebook.react.bridge.ReactContext)
okhttp3.internal.cache.DiskLruCache$Entry: void setLockingSourceCount$okhttp(int)
androidx.recyclerview.widget.ChildHelper$Bucket: ChildHelper$Bucket()
androidx.collection.MapCollections$KeySet: int hashCode()
okhttp3.EventListener: void canceled(okhttp3.Call)
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: java.lang.String getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object)
androidx.fragment.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
com.facebook.imagepipeline.producers.JobScheduler: boolean shouldProcess(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasNewLayout()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.common.internal.Objects$ToStringHelper: Objects$ToStringHelper(java.lang.String)
com.facebook.imagepipeline.cache.StagingArea: boolean containsKey(com.facebook.cache.common.CacheKey)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: MemoryPooledByteBufferOutputStream(com.facebook.imagepipeline.memory.MemoryChunkPool)
com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,boolean)
com.horcrux.svg.VirtualViewManager: void access$000(com.horcrux.svg.VirtualViewManager,com.horcrux.svg.VirtualView)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRequestListener(com.facebook.imagepipeline.listener.RequestListener)
com.facebook.react.animated.NativeAnimatedModule: void access$400(com.facebook.react.animated.NativeAnimatedModule,java.util.Queue,long)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getContentRect(android.graphics.Rect)
com.facebook.react.ReactInstanceManager$4: void onViewDetachedFromWindow(android.view.View)
okhttp3.internal.connection.RealConnection$connectTls$1: RealConnection$connectTls$1(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address)
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache getEncodedCountingMemoryCache()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean isDropdownPopupActive()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
com.google.android.material.textfield.IndicatorViewController: void hideHelperText()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.image.ReactImageView: void access$400(com.facebook.react.views.image.ReactImageView,float[])
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: ExtendedFloatingActionButton$4(java.lang.Class,java.lang.String)
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: void postVisitDirectory(java.io.File)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(android.os.Parcel)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.modules.statusbar.StatusBarModule$2$1: StatusBarModule$2$1(com.facebook.react.modules.statusbar.StatusBarModule$2)
okhttp3.Dispatcher: void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
okhttp3.internal.platform.OpenJSSEPlatform: boolean access$isSupported$cp()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Object,java.lang.Object)
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion()
com.facebook.yoga.YogaAlign: int intValue()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
okio.ByteString: java.lang.String base64()
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.react.views.textinput.ReactEditText: int incrementAndGetEventCounter()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.Timeout timeout()
com.facebook.react.uimanager.UIViewOperationQueue$2: void runGuarded()
com.facebook.soloader.MergedSoMapping: void invokeJniOnload(java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
androidx.recyclerview.widget.GapWorker: boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
com.facebook.cache.common.MultiCacheKey: java.lang.String getUriString()
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
com.google.android.material.resources.TextAppearance: void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
androidx.transition.Transition$AnimationInfo: Transition$AnimationInfo(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues)
com.google.android.material.animation.MotionSpec: long getTotalDuration()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.text.ReactTextUpdate: int getTextBreakStrategy()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$400(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.imagepipeline.image.EncodedImage: void setImageFormat(com.facebook.imageformat.ImageFormat)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean access$002(com.facebook.react.devsupport.DoubleTapReloadRecognizer,boolean)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SearchView: boolean onItemSelected(int)
com.google.android.material.appbar.AppBarLayout: void onMeasure(int,int)
androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.OkHttpClient$Builder: java.net.ProxySelector getProxySelector$okhttp()
com.facebook.imagepipeline.cache.BufferedDiskCache$3: com.facebook.imagepipeline.image.EncodedImage call()
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.google.android.material.ripple.RippleDrawableCompat: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.swmansion.rnscreens.events.ScreenDisappearEvent: java.lang.String getEventName()
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
com.horcrux.svg.FontData: double toAbsolute(com.facebook.react.bridge.ReadableMap,java.lang.String,double,double,double)
androidx.transition.TransitionManager$MultiListener: void onViewDetachedFromWindow(android.view.View)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.yoga.YogaValue: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
androidx.cardview.widget.RoundRectDrawableWithShadow: float getMinWidth()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto(byte[],byte[],int,int,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextAnchor(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.jscexecutor.JSCExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.View getWrappedView()
com.facebook.cache.disk.DefaultDiskStorage: java.io.File access$200(com.facebook.cache.disk.DefaultDiskStorage)
okio.RealBufferedSource: java.lang.String readUtf8LineStrict()
androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextAttributes applyChild(com.facebook.react.views.text.TextAttributes)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
androidx.fragment.app.Fragment: boolean isRemovingParent()
com.google.android.material.animation.ChildrenAlphaProperty: java.lang.Float get(android.view.ViewGroup)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromState(com.facebook.react.views.text.ReactTextUpdate)
okhttp3.HttpUrl$Companion: boolean isPercentEncoded(java.lang.String,int,int)
okio.Buffer: java.lang.String readUtf8LineStrict(long)
androidx.fragment.app.FragmentTransitionImpl$2: void run()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ThrottlingProducer newThrottlingProducer(com.facebook.imagepipeline.producers.Producer)
com.facebook.react.TurboReactPackage$1$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getNativeImageTranscoderFactory(int,boolean,boolean)
androidx.transition.WindowIdApi18: WindowIdApi18(android.view.View)
com.horcrux.svg.SvgView: boolean notRendered()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateImportantForAccessibility(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int getInputType()
com.swmansion.rnscreens.ScreenStackHeaderSubview: void onMeasure(int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.View onCreateActionView()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: void probe(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.cardview.widget.CardViewBaseImpl: void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
com.facebook.common.internal.ImmutableList: ImmutableList(int)
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
kotlin.collections.AbstractCollection: void clear()
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean overridesItemVisibility()
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void onSetButtonDrawable()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void access$100(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: int getOpacity()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1: void run(com.facebook.imagepipeline.image.EncodedImage,int)
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate2D(double[],double,double)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setItemSize(long)
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.datasource.DataSource getDataSource()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
com.facebook.drawee.drawable.RoundedDrawable: void setCircle(boolean)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: void onFontRetrievalFailed(int)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(char[],boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()
okhttp3.Address: java.lang.String toString()
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: void onAnimationCancel(android.animation.Animator)
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String getConnectionName$okhttp()
com.google.android.material.datepicker.MaterialCalendar$5: MaterialCalendar$5(com.google.android.material.datepicker.MaterialCalendar)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onChanged()
androidx.fragment.app.Fragment: void performStart()
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.customview.widget.ViewDragHelper: void clearMotionHistory(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: float getTargetShadowSize()
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: short getCoalescingKey()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator access$902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
okhttp3.internal.connection.RealConnection: void cancel()
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
com.google.android.material.shape.ShapePath$PathLineOperation: float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
com.google.android.material.bottomsheet.BottomSheetBehavior$3: boolean tryCaptureView(android.view.View,int)
com.facebook.react.ReactInstanceManager: void access$800(com.facebook.react.ReactInstanceManager)
com.facebook.imagepipeline.producers.ThumbnailBranchProducer: boolean access$000(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: void execute()
com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,int)
com.facebook.react.views.scroll.ScrollEvent: boolean canCoalesce()
com.facebook.react.modules.storage.AsyncStorageModule: void invalidate()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setShouldDecodePrefetches(java.lang.Boolean)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
com.facebook.imageutils.WebpUtil: android.util.Pair getVP8XDimension(java.io.InputStream)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
okhttp3.MediaType: java.lang.String type()
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.AdapterHelper: void reset()
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)
com.facebook.react.views.modal.ReactModalHostView$1: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: ToolbarWidgetWrapper$2(androidx.appcompat.widget.ToolbarWidgetWrapper,int)
com.facebook.react.modules.storage.ReactDatabaseSupplier: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
androidx.fragment.app.FragmentTransitionCompat21: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
com.horcrux.svg.TextProperties$TextPathMidLine: TextProperties$TextPathMidLine(java.lang.String,int)
com.facebook.react.modules.debug.DevSettingsModule$2: DevSettingsModule$2(com.facebook.react.modules.debug.DevSettingsModule,java.lang.String)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1: void run()
androidx.transition.TransitionSet: void captureStartValues(androidx.transition.TransitionValues)
com.facebook.imagepipeline.memory.BasePool$InvalidSizeException: BasePool$InvalidSizeException(java.lang.Object)
com.facebook.react.common.MapBuilder: java.util.Map of()
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: com.facebook.binaryresource.FileBinaryResource getResource()
com.facebook.react.views.switchview.ReactSwitchManager$1: ReactSwitchManager$1()
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.recyclerview.widget.FastScroller: void requestRedraw()
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setRequestListeners(java.util.Set)
com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month today()
kotlin.collections.AbstractList: java.util.Iterator iterator()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()
com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer getExistingMultiplexer(java.lang.Object)
com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList getErrorViewTextColors()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.memory.NativeMemoryChunk: int read(int,byte[],int,int)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.MenuItem getMenuItemWrapper(android.view.MenuItem)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setResponsible(android.view.View,boolean)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightPercent(float)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)
com.horcrux.svg.VirtualViewManager$SVGClass: VirtualViewManager$SVGClass(java.lang.String,int)
androidx.appcompat.app.AlertController: void manageScrollIndicators(android.view.View,android.view.View,android.view.View)
androidx.transition.TransitionListenerAdapter: void onTransitionStart(androidx.transition.Transition)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.google.android.material.bottomappbar.BottomAppBar: void createFabDefaultXAnimation(int,java.util.List)
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueShowPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.MenuBuilder: boolean isQwertyMode()
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)
kotlin.collections.AbstractList$IteratorImpl: void setIndex(int)
com.facebook.react.LazyReactPackage$2: LazyReactPackage$2(com.facebook.react.LazyReactPackage,java.util.List,java.util.Map)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
okhttp3.internal.authenticator.JavaNetAuthenticator: java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void show(int,int)
com.facebook.react.views.scroll.ReactScrollView$4: com.facebook.react.bridge.WritableMap getStateUpdate()
com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
com.facebook.react.views.text.CustomLineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int)
androidx.transition.Visibility$DisappearListener: void onAnimationCancel(android.animation.Animator)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternwidth(com.horcrux.svg.PatternView,java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: boolean getClient$okhttp()
com.google.android.material.chip.Chip: void setChecked(boolean)
com.horcrux.svg.RadialGradientView: void setFy(java.lang.String)
okhttp3.CookieJar$Companion: CookieJar$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.facebook.react.views.slider.ReactSliderEvent: double getValue()
com.th3rdwave.safeareacontext.SafeAreaView: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String,java.lang.Object[])
androidx.lifecycle.ReportFragment: void onPause()
com.google.android.material.animation.DrawableAlphaProperty: void set(java.lang.Object,java.lang.Object)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.horcrux.svg.SvgView: java.lang.String toDataURL()
androidx.recyclerview.widget.ViewInfoStore: void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.scroll.ReactScrollView: void scrollTo(int,int)
androidx.appcompat.widget.ActionMenuPresenter: boolean flagActionItems()
com.horcrux.svg.TextPathView: com.horcrux.svg.TextProperties$TextPathSide getSide()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(android.view.View,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean isFullSpan()
kotlin.collections.EmptySet: int size()
com.facebook.react.views.slider.ReactSlider: void disableStateListAnimatorIfNeeded()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
com.facebook.drawee.backends.pipeline.PipelineDraweeController: java.lang.Object getCachedImage()
androidx.transition.TransitionSet: void captureEndValues(androidx.transition.TransitionValues)
com.facebook.react.modules.network.ResponseUtil: void onResponseReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,int,com.facebook.react.bridge.WritableMap,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setName(android.view.View,java.lang.String)
com.facebook.drawee.drawable.RoundedDrawable: void draw(android.graphics.Canvas)
com.horcrux.svg.ImageView: void setMeetOrSlice(int)
com.facebook.imagepipeline.cache.BufferedDiskCache$3: java.lang.Object call()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawRectangularBackgroundWithBorders(android.graphics.Canvas)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder addPackage(com.facebook.react.ReactPackage)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
com.facebook.react.shell.MainReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.LazyReactPackage$2: java.util.Iterator iterator()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
okhttp3.OkHttpClient: java.util.List protocols()
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.datepicker.MaterialDatePicker: void onCancel(android.content.DialogInterface)
androidx.fragment.app.FragmentManager: void dispatchCreate()
com.facebook.drawee.controller.ForwardingControllerListener: void onRelease(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable: boolean getPaintFilterBitmap()
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)
com.facebook.yoga.YogaNodeJNIBase: void setOverflow(com.facebook.yoga.YogaOverflow)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
com.horcrux.svg.LineView: void setY1(java.lang.String)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.google.android.material.chip.ChipDrawable: boolean isCloseIconVisible()
com.facebook.drawee.drawable.DrawableUtils: void setDrawableProperties(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.DrawableProperties)
androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,int,int,int)
com.swmansion.rnscreens.ScreenStack$DrawingOp: void draw()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionCollapse(android.view.MenuItem)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPaddingPercent(int,float)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void flush()
com.facebook.imagepipeline.cache.BufferedDiskCache: void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getFinished()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.modules.core.JavaTimerManager$2: void run()
com.facebook.common.references.SharedReference: void addLiveReference(java.lang.Object)
com.facebook.imagepipeline.image.CloseableImage: void finalize()
okhttp3.Headers: java.lang.String toString()
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
com.facebook.imagepipeline.producers.NetworkFetchProducer$1: void onCancellation()
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
com.facebook.react.modules.core.JavaTimerManager$Timer: int access$700(com.facebook.react.modules.core.JavaTimerManager$Timer)
com.facebook.imagepipeline.cache.BufferedDiskCache: boolean diskCheckSync(com.facebook.cache.common.CacheKey)
androidx.recyclerview.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection castToCollection(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void removeDetachedView(android.view.View,boolean)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageInfo(com.facebook.imagepipeline.image.ImageInfo)
com.facebook.react.CoreModulesPackage: CoreModulesPackage(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.uimanager.UIImplementationProvider,boolean,int)
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks: void onIsIntermediateResultExpectedChanged()
com.facebook.imagepipeline.core.PriorityThreadFactory: PriorityThreadFactory(int,java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient: long minWebSocketMessageToCompress()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void v(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(android.view.View,java.lang.String)
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams: int getMaxSizeHardCap()
com.facebook.react.modules.core.JavaTimerManager$Timer: int access$500(com.facebook.react.modules.core.JavaTimerManager$Timer)
com.facebook.imagepipeline.image.ImmutableQualityInfo: com.facebook.imagepipeline.image.QualityInfo of(int,boolean,boolean)
com.google.android.material.resources.TextAppearance: android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.shape.ShapePath$LineShadowOperation: void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNetworkFetcher(com.facebook.imagepipeline.producers.NetworkFetcher)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: void onResize(float,float)
com.facebook.drawee.components.DeferredReleaserConcurrentImpl: java.util.ArrayList access$202(com.facebook.drawee.components.DeferredReleaserConcurrentImpl,java.util.ArrayList)
com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onCancellationImpl()
androidx.fragment.app.FragmentManager: int allocBackStackIndex()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillOpacity(android.view.View,float)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.facebook.imagepipeline.memory.BufferMemoryChunk: long getNativePtr()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void onAttachedToWindow()
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: void run()
androidx.recyclerview.widget.FastScroller$AnimatorListener: FastScroller$AnimatorListener(androidx.recyclerview.widget.FastScroller)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp()
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.google.android.material.internal.CheckableImageButton$SavedState: void readFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer getBackgroundColor()
com.facebook.imagepipeline.image.EncodedImage: com.facebook.common.references.CloseableReference getByteBufferRef()
com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
com.horcrux.svg.TextView: void setTextLength(com.facebook.react.bridge.Dynamic)
okio.Okio__OkioKt: okio.BufferedSink buffer(okio.Sink)
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequest(okhttp3.Headers,java.lang.String)
okio.RealBufferedSink$outputStream$1: java.lang.String toString()
androidx.customview.widget.ViewDragHelper: void releaseViewForPointerUp()
androidx.recyclerview.widget.RecyclerView$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.soloader.UnpackingSoSource$InputDso: void close()
okio.internal.ByteStringKt: void commonWrite(okio.ByteString,okio.Buffer,int,int)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long read(okio.Buffer,long)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.horcrux.svg.SvgView: void setVbWidth(float)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onNewResultImpl(java.io.Closeable,int)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
okhttp3.internal.connection.Exchange: okhttp3.EventListener getEventListener$okhttp()
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.facebook.systrace.SystraceMessage$NoopBuilder: SystraceMessage$NoopBuilder()
androidx.customview.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)
com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)
okio.Buffer: int readInt()
androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManager,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeHidden()
androidx.core.provider.RequestExecutor$ReplyRunnable$1: RequestExecutor$ReplyRunnable$1(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onStartTemporaryDetach()
com.facebook.react.animated.ValueAnimatedNode: void onValueUpdate()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setResponsible(android.view.View,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setLastChildRect(android.graphics.Rect)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.cache.common.SimpleCacheKey: boolean equals(java.lang.Object)
androidx.appcompat.app.ActionBar: void onDestroy()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: boolean canCacheNewValue(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
androidx.fragment.app.FragmentStore: void dispatchStateChange(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.swmansion.rnscreens.events.ScreenWillDisappearEvent$Companion: ScreenWillDisappearEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.common.file.FileTree: boolean deleteContents(java.io.File)
com.google.android.material.bottomsheet.BottomSheetDialog$2: BottomSheetDialog$2(com.google.android.material.bottomsheet.BottomSheetDialog)
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.material.internal.CollapsingTextHelper: float calculateCollapsedTextWidth()
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.MemoryCache getBitmapMemoryCache()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.String generateUniqueControllerId()
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.lang.Object get(int)
androidx.appcompat.widget.DropDownListView: void drawSelectorCompat(android.graphics.Canvas)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.drawee.drawable.ForwardingDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.facebook.react.modules.core.JavaTimerManager$Timer: JavaTimerManager$Timer(int,long,int,boolean,com.facebook.react.modules.core.JavaTimerManager$1)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getOkHttpSettings()
com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteBuffer access$500(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey)
okio.Okio: okio.Sink sink(java.net.Socket)
com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()
com.google.android.material.shape.ShapePath: void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: ReactRootView$CustomGlobalLayoutListener(com.facebook.react.ReactRootView)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: LayoutDeleteAnimation()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDashoffset(android.view.View,float)
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: float getYVelocity()
com.google.android.material.bottomsheet.BottomSheetDialog$4: BottomSheetDialog$4(com.google.android.material.bottomsheet.BottomSheetDialog)
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1: androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.drawee.controller.ForwardingControllerListener: ForwardingControllerListener()
kotlin.collections.AbstractList$Companion: boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: DefaultImageDecoder(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder,java.util.Map)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDisplay(com.facebook.yoga.YogaDisplay)
com.facebook.react.ReactInstanceManager$1: void invokeDefaultOnBackPressed()
com.facebook.cache.disk.DiskCacheConfig$1: java.lang.Object get()
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
okhttp3.internal.http.ExchangeCodec$Companion: ExchangeCodec$Companion()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
com.facebook.react.views.view.ReactViewBackgroundDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexShrink(float)
androidx.cardview.widget.CardViewBaseImpl: void setRadius(androidx.cardview.widget.CardViewDelegate,float)
com.facebook.react.views.image.ReactImageView: boolean shouldResize(com.facebook.react.views.imagehelper.ImageSource)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.facebook.imagepipeline.common.RotationOptions: RotationOptions(int,boolean)
okhttp3.OkHttpClient$Builder: boolean getFollowSslRedirects$okhttp()
androidx.recyclerview.widget.SnapHelper: SnapHelper()
com.google.android.material.appbar.AppBarLayout$LayoutParams: boolean isCollapsible()
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.horcrux.svg.ForeignObjectView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Inspector$Page: int getId()
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
androidx.core.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)
com.facebook.imagepipeline.cache.CountingLruBitmapMemoryCacheFactory$1: int getSizeInBytes(com.facebook.imagepipeline.image.CloseableImage)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStack: void setupBackHandlerIfNeeded(com.swmansion.rnscreens.ScreenStackFragment)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeBuildAndSetGestureDetector(com.facebook.drawee.controller.AbstractDraweeController)
com.google.android.material.bottomappbar.BottomAppBar: void maybeAnimateMenuView(int,boolean)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitOrientationChanged(int)
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: HoneycombBitmapFactory(com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$500(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild()
com.facebook.react.ReactInstanceManager$9: void run()
androidx.appcompat.widget.Toolbar: void ensureNavButtonView()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource getSource()
com.facebook.drawee.controller.AbstractDraweeController: int getImageHash(java.lang.Object)
androidx.recyclerview.widget.FastScroller: void updateScrollPosition(int,int)
com.facebook.yoga.YogaNodeJNIBase: void setAlignContent(com.facebook.yoga.YogaAlign)
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
okhttp3.HttpUrl$Builder$Companion: int schemeDelimiterOffset(java.lang.String,int,int)
com.google.android.material.datepicker.MaterialDatePicker: android.app.Dialog onCreateDialog(android.os.Bundle)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: RecyclerView$SmoothScroller()
com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context,okhttp3.OkHttpClient)
androidx.recyclerview.widget.LinearSnapHelper: LinearSnapHelper()
com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory$1: void onCacheHit(com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
okio.DeflaterSink: java.lang.String toString()
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream(int)
androidx.fragment.app.FragmentContainerView: void addDisappearingFragmentView(android.view.View)
com.facebook.react.ReactRootView: void onAttachedToReactInstance()
com.facebook.imagepipeline.common.Priority: Priority(java.lang.String,int)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int getResourceDrawableId(android.content.Context,java.lang.String)
com.facebook.imagepipeline.image.EncodedImage: void copyMetaDataFrom(com.facebook.imagepipeline.image.EncodedImage)
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
okio.AsyncTimeout$sink$1: AsyncTimeout$sink$1(okio.AsyncTimeout,okio.Sink)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()
com.facebook.react.uimanager.UIImplementation: void measure(int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
com.google.android.material.bottomappbar.BottomAppBar$SavedState: BottomAppBar$SavedState(android.os.Parcelable)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,java.lang.Integer)
okio.Buffer: int read(byte[],int,int)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop: java.lang.String toString()
okio.AsyncTimeout$Companion: AsyncTimeout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void ensureDataSourceInitialized()
com.google.android.material.shape.ShapePath$PathArcOperation: float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)
okio.AsyncTimeout$Companion: void access$scheduleTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout,long,boolean)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
com.facebook.react.views.text.TextAttributes: void setMaxFontSizeMultiplier(float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void resetInternal()
com.facebook.imageformat.DefaultImageFormatChecker: boolean isJpegHeader(byte[],int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineExperiments getExperiments()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
com.facebook.cache.disk.DiskCacheConfig$Builder: boolean access$1200(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalImageFileFetchSequence()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void setTextView(android.widget.TextView)
androidx.lifecycle.LiveData: void onActive()
okhttp3.OkHttpClient: java.net.Proxy proxy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()
androidx.transition.ChangeBounds$9: ChangeBounds$9(androidx.transition.ChangeBounds,android.view.ViewGroup)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)
androidx.appcompat.widget.TintTypedArray: float getDimension(int,float)
androidx.core.app.TaskStackBuilder: void startActivities()
com.google.android.material.textview.MaterialTextView: boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
com.swmansion.rnscreens.ScreenStackFragment: void onCreateAnimation$lambda-2(com.swmansion.rnscreens.ScreenStackFragment)
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: boolean isHttpSuccess(int)
com.facebook.react.views.picker.ReactPicker$1: ReactPicker$1(com.facebook.react.views.picker.ReactPicker)
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationCancel(android.animation.Animator)
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.transition.Transition: androidx.transition.Transition clone()
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: void run()
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.swmansion.rnscreens.Screen: java.lang.Boolean isStatusBarAnimated()
com.facebook.imagepipeline.memory.BitmapCounterProvider: com.facebook.imagepipeline.memory.BitmapCounter get()
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEmpty()
okhttp3.internal.Util: boolean isHealthy(java.net.Socket,okio.BufferedSource)
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCachePut(java.lang.Object)
com.facebook.soloader.SoLoader: boolean loadLibraryBySoNameImpl(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)
com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()
okio.OutputStreamSink: okio.Timeout timeout()
com.facebook.common.disk.NoOpDiskTrimmableRegistry: com.facebook.common.disk.NoOpDiskTrimmableRegistry getInstance()
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: java.lang.Object get()
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.recyclerview.widget.GridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.collection.SparseArrayCompat: int size()
okhttp3.internal.connection.RealCall: void cancel()
com.facebook.imagepipeline.memory.BasePool: java.lang.Object get(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: long runOnce()
com.facebook.react.ReactRootView: int access$200(com.facebook.react.ReactRootView)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isMemoryCacheEnabled()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: OkHttpNetworkFetcher(okhttp3.Call$Factory,java.util.concurrent.Executor)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
okhttp3.CertificatePinner$check$1: java.util.List invoke()
okio.Buffer: void readFully(okio.Buffer,long)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.util.Pair: int hashCode()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOriginalOffset(int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.customview.widget.FocusStrategy: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.google.android.material.chip.ChipDrawable: boolean isCloseIconStateful()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.animated.NativeAnimatedModule$10: NativeAnimatedModule$10(com.facebook.react.animated.NativeAnimatedModule,int,double)
com.horcrux.svg.RectView: void setY(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.android.material.transformation.FabTransformationBehavior$1: void onAnimationEnd(android.animation.Animator)
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getViewTypeCount()
androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.drawee.drawable.RoundedDrawable: void setBorder(int,float)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection fromInt(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.recyclerview.widget.RecyclerView$5: void addView(android.view.View,int)
androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeight(float)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.common.Priority)
kotlin.collections.EmptySet: java.util.Iterator iterator()
com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler)
com.google.android.material.datepicker.DateStrings: java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)
androidx.transition.ViewUtils$1: void set(android.view.View,java.lang.Float)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
okhttp3.Challenge: int hashCode()
okio.RealBufferedSink: void close()
okhttp3.internal.http2.Http2Connection: long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView$4: ReactHorizontalScrollView$4(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void resetArray(double[])
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager()
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.horcrux.svg.UseView: void setX(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()
com.facebook.react.uimanager.UIImplementation: void removeShadowNode(com.facebook.react.uimanager.ReactShadowNode)
androidx.appcompat.view.menu.MenuPopupHelper: void showPopup(int,int,boolean,boolean)
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: LocalContentUriFetchProducer(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getCount()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion()
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
com.facebook.react.animated.AdditionAnimatedNode: void update()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: AbstractDraweeControllerBuilder$2(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)
com.swmansion.rnscreens.Screen$Companion$sShowSoftKeyboardOnAttach$1: void onViewAttachedToWindow(android.view.View)
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.request.ImageRequest getImageRequest()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule$17: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.google.android.material.stateful.ExtendableSavedState$1: java.lang.Object[] newArray(int)
com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getHeight()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
androidx.fragment.app.FragmentContainerView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setOrientation(int)
androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: void postUpdateFocusedState()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
com.facebook.react.animated.NativeAnimatedNodesManager: void updateNodes(java.util.List)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.animated.TrackingAnimatedNode: java.lang.String prettyPrint()
com.swmansion.rnscreens.ScreenStack: void dispatchOnFinishTransitioning()
com.facebook.imagepipeline.producers.JobScheduler: boolean updateJob(com.facebook.imagepipeline.image.EncodedImage,int)
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Connection$Builder: int getPingIntervalMillis$okhttp()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setOrigin(java.lang.String,int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onEnd()
okhttp3.Handshake$peerCertificates$2: Handshake$peerCertificates$2(kotlin.jvm.functions.Function0)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean hasResult()
com.facebook.imagepipeline.image.ImmutableQualityInfo: boolean isOfGoodEnoughQuality()
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: ReactTextInputManager$ReactScrollWatcher(com.facebook.react.views.textinput.ReactEditText)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])
okhttp3.internal.http2.Http2Stream: long getReadBytesTotal()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri$okhttp()
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isDoneCreatingModule()
okio.Options: okio.ByteString get(int)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
com.facebook.imagepipeline.image.EncodedImage: void closeSafely(com.facebook.imagepipeline.image.EncodedImage)
com.facebook.react.views.text.ReactTextShadowNode: int getTextAlign()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setImageRequest(java.lang.Object)
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,java.lang.String)
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
okhttp3.internal.Util: int parseHexDigit(char)
com.facebook.react.viewmanagers.RNSVGDefsManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.behavior.SwipeDismissBehavior: void setSwipeDirection(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactClickableSpan: ReactClickableSpan(int,int)
com.zoontek.rnbootsplash.RNBootSplashModule: void getVisibilityStatus(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: com.facebook.imagepipeline.memory.NoOpPoolStatsTracker getInstance()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.react.CoreModulesPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)
okhttp3.internal.connection.RealConnection$connectTls$2: java.lang.Object invoke()
com.google.android.material.dialog.InsetDialogOnTouchListener: InsetDialogOnTouchListener(android.app.Dialog,android.graphics.Rect)
com.facebook.cache.disk.DiskStorageCache$CacheStats: void reset()
okhttp3.internal.http2.Http2Reader: void close()
com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object getSelection()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.google.android.material.shape.ShapePath: void addConnectingShadowIfNecessary(float)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.drawee.drawable.DrawableProperties: void setAlpha(int)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeLocalUri(android.content.Context)
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2$LogHandler: void handleMessage(android.os.Message)
com.facebook.imagepipeline.producers.DelayProducer$1: void run()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DataFetchProducer newDataFetchProducer()
com.facebook.react.uimanager.events.EventDispatcherImpl: android.util.LongSparseArray access$1500(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.transition.Transition: void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.common.logging.FLog: void wtf(java.lang.Class,java.lang.String,java.lang.Throwable)
okhttp3.internal.http1.HeadersReader: java.lang.String readLine()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.horcrux.svg.LineView: void setY2(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
com.google.android.material.shape.MaterialShapeDrawable$1: MaterialShapeDrawable$1(com.google.android.material.shape.MaterialShapeDrawable)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
com.google.android.material.chip.ChipGroup: boolean access$300(com.google.android.material.chip.ChipGroup)
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.String getUriString()
com.horcrux.svg.CircleView: void setCy(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Authenticator$Companion$AuthenticatorNone: Authenticator$Companion$AuthenticatorNone()
okhttp3.Route: okhttp3.Address address()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
kotlin.ranges.IntRange: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
com.facebook.react.views.modal.ShowEvent: ShowEvent(int,int)
com.facebook.react.modules.core.JavaTimerManager$Timer: long access$400(com.facebook.react.modules.core.JavaTimerManager$Timer)
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints build()
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
com.facebook.react.ReactActivityDelegate: boolean onKeyLongPress(int,android.view.KeyEvent)
com.facebook.cache.common.MultiCacheKey: boolean containsUri(android.net.Uri)
androidx.appcompat.view.menu.CascadingMenuPopup$3: CascadingMenuPopup$3(androidx.appcompat.view.menu.CascadingMenuPopup)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.swmansion.rnscreens.events.ScreenDismissedEvent$Companion: ScreenDismissedEvent$Companion()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinecap(android.view.View,int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.transition.TransitionValues: boolean equals(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationEnd(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: void onAnimationStart(android.animation.Animator)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType)
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher getDispatcher$okhttp()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
com.google.android.material.transformation.FabTransformationBehavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean hasAddedItem()
androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.uimanager.UIViewOperationQueue: long access$1700(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void onStartEnterTransition()
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
okhttp3.OkHttpClient$Builder: int getConnectTimeout$okhttp()
androidx.appcompat.app.AppCompatDelegateImpl: void onStart()
com.facebook.imagepipeline.listener.ForwardingRequestListener: void onRequestCancellation(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void requestDisallowInterceptTouchEvent(boolean)
com.horcrux.svg.EllipseView: void setRx(java.lang.String)
com.google.android.material.textfield.CutoutDrawable: void setCutout(android.graphics.RectF)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: RippleDrawableCompat$RippleDrawableCompatState(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: NativeAsyncSQLiteDBStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ListPopupWindow$3: void onNothingSelected(android.widget.AdapterView)
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.transition.TransitionValues: TransitionValues(android.view.View)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateState(int,int)
com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()
androidx.appcompat.app.ToolbarActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
okio.ForwardingSink: okio.Timeout timeout()
com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)
com.facebook.common.memory.PooledByteArrayBufferedInputStream: void finalize()
com.facebook.react.views.scroll.ReactScrollView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List take(java.lang.Iterable,int)
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void readChunkSize()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnNewResult(com.facebook.common.references.CloseableReference,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)
androidx.recyclerview.widget.RecyclerView$Recycler: void scrapView(android.view.View)
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.horcrux.svg.PatternView: android.graphics.RectF getViewBox()
androidx.fragment.app.FragmentManager: boolean checkForMenus()
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
okhttp3.Route: boolean equals(java.lang.Object)
com.facebook.react.modules.core.JavaTimerManager: void onHostPause()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
com.google.android.material.bottomappbar.BottomAppBar: void maybeAnimateModeChange(int)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object)
androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)
com.facebook.soloader.Api18TraceUtils: void endSection()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.android.material.chip.Chip: boolean hasCloseIcon()
androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
com.facebook.react.ReactInstanceManager: java.util.List getOrCreateViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStack$DrawingOp: ScreenStack$DrawingOp(com.swmansion.rnscreens.ScreenStack)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator naturalOrder()
com.facebook.common.statfs.StatFsHelper: com.facebook.common.statfs.StatFsHelper getInstance()
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
androidx.core.graphics.Insets: Insets(int,int,int,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: void onDateSet(android.widget.DatePicker,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.appcompat.widget.DropDownListView: void clickPressedItem(android.view.View,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
com.facebook.imagepipeline.image.EncodedImage: int getSize()
com.swmansion.rnscreens.ScreenFragment: void onViewAnimationEnd()
com.horcrux.svg.GlyphContext: void pushContext(boolean,com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
okhttp3.internal.platform.Jdk9Platform$Companion: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
androidx.appcompat.graphics.drawable.DrawableContainer$1: DrawableContainer$1(androidx.appcompat.graphics.drawable.DrawableContainer)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
com.facebook.yoga.YogaNodeJNIBase: java.lang.Object getData()
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer: java.lang.String getProducerName()
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipRule(android.view.View,int)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
com.swmansion.rnscreens.ScreenFragment: void onResume()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int)
com.google.android.material.shape.MaterialShapeDrawable: int getShadowOffsetX()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
okhttp3.Response: void close()
com.facebook.imagepipeline.producers.DelayProducer$1: DelayProducer$1(com.facebook.imagepipeline.producers.DelayProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart: ScalingUtils$ScaleTypeFitBottomStart()
com.facebook.datasource.AbstractDataSource$1: void run()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean hasRoundedBorders()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaDirection getLayoutDirection()
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
com.facebook.imageutils.WebpUtil: android.util.Pair getVP8Dimension(java.io.InputStream)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
okhttp3.internal.concurrent.TaskQueue: void cancelAll()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory()
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getText()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.view.DraweeHolder create(com.facebook.drawee.interfaces.DraweeHierarchy,android.content.Context)
androidx.appcompat.view.menu.StandardMenuPopup$2: StandardMenuPopup$2(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
okhttp3.Protocol$Companion: Protocol$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.horcrux.svg.TSpanView: void setupTextPath()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.ChildHelper$Bucket: void clear(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)
androidx.core.app.ActivityRecreator$2: void run()
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(com.facebook.react.views.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: ListPopupWindow$ListSelectorHider(androidx.appcompat.widget.ListPopupWindow)
okhttp3.Response: okhttp3.CacheControl cacheControl()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onScrollChanged(int,int,int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
androidx.transition.TransitionManager$MultiListener: void onViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()
androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int hashCode()
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabDiameter()
androidx.collection.MapCollections$KeySet: int size()
com.facebook.react.views.view.ReactViewGroup: boolean customDrawOrderDisabled()
com.facebook.imagepipeline.memory.Bucket: Bucket(int,int,int,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper: int getTouchTargetForView(android.view.View,float,float)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
okio.ByteString: java.lang.String getUtf8$okio()
androidx.appcompat.app.ToolbarActionBar: void dispatchMenuVisibilityChanged(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()
com.google.android.material.chip.ChipDrawable: void setChipIconSize(float)
com.facebook.imagepipeline.core.ImagePipelineFactory: ImagePipelineFactory(com.facebook.imagepipeline.core.ImagePipelineConfigInterface)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getOpacity()
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
com.facebook.drawee.drawable.RoundedDrawable: RoundedDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void cancelAnimations()
com.facebook.react.views.textinput.ReactEditText: void maybeSetText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable buildActualImageBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.ColorFilter)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: AppCompatDelegateImpl$AutoNightModeManager$1(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
com.facebook.imagepipeline.producers.SwallowResultProducer$1: void onNewResultImpl(java.lang.Object,int)
androidx.fragment.app.FragmentManager: void makeInactive(androidx.fragment.app.FragmentStateManager)
com.facebook.imagepipeline.core.DefaultExecutorSupplier: DefaultExecutorSupplier(int)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)
kotlin.collections.EmptyList: java.util.Iterator iterator()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.ScreenStack: void performDraw(com.swmansion.rnscreens.ScreenStack$DrawingOp)
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeMiterlimit(android.view.View,float)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: UIViewOperationQueue$ShowPopupMenuOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackViewManager$Companion: ScreenStackViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: PipelineDraweeControllerFactory()
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.common.internal.Supplier getNextSupplier()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
okio.internal.ByteStringKt: int codePointIndexToCharIndex(byte[],int)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildCount()
com.facebook.cache.disk.SettableCacheEvent: void reset()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String[] buildKeySelectionArgs(com.facebook.react.bridge.ReadableArray,int,int)
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
com.facebook.react.modules.network.ResponseUtil: void onDataSend(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
com.facebook.react.modules.network.CountingOutputStream: long getCount()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1: void onAnimationStart(android.view.animation.Animation)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getMoveDuration()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeMiterlimit(android.view.View,float)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setColors(int[])
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setEnabled(android.view.View,boolean)
okio.Buffer$outputStream$1: void write(byte[],int,int)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.ReactInstanceManager: void moveReactContextToCurrentLifecycleState()
com.google.android.material.datepicker.CalendarConstraints: CalendarConstraints(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.CalendarConstraints$1)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.recyclerview.widget.OrientationHelper$2: void offsetChildren(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
com.swmansion.rnscreens.ScreenContainer: void removeAllScreens()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.imagepipeline.decoder.ProgressiveJpegParser: void newScanOrImageEndFound(int)
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager get(java.lang.String)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
com.horcrux.svg.DefinitionView: DefinitionView(com.facebook.react.bridge.ReactContext)
androidx.core.os.CancellationSignal: CancellationSignal()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.views.drawer.ReactDrawerLayout: void openDrawer()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int forceInvalidateAfter(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.drawee.generic.RootDrawable: void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback)
com.facebook.common.file.FileTree: boolean deleteRecursively(java.io.File)
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType defaultValue()
com.facebook.imageutils.StreamProcessor: int readPackedInt(java.io.InputStream,int,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.modules.network.NetworkingModule$4: void doInBackgroundGuarded(java.lang.Void[])
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: HermesExecutorFactory(com.facebook.hermes.reactexecutor.RuntimeConfig)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.google.android.material.textfield.IndicatorViewController$1: void onAnimationEnd(android.animation.Animator)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setRequestId(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
okhttp3.internal.HostnamesKt: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
okio.internal.ByteStringKt: okio.ByteString commonSegmentDigest(okio.SegmentedByteString,java.lang.String)
okhttp3.internal.ws.WebSocketWriter: void close()
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.horcrux.svg.PropHelper: int toMatrixData(com.facebook.react.bridge.ReadableArray,float[],float)
com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.ScaleTypeDrawable getScaleTypeDrawableAtIndex(int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
okio.Buffer: okio.Buffer copy()
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMask(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp()
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popStart()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int,java.lang.Object[])
androidx.transition.ViewOverlayApi14$OverlayViewGroup: void remove(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
com.horcrux.svg.FontData: void setInheritedWeight(com.horcrux.svg.FontData)
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCacheMiss(com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
okhttp3.internal.cache.DiskLruCache: boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void setPrefetchVector(int,int)
okhttp3.Cookie$Companion: boolean domainMatch(java.lang.String,java.lang.String)
com.facebook.react.views.drawer.events.DrawerClosedEvent: short getCoalescingKey()
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipRule(android.view.View,int)
okio.RealBufferedSource: boolean isOpen()
com.facebook.common.internal.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.datepicker.MonthsPagerAdapter: java.lang.CharSequence getPageTitle(int)
com.facebook.common.references.DefaultCloseableReference: java.lang.Object clone()
com.horcrux.svg.LinearGradientView: void setY1(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.TextAttributeProps: int parseNumericFontWeight(java.lang.String)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManagerDelegate,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
com.swmansion.rnscreens.events.ScreenWillDisappearEvent: short getCoalescingKey()
com.facebook.soloader.ApkSoSource: byte[] getDepsBlock()
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
androidx.recyclerview.widget.ChildHelper: void hide(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: void release(java.lang.Object)
com.facebook.drawee.generic.WrappingUtils: void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams)
com.horcrux.svg.GlyphContext: double nextDeltaY()
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: void writeToParcel(android.os.Parcel,int)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
com.facebook.react.module.model.ReactModuleInfo: boolean isTurboModule()
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagForward()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,java.lang.String)
com.google.android.material.chip.Chip: boolean access$302(com.google.android.material.chip.Chip,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.drawee.drawable.ArrayDrawable: void getTransform(android.graphics.Matrix)
androidx.cardview.widget.RoundRectDrawable: void onBoundsChange(android.graphics.Rect)
androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
com.facebook.soloader.SysUtil: void mkdirOrThrow(java.io.File)
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: void doInBackgroundGuarded(java.lang.Void[])
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
com.facebook.cache.common.SimpleCacheKey: java.lang.String getUriString()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp()
androidx.fragment.app.Fragment: android.view.View requireView()
okio.RealBufferedSource: java.lang.String toString()
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: void execute()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
com.facebook.react.views.view.MeasureUtil: int getMeasureSpec(float,com.facebook.yoga.YogaMeasureMode)
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
com.google.android.material.color.MaterialColors: int layer(int,int,float)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.imagepipeline.decoder.DefaultImageDecoder$1: com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1: ScreenStackFragment$NotifyingCoordinatorLayout$mAnimationListener$1(com.swmansion.rnscreens.ScreenStackFragment$NotifyingCoordinatorLayout)
com.facebook.drawee.controller.ForwardingControllerListener: void onSubmit(java.lang.String,java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner createSpinner()
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void updateSourceImageRef(com.facebook.common.references.CloseableReference,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void invalidateSpanInfo()
androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
com.facebook.react.common.MapBuilder: java.util.HashMap newHashMap()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
androidx.fragment.app.Fragment: Fragment()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.swmansion.rnscreens.Screen: void onAnimationEnd()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.interfaces.DraweeController build()
com.google.android.material.chip.Chip$ChipTouchHelper: int getVirtualViewAt(float,float)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
com.facebook.react.animated.NativeAnimatedModule$15: NativeAnimatedModule$15(com.facebook.react.animated.NativeAnimatedModule,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: UIViewOperationQueue$LayoutUpdateFinishedOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setResponsible(android.view.View,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$7: AppCompatDelegateImpl$7(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillRule(android.view.View,int)
com.facebook.yoga.YogaNodeJNIBase: void setFlex(float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: AccessibilityInfoModule$ReactTouchExplorationStateChangeListener(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.google.android.material.chip.ChipDrawable: void setChipSurfaceColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.Rect getBounds()
androidx.recyclerview.widget.OrientationHelper$1: int getTotalSpace()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean hasDependencies(android.view.View)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.Timeout timeout()
com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okio.AsyncTimeout$Watchdog: void run()
com.google.android.material.chip.ChipDrawable: float getIconEndPadding()
okhttp3.OkHttpClient: int connectTimeoutMillis()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean getClosed()
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter: ScalingUtils$ScaleTypeFitCenter()
com.facebook.binaryresource.FileBinaryResource: com.facebook.binaryresource.FileBinaryResource create(java.io.File)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.recyclerview.widget.GapWorker$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView$3: SearchView$3(androidx.appcompat.widget.SearchView)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()
okhttp3.Request: java.lang.String toString()
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(android.view.View,java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: ListPopupWindow$PopupTouchInterceptor(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
kotlin.collections.ArrayAsCollection: boolean add(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.recyclerview.widget.SnapHelper$1: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.PropsAnimatedNode: void connectToView(int,com.facebook.react.bridge.UIManager)
androidx.transition.ChangeBounds$6: android.graphics.PointF get(android.view.View)
com.google.android.material.shape.MaterialShapeDrawable: void calculateStrokePath()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)
com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
androidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onIsIntermediateResultExpectedChanged()
com.facebook.react.CoreModulesPackage: com.facebook.react.ReactInstanceManager access$000(com.facebook.react.CoreModulesPackage)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
com.facebook.imagepipeline.memory.BitmapPoolBackend: int getSize(java.lang.Object)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
com.google.android.material.chip.ChipDrawable: void setCloseIconSizeResource(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)
androidx.recyclerview.widget.LayoutState: java.lang.String toString()
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
com.facebook.imagepipeline.producers.BaseConsumer: boolean statusHasFlag(int,int)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
androidx.transition.Transition: java.util.List getTargetNames()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
com.facebook.imagepipeline.core.ImagePipeline$8: boolean apply(java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
okhttp3.HttpUrl$Companion: void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopSmoothScroller()
okhttp3.internal.http.RealInterceptorChain: int getConnectTimeoutMillis$okhttp()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.debug.debugoverlay.model.DebugOverlayTag: DebugOverlayTag(java.lang.String,java.lang.String,int)
com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: PlatformBitmapFactory()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3: SwipeRefreshLayout$3(androidx.swiperefreshlayout.widget.SwipeRefreshLayout)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.String getContentDescription()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.react.animated.DecayAnimation: void runAnimationStep(long)
androidx.collection.ArrayMap: java.util.Collection values()
com.facebook.react.uimanager.events.Event: long getUnixTimestampMs()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
com.swmansion.rnscreens.ScreenContainer: void access$updateIfNeeded(com.swmansion.rnscreens.ScreenContainer)
com.th3rdwave.safeareacontext.SafeAreaProviderManager$1: void onInsetsChange(com.th3rdwave.safeareacontext.SafeAreaProvider,com.th3rdwave.safeareacontext.EdgeInsets,com.th3rdwave.safeareacontext.Rect)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.ReactFragment: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okhttp3.Cache$CacheResponseBody: long contentLength()
androidx.transition.WindowIdApi14: boolean equals(java.lang.Object)
androidx.appcompat.widget.TintInfo: void clear()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()
androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.collection.MapCollections$EntrySet: int hashCode()
androidx.transition.FragmentTransitionSupport$2: void onTransitionStart(androidx.transition.Transition)
com.google.android.material.chip.ChipDrawable: boolean showsCloseIcon()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
com.facebook.soloader.SoLoader: java.io.File unpackLibraryBySoName(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)
androidx.appcompat.app.AppCompatDelegateImpl$6: AppCompatDelegateImpl$6(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: AppCompatTextViewAutoSizeHelper(android.widget.TextView)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
com.facebook.react.views.text.TextAttributeProps: TextAttributeProps()
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable)
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: void run()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip$ChipTouchHelper: void getVisibleVirtualViews(java.util.List)
com.google.android.material.button.MaterialButtonHelper: boolean isCheckable()
com.facebook.react.views.textinput.ReactEditText: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.yoga.YogaValue: int hashCode()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine(int)
okhttp3.internal.concurrent.TaskRunner: void beforeRun(okhttp3.internal.concurrent.Task)
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.drawee.drawable.ForwardingDrawable: void setDither(boolean)
bolts.TaskCompletionSource: boolean trySetResult(java.lang.Object)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
com.facebook.react.TurboReactPackage: TurboReactPackage()
com.facebook.react.uimanager.ViewManagersPropertyCache: void clear()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
com.facebook.react.modules.core.JavaTimerManager: void clearFrameCallback()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.google.android.material.resources.MaterialAttributes: boolean resolveBoolean(android.content.Context,int,boolean)
androidx.transition.Transition: void setPathMotion(androidx.transition.PathMotion)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isPartiallyScrolledInView(android.view.View)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRectheight(android.view.View,java.lang.String)
com.google.android.material.datepicker.MaterialDatePicker: void onStart()
androidx.customview.widget.ExploreByTouchHelper$1: ExploreByTouchHelper$1()
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
com.facebook.drawee.drawable.ArrayDrawable: void setColorFilter(android.graphics.ColorFilter)
kotlin.jvm.internal.Intrinsics: int compare(int,int)
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.drawee.generic.GenericDraweeHierarchy: void setRetry(java.lang.Throwable)
androidx.appcompat.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: EmptyJpegGenerator(com.facebook.common.memory.PooledByteBufferFactory)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
com.facebook.soloader.UnpackingSoSource$Unpacker: UnpackingSoSource$Unpacker()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
kotlin.text.Regex: java.lang.String toString()
com.google.android.material.button.MaterialButton: void updateIcon(boolean)
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.horcrux.svg.TextPathView: void pushGlyphContext()
com.facebook.react.MemoryPressureRouter: void addMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)
com.google.android.material.appbar.HeaderBehavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
com.facebook.imagepipeline.common.RotationOptions: boolean useImageMetadata()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.datasource.AbstractDataSource$1: AbstractDataSource$1(com.facebook.datasource.AbstractDataSource,boolean,com.facebook.datasource.DataSubscriber,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: java.lang.String toString()
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode,int,int)
androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.bridge.UIManager: void preInitializeViewManagers(java.util.List)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
com.facebook.drawee.controller.AbstractDraweeController: boolean shouldHandleGesture()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.horcrux.svg.SvgView: void drawChildren(android.graphics.Canvas)
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
com.google.android.material.chip.Chip$1: void onFontRetrieved(android.graphics.Typeface,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.image.ReactImageView: ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
kotlin.collections.EmptyList: int getSize()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.facebook.imagepipeline.producers.ThrottlingProducer: ThrottlingProducer(int,java.util.concurrent.Executor,com.facebook.imagepipeline.producers.Producer)
okio.Timeout$Companion$NONE$1: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,java.lang.String)
com.google.android.material.datepicker.Month: long getStableId()
com.facebook.fresco.ui.common.ForwardingControllerListener2: void removeListener(com.facebook.fresco.ui.common.ControllerListener2)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setResponsible(android.view.View,boolean)
com.swmansion.rnscreens.ScreenFragment$Companion: ScreenFragment$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeMiterlimit(android.view.View,float)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.app.AppCompatDelegateImpl$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
androidx.fragment.app.FragmentManager: void doPendingDeferredStart()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackground(com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
androidx.fragment.app.Fragment: void performPause()
com.facebook.react.DebugCorePackage$1: java.util.Map getReactModuleInfos()
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: DropdownMenuEndIconDelegate$1(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void onLayout(boolean,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.animated.DivisionAnimatedNode: void update()
com.google.android.material.card.MaterialCardView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipPath(android.view.View,java.lang.String)
com.google.android.material.animation.MotionTiming: java.lang.String toString()
com.facebook.drawee.drawable.RoundedColorDrawable: int getAlpha()
okhttp3.HttpUrl: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String[] getStringArray(int)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: java.lang.Object get()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: boolean onEdgeLock(int)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
okhttp3.internal.http2.Http2Stream$FramingSource: void setFinished$okhttp(boolean)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$16: NativeAnimatedModule$16(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.swmansion.rnscreens.Screen: void onAnimationStart()
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
androidx.core.os.TraceCompat: void endSection()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: void onChange(boolean,android.net.Uri)
okhttp3.internal.Util: java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator)
com.google.android.material.animation.MotionTiming: long getDelay()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
okhttp3.internal.platform.android.CloseGuard: CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: FloatingActionButton$TransformationCallbackWrapper(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setCradleVerticalOffset(float)
com.google.android.material.datepicker.CalendarConstraints$1: com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMask(android.view.View,java.lang.String)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
kotlin.collections.EmptyMap: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void jumpDrawableToCurrentState()
com.facebook.react.uimanager.UIImplementation: void onHostDestroy()
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
androidx.transition.AnimatorUtils: void pause(android.animation.Animator)
com.google.android.material.resources.MaterialResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
androidx.recyclerview.widget.SnapHelper: void setupCallbacks()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.common.memory.NoOpMemoryTrimmableRegistry: NoOpMemoryTrimmableRegistry()
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()
com.facebook.drawee.view.DraweeHolder: void onDraw()
com.facebook.cache.disk.DiskStorageCache: com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey)
com.horcrux.svg.SvgView: void setTintColor(java.lang.Integer)
kotlin.collections.EmptyMap: int size()
okhttp3.internal.http2.Http2Connection: long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.facebook.imagepipeline.listener.BaseRequestListener: void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map)
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
androidx.transition.Transition: android.animation.TimeInterpolator getInterpolator()
androidx.cursoradapter.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
okhttp3.internal.connection.RealConnection: void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException)
com.google.android.material.shape.MaterialShapeDrawable: void setStrokeWidth(float)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
okhttp3.internal.http2.Http2Stream: long getWriteBytesTotal()
com.swmansion.rnscreens.ScreenStackFragment: void notifyViewAppearTransitionEnd()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.imagepipeline.cache.LruCountingMemoryCache: boolean contains(com.facebook.common.internal.Predicate)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.imagepipeline.producers.DataFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.ReactInstanceManager: void clearReactRoot(com.facebook.react.uimanager.ReactRoot)
com.google.android.material.chip.ChipDrawable: void setTextEndPaddingResource(int)
com.facebook.react.views.scroll.VelocityHelper: VelocityHelper()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
kotlin.comparisons.NaturalOrderComparator: java.util.Comparator reversed()
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener: boolean onPreDraw()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.modules.network.NetworkingModule$4: NetworkingModule$4(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.bridge.ReactContext,int)
com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String getEventName()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidth(float)
okio.RealBufferedSource$inputStream$1: void close()
okhttp3.internal.Util: java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object)
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
okhttp3.CertificatePinner: int hashCode()
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.EncodedProbeProducer newEncodedProbeProducer(com.facebook.imagepipeline.producers.Producer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.facebook.drawee.drawable.ScaleTypeDrawable: void onBoundsChange(android.graphics.Rect)
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.horcrux.svg.TextView: com.horcrux.svg.TextView getTextContainer()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: ReactViewBackgroundDrawable$BorderStyle(java.lang.String,int)
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newLocalTransformationsSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[])
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder newBuilder()
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onDiskCacheGetFail(com.facebook.cache.common.CacheKey)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2: void onCancellationRequested()
com.google.android.material.datepicker.MonthAdapter: boolean isLastInRow(int)
com.facebook.react.views.text.ReactTextView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAndDisposeAllChildren()
com.swmansion.rnscreens.Screen: void setFragment(com.swmansion.rnscreens.ScreenFragment)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.google.android.material.snackbar.SnackbarContentLayout: void onMeasure(int,int)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent obtain()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: java.lang.String toString()
com.horcrux.svg.UseView: void setHref(java.lang.String)
com.google.android.material.textfield.TextInputLayout$1: TextInputLayout$1(com.google.android.material.textfield.TextInputLayout)
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLAllowed(android.content.Context)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(android.view.View,float)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.modules.blob.BlobCollector: void access$000(java.lang.Object,long)
com.facebook.react.modules.network.ProgressRequestBody: ProgressRequestBody(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)
com.swmansion.rnscreens.events.ScreenAppearEvent: short getCoalescingKey()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)
com.google.android.material.transformation.FabTransformationBehavior: void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
androidx.transition.ViewOverlayApi14$OverlayViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)
com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)
com.horcrux.svg.DefsView: void saveDefinition()
androidx.transition.Transition: void capturePropagationValues(androidx.transition.TransitionValues)
com.facebook.react.views.scroll.ReactScrollViewHelper: int getDefaultScrollAnimationDuration(android.content.Context)
androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.transition.ViewGroupUtils: androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup)
com.facebook.react.modules.storage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Object[])
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
okio.InflaterSource: boolean refill()
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.drawee.drawable.DrawableUtils: void setCallbacks(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable$Callback,com.facebook.drawee.drawable.TransformCallback)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
okhttp3.Cache$RealCacheRequest: boolean getDone()
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.cache.disk.SettableCacheEvent: void recycle()
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: ImagePipelineConfig$DefaultImageRequestConfig()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void onDataSourceNewResult(int,com.facebook.datasource.DataSource)
androidx.collection.ArraySet$1: void colClear()
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
okio.Buffer$UnsafeCursor: void close()
com.facebook.common.util.UriUtil: boolean isLocalFileUri(android.net.Uri)
com.google.android.material.bottomappbar.BottomAppBar$4: void onAnimationStart(android.animation.Animator)
com.google.android.material.internal.ThemeEnforcement: boolean isTheme(android.content.Context,int[])
okhttp3.internal.connection.ExchangeFinder: boolean sameHostAndPort(okhttp3.HttpUrl)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: DropDownListView$GateKeeperDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.connection.ExchangeFinder: boolean retryAfterFailure()
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.common.references.CloseableReference getResult()
okhttp3.Handshake$Companion$handshake$1: java.util.List invoke()
com.facebook.imagepipeline.memory.AshmemMemoryChunk: boolean isClosed()
com.facebook.common.disk.NoOpDiskTrimmableRegistry: NoOpDiskTrimmableRegistry()
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
com.google.android.material.shape.ShapePath: void applyToPath(android.graphics.Matrix,android.graphics.Path)
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: BucketMap$LinkedEntry(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,com.facebook.imagepipeline.memory.BucketMap$1)
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
com.horcrux.svg.TextPathView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.yoga.YogaNodeJNIBase: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.ReactActivity: void onCreate(android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
androidx.appcompat.widget.AbsActionBarView: void access$001(androidx.appcompat.widget.AbsActionBarView,int)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
com.google.android.material.textfield.TextInputLayout: boolean isSingleLineFilledTextField()
bolts.Task: java.lang.Exception getError()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: UIManagerModule$MemoryTrimCallback(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context)
com.google.android.material.snackbar.SnackbarManager: void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback)
com.facebook.imageformat.DefaultImageFormats: boolean isStaticWebpFormat(com.facebook.imageformat.ImageFormat)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.concurrent.CopyOnWriteArraySet access$100(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)
com.facebook.drawee.controller.AbstractDraweeController: void onDetach()
androidx.recyclerview.widget.GapWorker: void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)
com.facebook.react.modules.core.ChoreographerCompat: void choreographerRemoveFrameCallback(android.view.Choreographer$FrameCallback)
androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)
com.facebook.react.uimanager.DisplayMetricsHolder: void setWindowDisplayMetrics(android.util.DisplayMetrics)
com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket newBucket(int)
okhttp3.internal.ws.MessageInflater: void inflate(okio.Buffer)
com.facebook.react.modules.network.ProgressResponseBody$1: ProgressResponseBody$1(com.facebook.react.modules.network.ProgressResponseBody,okio.Source)
androidx.collection.SimpleArrayMap: SimpleArrayMap(androidx.collection.SimpleArrayMap)
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
com.facebook.imagepipeline.platform.OreoDecoder: OreoDecoder(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)
com.facebook.react.ReactNativeHost: com.facebook.react.uimanager.UIImplementationProvider getUIImplementationProvider()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean isValid()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.transition.Transition: void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.widget.ListPopupWindow$3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.react.ReactRootView: void dispatchDraw(android.graphics.Canvas)
okio.Buffer: byte[] readByteArray(long)
com.google.android.material.internal.NavigationMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.imagepipeline.producers.PostprocessorProducer: PostprocessorProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,java.util.concurrent.Executor)
com.facebook.react.modules.core.JavaTimerManager: void maybeSetChoreographerIdleCallback()
okio.Timeout: long deadlineNanoTime()
kotlin.collections.EmptySet: boolean isEmpty()
com.facebook.react.uimanager.events.Event: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.datepicker.YearGridAdapter: int getItemCount()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getDecodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
com.facebook.cache.common.NoOpCacheEventListener: com.facebook.cache.common.NoOpCacheEventListener getInstance()
com.facebook.yoga.YogaUnit: YogaUnit(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: AccessibilityNodeInfoCompat$RangeInfoCompat(java.lang.Object)
okio.ByteString: byte getByte(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.facebook.react.modules.storage.ReactDatabaseSupplier: boolean deleteDatabase()
com.google.android.material.resources.TextAppearance: void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback)
com.facebook.react.modules.network.ForwardingCookieHandler: void access$200(com.facebook.react.modules.network.ForwardingCookieHandler,java.lang.Runnable)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onDiskCacheMiss(com.facebook.cache.common.CacheKey)
com.google.android.material.shape.MaterialShapeDrawable: float getElevation()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.facebook.imagepipeline.listener.BaseRequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoder access$1200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)
com.google.android.material.math.MathUtils: float max(float,float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getDataFetchSequence()
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: void startScroll(int,int,int,int,int)
com.google.android.material.bottomappbar.BottomAppBar: void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: ReactDrawerLayoutManager$DrawerEventEmitter(androidx.drawerlayout.widget.DrawerLayout,com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.rnscreens.ScreenFragment: void dispatchOnDisappear()
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getAuthenticator$okhttp()
com.horcrux.svg.SvgViewModule: java.lang.String getName()
com.facebook.hermes.reactexecutor.HermesExecutor: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void setAlign(android.view.View,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)
com.facebook.drawee.generic.RoundingParams: float getPadding()
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
com.google.android.material.internal.TextDrawableHelper$1: void onFontRetrievalFailed(int)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
com.facebook.imagepipeline.image.CloseableImage: void setImageExtras(java.util.Map)
com.zoontek.rnbootsplash.RNBootSplashModule$3$1: RNBootSplashModule$3$1(com.zoontek.rnbootsplash.RNBootSplashModule$3,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.FontData$AbsoluteFontWeight: int bolder(int)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setImageSize(int)
com.facebook.imagepipeline.image.EncodedImage: void internalParseMetaData()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: ReactSwipeRefreshLayout(com.facebook.react.bridge.ReactContext)
com.facebook.drawee.drawable.ForwardingDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.common.Priority getPriority()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureStarted(android.view.View,android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setAlpha(int)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6: void onFocusChange(android.view.View,boolean)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void run()
androidx.transition.PathProperty: void set(java.lang.Object,java.lang.Float)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()
com.facebook.drawee.drawable.ForwardingDrawable: void setFilterBitmap(boolean)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.google.android.material.bottomappbar.BottomAppBar$7: void onAnimationEnd(android.animation.Animator)
okhttp3.Cache$RealCacheRequest: void setDone(boolean)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.cardview.widget.CardViewApi17Impl: CardViewApi17Impl()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.facebook.drawee.drawable.FadeDrawable: void setAlpha(int)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode()
com.facebook.cache.disk.DynamicDefaultDiskStorage$State: DynamicDefaultDiskStorage$State(java.io.File,com.facebook.cache.disk.DiskStorage)
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)
com.facebook.common.logging.FLogDefaultLoggingDelegate: FLogDefaultLoggingDelegate()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontSize(android.view.View,java.lang.String)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence formatUrl(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManagerBuilder builder()
com.facebook.react.views.text.TextAttributeProps: float getEffectiveLineHeight()
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
com.google.android.material.textfield.TextInputLayout: boolean canDrawOutlineStroke()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.IconCompat: int getResId()
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getImageTranscoderWithType(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1: SmoothCalendarLayoutManager$1(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map,java.util.Map,java.util.Map,java.util.Map)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void post()
okio.OutputStreamSink: void flush()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY: java.lang.String toString()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: ReactImageDownloadListener$EmptyDrawable()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.facebook.react.devsupport.LogBoxModule: android.view.View access$000(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: DrawerStateChangedEvent(int,int,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SearchView$10: void afterTextChanged(android.text.Editable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.google.android.material.chip.Chip$ChipTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
com.facebook.drawee.drawable.DrawableProperties: DrawableProperties()
androidx.recyclerview.widget.OrientationHelper$1: int getEndPadding()
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager access$700(com.facebook.react.ReactInstanceManager)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode access$600(com.facebook.react.views.image.ReactImageView)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo)
androidx.core.util.LogWriter: void write(char[],int,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
com.horcrux.svg.PathParser: void line(float,float)
com.facebook.cache.disk.DefaultDiskStorage$FileInfo: DefaultDiskStorage$FileInfo(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: ReactScrollView(com.facebook.react.bridge.ReactContext,com.facebook.react.views.scroll.FpsListener)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: int getImageOrigin()
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy: NativeMemoryCacheTrimStrategy()
com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
com.google.android.material.shape.MaterialShapeDrawable: android.graphics.drawable.Drawable mutate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.horcrux.svg.LinearGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.datasource.FirstAvailableDataSourceSupplier: com.facebook.datasource.DataSource get()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
com.facebook.drawee.controller.ForwardingControllerListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)
com.facebook.datasource.AbstractDataSource: boolean hasMultipleResults()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean didDoubleTapR(int,android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.horcrux.svg.VirtualViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.MemoryPressureRouter: MemoryPressureRouter(android.content.Context)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: LayoutCreateAnimation()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.facebook.imageutils.TiffUtil: int moveToTiffEntryWithTag(java.io.InputStream,int,boolean,int)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
com.google.android.material.animation.DrawableAlphaProperty: void set(android.graphics.drawable.Drawable,java.lang.Integer)
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setArrowScale(float)
com.google.android.material.textfield.TextInputLayout: void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
com.facebook.imagepipeline.memory.FlexByteArrayPool$1: void release(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.uimanager.ReactShadowNodeImpl: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
com.facebook.imageutils.TiffUtil: int getAutoRotateAngleFromOrientation(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.drawee.drawable.RoundedCornersDrawable: RoundedCornersDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Hpack: Hpack()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
kotlin.collections.IntIterator: java.lang.Object next()
com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.concurrent.TaskQueue: java.util.List getFutureTasks$okhttp()
com.google.android.material.shape.ShapePath$PathArcOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
androidx.customview.widget.ExploreByTouchHelper: boolean isVisibleToUser(android.graphics.Rect)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
androidx.transition.Transition: java.lang.String[] getTransitionProperties()
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumJSFrames()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setResponsible(android.view.View,boolean)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
okio.Buffer: okio.ByteString readByteString()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
okio.RealBufferedSource: void skip(long)
androidx.cardview.widget.CardViewBaseImpl: androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate)
com.th3rdwave.safeareacontext.SerializationUtils: java.util.Map rectToJavaMap(com.th3rdwave.safeareacontext.Rect)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
com.facebook.imagepipeline.producers.LocalAssetFetchProducer: int getLength(com.facebook.imagepipeline.request.ImageRequest)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.google.android.material.chip.Chip: com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(android.graphics.Typeface)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabDiameter(float)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)
androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine parse(java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton access$100(com.google.android.material.textfield.TextInputLayout)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean isBottomSheet(android.view.View)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.imagepipeline.image.ImmutableQualityInfo: boolean isOfFullQuality()
com.google.android.material.appbar.AppBarLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[])
com.facebook.yoga.YogaMeasureOutput: long make(float,float)
com.swmansion.rnscreens.ScreenStack: void performUpdate$lambda-6$lambda-4(com.swmansion.rnscreens.ScreenStackFragment)
androidx.transition.ChangeBounds: void captureEndValues(androidx.transition.TransitionValues)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDashoffset(android.view.View,float)
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
kotlin.collections.AbstractList$SubList: java.lang.Object get(int)
com.facebook.react.modules.permissions.PermissionsModule$1: PermissionsModule$1(com.facebook.react.modules.permissions.PermissionsModule,com.facebook.react.bridge.Promise,java.lang.String)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
androidx.fragment.app.FragmentController: boolean execPendingActions()
com.facebook.react.uimanager.events.EventDispatcherImpl: void access$1400(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: boolean performAction(int,int,android.os.Bundle)
com.facebook.datasource.IncreasingQualityDataSourceSupplier: java.util.List access$100(com.facebook.datasource.IncreasingQualityDataSourceSupplier)
okhttp3.internal.http2.Http2Stream: long getReadBytesAcknowledged()
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
okio.SegmentPool: okio.Segment take()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: void afterTextChanged(android.text.Editable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onViewHierarchyUpdateEnqueued()
androidx.appcompat.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean beginBatchEdit()
okhttp3.MultipartBody$Companion: MultipartBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.EllipseView: void setCx(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.events.Event: short getCoalescingKey()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase()
com.facebook.cache.disk.DiskStorageCache: boolean maybeUpdateFileCacheSize()
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4: void onClick(android.view.View)
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.AppCompatSpinner$1: AppCompatSpinner$1(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String getText()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManager resolveViewManager(java.lang.String)
com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer newLocalVideoThumbnailProducer()
com.facebook.react.ReactInstanceManager: void initializeSoLoaderIfNecessary(android.content.Context)
com.facebook.imagepipeline.cache.CountingLruMap: int getCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.String toString()
androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int,int)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onDetachedFromWindow()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.swmansion.rnscreens.ScreenStack$Companion: boolean needsDrawReordering(com.swmansion.rnscreens.ScreenStackFragment)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
androidx.fragment.app.FragmentManager: void attachFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.DialogFragment$3: DialogFragment$3(androidx.fragment.app.DialogFragment)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
okio.Buffer: okio.ByteString snapshot(int)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void onBitmapCacheHit(com.facebook.cache.common.CacheKey)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisAuto()
com.facebook.react.uimanager.OnLayoutEvent: void onDispose()
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
okio.Segment: void compact()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.TouchEvent: short getCoalescingKey()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
com.google.android.material.internal.CheckableImageButton$SavedState$1: CheckableImageButton$SavedState$1()
com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onCancellation()
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: void execute()
com.google.android.material.datepicker.DateValidatorPointForward: void writeToParcel(android.os.Parcel,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void onFocusChanged(android.view.View)
com.facebook.react.views.textinput.ReactTextInputEvent: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.google.android.material.internal.CollapsingTextHelper: void setExpandedBounds(android.graphics.Rect)
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.content.res.Resources getResources()
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetricsIfNotInitialized(android.content.Context)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.facebook.react.modules.blob.BlobModule$4: BlobModule$4(com.facebook.react.modules.blob.BlobModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.imagepipeline.instrumentation.FrescoInstrumenter: java.lang.Object onBeginWork(java.lang.Object,java.lang.String)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void resolveMethod(android.content.Context,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[])
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String getSelected()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
com.horcrux.svg.LinearGradientView: void setX1(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.listener.RequestListener getRequestListener()
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(android.view.View,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
com.swmansion.rnscreens.ScreenContainer: boolean isNested()
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactActivityDelegate: void onPause()
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.horcrux.svg.Brush: void setGradientTransform(android.graphics.Matrix)
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleY(double[],double)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.transition.ChangeBounds$3: java.lang.Object get(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void resetInternal()
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
androidx.fragment.app.FragmentContainerView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
androidx.appcompat.widget.ActionBarContextView$1: void onClick(android.view.View)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.jni.HybridClassBase: HybridClassBase()
androidx.appcompat.view.menu.CascadingMenuPopup$1: CascadingMenuPopup$1(androidx.appcompat.view.menu.CascadingMenuPopup)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.cardview.widget.RoundRectDrawable: void updateBounds(android.graphics.Rect)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
com.facebook.react.ReactInstanceManager: com.facebook.react.uimanager.ViewManager createViewManager(java.lang.String)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
okhttp3.MediaType: java.lang.String parameter(java.lang.String)
com.swmansion.rnscreens.ScreenWindowTraits$setTranslucent$1: android.view.WindowInsets runGuarded$lambda-0(android.view.View,android.view.WindowInsets)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.graphics.drawable.Drawable getResourceDrawable(android.content.Context,java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: RecyclerView$LayoutManager$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion()
androidx.core.provider.FontRequest: java.lang.String getQuery()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: void setAlpha(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$200(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.drawee.gestures.GestureDetector: boolean isCapturingGesture()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrollPerfLoggingEnabled()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: int getScrollRange(android.view.View)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setAnimating(boolean)
okhttp3.internal.ws.WebSocketReader: void close()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: ChipGroup$PassThroughHierarchyChangeListener(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1)
com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicWidth()
com.facebook.imagepipeline.memory.PoolConfig$Builder: boolean access$1100(com.facebook.imagepipeline.memory.PoolConfig$Builder)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setProgress(double)
com.facebook.common.references.CloseableReference: CloseableReference(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)
com.facebook.imagepipeline.producers.ThreadHandoffProducer: ThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.TextView: double getSubtreeTextChunksTotalAdvance(android.graphics.Paint)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2: int getStartAfterPadding()
com.facebook.systrace.Systrace: void beginSection(long,java.lang.String)
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate)
com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()
com.facebook.imagepipeline.cache.LruCountingMemoryCache$1: int getSizeInBytes(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int getRetries()
com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isDiskCacheProbingEnabled()
com.facebook.react.modules.storage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.imagepipeline.common.ResizeOptions: ResizeOptions(int,int)
com.google.android.material.animation.MatrixEvaluator: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
androidx.fragment.app.Fragment: int getStateAfterAnimating()
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipelineFactory getInstance()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(android.view.View,java.lang.String)
okhttp3.Request: okhttp3.CacheControl cacheControl()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
com.facebook.drawee.view.DraweeView: void onDetach()
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,java.lang.Boolean)
com.google.android.material.transformation.ExpandableBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody getEmptyBody(java.lang.String)
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: boolean isClosed()
com.facebook.drawee.drawable.ArrayDrawable: void getRootBounds(android.graphics.RectF)
com.facebook.react.views.picker.ReactPicker: void setStagedPrimaryTextColor(java.lang.Integer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: MultiplexProducer$Multiplexer(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object)
androidx.fragment.app.Fragment: void onDetach()
com.facebook.common.logging.FLogDefaultLoggingDelegate: void e(java.lang.String,java.lang.String,java.lang.Throwable)
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
androidx.collection.SparseArrayCompat: void gc()
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.zoontek.rnbootsplash.RNBootSplashModule$3$1: void onAnimationEnd(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.widget.Toolbar$1: boolean onMenuItemClick(android.view.MenuItem)
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootNodeCount()
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1: void run()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers)
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
okhttp3.internal.concurrent.TaskQueue$execute$1: TaskQueue$execute$1(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.fragment.app.FragmentManager: void dispatchStart()
okio.internal.HashFunctionKt$newHashFunction$1: byte[] digest()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)
com.facebook.drawee.drawable.RoundedCornersDrawable: void setPadding(float)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.common.time.SystemClock: long now()
com.facebook.react.uimanager.NativeViewHierarchyManager$1: NativeViewHierarchyManager$1(com.facebook.react.uimanager.NativeViewHierarchyManager,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup,android.view.View,java.util.Set,int)
com.horcrux.svg.VirtualView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
okhttp3.Route: java.lang.String toString()
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: android.graphics.Matrix getTransformationMatrix(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.cache.disk.DynamicDefaultDiskStorage: DynamicDefaultDiskStorage(int,com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheErrorLogger)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.RealCall: java.lang.String toLoggableString()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternheight(android.view.View,java.lang.String)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.cache.disk.DefaultDiskStorage: java.lang.Class access$900()
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.WritableMap inlineViewJson(int,int,int,int,int,int)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: CipherSuite$Companion$ORDER_BY_NAME$1()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
com.facebook.react.uimanager.TransformHelper: double convertToRadians(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2: LocalExifThumbnailProducer$2(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)
androidx.fragment.app.FragmentManager: void cancelExitAnimation(androidx.fragment.app.Fragment)
com.facebook.jni.HybridData: boolean isValid()
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.google.android.material.datepicker.Month: java.lang.String getLongName()
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: java.lang.String toString()
com.facebook.common.file.FileUtils$CreateDirectoryException: FileUtils$CreateDirectoryException(java.lang.String)
com.facebook.imagepipeline.producers.NetworkFetchProducer: void onCancellation(com.facebook.imagepipeline.producers.FetchState)
com.horcrux.svg.GroupView: java.lang.Object requireNonNull(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier: java.util.concurrent.ScheduledExecutorService get()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.common.file.FileUtils$RenameException: FileUtils$RenameException(java.lang.String,java.lang.Throwable)
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: MemoryPooledByteBuffer(com.facebook.common.references.CloseableReference,int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.cache.disk.DiskStorageCache: boolean access$202(com.facebook.cache.disk.DiskStorageCache,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
okio.internal.BufferKt: byte[] getHEX_DIGIT_BYTES()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.shape.ShapePath$PathLineOperation: ShapePath$PathLineOperation()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIViewOperationQueue: long access$1802(com.facebook.react.uimanager.UIViewOperationQueue,long)
com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setOverlayColor(int)
com.facebook.imagepipeline.memory.DummyBitmapPool: void release(android.graphics.Bitmap)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean setRunningIfDirtyAndNotRunning()
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void startCreatingModule()
com.facebook.react.viewmanagers.RNSVGSymbolManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: void onGlobalLayout()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)
androidx.core.view.WindowInsetsCompat$Type: int indexOf(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_MILLIS$cp()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
com.facebook.react.uimanager.TransformHelper$1: double[] initialValue()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)
com.facebook.react.module.model.ReactModuleInfo: java.lang.String className()
okhttp3.Headers$Companion: void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
com.facebook.cache.disk.DiskStorageCache$CacheStats: void set(long,long)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.facebook.drawee.view.DraweeView: DraweeView(android.content.Context)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7: void applyTransformation(float,android.view.animation.Transformation)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentStart()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.listener.RequestListener getRequestListener()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
com.facebook.cache.common.NoOpCacheEventListener: void onMiss(com.facebook.cache.common.CacheEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void onNewResultImpl(java.lang.Object,int)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.th3rdwave.safeareacontext.InsetsChangeEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater$okhttp(int,long)
com.google.android.material.textfield.TextInputLayout: void expandHint(boolean)
okio.Buffer: java.lang.String readUtf8LineStrict()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
com.facebook.imagepipeline.core.PriorityThreadFactory$1: PriorityThreadFactory$1(com.facebook.imagepipeline.core.PriorityThreadFactory,java.lang.Runnable)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: FloatingActionButtonImpl$ShadowAnimatorImpl(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitX: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
okhttp3.EventListener: void callStart(okhttp3.Call)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.horcrux.svg.SVGLength: java.util.ArrayList arrayFrom(com.facebook.react.bridge.Dynamic)
androidx.collection.ArraySet: java.lang.Object removeAt(int)
com.google.android.material.datepicker.Month$1: com.google.android.material.datepicker.Month[] newArray(int)
com.facebook.react.views.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
com.facebook.soloader.ExtractFromZipSoSource$ZipDso: java.lang.String makePseudoHash(java.util.zip.ZipEntry)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
androidx.core.content.res.ComplexColorCompat: void setColor(int)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.String cmdToString()
com.facebook.react.animated.NativeAnimatedModule$22: NativeAnimatedModule$22(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.Callback)
com.facebook.drawee.controller.BaseControllerListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: long runOnce()
okhttp3.internal.ws.MessageInflater: void close()
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1(java.lang.Iterable)
okhttp3.internal.connection.RealConnection: void noNewExchanges$okhttp()
com.google.android.material.chip.Chip: void applyChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: InterpolatorType(java.lang.String,int)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
com.facebook.react.modules.network.ForwardingCookieHandler$2: void doInBackgroundGuarded(java.lang.Object[])
androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler)
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: boolean access$300(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,float)
com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: void onImageLoaded(java.lang.String,int,boolean,java.lang.String)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
okio.RealBufferedSink: okio.BufferedSink writeByte(int)
com.horcrux.svg.ForeignObjectView: void dispatchDraw(android.graphics.Canvas)
com.facebook.imagepipeline.producers.FetchState: FetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.textfield.IndicatorViewController: int getHelperTextViewCurrentTextColor()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void init(com.facebook.common.internal.Supplier)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void updateSubmitButton(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.modules.image.ImageLoaderModule$2: void onFailureImpl(com.facebook.datasource.DataSource)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void onMeasure(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
com.facebook.imagepipeline.platform.OreoDecoder: int getBitmapSize(int,int,android.graphics.BitmapFactory$Options)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: void initMeasureFunction()
com.facebook.cache.disk.DynamicDefaultDiskStorage: long remove(com.facebook.cache.disk.DiskStorage$Entry)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
androidx.recyclerview.widget.FastScroller: int[] getHorizontalRange()
com.google.android.material.datepicker.DaysOfWeekAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
androidx.appcompat.app.AppCompatDelegateImpl$5: AppCompatDelegateImpl$5(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.recyclerview.widget.GridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
bolts.TaskCompletionSource: boolean trySetError(java.lang.Exception)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderWidth(int,float)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
com.facebook.imagepipeline.producers.BaseProducerContext: void callOnPriorityChanged(java.util.List)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getSmallImageDiskCacheConfig()
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
androidx.appcompat.view.SupportMenuInflater$MenuState: void addItem()
com.facebook.react.CoreModulesPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule$2: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatTextHelper: void onLayout(boolean,int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)
androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okio.Options$Companion: Options$Companion()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.views.picker.ReactPickerManager: void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutX()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)
androidx.recyclerview.widget.AdapterHelper: void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: UIViewOperationQueue$RemoveRootViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.facebook.react.uimanager.MatrixMathHelper: boolean isZero(double)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void onGlobalLayout()
com.horcrux.svg.TextView: void setBaselineShift(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.uimanager.events.EventDispatcherImpl)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void executeWithExceptions()
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillOpacity(android.view.View,float)
com.facebook.react.views.image.ReactImageView: void updateCallerContext(java.lang.Object)
com.google.android.material.resources.TextAppearance: TextAppearance(android.content.Context,int)
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
com.google.android.material.shape.ShapeAppearancePathProvider: void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.google.android.material.chip.ChipDrawable: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.app.AlertController: android.widget.ListView getListView()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int convertFocusDirectionToLayoutDirection(int)
androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
com.google.android.material.textfield.TextInputLayout: void updateBoxUnderlineBounds(android.graphics.Rect)
com.facebook.drawee.drawable.RoundedDrawable: boolean getPaintFilterBitmap()
okio.ByteString: void write$okio(okio.Buffer,int,int)
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.facebook.react.views.picker.ReactDialogPickerManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: BranchOnSeparateImagesProducer$OnFirstImageConsumer(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$1)
com.facebook.react.ReactActivity: boolean onKeyLongPress(int,android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.uimanager.ViewProps: boolean isLayoutOnly(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
kotlin.collections.EmptyIterator: void add(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
androidx.cardview.widget.RoundRectDrawableWithShadow: android.content.res.ColorStateList getColor()
com.google.android.material.textfield.ClearTextEndIconDelegate$4: ClearTextEndIconDelegate$4(com.google.android.material.textfield.ClearTextEndIconDelegate)
com.google.android.material.stateful.ExtendableSavedState: ExtendableSavedState(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1)
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showNewAlert(android.os.Bundle,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,int)
com.facebook.imageformat.ImageFormat: java.lang.String toString()
com.facebook.drawee.backends.pipeline.PipelineDraweeController: void removeRequestListener(com.facebook.imagepipeline.listener.RequestListener)
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: UIViewOperationQueue$CreateViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleX(double[],double)
com.facebook.react.modules.storage.AsyncLocalStorageUtil: boolean setItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
com.facebook.react.ReactInstanceManager: java.lang.Boolean access$900(com.facebook.react.ReactInstanceManager)
com.zoontek.rnbootsplash.RNBootSplashPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()
androidx.fragment.app.FragmentStateManager: void pause()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup)
okhttp3.MediaType$Companion: MediaType$Companion()
androidx.customview.widget.FocusStrategy: java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend getBackend()
com.google.android.material.shape.ShapePath: void setStartX(float)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateProperties(int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.LazyReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1600(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)
com.google.android.material.stateful.ExtendableSavedState: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForInsert(int,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener)
androidx.transition.AnimatorUtils: void resume(android.animation.Animator)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring: int getStartingColor()
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.modules.network.NetworkingModule$1$1: void onProgress(long,long,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
androidx.recyclerview.widget.GridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.cardview.widget.CardViewBaseImpl: void updatePadding(androidx.cardview.widget.CardViewDelegate)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.jscexecutor.JSCExecutor: java.lang.String getName()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$1: boolean hasNext()
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()
okio.ByteString: java.lang.String hex()
com.facebook.react.modules.network.ProgressiveStringDecoder: ProgressiveStringDecoder(java.nio.charset.Charset)
com.horcrux.svg.VirtualViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.google.android.material.textfield.TextInputEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory getBitmapMemoryCacheFactory()
androidx.transition.ChangeBounds: void captureValues(androidx.transition.TransitionValues)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)
com.zoontek.rnbootsplash.RNBootSplashModule: RNBootSplashModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.drawable.ArrayDrawable: int getOpacity()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.horcrux.svg.CircleView: void setCx(java.lang.String)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory: com.facebook.cache.disk.DiskStorage get(com.facebook.cache.disk.DiskCacheConfig)
com.facebook.react.views.textinput.ReactTextInputEvent: ReactTextInputEvent(int,int,java.lang.String,java.lang.String,int,int)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.coordinatorlayout.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.horcrux.svg.GlyphContext: float getHeight()
com.horcrux.svg.GlyphContext: double[] getDoubleArrayFromReadableArray(java.util.ArrayList)
com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormatChecker getInstance()
androidx.fragment.app.FragmentTransition$6: void run()
androidx.appcompat.widget.ResourcesWrapper: void getValue(java.lang.String,android.util.TypedValue,boolean)
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
kotlin.ranges.IntProgression: int getStep()
okhttp3.internal.http2.Http2Connection: void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.Toolbar: void addChildrenForExpandedActionView()
com.facebook.react.animated.NativeAnimatedModule$12: NativeAnimatedModule$12(com.facebook.react.animated.NativeAnimatedModule,int)
com.google.android.material.chip.ChipDrawable: void setCloseIconStartPadding(float)
com.facebook.yoga.YogaNodeJNIBase: float getLayoutHeight()
com.facebook.react.modules.storage.AsyncLocalStorageUtil: boolean mergeImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableStaticBitmap decodeStaticImage(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onRequest(int,java.util.List)
com.facebook.drawee.drawable.OrientedDrawable: int getIntrinsicWidth()
androidx.fragment.app.FragmentController: void dispatchCreate()
androidx.recyclerview.widget.FastScroller: boolean isLayoutRTL()
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
com.zoontek.rnbootsplash.RNBootSplashActivity: void onCreate(android.os.Bundle)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.google.android.material.animation.ArgbEvaluatorCompat: ArgbEvaluatorCompat()
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: float determineResizeRatio(com.facebook.imagepipeline.common.ResizeOptions,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: CoordinatorLayout$ViewElevationComparator()
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)
com.facebook.react.modules.core.TimingModule: void initialize()
com.facebook.react.uimanager.Spacing: float[] newFullSpacingArray()
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.facebook.react.views.textinput.ReactEditText: void invalidateDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Huffman$Node: int getSymbol()
com.google.android.material.internal.CollapsingTextHelper: CollapsingTextHelper(android.view.View)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
okhttp3.internal.http2.Http2Connection: void pushHeadersLater$okhttp(int,java.util.List,boolean)
com.horcrux.svg.RectView: void setX(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.zoontek.rnbootsplash.RNBootSplashModule$3: RNBootSplashModule$3(com.zoontek.rnbootsplash.RNBootSplashModule,com.zoontek.rnbootsplash.RNBootSplashTask)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: ViewBoundsCheck$BoundFlags()
androidx.core.view.ViewCompat: java.util.List getActionList(android.view.View)
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.internal.http2.Http2Stream: void setReadBytesTotal$okhttp(long)
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType contentType()
com.swmansion.rnscreens.events.ScreenDismissedEvent: ScreenDismissedEvent(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.imageutils.BitmapUtil: int getSizeInByteForBitmap(int,int,android.graphics.Bitmap$Config)
com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
bolts.Task: bolts.Task forError(java.lang.Exception)
com.facebook.drawee.drawable.RoundedDrawable: int getAlpha()
kotlin.collections.EmptySet: int hashCode()
com.facebook.cache.disk.DefaultDiskStorage: boolean touch(java.lang.String,java.lang.Object)
com.facebook.yoga.YogaNodeJNIBase: void freeze(com.facebook.yoga.YogaNode)
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean computeIsIntermediateResultExpected()
com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.cache.disk.DiskStorage get()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
com.facebook.imagepipeline.cache.BufferedDiskCache: java.lang.Class access$300()
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.ReactActivityDelegate: void onResume()
com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange from(int)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$1)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setRawTextSize(float)
androidx.cardview.widget.CardViewApi21Impl: void setRadius(androidx.cardview.widget.CardViewDelegate,float)
com.facebook.imagepipeline.cache.BufferedDiskCache$4: void run()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.material.textfield.ClearTextEndIconDelegate$2: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)
kotlin.collections.AbstractList: int indexOf(java.lang.Object)
com.facebook.cache.disk.DiskCacheConfig$Builder: long access$500(com.facebook.cache.disk.DiskCacheConfig$Builder)
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onCancelled(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(android.view.View,int)
com.facebook.soloader.SoLoader: void initSoSources(android.content.Context,int,com.facebook.soloader.SoFileLoader)
androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: void set(android.view.View,java.lang.Float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap getHeaders()
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
com.google.android.material.internal.StateListAnimator$1: void onAnimationEnd(android.animation.Animator)
com.facebook.imagepipeline.core.ImagePipelineExperiments: int getBitmapCloseableRefType()
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow: CircleImageView$OvalShadow(androidx.swiperefreshlayout.widget.CircleImageView,int)
kotlin.Pair: java.lang.Object component1()
androidx.transition.Visibility: void captureValues(androidx.transition.TransitionValues)
com.facebook.react.views.view.ReactViewBackgroundDrawable: void onBoundsChange(android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: void onDismiss()
com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable createDefaultBackground()
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.ReactFragment: void onPause()
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.FastScroller: void setState(int)
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
com.facebook.common.references.OOMSoftReference: OOMSoftReference()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: Http2Connection$ReaderRunnable$settings$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.material.behavior.SwipeDismissBehavior: int clamp(int,int,int)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
com.swmansion.rnscreens.Screen: boolean isGestureEnabled()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.common.futures.SimpleSettableFuture: boolean isDone()
com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheErrorLogger access$900(com.facebook.cache.disk.DiskCacheConfig$Builder)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.common.ImageDecodeOptions defaults()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.modules.core.ReactChoreographer$2: ReactChoreographer$2(com.facebook.react.modules.core.ReactChoreographer,java.lang.Runnable)
androidx.fragment.app.FragmentTransition$5: FragmentTransition$5(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateViewProp(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.Object)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)
com.facebook.common.internal.Suppliers$3: java.lang.Object get()
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
com.facebook.react.modules.network.ReactCookieJarContainer: void setCookieJar(okhttp3.CookieJar)
com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableParent createDrawableParentForIndex(int)
okio.Buffer$UnsafeCursor: long resizeBuffer(long)
